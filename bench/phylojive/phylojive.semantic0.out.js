// phylojive.js
function v2226() {
  function v2225(a$$944, b$$831, c$$678) {
    function v2224(d$$505, e$$426) {
      var v2227;
      if (d$$505 === b$$831) {
        v2227 = e$$426;
      } else {
        v2227 = d$$505;
      }
      e$$426 = v2227;
      var v2228;
      if (a$$944) {
        v2228 = JAM.call(a$$944, null, [b$$831, e$$426, c$$678], JAM.policy.p3);
      } else {
        v2228 = JAM.call(b$$831.trigger, b$$831, ["error", b$$831, e$$426, c$$678], JAM.policy.p3);
      }
      v2228;
      return;
    }
    return v2224;
  }
  function v2223(a$$942, b$$830, c$$677) {
    function v2222(a$$943) {
      JAM.call(a$$943.setRequestHeader, a$$943, ["X-HTTP-Method-Override", d$$504], JAM.policy.p3);
      return;
    }
    var d$$504 = H$$5[a$$942];
    if (!c$$677) {
      c$$677 = {};
    }
    var e$$425 = {type:d$$504, dataType:"json"};
    var v2229 = c$$677.url;
    if (!v2229) {
      var v8951 = e$$425;
      var v14874 = n$$110(b$$830, "url");
      if (!v14874) {
        v14874 = t$$33();
      }
      v8951.url = v14874;
    }
    var v14875 = !c$$677.data;
    if (v14875) {
      v14875 = b$$830;
    }
    var v8953 = v14875;
    if (v8953) {
      var v14876 = "create" == a$$942;
      if (!v14876) {
        v14876 = "update" == a$$942;
      }
      v8953 = v14876;
    }
    if (v8953) {
      e$$425.contentType = "application/json";
      var v8954 = e$$425;
      var v30911 = JAM.call(JSON.stringify, JSON, [JAM.call(b$$830.toJSON, b$$830, [], JAM.policy.p3)], JAM.policy.p3);
      v8954.data = v30911;
    }
    var v2231 = g$$232.emulateJSON;
    if (v2231) {
      e$$425.contentType = "application/x-www-form-urlencoded";
      var v14878;
      if (e$$425.data) {
        v14878 = {model:e$$425.data};
      } else {
        v14878 = {};
      }
      e$$425.data = v14878;
    }
    var v8955 = g$$232.emulateHTTP;
    if (v8955) {
      var v14879 = "PUT" === d$$504;
      if (!v14879) {
        v14879 = "DELETE" === d$$504;
      }
      v8955 = v14879;
    }
    if (v8955) {
      var v14880 = g$$232.emulateJSON;
      if (v14880) {
        e$$425.data._method = d$$504;
      }
      e$$425.type = "POST";
      e$$425.beforeSend = v2222;
    }
    var v8956 = "GET" !== e$$425.type;
    if (v8956) {
      v8956 = !g$$232.emulateJSON;
    }
    var v2233 = v8956;
    if (v2233) {
      e$$425.processData = !1;
    }
    return JAM.call(i$$241.ajax, i$$241, [JAM.call(f$$232.extend, f$$232, [e$$425, c$$677], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2221(a$$941, b$$829) {
    var c$$676 = G$$5(this, a$$941, b$$829);
    c$$676.extend = this.extend;
    return c$$676;
  }
  function v2220() {
    if (this.el) {
      JAM.call(this.setElement, this, [this.el, !1], JAM.policy.p3);
    } else {
      var v2237 = n$$110(this, "attributes");
      if (!v2237) {
        v2237 = {};
      }
      var a$$940 = v2237;
      var v2238 = this.id;
      if (v2238) {
        a$$940.id = this.id;
      }
      var v2239 = this.className;
      if (v2239) {
        a$$940["class"] = this.className;
      }
      JAM.call(this.setElement, this, [JAM.call(this.make, this, [this.tagName, a$$940], JAM.policy.p3), !1], JAM.policy.p3);
    }
    return;
  }
  function v2219(a$$939) {
    var v2243 = this.options;
    if (v2243) {
      a$$939 = JAM.call(f$$232.extend, f$$232, [{}, this.options, a$$939], JAM.policy.p3);
    }
    var b$$828 = 0;
    var c$$675 = w$$21.length;
    var v2245 = b$$828 < c$$675;
    for (;v2245;) {
      var d$$503 = w$$21[b$$828];
      var v2244 = a$$939[d$$503];
      if (v2244) {
        introspect(JAM.policy.p2) {
          this[d$$503] = a$$939[d$$503];
        }
      }
      b$$828++;
      v2245 = b$$828 < c$$675;
    }
    this.options = a$$939;
    return;
  }
  function v2218() {
    var v2246 = this.$el;
    JAM.call(v2246.unbind, v2246, [".delegateEvents" + this.cid], JAM.policy.p3);
    return;
  }
  function v2217(a$$938) {
    var v8961 = a$$938;
    if (!v8961) {
      v8961 = a$$938 = n$$110(this, "events");
    }
    if (v8961) {
      JAM.call(this.undelegateEvents, this, [], JAM.policy.p3);
      var b$$827;
      for (b$$827 in a$$938) {
        var c$$674 = a$$938[b$$827];
        var v2248 = JAM.call(f$$232.isFunction, f$$232, [c$$674], JAM.policy.p3);
        if (!v2248) {
          c$$674 = this[a$$938[b$$827]];
        }
        if (!c$$674) {
          throw Error('Method "' + a$$938[b$$827] + '" does not exist');
        }
        var d$$502 = JAM.call(b$$827.match, b$$827, [F$$6], JAM.policy.p3);
        var e$$424 = d$$502[1];
        d$$502 = d$$502[2];
        c$$674 = JAM.call(f$$232.bind, f$$232, [c$$674, this], JAM.policy.p3);
        e$$424 = e$$424 + (".delegateEvents" + this.cid);
        var v2252;
        if ("" === d$$502) {
          var v8966 = this.$el;
          v2252 = JAM.call(v8966.bind, v8966, [e$$424, c$$674], JAM.policy.p3);
        } else {
          var v8967 = this.$el;
          v2252 = JAM.call(v8967.delegate, v8967, [d$$502, e$$424, c$$674], JAM.policy.p3);
        }
        v2252;
      }
    }
    return;
  }
  function v2216(a$$937, b$$826) {
    var v2254 = this.$el;
    if (v2254) {
      JAM.call(this.undelegateEvents, this, [], JAM.policy.p3);
    }
    var v2255;
    if (a$$937 instanceof i$$241) {
      v2255 = a$$937;
    } else {
      v2255 = JAM.call(i$$241, null, [a$$937], JAM.policy.p3);
    }
    this.$el = v2255;
    this.el = this.$el[0];
    var v2257 = !1 !== b$$826;
    if (v2257) {
      JAM.call(this.delegateEvents, this, [], JAM.policy.p3);
    }
    return this;
  }
  function v2215(a$$936, b$$825, c$$673) {
    a$$936 = JAM.call(document.createElement, document, [a$$936], JAM.policy.p3);
    if (b$$825) {
      var v8971 = JAM.call(i$$241, null, [a$$936], JAM.policy.p3);
      JAM.call(v8971.attr, v8971, [b$$825], JAM.policy.p3);
    }
    if (c$$673) {
      var v8972 = JAM.call(i$$241, null, [a$$936], JAM.policy.p3);
      JAM.call(v8972.html, v8972, [c$$673], JAM.policy.p3);
    }
    return a$$936;
  }
  function v2214() {
    var v2258 = this.$el;
    JAM.call(v2258.remove, v2258, [], JAM.policy.p3);
    return this;
  }
  function v2213() {
    return this;
  }
  function v2212() {
    return;
  }
  function v2211(a$$935) {
    var v2259 = this.$el;
    return JAM.call(v2259.find, v2259, [a$$935], JAM.policy.p3);
  }
  function v2210(a$$934) {
    var v30912 = JAM.call(f$$232.uniqueId, f$$232, ["view"], JAM.policy.p3);
    this.cid = v30912;
    JAM.call(this._configure, this, [a$$934 || {}], JAM.policy.p3);
    JAM.call(this._ensureElement, this, [], JAM.policy.p3);
    var v2261 = this.initialize;
    JAM.call(v2261.apply, v2261, [this, arguments], JAM.policy.p3);
    JAM.call(this.delegateEvents, this, [], JAM.policy.p3);
    return;
  }
  function v2209(a$$933, b$$824, c$$672) {
    var v2262;
    if (c$$672) {
      var v24024 = JAM.call(a$$933.toString, a$$933, [], JAM.policy.p3);
      v2262 = JAM.call(a$$933.replace, a$$933, [JAM.call(v24024.replace, v24024, [/(javascript:|#).*$/, ""], JAM.policy.p3) + "#" + b$$824], JAM.policy.p3);
    } else {
      v2262 = a$$933.hash = b$$824;
    }
    v2262;
    return;
  }
  function v2208(a$$932, b$$823) {
    if (!m$$64.started) {
      return !1;
    }
    var v8975 = !b$$823;
    if (!v8975) {
      v8975 = !0 === b$$823;
    }
    if (v8975) {
      b$$823 = {trigger:b$$823};
    }
    var v2265 = a$$932 || "";
    var c$$671 = JAM.call(v2265.replace, v2265, [s$$36, ""], JAM.policy.p3);
    var v2266 = this.fragment != c$$671;
    if (v2266) {
      var v14888;
      if (this._hasPushState) {
        var v26198 = 0 != JAM.call(c$$671.indexOf, c$$671, [this.options.root], JAM.policy.p3);
        if (v26198) {
          c$$671 = this.options.root + c$$671;
        }
        this.fragment = c$$671;
        var v24025 = window.history;
        var v26199;
        if (b$$823.replace) {
          v26199 = "replaceState";
        } else {
          v26199 = "pushState";
        }
        v14888 = JAM.call(v24025[v26199], v24025, [{}, document.title, c$$671], JAM.policy.p3);
      } else {
        var v20845;
        if (this._wantsHashChange) {
          this.fragment = c$$671;
          JAM.call(this._updateHash, this, [window.location, c$$671, b$$823.replace], JAM.policy.p3);
          var v27727 = this.iframe;
          if (v27727) {
            v27727 = c$$671 != JAM.call(this.getFragment, this, [JAM.call(this.getHash, this, [this.iframe], JAM.policy.p3)], JAM.policy.p3);
          }
          var v26200 = v27727;
          if (v26200) {
            var v28684 = b$$823.replace;
            if (!v28684) {
              var v29724 = this.iframe.document;
              var v29321 = JAM.call(v29724.open, v29724, [], JAM.policy.p3);
              JAM.call(v29321.close, v29321, [], JAM.policy.p3);
            }
            v26200 = JAM.call(this._updateHash, this, [this.iframe.location, c$$671, b$$823.replace], JAM.policy.p3);
          }
          v20845 = v26200;
        } else {
          var v24028 = window.location;
          v20845 = JAM.call(v24028.assign, v24028, [this.options.root + a$$932], JAM.policy.p3);
        }
        v14888 = v20845;
      }
      v14888;
      var v14889 = b$$823.trigger;
      if (v14889) {
        JAM.call(this.loadUrl, this, [a$$932], JAM.policy.p3);
      }
    }
    return;
  }
  function v2207(a$$930) {
    function v2206(a$$931) {
      var v8977 = a$$931.route;
      if (JAM.call(v8977.test, v8977, [b$$822], JAM.policy.p3)) {
        JAM.call(a$$931.callback, a$$931, [b$$822], JAM.policy.p3);
        return !0;
      }
      return;
    }
    var v30913 = JAM.call(this.getFragment, this, [a$$930], JAM.policy.p3);
    var b$$822 = this.fragment = v30913;
    return JAM.call(f$$232.any, f$$232, [this.handlers, v2206], JAM.policy.p3);
  }
  function v2205() {
    var a$$929 = JAM.call(this.getFragment, this, [], JAM.policy.p3);
    var v8978 = a$$929 == this.fragment;
    if (v8978) {
      v8978 = this.iframe;
    }
    var v2269 = v8978;
    if (v2269) {
      a$$929 = JAM.call(this.getFragment, this, [JAM.call(this.getHash, this, [this.iframe], JAM.policy.p3)], JAM.policy.p3);
    }
    if (a$$929 == this.fragment) {
      return !1;
    }
    var v2271 = this.iframe;
    if (v2271) {
      JAM.call(this.navigate, this, [a$$929], JAM.policy.p3);
    }
    var v2272 = JAM.call(this.loadUrl, this, [], JAM.policy.p3);
    if (!v2272) {
      JAM.call(this.loadUrl, this, [JAM.call(this.getHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v2204(a$$928, b$$821) {
    var v2273 = this.handlers;
    JAM.call(v2273.unshift, v2273, [{route:a$$928, callback:b$$821}], JAM.policy.p3);
    return;
  }
  function v2203() {
    var v8983 = JAM.call(i$$241, null, [window], JAM.policy.p3);
    var v2275 = JAM.call(v8983.unbind, v8983, ["popstate", this.checkUrl], JAM.policy.p3);
    JAM.call(v2275.unbind, v2275, ["hashchange", this.checkUrl], JAM.policy.p3);
    clearInterval(this._checkUrlInterval);
    m$$64.started = !1;
    return;
  }
  function v2202(a$$927) {
    if (m$$64.started) {
      throw Error("Backbone.history has already been started");
    }
    m$$64.started = !0;
    var v30914 = JAM.call(f$$232.extend, f$$232, [{}, {root:"/"}, this.options, a$$927], JAM.policy.p3);
    this.options = v30914;
    this._wantsHashChange = !1 !== this.options.hashChange;
    this._wantsPushState = !!this.options.pushState;
    var v14893 = !this.options.pushState;
    if (!v14893) {
      v14893 = !window.history;
    }
    var v8987 = v14893;
    if (!v8987) {
      v8987 = !window.history.pushState;
    }
    this._hasPushState = !v8987;
    a$$927 = JAM.call(this.getFragment, this, [], JAM.policy.p3);
    var b$$820 = document.documentMode;
    var v20851 = navigator.userAgent;
    var v8988 = JAM.call(E$$6.exec, E$$6, [JAM.call(v20851.toLowerCase, v20851, [], JAM.policy.p3)], JAM.policy.p3);
    if (v8988) {
      var v14897 = !b$$820;
      if (!v14897) {
        v14897 = 7 >= b$$820;
      }
      v8988 = v14897;
    }
    if (b$$820 = v8988) {
      var v24032 = JAM.call(i$$241, null, ['<iframe src="javascript:0" tabindex="-1" />'], JAM.policy.p3);
      var v20853 = JAM.call(v24032.hide, v24032, [], JAM.policy.p3);
      this.iframe = JAM.call(v20853.appendTo, v20853, ["body"], JAM.policy.p3)[0].contentWindow;
      JAM.call(this.navigate, this, [a$$927], JAM.policy.p3);
    }
    var v2286;
    if (this._hasPushState) {
      var v8990 = JAM.call(i$$241, null, [window], JAM.policy.p3);
      v2286 = JAM.call(v8990.bind, v8990, ["popstate", this.checkUrl], JAM.policy.p3);
    } else {
      var v8992;
      var v24033 = this._wantsHashChange;
      if (v24033) {
        v24033 = "onhashchange" in window;
      }
      var v20854 = v24033;
      if (v20854) {
        v20854 = !b$$820;
      }
      if (v20854) {
        var v14899 = JAM.call(i$$241, null, [window], JAM.policy.p3);
        v8992 = JAM.call(v14899.bind, v14899, ["hashchange", this.checkUrl], JAM.policy.p3);
      } else {
        var v14901 = this._wantsHashChange;
        if (v14901) {
          var v30915 = JAM.call(setInterval, null, [this.checkUrl, this.interval]);
          v14901 = this._checkUrlInterval = v30915;
        }
        v8992 = v14901;
      }
      v2286 = v8992;
    }
    v2286;
    this.fragment = a$$927;
    a$$927 = window.location;
    b$$820 = a$$927.pathname == this.options.root;
    var v20857 = this._wantsHashChange;
    if (v20857) {
      v20857 = this._wantsPushState;
    }
    var v14903 = v20857;
    if (v14903) {
      v14903 = !this._hasPushState;
    }
    var v8995 = v14903;
    if (v8995) {
      v8995 = !b$$820;
    }
    if (v8995) {
      var v30916 = JAM.call(this.getFragment, this, [null, !0], JAM.policy.p3);
      this.fragment = v30916;
      var v14905 = window.location;
      JAM.call(v14905.replace, v14905, [this.options.root + "#" + this.fragment], JAM.policy.p3);
      return !0;
    }
    var v20861 = this._wantsPushState;
    if (v20861) {
      v20861 = this._hasPushState;
    }
    var v14907 = v20861;
    if (v14907) {
      v14907 = b$$820;
    }
    var v8996 = v14907;
    if (v8996) {
      v8996 = a$$927.hash;
    }
    var v2290 = v8996;
    if (v2290) {
      var v14908 = JAM.call(this.getHash, this, [], JAM.policy.p3);
      var v30917 = JAM.call(v14908.replace, v14908, [s$$36, ""], JAM.policy.p3);
      this.fragment = v30917;
      var v14909 = window.history;
      JAM.call(v14909.replaceState, v14909, [{}, document.title, a$$927.protocol + "//" + a$$927.host + this.options.root + this.fragment], JAM.policy.p3);
    }
    if (!this.options.silent) {
      return JAM.call(this.loadUrl, this, [], JAM.policy.p3);
    }
    return;
  }
  function v2201(a$$926, b$$819) {
    if (null == a$$926) {
      var v8998 = this._hasPushState;
      if (!v8998) {
        v8998 = b$$819;
      }
      if (v8998) {
        a$$926 = window.location.pathname;
        var c$$670 = window.location.search;
        if (c$$670) {
          a$$926 = a$$926 + c$$670;
        }
      } else {
        a$$926 = JAM.call(this.getHash, this, [], JAM.policy.p3);
      }
    }
    var v2296 = JAM.call(a$$926.indexOf, a$$926, [this.options.root], JAM.policy.p3);
    if (!v2296) {
      a$$926 = JAM.call(a$$926.substr, a$$926, [this.options.root.length], JAM.policy.p3);
    }
    return JAM.call(a$$926.replace, a$$926, [s$$36, ""], JAM.policy.p3);
  }
  function v2200(a$$925) {
    var v2297;
    var v24037;
    if (a$$925) {
      v24037 = a$$925.location;
    } else {
      v24037 = window.location;
    }
    var v14916 = v24037.href;
    if (a$$925 = JAM.call(v14916.match, v14916, [/#(.*)$/], JAM.policy.p3)) {
      v2297 = a$$925[1];
    } else {
      v2297 = "";
    }
    return v2297;
  }
  function v2199() {
    this.handlers = [];
    JAM.call(f$$232.bindAll, f$$232, [this, "checkUrl"], JAM.policy.p3);
    return;
  }
  function v2198(a$$924, b$$818) {
    var v2298 = JAM.call(a$$924.exec, a$$924, [b$$818], JAM.policy.p3);
    return JAM.call(v2298.slice, v2298, [1], JAM.policy.p3);
  }
  function v2197(a$$923) {
    var v9003 = JAM.call(a$$923.replace, a$$923, [D$$6, "\\$&"], JAM.policy.p3);
    var v2299 = JAM.call(v9003.replace, v9003, [B$$7, "([^/]+)"], JAM.policy.p3);
    a$$923 = JAM.call(v2299.replace, v2299, [C$$6, "(.*?)"], JAM.policy.p3);
    return RegExp("^" + a$$923 + "$");
  }
  function v2196() {
    if (this.routes) {
      var a$$922 = [];
      var b$$817;
      for (b$$817 in this.routes) {
        JAM.call(a$$922.unshift, a$$922, [[b$$817, this.routes[b$$817]]], JAM.policy.p3);
      }
      b$$817 = 0;
      var c$$669 = a$$922.length;
      var v2306 = b$$817 < c$$669;
      for (;v2306;) {
        JAM.call(this.route, this, [a$$922[b$$817][0], a$$922[b$$817][1], this[a$$922[b$$817][1]]], JAM.policy.p3);
        b$$817++;
        v2306 = b$$817 < c$$669;
      }
    }
    return;
  }
  function v2195(a$$921, b$$816) {
    var v2308 = g$$232.history;
    JAM.call(v2308.navigate, v2308, [a$$921, b$$816], JAM.policy.p3);
    return;
  }
  function v2194(a$$920, b$$815, c$$668) {
    function v2193(d$$501) {
      d$$501 = JAM.call(this._extractParameters, this, [a$$920, d$$501], JAM.policy.p3);
      if (c$$668) {
        JAM.call(c$$668.apply, c$$668, [this, d$$501], JAM.policy.p3);
      }
      var v2309 = this.trigger;
      var v9009 = ["route:" + b$$815];
      JAM.call(v2309.apply, v2309, [this, JAM.call(v9009.concat, v9009, [d$$501], JAM.policy.p3)], JAM.policy.p3);
      var v2311 = g$$232.history;
      JAM.call(v2311.trigger, v2311, ["route", this, b$$815, d$$501], JAM.policy.p3);
      return;
    }
    var v2312 = g$$232.history;
    if (!v2312) {
      var v9010 = g$$232;
      var v30918 = new m$$64;
      v9010.history = v30918;
    }
    var v2313 = JAM.call(f$$232.isRegExp, f$$232, [a$$920], JAM.policy.p3);
    if (!v2313) {
      a$$920 = JAM.call(this._routeToRegExp, this, [a$$920], JAM.policy.p3);
    }
    if (!c$$668) {
      c$$668 = this[b$$815];
    }
    var v2314 = g$$232.history;
    JAM.call(v2314.route, v2314, [a$$920, JAM.call(f$$232.bind, f$$232, [v2193, this], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v2192() {
    return;
  }
  function v2191(a$$919) {
    if (!a$$919) {
      a$$919 = {};
    }
    var v2316 = a$$919.routes;
    if (v2316) {
      this.routes = a$$919.routes;
    }
    JAM.call(this._bindRoutes, this, [], JAM.policy.p3);
    var v2317 = this.initialize;
    JAM.call(v2317.apply, v2317, [this, arguments], JAM.policy.p3);
    return;
  }
  function v2190(a$$918) {
    function v2189() {
      var v2318 = f$$232[a$$918];
      var v9015 = [this.models];
      return JAM.call(v2318.apply, v2318, [f$$232, JAM.call(v9015.concat, v9015, [JAM.call(f$$232.toArray, f$$232, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    var v2320 = r$$32.prototype;
    introspect(JAM.policy.p2) {
      v2320[a$$918] = v2189;
    }
    return;
  }
  function v2188(a$$917, b$$814, c$$667, d$$500) {
    var v14921 = "add" == a$$917;
    if (!v14921) {
      v14921 = "remove" == a$$917;
    }
    var v9017 = v14921;
    if (v9017) {
      v9017 = c$$667 != this;
    }
    var v2321 = v9017;
    if (!v2321) {
      var v20867 = "destroy" == a$$917;
      if (v20867) {
        JAM.call(this.remove, this, [b$$814, d$$500], JAM.policy.p3);
      }
      var v24038 = b$$814;
      if (v24038) {
        v24038 = a$$917 === "change:" + b$$814.idAttribute;
      }
      var v20868 = v24038;
      if (v20868) {
        delete this._byId[JAM.call(b$$814.previous, b$$814, [b$$814.idAttribute], JAM.policy.p3)];
        var v26209 = this._byId;
        var v26210 = b$$814.id;
        introspect(JAM.policy.p2) {
          v26209[v26210] = b$$814;
        }
      }
      var v14922 = this.trigger;
      JAM.call(v14922.apply, v14922, [this, arguments], JAM.policy.p3);
    }
    return;
  }
  function v2187(a$$916) {
    var v2322 = this == a$$916.collection;
    if (v2322) {
      delete a$$916.collection;
    }
    JAM.call(a$$916.off, a$$916, ["all", this._onModelEvent, this], JAM.policy.p3);
    return;
  }
  function v2186(a$$915, b$$813) {
    if (!b$$813) {
      b$$813 = {};
    }
    var v2324;
    if (a$$915 instanceof o$$42) {
      var v9021 = a$$915.collection;
      if (!v9021) {
        v9021 = a$$915.collection = this;
      }
      v2324 = v9021;
    } else {
      b$$813.collection = this;
      a$$915 = JAM.new(this.model, [a$$915, b$$813]);
      var v14924 = JAM.call(a$$915._validate, a$$915, [a$$915.attributes, b$$813], JAM.policy.p3);
      if (!v14924) {
        v14924 = a$$915 = !1;
      }
      v2324 = v14924;
    }
    v2324;
    return a$$915;
  }
  function v2185() {
    this.length = 0;
    this.models = [];
    this._byId = {};
    this._byCid = {};
    return;
  }
  function v2184() {
    var v2325 = JAM.call(f$$232, null, [this.models], JAM.policy.p3);
    return JAM.call(v2325.chain, v2325, [], JAM.policy.p3);
  }
  function v2183(a$$914) {
    return a$$914;
  }
  function v2182(a$$913, b$$812) {
    function v2181(e$$423, f$$237) {
      var v2326 = b$$812.wait;
      if (v2326) {
        JAM.call(c$$666.add, c$$666, [e$$423, b$$812], JAM.policy.p3);
      }
      var v2327;
      if (d$$499) {
        v2327 = JAM.call(d$$499, null, [e$$423, f$$237], JAM.policy.p3);
      } else {
        v2327 = JAM.call(e$$423.trigger, e$$423, ["sync", a$$913, f$$237, b$$812], JAM.policy.p3);
      }
      v2327;
      return;
    }
    var c$$666 = this;
    var v2328;
    if (b$$812) {
      v2328 = JAM.call(f$$232.clone, f$$232, [b$$812], JAM.policy.p3);
    } else {
      v2328 = {};
    }
    b$$812 = v2328;
    a$$913 = JAM.call(this._prepareModel, this, [a$$913, b$$812], JAM.policy.p3);
    if (!a$$913) {
      return !1;
    }
    var v2330 = b$$812.wait;
    if (!v2330) {
      JAM.call(c$$666.add, c$$666, [a$$913, b$$812], JAM.policy.p3);
    }
    var d$$499 = b$$812.success;
    b$$812.success = v2181;
    JAM.call(a$$913.save, a$$913, [null, b$$812], JAM.policy.p3);
    return a$$913;
  }
  function v2180(a$$912) {
    function v2179(d$$498, e$$422, f$$236) {
      var v9025;
      if (a$$912.add) {
        v9025 = "add";
      } else {
        v9025 = "reset";
      }
      JAM.call(b$$811[v9025], b$$811, [JAM.call(b$$811.parse, b$$811, [d$$498, f$$236], JAM.policy.p3), a$$912], JAM.policy.p3);
      if (c$$665) {
        JAM.call(c$$665, null, [b$$811, d$$498], JAM.policy.p3);
      }
      return;
    }
    var v2333;
    if (a$$912) {
      v2333 = JAM.call(f$$232.clone, f$$232, [a$$912], JAM.policy.p3);
    } else {
      v2333 = {};
    }
    a$$912 = v2333;
    var v2334 = void 0 === a$$912.parse;
    if (v2334) {
      a$$912.parse = !0;
    }
    var b$$811 = this;
    var c$$665 = a$$912.success;
    a$$912.success = v2179;
    var v2335 = a$$912;
    var v30919 = JAM.call(g$$232.wrapError, g$$232, [a$$912.error, b$$811, a$$912], JAM.policy.p3);
    v2335.error = v30919;
    var v9029 = this.sync;
    if (!v9029) {
      v9029 = g$$232.sync;
    }
    var v2336 = v9029;
    return JAM.call(v2336.call, v2336, [this, "read", this, a$$912], JAM.policy.p3);
  }
  function v2178(a$$911, b$$810) {
    if (!a$$911) {
      a$$911 = [];
    }
    if (!b$$810) {
      b$$810 = {};
    }
    var c$$664 = 0;
    var d$$497 = this.models.length;
    var v2339 = c$$664 < d$$497;
    for (;v2339;) {
      JAM.call(this._removeReference, this, [this.models[c$$664]], JAM.policy.p3);
      c$$664++;
      v2339 = c$$664 < d$$497;
    }
    JAM.call(this._reset, this, [], JAM.policy.p3);
    JAM.call(this.add, this, [a$$911, JAM.call(f$$232.extend, f$$232, [{silent:!0}, b$$810], JAM.policy.p3)], JAM.policy.p3);
    var v2341 = b$$810.silent;
    if (!v2341) {
      JAM.call(this.trigger, this, ["reset", this, b$$810], JAM.policy.p3);
    }
    return this;
  }
  function v2177(a$$910) {
    function v2176(b$$809) {
      return JAM.call(b$$809.get, b$$809, [a$$910], JAM.policy.p3);
    }
    return JAM.call(f$$232.map, f$$232, [this.models, v2176], JAM.policy.p3);
  }
  function v2175(a$$909) {
    if (!a$$909) {
      a$$909 = {};
    }
    if (!this.comparator) {
      throw Error("Cannot sort a set without a comparator");
    }
    var b$$808 = JAM.call(f$$232.bind, f$$232, [this.comparator, this], JAM.policy.p3);
    var v2345;
    if (1 == this.comparator.length) {
      var v30920 = JAM.call(this.sortBy, this, [b$$808], JAM.policy.p3);
      v2345 = this.models = v30920;
    } else {
      var v9037 = this.models;
      v2345 = JAM.call(v9037.sort, v9037, [b$$808], JAM.policy.p3);
    }
    v2345;
    var v2346 = a$$909.silent;
    if (!v2346) {
      JAM.call(this.trigger, this, ["reset", this, a$$909], JAM.policy.p3);
    }
    return this;
  }
  function v2174(a$$908) {
    function v2173(b$$807) {
      var c$$663;
      for (c$$663 in a$$908) {
        if (a$$908[c$$663] !== JAM.call(b$$807.get, b$$807, [c$$663], JAM.policy.p3)) {
          return !1;
        }
      }
      return !0;
    }
    var v2348;
    if (JAM.call(f$$232.isEmpty, f$$232, [a$$908], JAM.policy.p3)) {
      v2348 = [];
    } else {
      v2348 = JAM.call(this.filter, this, [v2173], JAM.policy.p3);
    }
    return v2348;
  }
  function v2172(a$$907) {
    return this.models[a$$907];
  }
  function v2171(a$$906) {
    var v2350 = a$$906;
    if (v2350) {
      var v9043 = this._byCid;
      var v14929 = a$$906.cid;
      if (!v14929) {
        v14929 = a$$906;
      }
      v2350 = v9043[v14929];
    }
    return v2350;
  }
  function v2170(a$$905) {
    var v2351;
    if (null == a$$905) {
      v2351 = void 0;
    } else {
      var v9045 = this._byId;
      var v14930;
      if (null != a$$905.id) {
        v14930 = a$$905.id;
      } else {
        v14930 = a$$905;
      }
      v2351 = v9045[v14930];
    }
    return v2351;
  }
  function v2169(a$$904) {
    var b$$806 = JAM.call(this.at, this, [0], JAM.policy.p3);
    JAM.call(this.remove, this, [b$$806, a$$904], JAM.policy.p3);
    return b$$806;
  }
  function v2168(a$$903, b$$805) {
    a$$903 = JAM.call(this._prepareModel, this, [a$$903, b$$805], JAM.policy.p3);
    JAM.call(this.add, this, [a$$903, JAM.call(f$$232.extend, f$$232, [{at:0}, b$$805], JAM.policy.p3)], JAM.policy.p3);
    return a$$903;
  }
  function v2167(a$$902) {
    var b$$804 = JAM.call(this.at, this, [this.length - 1], JAM.policy.p3);
    JAM.call(this.remove, this, [b$$804, a$$902], JAM.policy.p3);
    return b$$804;
  }
  function v2166(a$$901, b$$803) {
    a$$901 = JAM.call(this._prepareModel, this, [a$$901, b$$803], JAM.policy.p3);
    JAM.call(this.add, this, [a$$901, b$$803], JAM.policy.p3);
    return a$$901;
  }
  function v2165(a$$900, b$$802) {
    var c$$662;
    var d$$496;
    var e$$421;
    var g$$238;
    if (!b$$802) {
      b$$802 = {};
    }
    var v2354;
    if (JAM.call(f$$232.isArray, f$$232, [a$$900], JAM.policy.p3)) {
      v2354 = JAM.call(a$$900.slice, a$$900, [], JAM.policy.p3);
    } else {
      v2354 = [a$$900];
    }
    a$$900 = v2354;
    c$$662 = 0;
    d$$496 = a$$900.length;
    var v2356 = c$$662 < d$$496;
    for (;v2356;) {
      var v9052 = JAM.call(this.getByCid, this, [a$$900[c$$662]], JAM.policy.p3);
      if (!v9052) {
        v9052 = JAM.call(this.get, this, [a$$900[c$$662]], JAM.policy.p3);
      }
      if (g$$238 = v9052) {
        delete this._byId[g$$238.id];
        delete this._byCid[g$$238.cid];
        e$$421 = JAM.call(this.indexOf, this, [g$$238], JAM.policy.p3);
        var v24040 = this.models;
        JAM.call(v24040.splice, v24040, [e$$421, 1], JAM.policy.p3);
        this.length--;
        var v14934 = b$$802.silent;
        if (!v14934) {
          b$$802.index = e$$421;
          JAM.call(g$$238.trigger, g$$238, ["remove", g$$238, this, b$$802], JAM.policy.p3);
        }
        JAM.call(this._removeReference, this, [g$$238], JAM.policy.p3);
      }
      c$$662++;
      v2356 = c$$662 < d$$496;
    }
    return this;
  }
  function v2164(a$$899, b$$801) {
    var c$$661;
    var d$$495;
    var e$$420;
    var g$$237;
    var i$$243;
    var j$$130 = {};
    var k$$94 = {};
    var l$$98 = [];
    if (!b$$801) {
      b$$801 = {};
    }
    var v2357;
    if (JAM.call(f$$232.isArray, f$$232, [a$$899], JAM.policy.p3)) {
      v2357 = JAM.call(a$$899.slice, a$$899, [], JAM.policy.p3);
    } else {
      v2357 = [a$$899];
    }
    a$$899 = v2357;
    c$$661 = 0;
    d$$495 = a$$899.length;
    var v2360 = c$$661 < d$$495;
    for (;v2360;) {
      var v30921 = JAM.call(this._prepareModel, this, [a$$899[c$$661], b$$801], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        var v9055 = e$$420 = a$$899[c$$661] = v30921
      }
      if (!v9055) {
        throw Error("Can't add an invalid model to a collection");
      }
      g$$237 = e$$420.cid;
      i$$243 = e$$420.id;
      var v2359;
      var v20876 = j$$130[g$$237];
      if (!v20876) {
        v20876 = this._byCid[g$$237];
      }
      var v14936 = v20876;
      if (!v14936) {
        var v20877 = null != i$$243;
        if (v20877) {
          var v24043 = k$$94[i$$243];
          if (!v24043) {
            v24043 = this._byId[i$$243];
          }
          v20877 = v24043;
        }
        v14936 = v20877;
      }
      if (v14936) {
        v2359 = JAM.call(l$$98.push, l$$98, [c$$661], JAM.policy.p3);
      } else {
        introspect(JAM.policy.p2) {
          v2359 = j$$130[g$$237] = k$$94[i$$243] = e$$420;
        }
      }
      v2359;
      c$$661++;
      v2360 = c$$661 < d$$495;
    }
    c$$661 = l$$98.length;
    var v2362 = c$$661;
    c$$661 = c$$661 - 1;
    for (;v2362;) {
      JAM.call(a$$899.splice, a$$899, [l$$98[c$$661], 1], JAM.policy.p3);
      v2362 = c$$661;
      c$$661 = c$$661 - 1;
    }
    c$$661 = 0;
    d$$495 = a$$899.length;
    var v2363 = c$$661 < d$$495;
    for (;v2363;) {
      var v14937 = e$$420 = a$$899[c$$661];
      JAM.call(v14937.on, v14937, ["all", this._onModelEvent, this], JAM.policy.p3);
      var v14939 = this._byCid;
      var v14940 = e$$420.cid;
      introspect(JAM.policy.p2) {
        v14939[v14940] = e$$420;
      }
      var v9057 = null != e$$420.id;
      if (v9057) {
        var v14942 = this._byId;
        var v14943 = e$$420.id;
        introspect(JAM.policy.p2) {
          v14942[v14943] = e$$420;
        }
      }
      c$$661++;
      v2363 = c$$661 < d$$495;
    }
    this.length = this.length + d$$495;
    var v2364 = this.models;
    var v20879;
    if (null != b$$801.at) {
      v20879 = b$$801.at;
    } else {
      v20879 = this.models.length;
    }
    var v9059 = [v20879, 0];
    JAM.call(A$$7.apply, A$$7, [v2364, JAM.call(v9059.concat, v9059, [a$$899], JAM.policy.p3)], JAM.policy.p3);
    var v2366 = this.comparator;
    if (v2366) {
      JAM.call(this.sort, this, [{silent:!0}], JAM.policy.p3);
    }
    if (b$$801.silent) {
      return this;
    }
    c$$661 = 0;
    d$$495 = this.models.length;
    var v2370 = c$$661 < d$$495;
    for (;v2370;) {
      if (j$$130[(e$$420 = this.models[c$$661]).cid]) {
        b$$801.index = c$$661;
        JAM.call(e$$420.trigger, e$$420, ["add", e$$420, this, b$$801], JAM.policy.p3);
      }
      c$$661++;
      v2370 = c$$661 < d$$495;
    }
    return this;
  }
  function v2163(a$$898) {
    function v2162(b$$800) {
      return JAM.call(b$$800.toJSON, b$$800, [a$$898], JAM.policy.p3);
    }
    return JAM.call(this.map, this, [v2162], JAM.policy.p3);
  }
  function v2161() {
    return;
  }
  function v2160(a$$897, b$$799) {
    if (!b$$799) {
      b$$799 = {};
    }
    var v2371 = b$$799.model;
    if (v2371) {
      this.model = b$$799.model;
    }
    var v2372 = b$$799.comparator;
    if (v2372) {
      this.comparator = b$$799.comparator;
    }
    JAM.call(this._reset, this, [], JAM.policy.p3);
    var v2373 = this.initialize;
    JAM.call(v2373.apply, v2373, [this, arguments], JAM.policy.p3);
    if (a$$897) {
      JAM.call(this.reset, this, [a$$897, {silent:!0, parse:b$$799.parse}], JAM.policy.p3);
    }
    return;
  }
  function v2159(a$$896, b$$798) {
    var v9064 = b$$798.silent;
    if (!v9064) {
      v9064 = !this.validate;
    }
    if (v9064) {
      return !0;
    }
    a$$896 = JAM.call(f$$232.extend, f$$232, [{}, this.attributes, a$$896], JAM.policy.p3);
    var c$$660 = JAM.call(this.validate, this, [a$$896, b$$798], JAM.policy.p3);
    if (!c$$660) {
      return !0;
    }
    var v2377;
    var v14951 = b$$798;
    if (v14951) {
      v14951 = b$$798.error;
    }
    if (v14951) {
      v2377 = JAM.call(b$$798.error, b$$798, [this, c$$660, b$$798], JAM.policy.p3);
    } else {
      v2377 = JAM.call(this.trigger, this, ["error", this, c$$660, b$$798], JAM.policy.p3);
    }
    v2377;
    return !1;
  }
  function v2158() {
    return !JAM.call(this.validate, this, [this.attributes], JAM.policy.p3);
  }
  function v2157() {
    return JAM.call(f$$232.clone, f$$232, [this._previousAttributes], JAM.policy.p3);
  }
  function v2156(a$$895) {
    var v2380;
    var v14952 = !arguments.length;
    if (!v14952) {
      v14952 = !this._previousAttributes;
    }
    if (v14952) {
      v2380 = null;
    } else {
      v2380 = this._previousAttributes[a$$895];
    }
    return v2380;
  }
  function v2155(a$$894) {
    if (!a$$894) {
      var v2381;
      if (JAM.call(this.hasChanged, this, [], JAM.policy.p3)) {
        v2381 = JAM.call(f$$232.clone, f$$232, [this.changed], JAM.policy.p3);
      } else {
        v2381 = !1;
      }
      return v2381;
    }
    var b$$797;
    var c$$659 = !1;
    var d$$494 = this._previousAttributes;
    var e$$419;
    for (e$$419 in a$$894) {
      if (!JAM.call(f$$232.isEqual, f$$232, [d$$494[e$$419], b$$797 = a$$894[e$$419]], JAM.policy.p3)) {
        var v9072 = c$$659;
        if (!v9072) {
          v9072 = c$$659 = {};
        }
        var v2383 = v9072;
        introspect(JAM.policy.p2) {
          v2383[e$$419] = b$$797;
        }
      }
    }
    return c$$659;
  }
  function v2154(a$$893) {
    var v2385;
    if (!arguments.length) {
      v2385 = !JAM.call(f$$232.isEmpty, f$$232, [this.changed], JAM.policy.p3);
    } else {
      v2385 = JAM.call(f$$232.has, f$$232, [this.changed, a$$893], JAM.policy.p3);
    }
    return v2385;
  }
  function v2153(a$$892) {
    if (!a$$892) {
      a$$892 = {};
    }
    var b$$796 = this._changing;
    this._changing = !0;
    var c$$658;
    for (c$$658 in this._silent) {
      var v2386 = this._pending;
      introspect(JAM.policy.p2) {
        v2386[c$$658] = !0;
      }
    }
    var d$$493 = JAM.call(f$$232.extend, f$$232, [{}, a$$892.changes, this._silent], JAM.policy.p3);
    this._silent = {};
    for (c$$658 in d$$493) {
      JAM.call(this.trigger, this, ["change:" + c$$658, this, JAM.call(this.get, this, [c$$658], JAM.policy.p3), a$$892], JAM.policy.p3);
    }
    if (b$$796) {
      return this;
    }
    var v2395 = !JAM.call(f$$232.isEmpty, f$$232, [this._pending], JAM.policy.p3);
    for (;v2395;) {
      this._pending = {};
      JAM.call(this.trigger, this, ["change", this, a$$892], JAM.policy.p3);
      for (c$$658 in this.changed) {
        var v9078 = !this._pending[c$$658];
        if (v9078) {
          v9078 = !this._silent[c$$658];
        }
        var v2392 = v9078;
        if (v2392) {
          delete this.changed[c$$658];
        }
      }
      var v30922 = JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
      this._previousAttributes = v30922;
      v2395 = !JAM.call(f$$232.isEmpty, f$$232, [this._pending], JAM.policy.p3);
    }
    this._changing = !1;
    return this;
  }
  function v2152() {
    return null == this.id;
  }
  function v2151() {
    return JAM.new(this.constructor, [this.attributes]);
  }
  function v2150(a$$891) {
    return a$$891;
  }
  function v2149() {
    var v9081 = n$$110(this, "urlRoot");
    if (!v9081) {
      v9081 = n$$110(this.collection, "url");
    }
    var v2399 = v9081;
    if (!v2399) {
      v2399 = t$$33();
    }
    var a$$890 = v2399;
    var v2400;
    if (JAM.call(this.isNew, this, [], JAM.policy.p3)) {
      v2400 = a$$890;
    } else {
      var v20886;
      if ("/" == JAM.call(a$$890.charAt, a$$890, [a$$890.length - 1], JAM.policy.p3)) {
        v20886 = "";
      } else {
        v20886 = "/";
      }
      v2400 = a$$890 + v20886 + encodeURIComponent(this.id);
    }
    return v2400;
  }
  function v2148(a$$889) {
    function v2147(e$$418) {
      var v2401 = a$$889.wait;
      if (v2401) {
        d$$492();
      }
      var v2402;
      if (c$$657) {
        v2402 = JAM.call(c$$657, null, [b$$795, e$$418], JAM.policy.p3);
      } else {
        v2402 = JAM.call(b$$795.trigger, b$$795, ["sync", b$$795, e$$418, a$$889], JAM.policy.p3);
      }
      v2402;
      return;
    }
    function d$$492() {
      JAM.call(b$$795.trigger, b$$795, ["destroy", b$$795, b$$795.collection, a$$889], JAM.policy.p3);
      return;
    }
    var v2404;
    if (a$$889) {
      v2404 = JAM.call(f$$232.clone, f$$232, [a$$889], JAM.policy.p3);
    } else {
      v2404 = {};
    }
    a$$889 = v2404;
    var b$$795 = this;
    var c$$657 = a$$889.success;
    if (JAM.call(this.isNew, this, [], JAM.policy.p3)) {
      d$$492();
      return !1;
    }
    a$$889.success = v2147;
    var v2406 = a$$889;
    var v30923 = JAM.call(g$$232.wrapError, g$$232, [a$$889.error, b$$795, a$$889], JAM.policy.p3);
    v2406.error = v30923;
    var v9087 = this.sync;
    if (!v9087) {
      v9087 = g$$232.sync;
    }
    var v2407 = v9087;
    var e$$417 = JAM.call(v2407.call, v2407, [this, "delete", this, a$$889], JAM.policy.p3);
    var v2408 = a$$889.wait;
    if (!v2408) {
      d$$492();
    }
    return e$$417;
  }
  function v2146(a$$887, b$$793, c$$656) {
    function v2145(a$$888, b$$794, e$$416) {
      b$$794 = JAM.call(h$$194.parse, h$$194, [a$$888, e$$416], JAM.policy.p3);
      if (c$$656.wait) {
        delete c$$656.wait;
        b$$794 = JAM.call(f$$232.extend, f$$232, [d$$491 || {}, b$$794], JAM.policy.p3);
      }
      if (!JAM.call(h$$194.set, h$$194, [b$$794, c$$656], JAM.policy.p3)) {
        return false;
      }
      var v2412;
      if (i$$242) {
        v2412 = JAM.call(i$$242, null, [h$$194, a$$888], JAM.policy.p3);
      } else {
        v2412 = JAM.call(h$$194.trigger, h$$194, ["sync", h$$194, a$$888, c$$656], JAM.policy.p3);
      }
      v2412;
      return;
    }
    var d$$491;
    var e$$415;
    var v2413;
    var v14967 = JAM.call(f$$232.isObject, f$$232, [a$$887], JAM.policy.p3);
    if (!v14967) {
      v14967 = null == a$$887;
    }
    if (v14967) {
      d$$491 = a$$887;
      v2413 = c$$656 = b$$793;
    } else {
      d$$491 = {};
      introspect(JAM.policy.p2) {
        v2413 = d$$491[a$$887] = b$$793;
      }
    }
    v2413;
    var v2414;
    if (c$$656) {
      v2414 = JAM.call(f$$232.clone, f$$232, [c$$656], JAM.policy.p3);
    } else {
      v2414 = {};
    }
    c$$656 = v2414;
    if (c$$656.wait) {
      if (!JAM.call(this._validate, this, [d$$491, c$$656], JAM.policy.p3)) {
        return !1;
      }
      e$$415 = JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
    }
    a$$887 = JAM.call(f$$232.extend, f$$232, [{}, c$$656, {silent:!0}], JAM.policy.p3);
    var v9093 = d$$491;
    if (v9093) {
      var v24047;
      if (c$$656.wait) {
        v24047 = a$$887;
      } else {
        v24047 = c$$656;
      }
      v9093 = !JAM.call(this.set, this, [d$$491, v24047], JAM.policy.p3);
    }
    if (v9093) {
      return !1;
    }
    var h$$194 = this;
    var i$$242 = c$$656.success;
    c$$656.success = v2145;
    var v2420 = c$$656;
    var v30924 = JAM.call(g$$232.wrapError, g$$232, [c$$656.error, h$$194, c$$656], JAM.policy.p3);
    v2420.error = v30924;
    var v2421;
    if (JAM.call(this.isNew, this, [], JAM.policy.p3)) {
      v2421 = "create";
    } else {
      v2421 = "update";
    }
    b$$793 = v2421;
    var v9096 = this.sync;
    if (!v9096) {
      v9096 = g$$232.sync;
    }
    var v2422 = v9096;
    b$$793 = JAM.call(v2422.call, v2422, [this, b$$793, this, c$$656], JAM.policy.p3);
    var v2423 = c$$656.wait;
    if (v2423) {
      JAM.call(this.set, this, [e$$415, a$$887], JAM.policy.p3);
    }
    return b$$793;
  }
  function v2144(a$$886) {
    function v2143(d$$490, e$$414, f$$235) {
      if (!JAM.call(b$$792.set, b$$792, [JAM.call(b$$792.parse, b$$792, [d$$490, f$$235], JAM.policy.p3), a$$886], JAM.policy.p3)) {
        return !1;
      }
      if (c$$655) {
        JAM.call(c$$655, null, [b$$792, d$$490], JAM.policy.p3);
      }
      return;
    }
    var v2425;
    if (a$$886) {
      v2425 = JAM.call(f$$232.clone, f$$232, [a$$886], JAM.policy.p3);
    } else {
      v2425 = {};
    }
    a$$886 = v2425;
    var b$$792 = this;
    var c$$655 = a$$886.success;
    a$$886.success = v2143;
    var v2426 = a$$886;
    var v30925 = JAM.call(g$$232.wrapError, g$$232, [a$$886.error, b$$792, a$$886], JAM.policy.p3);
    v2426.error = v30925;
    var v9099 = this.sync;
    if (!v9099) {
      v9099 = g$$232.sync;
    }
    var v2427 = v9099;
    return JAM.call(v2427.call, v2427, [this, "read", this, a$$886], JAM.policy.p3);
  }
  function v2142(a$$885) {
    var v9100 = a$$885;
    if (!v9100) {
      v9100 = a$$885 = {};
    }
    v9100.unset = !0;
    return JAM.call(this.set, this, [JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3), a$$885], JAM.policy.p3);
  }
  function v2141(a$$884, b$$791) {
    var v9102 = b$$791;
    if (!v9102) {
      v9102 = b$$791 = {};
    }
    v9102.unset = !0;
    return JAM.call(this.set, this, [a$$884, null, b$$791], JAM.policy.p3);
  }
  function v2140(a$$883, b$$790, c$$654) {
    var d$$489;
    var e$$413;
    var v2431;
    var v14974 = JAM.call(f$$232.isObject, f$$232, [a$$883], JAM.policy.p3);
    if (!v14974) {
      v14974 = null == a$$883;
    }
    if (v14974) {
      d$$489 = a$$883;
      v2431 = c$$654 = b$$790;
    } else {
      d$$489 = {};
      introspect(JAM.policy.p2) {
        v2431 = d$$489[a$$883] = b$$790;
      }
    }
    v2431;
    if (!c$$654) {
      c$$654 = {};
    }
    if (!d$$489) {
      return this;
    }
    var v2433 = d$$489 instanceof o$$42;
    if (v2433) {
      d$$489 = d$$489.attributes;
    }
    if (c$$654.unset) {
      for (e$$413 in d$$489) {
        introspect(JAM.policy.p2) {
          d$$489[e$$413] = void 0;
        }
      }
    }
    if (!JAM.call(this._validate, this, [d$$489, c$$654], JAM.policy.p3)) {
      return !1;
    }
    var v2436 = this.idAttribute in d$$489;
    if (v2436) {
      this.id = d$$489[this.idAttribute];
    }
    b$$790 = c$$654.changes = {};
    var h$$193 = this.attributes;
    var g$$236 = this._escapedAttributes;
    var v2437 = this._previousAttributes;
    if (!v2437) {
      v2437 = {};
    }
    var j$$129 = v2437;
    for (e$$413 in d$$489) {
      a$$883 = d$$489[e$$413];
      var v9109 = !JAM.call(f$$232.isEqual, f$$232, [h$$193[e$$413], a$$883], JAM.policy.p3);
      if (!v9109) {
        var v14976 = c$$654.unset;
        if (v14976) {
          v14976 = JAM.call(f$$232.has, f$$232, [h$$193, e$$413], JAM.policy.p3);
        }
        v9109 = v14976;
      }
      if (v9109) {
        delete g$$236[e$$413];
        var v14978;
        if (c$$654.silent) {
          v14978 = this._silent;
        } else {
          v14978 = b$$790;
        }
        var v9110 = v14978;
        introspect(JAM.policy.p2) {
          v9110[e$$413] = !0;
        }
      }
      var v2439;
      if (c$$654.unset) {
        v2439 = delete h$$193[e$$413];
      } else {
        introspect(JAM.policy.p2) {
          v2439 = h$$193[e$$413] = a$$883;
        }
      }
      v2439;
      var v2440;
      var v14979 = !JAM.call(f$$232.isEqual, f$$232, [j$$129[e$$413], a$$883], JAM.policy.p3);
      if (!v14979) {
        v14979 = JAM.call(f$$232.has, f$$232, [h$$193, e$$413], JAM.policy.p3) != JAM.call(f$$232.has, f$$232, [j$$129, e$$413], JAM.policy.p3);
      }
      if (v14979) {
        var v14980 = this.changed;
        introspect(JAM.policy.p2) {
          v14980[e$$413] = a$$883;
        }
        var v14981 = c$$654.silent;
        if (!v14981) {
          var v20896 = this._pending;
          introspect(JAM.policy.p2) {
            v14981 = v20896[e$$413] = !0;
          }
        }
        v2440 = v14981;
      } else {
        delete this.changed[e$$413];
        v2440 = delete this._pending[e$$413];
      }
      v2440;
    }
    var v2441 = c$$654.silent;
    if (!v2441) {
      JAM.call(this.change, this, [c$$654], JAM.policy.p3);
    }
    return this;
  }
  function v2139(a$$882) {
    return null != JAM.call(this.get, this, [a$$882], JAM.policy.p3);
  }
  function v2138(a$$881) {
    var b$$789;
    if (b$$789 = this._escapedAttributes[a$$881]) {
      return b$$789;
    }
    b$$789 = JAM.call(this.get, this, [a$$881], JAM.policy.p3);
    var v2444 = this._escapedAttributes;
    var v14984;
    if (null == b$$789) {
      v14984 = "";
    } else {
      v14984 = "" + b$$789;
    }
    var v30926 = JAM.call(f$$232.escape, f$$232, [v14984], JAM.policy.p3);
    introspect(JAM.policy.p2) {
      return v2444[a$$881] = v30926;
    }
  }
  function v2137(a$$880) {
    return this.attributes[a$$880];
  }
  function v2136() {
    return JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
  }
  function v2135() {
    return;
  }
  function v2134(a$$879, b$$788) {
    var c$$653;
    if (!a$$879) {
      a$$879 = {};
    }
    var v9117 = b$$788;
    if (v9117) {
      v9117 = b$$788.parse;
    }
    var v2447 = v9117;
    if (v2447) {
      a$$879 = JAM.call(this.parse, this, [a$$879], JAM.policy.p3);
    }
    if (c$$653 = n$$110(this, "defaults")) {
      a$$879 = JAM.call(f$$232.extend, f$$232, [{}, c$$653, a$$879], JAM.policy.p3);
    }
    var v9118 = b$$788;
    if (v9118) {
      v9118 = b$$788.collection;
    }
    var v2449 = v9118;
    if (v2449) {
      this.collection = b$$788.collection;
    }
    this.attributes = {};
    this._escapedAttributes = {};
    var v30927 = JAM.call(f$$232.uniqueId, f$$232, ["c"], JAM.policy.p3);
    this.cid = v30927;
    this.changed = {};
    this._silent = {};
    this._pending = {};
    JAM.call(this.set, this, [a$$879, {silent:!0}], JAM.policy.p3);
    this.changed = {};
    this._silent = {};
    this._pending = {};
    var v30928 = JAM.call(f$$232.clone, f$$232, [this.attributes], JAM.policy.p3);
    this._previousAttributes = v30928;
    var v2452 = this.initialize;
    JAM.call(v2452.apply, v2452, [this, arguments], JAM.policy.p3);
    return;
  }
  function v2133(a$$878) {
    var b$$787;
    var c$$652;
    var d$$488;
    var e$$412;
    var f$$234;
    var g$$235;
    if (!(d$$488 = this._callbacks)) {
      return this;
    }
    f$$234 = d$$488.all;
    a$$878 = JAM.call(a$$878.split, a$$878, [p$$61], JAM.policy.p3);
    g$$235 = JAM.call(z$$11.call, z$$11, [arguments, 1], JAM.policy.p3);
    var v2463 = b$$787 = JAM.call(a$$878.shift, a$$878, [], JAM.policy.p3);
    for (;v2463;) {
      if (c$$652 = d$$488[b$$787]) {
        e$$412 = c$$652.tail;
        var v2456 = (c$$652 = c$$652.next) !== e$$412;
        for (;v2456;) {
          var v2454 = c$$652.callback;
          var v9122 = c$$652.context;
          if (!v9122) {
            v9122 = this;
          }
          JAM.call(v2454.apply, v2454, [v9122, g$$235], JAM.policy.p3);
          v2456 = (c$$652 = c$$652.next) !== e$$412;
        }
      }
      if (c$$652 = f$$234) {
        e$$412 = c$$652.tail;
        var v2458 = [b$$787];
        b$$787 = JAM.call(v2458.concat, v2458, [g$$235], JAM.policy.p3);
        var v2461 = (c$$652 = c$$652.next) !== e$$412;
        for (;v2461;) {
          var v2459 = c$$652.callback;
          var v9125 = c$$652.context;
          if (!v9125) {
            v9125 = this;
          }
          JAM.call(v2459.apply, v2459, [v9125, b$$787], JAM.policy.p3);
          v2461 = (c$$652 = c$$652.next) !== e$$412;
        }
      }
      v2463 = b$$787 = JAM.call(a$$878.shift, a$$878, [], JAM.policy.p3);
    }
    return this;
  }
  function v2132(a$$877, b$$786, c$$651) {
    var d$$487;
    var e$$411;
    var h$$192;
    var g$$234;
    var j$$128;
    var q$$28;
    if (e$$411 = this._callbacks) {
      var v14987 = !a$$877;
      if (v14987) {
        v14987 = !b$$786;
      }
      var v9127 = v14987;
      if (v9127) {
        v9127 = !c$$651;
      }
      if (v9127) {
        delete this._callbacks;
        return this;
      }
      var v2465;
      if (a$$877) {
        v2465 = JAM.call(a$$877.split, a$$877, [p$$61], JAM.policy.p3);
      } else {
        v2465 = JAM.call(f$$232.keys, f$$232, [e$$411], JAM.policy.p3);
      }
      a$$877 = v2465;
      var v2469 = d$$487 = JAM.call(a$$877.shift, a$$877, [], JAM.policy.p3);
      for (;v2469;) {
        h$$192 = e$$411[d$$487];
        delete e$$411[d$$487];
        var v14988 = h$$192;
        if (v14988) {
          v14988 = b$$786 || c$$651;
        }
        if (v14988) {
          g$$234 = h$$192.tail;
          var v2467 = (h$$192 = h$$192.next) !== g$$234;
          for (;v2467;) {
            j$$128 = h$$192.callback;
            q$$28 = h$$192.context;
            var v20899 = b$$786;
            if (v20899) {
              v20899 = j$$128 !== b$$786;
            }
            var v14989 = v20899;
            if (!v14989) {
              var v20900 = c$$651;
              if (v20900) {
                v20900 = q$$28 !== c$$651;
              }
              v14989 = v20900;
            }
            if (v14989) {
              JAM.call(this.on, this, [d$$487, j$$128, q$$28], JAM.policy.p3);
            }
            v2467 = (h$$192 = h$$192.next) !== g$$234;
          }
        }
        v2469 = d$$487 = JAM.call(a$$877.shift, a$$877, [], JAM.policy.p3);
      }
      return this;
    }
    return;
  }
  function v2131(a$$876, b$$785, c$$650) {
    var d$$486;
    var e$$410;
    var f$$233;
    var g$$233;
    var j$$127;
    if (!b$$785) {
      return this;
    }
    a$$876 = JAM.call(a$$876.split, a$$876, [p$$61], JAM.policy.p3);
    var v2472 = this._callbacks;
    if (!v2472) {
      v2472 = this._callbacks = {};
    }
    d$$486 = v2472;
    var v2473 = e$$410 = JAM.call(a$$876.shift, a$$876, [], JAM.policy.p3);
    for (;v2473;) {
      var v24049;
      if (j$$127 = d$$486[e$$410]) {
        v24049 = j$$127.tail;
      } else {
        v24049 = {};
      }
      f$$233 = v24049;
      f$$233.next = g$$233 = {};
      f$$233.context = c$$650;
      f$$233.callback = b$$785;
      var v14990;
      if (j$$127) {
        v14990 = j$$127.next;
      } else {
        v14990 = f$$233;
      }
      var v9131 = v14990;
      introspect(JAM.policy.p2) {
        d$$486[e$$410] = {tail:g$$233, next:v9131};
      }
      v2473 = e$$410 = JAM.call(a$$876.shift, a$$876, [], JAM.policy.p3);
    }
    return this;
  }
  function v2130() {
    l$$97.Backbone = y$$57;
    return this;
  }
  function v2129(a$$875) {
    i$$241 = a$$875;
    return;
  }
  function t$$33() {
    throw Error('A "url" property or function must be specified');
  }
  function n$$110(a$$946, b$$833) {
    var v2474;
    var v14991 = !a$$946;
    if (!v14991) {
      v14991 = !a$$946[b$$833];
    }
    if (v14991) {
      v2474 = null;
    } else {
      var v9132;
      if (JAM.call(f$$232.isFunction, f$$232, [a$$946[b$$833]], JAM.policy.p3)) {
        v9132 = JAM.call(a$$946[b$$833], a$$946, [], JAM.policy.p3);
      } else {
        v9132 = a$$946[b$$833];
      }
      v2474 = v9132;
    }
    return v2474;
  }
  function G$$5(a$$945, b$$832, c$$679) {
    function v2128() {
      JAM.call(a$$945.apply, a$$945, [this, arguments], JAM.policy.p3);
      return;
    }
    var d$$506;
    var v2475;
    var v14993 = b$$832;
    if (v14993) {
      v14993 = JAM.call(b$$832.hasOwnProperty, b$$832, ["constructor"], JAM.policy.p3);
    }
    if (v14993) {
      v2475 = b$$832.constructor;
    } else {
      v2475 = v2128;
    }
    d$$506 = v2475;
    JAM.call(f$$232.extend, f$$232, [d$$506, a$$945], JAM.policy.p3);
    x$$77.prototype = a$$945.prototype;
    var v2476 = d$$506;
    var v30929 = new x$$77;
    v2476.prototype = v30929;
    if (b$$832) {
      JAM.call(f$$232.extend, f$$232, [d$$506.prototype, b$$832], JAM.policy.p3);
    }
    if (c$$679) {
      JAM.call(f$$232.extend, f$$232, [d$$506, c$$679], JAM.policy.p3);
    }
    d$$506.prototype.constructor = d$$506;
    d$$506.__super__ = a$$945.prototype;
    return d$$506;
  }
  function x$$77() {
    return;
  }
  var l$$97 = this;
  var y$$57 = l$$97.Backbone;
  var z$$11 = Array.prototype.slice;
  var A$$7 = Array.prototype.splice;
  var g$$232;
  var v2480;
  if ("undefined" !== typeof exports) {
    v2480 = exports;
  } else {
    v2480 = l$$97.Backbone = {};
  }
  g$$232 = v2480;
  g$$232.VERSION = "0.9.2";
  var f$$232 = l$$97._;
  var v9137 = !f$$232;
  if (v9137) {
    v9137 = "undefined" !== typeof require;
  }
  var v2481 = v9137;
  if (v2481) {
    f$$232 = JAM.call(require, null, ["underscore"], JAM.policy.p3);
  }
  var v9138 = l$$97.jQuery;
  if (!v9138) {
    v9138 = l$$97.Zepto;
  }
  var v2482 = v9138;
  if (!v2482) {
    v2482 = l$$97.ender;
  }
  var i$$241 = v2482;
  g$$232.setDomLibrary = v2129;
  g$$232.noConflict = v2130;
  g$$232.emulateHTTP = !1;
  g$$232.emulateJSON = !1;
  var p$$61 = /\s+/;
  var k$$93 = g$$232.Events = {on:v2131, off:v2132, trigger:v2133};
  k$$93.bind = k$$93.on;
  k$$93.unbind = k$$93.off;
  var o$$42 = g$$232.Model = v2134;
  JAM.call(f$$232.extend, f$$232, [o$$42.prototype, k$$93, {changed:null, _silent:null, _pending:null, idAttribute:"id", initialize:v2135, toJSON:v2136, get:v2137, escape:v2138, has:v2139, set:v2140, unset:v2141, clear:v2142, fetch:v2144, save:v2146, destroy:v2148, url:v2149, parse:v2150, clone:v2151, isNew:v2152, change:v2153, hasChanged:v2154, changedAttributes:v2155, previous:v2156, previousAttributes:v2157, isValid:v2158, _validate:v2159}], JAM.policy.p3);
  var r$$32 = g$$232.Collection = v2160;
  JAM.call(f$$232.extend, f$$232, [r$$32.prototype, k$$93, {model:o$$42, initialize:v2161, toJSON:v2163, add:v2164, remove:v2165, push:v2166, pop:v2167, unshift:v2168, shift:v2169, get:v2170, getByCid:v2171, at:v2172, where:v2174, sort:v2175, pluck:v2177, reset:v2178, fetch:v2180, create:v2182, parse:v2183, chain:v2184, _reset:v2185, _prepareModel:v2186, _removeReference:v2187, _onModelEvent:v2188}], JAM.policy.p3);
  JAM.call(f$$232.each, f$$232, [JAM.call("forEach,each,map,reduce,reduceRight,find,detect,filter,select,reject,every,all,some,any,include,contains,invoke,max,min,sortBy,sortedIndex,toArray,size,first,initial,rest,last,without,indexOf,shuffle,lastIndexOf,isEmpty,groupBy".split, "forEach,each,map,reduce,reduceRight,find,detect,filter,select,reject,every,all,some,any,include,contains,invoke,max,min,sortBy,sortedIndex,toArray,size,first,initial,rest,last,without,indexOf,shuffle,lastIndexOf,isEmpty,groupBy", 
  [","], JAM.policy.p3), v2190], JAM.policy.p3);
  var u$$20 = g$$232.Router = v2191;
  var B$$7 = /:\w+/g;
  var C$$6 = /\*\w+/g;
  var D$$6 = /[-[\]{}()+?.,\\^$|#\s]/g;
  JAM.call(f$$232.extend, f$$232, [u$$20.prototype, k$$93, {initialize:v2192, route:v2194, navigate:v2195, _bindRoutes:v2196, _routeToRegExp:v2197, _extractParameters:v2198}], JAM.policy.p3);
  var m$$64 = g$$232.History = v2199;
  var s$$36 = /^[#\/]/;
  var E$$6 = /msie [\w.]+/;
  m$$64.started = !1;
  JAM.call(f$$232.extend, f$$232, [m$$64.prototype, k$$93, {interval:50, getHash:v2200, getFragment:v2201, start:v2202, stop:v2203, route:v2204, checkUrl:v2205, loadUrl:v2207, navigate:v2208, _updateHash:v2209}], JAM.policy.p3);
  var v$$15 = g$$232.View = v2210;
  var F$$6 = /^(\S+)\s*(.*)$/;
  var w$$21 = JAM.call("model,collection,el,id,attributes,className,tagName".split, "model,collection,el,id,attributes,className,tagName", [","], JAM.policy.p3);
  JAM.call(f$$232.extend, f$$232, [v$$15.prototype, k$$93, {tagName:"div", $:v2211, initialize:v2212, render:v2213, remove:v2214, make:v2215, setElement:v2216, delegateEvents:v2217, undelegateEvents:v2218, _configure:v2219, _ensureElement:v2220}], JAM.policy.p3);
  o$$42.extend = r$$32.extend = u$$20.extend = v$$15.extend = v2221;
  var H$$5 = {create:"POST", update:"PUT", "delete":"DELETE", read:"GET"};
  g$$232.sync = v2223;
  g$$232.wrapError = v2225;
  return;
}
function v2127() {
  function v2126() {
    return this._wrapped;
  }
  function v2125() {
    this._chain = true;
    return this;
  }
  function v2124(a$$874) {
    function v2123() {
      return x$$76(JAM.call(b$$784.apply, b$$784, [this._wrapped, arguments], JAM.policy.p3), this._chain);
    }
    var b$$784 = k$$92[a$$874];
    var v2496 = m$$63.prototype;
    introspect(JAM.policy.p2) {
      v2496[a$$874] = v2123;
    }
    return;
  }
  function v2122(a$$873) {
    function v2121() {
      var d$$485 = this._wrapped;
      JAM.call(b$$783.apply, b$$783, [d$$485, arguments], JAM.policy.p3);
      var e$$409 = d$$485.length;
      var v14997 = a$$873 == "shift";
      if (!v14997) {
        v14997 = a$$873 == "splice";
      }
      var v9141 = v14997;
      if (v9141) {
        v9141 = e$$409 === 0;
      }
      var v2497 = v9141;
      if (v2497) {
        delete d$$485[0];
      }
      return x$$76(d$$485, this._chain);
    }
    var b$$783 = k$$92[a$$873];
    var v2499 = m$$63.prototype;
    introspect(JAM.policy.p2) {
      v2499[a$$873] = v2121;
    }
    return;
  }
  function v2120(a$$868) {
    var v2500 = b$$743(a$$868);
    return JAM.call(v2500.chain, v2500, [], JAM.policy.p3);
  }
  function v2119(a$$862) {
    function v2118(a$$867) {
      return JAM.call(e$$408.call, e$$408, [this, a$$867, b$$743], JAM.policy.p3);
    }
    function v2117(a$$866, b$$782) {
      return "';\n" + w$$20(b$$782) + "\n;__p+='";
    }
    function v2116(a$$865, b$$781) {
      return "'+\n(" + w$$20(b$$781) + ")+\n'";
    }
    function v2115(a$$864, b$$780) {
      return "'+\n_.escape(" + w$$20(b$$780) + ")+\n'";
    }
    function v2114(a$$863) {
      return "\\" + n$$109[a$$863];
    }
    var c$$647;
    var d$$484;
    d$$484 = JAM.call(b$$743.defaults, b$$743, [d$$484 || {}, b$$743.templateSettings], JAM.policy.p3);
    var v24050 = JAM.call(a$$862.replace, a$$862, [O$$3, v2114], JAM.policy.p3);
    var v26217 = d$$484.escape;
    if (!v26217) {
      v26217 = u$$19;
    }
    var v20906 = JAM.call(v24050.replace, v24050, [v26217, v2115], JAM.policy.p3);
    var v24052 = d$$484.interpolate;
    if (!v24052) {
      v24052 = u$$19;
    }
    var v14998 = JAM.call(v20906.replace, v20906, [v24052, v2116], JAM.policy.p3);
    var v20908 = d$$484.evaluate;
    if (!v20908) {
      v20908 = u$$19;
    }
    a$$862 = "__p+='" + JAM.call(v14998.replace, v14998, [v20908, v2117], JAM.policy.p3) + "';\n";
    var v2508 = d$$484.variable;
    if (!v2508) {
      a$$862 = "with(obj||{}){\n" + a$$862 + "}\n";
    }
    a$$862 = "var __p='';var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n" + a$$862 + "return __p;\n";
    var v9148 = d$$484.variable;
    if (!v9148) {
      v9148 = "obj";
    }
    var e$$408 = JAM.new(Function, [v9148, "_", a$$862]);
    if (c$$647) {
      return JAM.call(e$$408, null, [c$$647, b$$743], JAM.policy.p3);
    }
    c$$647 = v2118;
    var v24054 = d$$484.variable;
    if (!v24054) {
      v24054 = "obj";
    }
    c$$647.source = "function(" + v24054 + "){\n" + a$$862 + "}";
    return c$$647;
  }
  function v2113(a$$859) {
    var b$$778 = N$$3;
    N$$3 = N$$3 + 1;
    var v2512;
    if (a$$859) {
      v2512 = a$$859 + b$$778;
    } else {
      v2512 = b$$778;
    }
    return v2512;
  }
  function v2112(a$$858) {
    function v2111(c$$646) {
      introspect(JAM.policy.p2) {
        var v2513 = b$$743[c$$646] = a$$858[c$$646]
      }
      M$$3(c$$646, v2513);
      return;
    }
    JAM.call(j$$125, null, [JAM.call(b$$743.functions, b$$743, [a$$858], JAM.policy.p3), v2111], JAM.policy.p3);
    return;
  }
  function v2110(a$$857, c$$645) {
    if (a$$857 == null) {
      return null;
    }
    var d$$483 = a$$857[c$$645];
    var v2516;
    if (JAM.call(b$$743.isFunction, b$$743, [d$$483], JAM.policy.p3)) {
      v2516 = JAM.call(d$$483.call, d$$483, [a$$857], JAM.policy.p3);
    } else {
      v2516 = d$$483;
    }
    return v2516;
  }
  function v2109(a$$856) {
    var v26220 = "" + a$$856;
    var v24055 = JAM.call(v26220.replace, v26220, [/&/g, "&amp;"], JAM.policy.p3);
    var v20910 = JAM.call(v24055.replace, v24055, [/</g, "&lt;"], JAM.policy.p3);
    var v15002 = JAM.call(v20910.replace, v20910, [/>/g, "&gt;"], JAM.policy.p3);
    var v9151 = JAM.call(v15002.replace, v15002, [/"/g, "&quot;"], JAM.policy.p3);
    var v2517 = JAM.call(v9151.replace, v9151, [/'/g, "&#x27;"], JAM.policy.p3);
    return JAM.call(v2517.replace, v2517, [/\//g, "&#x2F;"], JAM.policy.p3);
  }
  function v2108(a$$855, b$$777, d$$482) {
    var e$$407 = 0;
    var v2518 = e$$407 < a$$855;
    for (;v2518;) {
      JAM.call(b$$777.call, b$$777, [d$$482, e$$407], JAM.policy.p3);
      e$$407++;
      v2518 = e$$407 < a$$855;
    }
    return;
  }
  function v2107(a$$854) {
    return a$$854;
  }
  function v2106() {
    s$$35._ = I$$4;
    return this;
  }
  function v2105(a$$853, b$$776) {
    return JAM.call(K$$3.call, K$$3, [a$$853, b$$776], JAM.policy.p3);
  }
  function v2104(a$$852) {
    return a$$852 === void 0;
  }
  function v2103(a$$851) {
    return a$$851 === null;
  }
  function v2102(a$$850) {
    return JAM.call(l$$96.call, l$$96, [a$$850], JAM.policy.p3) == "[object RegExp]";
  }
  function v2101(a$$849) {
    return JAM.call(l$$96.call, l$$96, [a$$849], JAM.policy.p3) == "[object Date]";
  }
  function v2100(a$$848) {
    var v9152 = a$$848 === true;
    if (!v9152) {
      v9152 = a$$848 === false;
    }
    var v2522 = v9152;
    if (!v2522) {
      v2522 = JAM.call(l$$96.call, l$$96, [a$$848], JAM.policy.p3) == "[object Boolean]";
    }
    return v2522;
  }
  function v2099(a$$847) {
    return a$$847 !== a$$847;
  }
  function v2098(a$$846) {
    var v2523 = JAM.call(b$$743.isNumber, b$$743, [a$$846], JAM.policy.p3);
    if (v2523) {
      v2523 = isFinite(a$$846);
    }
    return v2523;
  }
  function v2097(a$$845) {
    return JAM.call(l$$96.call, l$$96, [a$$845], JAM.policy.p3) == "[object Number]";
  }
  function v2096(a$$844) {
    return JAM.call(l$$96.call, l$$96, [a$$844], JAM.policy.p3) == "[object String]";
  }
  function v2095(a$$843) {
    return JAM.call(l$$96.call, l$$96, [a$$843], JAM.policy.p3) == "[object Function]";
  }
  function v2094(a$$842) {
    var v9155 = !a$$842;
    if (!v9155) {
      v9155 = !JAM.call(b$$743.has, b$$743, [a$$842, "callee"], JAM.policy.p3);
    }
    return !v9155;
  }
  function v2093(a$$841) {
    return JAM.call(l$$96.call, l$$96, [a$$841], JAM.policy.p3) == "[object Arguments]";
  }
  function v2092(a$$840) {
    return a$$840 === Object(a$$840);
  }
  function v2091(a$$839) {
    return JAM.call(l$$96.call, l$$96, [a$$839], JAM.policy.p3) == "[object Array]";
  }
  function v2090(a$$838) {
    var v15006 = a$$838;
    if (v15006) {
      v15006 = a$$838.nodeType == 1;
    }
    return !!v15006;
  }
  function v2089(a$$837) {
    if (a$$837 == null) {
      return true;
    }
    var v9157 = JAM.call(b$$743.isArray, b$$743, [a$$837], JAM.policy.p3);
    if (!v9157) {
      v9157 = JAM.call(b$$743.isString, b$$743, [a$$837], JAM.policy.p3);
    }
    if (v9157) {
      return a$$837.length === 0;
    }
    var c$$644;
    for (c$$644 in a$$837) {
      if (JAM.call(b$$743.has, b$$743, [a$$837, c$$644], JAM.policy.p3)) {
        return false;
      }
    }
    return true;
  }
  function v2088(a$$836, b$$775) {
    return r$$31(a$$836, b$$775, []);
  }
  function v2087(a$$835, b$$774) {
    JAM.call(b$$774, null, [a$$835], JAM.policy.p3);
    return a$$835;
  }
  function v2086(a$$834) {
    var v2536;
    if (!JAM.call(b$$743.isObject, b$$743, [a$$834], JAM.policy.p3)) {
      v2536 = a$$834;
    } else {
      var v9158;
      if (JAM.call(b$$743.isArray, b$$743, [a$$834], JAM.policy.p3)) {
        v9158 = JAM.call(a$$834.slice, a$$834, [], JAM.policy.p3);
      } else {
        v9158 = JAM.call(b$$743.extend, b$$743, [{}, a$$834], JAM.policy.p3);
      }
      v2536 = v9158;
    }
    return v2536;
  }
  function v2085(a$$833) {
    function v2084(b$$773) {
      var d$$481;
      for (d$$481 in b$$773) {
        var v2537 = a$$833[d$$481] == null;
        if (v2537) {
          introspect(JAM.policy.p2) {
            a$$833[d$$481] = b$$773[d$$481];
          }
        }
      }
      return;
    }
    JAM.call(j$$125, null, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3), v2084], JAM.policy.p3);
    return a$$833;
  }
  function v2083(a$$832) {
    function v2082(b$$772) {
      var v2539 = b$$772 in a$$832;
      if (v2539) {
        introspect(JAM.policy.p2) {
          c$$643[b$$772] = a$$832[b$$772];
        }
      }
      return;
    }
    var c$$643 = {};
    JAM.call(j$$125, null, [JAM.call(b$$743.flatten, b$$743, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3), v2082], JAM.policy.p3);
    return c$$643;
  }
  function v2081(a$$831) {
    function v2080(b$$771) {
      var d$$480;
      for (d$$480 in b$$771) {
        introspect(JAM.policy.p2) {
          a$$831[d$$480] = b$$771[d$$480];
        }
      }
      return;
    }
    JAM.call(j$$125, null, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3), v2080], JAM.policy.p3);
    return a$$831;
  }
  function v2079(a$$830) {
    var c$$642 = [];
    var d$$479;
    for (d$$479 in a$$830) {
      var v2542 = JAM.call(b$$743.isFunction, b$$743, [a$$830[d$$479]], JAM.policy.p3);
      if (v2542) {
        JAM.call(c$$642.push, c$$642, [d$$479], JAM.policy.p3);
      }
    }
    return JAM.call(c$$642.sort, c$$642, [], JAM.policy.p3);
  }
  function v2078(a$$829) {
    return JAM.call(b$$743.map, b$$743, [a$$829, b$$743.identity], JAM.policy.p3);
  }
  function v2077(a$$828) {
    if (a$$828 !== Object(a$$828)) {
      throw new TypeError("Invalid object");
    }
    var c$$641 = [];
    var d$$478;
    for (d$$478 in a$$828) {
      var v2545 = JAM.call(b$$743.has, b$$743, [a$$828, d$$478], JAM.policy.p3);
      if (v2545) {
        c$$641[c$$641.length] = d$$478;
      }
    }
    return c$$641;
  }
  function v2076(a$$827, b$$770) {
    function v2075() {
      if ((a$$827 = a$$827 - 1) < 1) {
        return JAM.call(b$$770.apply, b$$770, [this, arguments], JAM.policy.p3);
      }
      return;
    }
    var v2547;
    if (a$$827 <= 0) {
      v2547 = JAM.call(b$$770, null, [], JAM.policy.p3);
    } else {
      v2547 = v2075;
    }
    return v2547;
  }
  function v2074() {
    function v2073() {
      var b$$769 = arguments;
      var d$$477 = a$$826.length - 1;
      var v2550 = d$$477 >= 0;
      for (;v2550;) {
        var v9167 = a$$826[d$$477];
        b$$769 = [JAM.call(v9167.apply, v9167, [this, b$$769], JAM.policy.p3)];
        d$$477--;
        v2550 = d$$477 >= 0;
      }
      return b$$769[0];
    }
    var a$$826 = arguments;
    return v2073;
  }
  function v2072(a$$825, b$$768) {
    function v2071() {
      var v2551 = [a$$825];
      var d$$476 = JAM.call(v2551.concat, v2551, [JAM.call(i$$238.call, i$$238, [arguments, 0], JAM.policy.p3)], JAM.policy.p3);
      return JAM.call(b$$768.apply, b$$768, [this, d$$476], JAM.policy.p3);
    }
    return v2071;
  }
  function v2070(a$$824) {
    function v2069() {
      if (b$$767) {
        return d$$475;
      }
      b$$767 = true;
      return d$$475 = JAM.call(a$$824.apply, a$$824, [this, arguments], JAM.policy.p3);
    }
    var b$$767 = false;
    var d$$475;
    return v2069;
  }
  function v2068(a$$823, b$$766) {
    function v2067() {
      function v2066() {
        e$$406 = null;
        if (!d$$474) {
          JAM.call(a$$823.apply, a$$823, [f$$231, g$$231], JAM.policy.p3);
        }
        return;
      }
      var f$$231 = this;
      var g$$231 = arguments;
      var v9169 = d$$474;
      if (v9169) {
        v9169 = !e$$406;
      }
      var v2553 = v9169;
      if (v2553) {
        JAM.call(a$$823.apply, a$$823, [f$$231, g$$231], JAM.policy.p3);
      }
      clearTimeout(e$$406);
      e$$406 = JAM.call(setTimeout, null, [v2066, b$$766]);
      return;
    }
    var d$$474;
    var e$$406;
    return v2067;
  }
  function v2065(a$$822, c$$640) {
    function v2064() {
      function v2063() {
        f$$230 = null;
        if (h$$191) {
          JAM.call(a$$822.apply, a$$822, [d$$473, e$$405], JAM.policy.p3);
        }
        JAM.call(j$$126, null, [], JAM.policy.p3);
        return;
      }
      d$$473 = this;
      e$$405 = arguments;
      if (!f$$230) {
        f$$230 = JAM.call(setTimeout, null, [v2063, c$$640]);
      }
      var v2554;
      if (g$$230) {
        v2554 = h$$191 = true;
      } else {
        v2554 = i$$240 = JAM.call(a$$822.apply, a$$822, [d$$473, e$$405], JAM.policy.p3);
      }
      v2554;
      JAM.call(j$$126, null, [], JAM.policy.p3);
      g$$230 = true;
      return i$$240;
    }
    function v2062() {
      h$$191 = g$$230 = false;
      return;
    }
    var d$$473;
    var e$$405;
    var f$$230;
    var g$$230;
    var h$$191;
    var i$$240;
    var j$$126 = JAM.call(b$$743.debounce, b$$743, [v2062, c$$640], JAM.policy.p3);
    return v2064;
  }
  function v2061(a$$821) {
    var v2555 = b$$743.delay;
    var v9171 = [a$$821, 1];
    return JAM.call(v2555.apply, v2555, [b$$743, JAM.call(v9171.concat, v9171, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2060(a$$820, b$$765) {
    function v2059() {
      return JAM.call(a$$820.apply, a$$820, [null, d$$472], JAM.policy.p3);
    }
    var d$$472 = JAM.call(i$$238.call, i$$238, [arguments, 2], JAM.policy.p3);
    return JAM.call(setTimeout, null, [v2059, b$$765]);
  }
  function v2058(a$$819, c$$639) {
    function v2057() {
      var e$$404 = JAM.call(c$$639.apply, c$$639, [this, arguments], JAM.policy.p3);
      var v2557;
      if (JAM.call(b$$743.has, b$$743, [d$$471, e$$404], JAM.policy.p3)) {
        v2557 = d$$471[e$$404];
      } else {
        var v9173 = d$$471;
        var v30930 = JAM.call(a$$819.apply, a$$819, [this, arguments], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          v2557 = v9173[e$$404] = v30930;
        }
      }
      return v2557;
    }
    var d$$471 = {};
    if (!c$$639) {
      c$$639 = b$$743.identity;
    }
    return v2057;
  }
  function v2056(a$$818) {
    function v2055(c$$638) {
      var v2558 = a$$818;
      var v30931 = JAM.call(b$$743.bind, b$$743, [a$$818[c$$638], a$$818], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v2558[c$$638] = v30931;
      }
      return;
    }
    var c$$637 = JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3);
    var v2559 = c$$637.length == 0;
    if (v2559) {
      c$$637 = JAM.call(b$$743.functions, b$$743, [a$$818], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [c$$637, v2055], JAM.policy.p3);
    return;
  }
  function v2054(a$$817, c$$636) {
    function v2053() {
      if (!(this instanceof d$$470)) {
        return JAM.call(a$$817.apply, a$$817, [c$$636, JAM.call(e$$403.concat, e$$403, [JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      }
      H$$4.prototype = a$$817.prototype;
      var b$$764 = new H$$4;
      var g$$229 = JAM.call(a$$817.apply, a$$817, [b$$764, JAM.call(e$$403.concat, e$$403, [JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      var v2563;
      if (Object(g$$229) === g$$229) {
        v2563 = g$$229;
      } else {
        v2563 = b$$764;
      }
      return v2563;
    }
    var d$$470;
    var e$$403;
    var v9182 = a$$817.bind === t$$32;
    if (v9182) {
      v9182 = t$$32;
    }
    if (v9182) {
      return JAM.call(t$$32.apply, t$$32, [a$$817, JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3);
    }
    if (!JAM.call(b$$743.isFunction, b$$743, [a$$817], JAM.policy.p3)) {
      throw new TypeError;
    }
    e$$403 = JAM.call(i$$238.call, i$$238, [arguments, 2], JAM.policy.p3);
    return d$$470 = v2053;
  }
  function v2052(a$$816, b$$763, d$$469) {
    if (arguments.length <= 1) {
      b$$763 = a$$816 || 0;
      a$$816 = 0;
    }
    var v2568 = arguments[2];
    if (!v2568) {
      v2568 = 1;
    }
    d$$469 = v2568;
    var e$$402 = JAM.call(Math.max, Math, [JAM.call(Math.ceil, Math, [(b$$763 - a$$816) / d$$469], JAM.policy.p3), 0], JAM.policy.p3);
    var f$$229 = 0;
    var g$$228 = Array(e$$402);
    var v2571 = f$$229 < e$$402;
    for (;v2571;) {
      var v2570 = f$$229;
      f$$229 = f$$229 + 1;
      g$$228[v2570] = a$$816;
      a$$816 = a$$816 + d$$469;
      v2571 = f$$229 < e$$402;
    }
    return g$$228;
  }
  function v2051(a$$815, b$$762) {
    if (a$$815 == null) {
      return -1;
    }
    var v9187 = F$$5;
    if (v9187) {
      v9187 = a$$815.lastIndexOf === F$$5;
    }
    if (v9187) {
      return JAM.call(a$$815.lastIndexOf, a$$815, [b$$762], JAM.policy.p3);
    }
    var d$$468 = a$$815.length;
    var v2575 = d$$468;
    d$$468 = d$$468 - 1;
    for (;v2575;) {
      var v9188 = d$$468 in a$$815;
      if (v9188) {
        v9188 = a$$815[d$$468] === b$$762;
      }
      if (v9188) {
        return d$$468;
      }
      v2575 = d$$468;
      d$$468 = d$$468 - 1;
    }
    return -1;
  }
  function v2050(a$$814, c$$635, d$$467) {
    if (a$$814 == null) {
      return -1;
    }
    var e$$401;
    if (d$$467) {
      d$$467 = JAM.call(b$$743.sortedIndex, b$$743, [a$$814, c$$635], JAM.policy.p3);
      var v2577;
      if (a$$814[d$$467] === c$$635) {
        v2577 = d$$467;
      } else {
        v2577 = -1;
      }
      return v2577;
    }
    var v9190 = q$$27;
    if (v9190) {
      v9190 = a$$814.indexOf === q$$27;
    }
    if (v9190) {
      return JAM.call(a$$814.indexOf, a$$814, [c$$635], JAM.policy.p3);
    }
    d$$467 = 0;
    e$$401 = a$$814.length;
    var v2580 = d$$467 < e$$401;
    for (;v2580;) {
      var v9191 = d$$467 in a$$814;
      if (v9191) {
        v9191 = a$$814[d$$467] === c$$635;
      }
      if (v9191) {
        return d$$467;
      }
      d$$467++;
      v2580 = d$$467 < e$$401;
    }
    return -1;
  }
  function v2049() {
    var a$$813 = JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3);
    var c$$634 = JAM.call(b$$743.max, b$$743, [JAM.call(b$$743.pluck, b$$743, [a$$813, "length"], JAM.policy.p3)], JAM.policy.p3);
    var d$$466 = Array(c$$634);
    var e$$400 = 0;
    var v2583 = e$$400 < c$$634;
    for (;v2583;) {
      var v30932 = JAM.call(b$$743.pluck, b$$743, [a$$813, "" + e$$400], JAM.policy.p3);
      d$$466[e$$400] = v30932;
      e$$400++;
      v2583 = e$$400 < c$$634;
    }
    return d$$466;
  }
  function v2048(a$$811) {
    function v2047(a$$812) {
      return !JAM.call(b$$743.include, b$$743, [c$$633, a$$812], JAM.policy.p3);
    }
    var c$$633 = JAM.call(b$$743.flatten, b$$743, [JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3), true], JAM.policy.p3);
    return JAM.call(b$$743.filter, b$$743, [a$$811, v2047], JAM.policy.p3);
  }
  function v2046(a$$809) {
    function v2045(a$$810) {
      function v2044(c$$632) {
        return JAM.call(b$$743.indexOf, b$$743, [c$$632, a$$810], JAM.policy.p3) >= 0;
      }
      return JAM.call(b$$743.every, b$$743, [c$$631, v2044], JAM.policy.p3);
    }
    var c$$631 = JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3);
    return JAM.call(b$$743.filter, b$$743, [JAM.call(b$$743.uniq, b$$743, [a$$809], JAM.policy.p3), v2045], JAM.policy.p3);
  }
  function v2043() {
    return JAM.call(b$$743.uniq, b$$743, [JAM.call(b$$743.flatten, b$$743, [arguments, true], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2042(a$$808, c$$630, d$$464) {
    function v2041(d$$465, g$$227, h$$190) {
      var v9192;
      if (c$$630) {
        var v15018 = JAM.call(b$$743.last, b$$743, [d$$465], JAM.policy.p3) !== g$$227;
        if (!v15018) {
          v15018 = !d$$465.length;
        }
        v9192 = v15018;
      } else {
        v9192 = !JAM.call(b$$743.include, b$$743, [d$$465, g$$227], JAM.policy.p3);
      }
      if (v9192) {
        JAM.call(d$$465.push, d$$465, [g$$227], JAM.policy.p3);
        JAM.call(e$$399.push, e$$399, [a$$808[h$$190]], JAM.policy.p3);
      }
      return d$$465;
    }
    var v2591;
    if (d$$464) {
      v2591 = JAM.call(b$$743.map, b$$743, [a$$808, d$$464], JAM.policy.p3);
    } else {
      v2591 = a$$808;
    }
    d$$464 = v2591;
    var e$$399 = [];
    var v2592 = a$$808.length < 3;
    if (v2592) {
      c$$630 = true;
    }
    JAM.call(b$$743.reduce, b$$743, [d$$464, v2041, []], JAM.policy.p3);
    return e$$399;
  }
  function v2040(a$$807) {
    return JAM.call(b$$743.difference, b$$743, [a$$807, JAM.call(i$$238.call, i$$238, [arguments, 1], JAM.policy.p3)], JAM.policy.p3);
  }
  function v2039(a$$805, c$$629) {
    function v2038(a$$806, e$$398) {
      if (JAM.call(b$$743.isArray, b$$743, [e$$398], JAM.policy.p3)) {
        var v9194;
        if (c$$629) {
          v9194 = e$$398;
        } else {
          v9194 = JAM.call(b$$743.flatten, b$$743, [e$$398], JAM.policy.p3);
        }
        return JAM.call(a$$806.concat, a$$806, [v9194], JAM.policy.p3);
      }
      var v2596 = a$$806.length;
      introspect(JAM.policy.p2) {
        a$$806[v2596] = e$$398;
      }
      return a$$806;
    }
    return JAM.call(b$$743.reduce, b$$743, [a$$805, v2038, []], JAM.policy.p3);
  }
  function v2037(a$$803) {
    function v2036(a$$804) {
      return !!a$$804;
    }
    return JAM.call(b$$743.filter, b$$743, [a$$803, v2036], JAM.policy.p3);
  }
  function v2035(a$$802, b$$761, d$$463) {
    var v9195;
    var v20915 = b$$761 == null;
    if (!v20915) {
      v20915 = d$$463;
    }
    if (v20915) {
      v9195 = 1;
    } else {
      v9195 = b$$761;
    }
    return JAM.call(i$$238.call, i$$238, [a$$802, v9195], JAM.policy.p3);
  }
  function v2034(a$$801, b$$760, d$$462) {
    var v2599;
    var v15021 = b$$760 != null;
    if (v15021) {
      v15021 = !d$$462;
    }
    if (v15021) {
      v2599 = JAM.call(i$$238.call, i$$238, [a$$801, JAM.call(Math.max, Math, [a$$801.length - b$$760, 0], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v2599 = a$$801[a$$801.length - 1];
    }
    return v2599;
  }
  function v2033(a$$800, b$$759, d$$461) {
    var v9199 = a$$800.length;
    var v15024;
    var v24057 = b$$759 == null;
    if (!v24057) {
      v24057 = d$$461;
    }
    if (v24057) {
      v15024 = 1;
    } else {
      v15024 = b$$759;
    }
    return JAM.call(i$$238.call, i$$238, [a$$800, 0, v9199 - v15024], JAM.policy.p3);
  }
  function v2032(a$$799, b$$758, d$$460) {
    var v2601;
    var v15025 = b$$758 != null;
    if (v15025) {
      v15025 = !d$$460;
    }
    if (v15025) {
      v2601 = JAM.call(i$$238.call, i$$238, [a$$799, 0, b$$758], JAM.policy.p3);
    } else {
      v2601 = a$$799[0];
    }
    return v2601;
  }
  function v2031(a$$798) {
    var v2602;
    if (JAM.call(b$$743.isArray, b$$743, [a$$798], JAM.policy.p3)) {
      v2602 = a$$798.length;
    } else {
      v2602 = JAM.call(b$$743.keys, b$$743, [a$$798], JAM.policy.p3).length;
    }
    return v2602;
  }
  function v2030(a$$797) {
    var v2603;
    if (!a$$797) {
      v2603 = [];
    } else {
      var v9204;
      var v20918 = JAM.call(b$$743.isArray, b$$743, [a$$797], JAM.policy.p3);
      if (!v20918) {
        v20918 = JAM.call(b$$743.isArguments, b$$743, [a$$797], JAM.policy.p3);
      }
      if (v20918) {
        v9204 = JAM.call(i$$238.call, i$$238, [a$$797], JAM.policy.p3);
      } else {
        var v15026;
        var v24059 = a$$797.toArray;
        if (v24059) {
          v24059 = JAM.call(b$$743.isFunction, b$$743, [a$$797.toArray], JAM.policy.p3);
        }
        if (v24059) {
          v15026 = JAM.call(a$$797.toArray, a$$797, [], JAM.policy.p3);
        } else {
          v15026 = JAM.call(b$$743.values, b$$743, [a$$797], JAM.policy.p3);
        }
        v9204 = v15026;
      }
      v2603 = v9204;
    }
    return v2603;
  }
  function v2029(a$$796, c$$628) {
    var d$$459;
    if (!d$$459) {
      d$$459 = b$$743.identity;
    }
    var e$$397 = 0;
    var f$$228 = a$$796.length;
    var v2606 = e$$397 < f$$228;
    for (;v2606;) {
      var g$$226 = e$$397 + f$$228 >> 1;
      var v2605;
      if (JAM.call(d$$459, null, [a$$796[g$$226]], JAM.policy.p3) < JAM.call(d$$459, null, [c$$628], JAM.policy.p3)) {
        v2605 = e$$397 = g$$226 + 1;
      } else {
        v2605 = f$$228 = g$$226;
      }
      v2605;
      v2606 = e$$397 < f$$228;
    }
    return e$$397;
  }
  function v2028(a$$793, c$$626) {
    function v2027(a$$795, b$$757) {
      var c$$627 = JAM.call(e$$396, null, [a$$795, b$$757], JAM.policy.p3);
      var v9208 = d$$458[c$$627];
      if (!v9208) {
        introspect(JAM.policy.p2) {
          v9208 = d$$458[c$$627] = [];
        }
      }
      var v2607 = v9208;
      JAM.call(v2607.push, v2607, [a$$795], JAM.policy.p3);
      return;
    }
    function v2026(a$$794) {
      return a$$794[c$$626];
    }
    var d$$458 = {};
    var v2608;
    if (JAM.call(b$$743.isFunction, b$$743, [c$$626], JAM.policy.p3)) {
      v2608 = c$$626;
    } else {
      v2608 = v2026;
    }
    var e$$396 = v2608;
    JAM.call(j$$125, null, [a$$793, v2027], JAM.policy.p3);
    return d$$458;
  }
  function v2025(a$$789) {
    function v2024(a$$792, b$$756) {
      var c$$625 = a$$792.criteria;
      var d$$457 = b$$756.criteria;
      var v2609;
      if (c$$625 === void 0) {
        v2609 = 1;
      } else {
        var v9210;
        if (d$$457 === void 0) {
          v9210 = -1;
        } else {
          var v15032;
          if (c$$625 < d$$457) {
            v15032 = -1;
          } else {
            var v20922;
            if (c$$625 > d$$457) {
              v20922 = 1;
            } else {
              v20922 = 0;
            }
            v15032 = v20922;
          }
          v9210 = v15032;
        }
        v2609 = v9210;
      }
      return v2609;
    }
    function v2023(a$$791, b$$755, c$$624) {
      return {value:a$$791, criteria:JAM.call(e$$395.call, e$$395, [d$$456, a$$791, b$$755, c$$624], JAM.policy.p3)};
    }
    function v2022(a$$790) {
      return a$$790[c$$623];
    }
    var c$$623;
    var d$$456;
    var v2611;
    if (JAM.call(b$$743.isFunction, b$$743, [c$$623], JAM.policy.p3)) {
      v2611 = c$$623;
    } else {
      v2611 = v2022;
    }
    var e$$395 = v2611;
    var v9213 = JAM.call(b$$743.map, b$$743, [a$$789, v2023], JAM.policy.p3);
    return JAM.call(b$$743.pluck, b$$743, [JAM.call(v9213.sort, v9213, [v2024], JAM.policy.p3), "value"], JAM.policy.p3);
  }
  function v2021(a$$787) {
    function v2020(a$$788, f$$227) {
      d$$455 = JAM.call(Math.floor, Math, [JAM.call(Math.random, Math, [], JAM.policy.p3) * (f$$227 + 1)], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        b$$754[f$$227] = b$$754[d$$455];
      }
      b$$754[d$$455] = a$$788;
      return;
    }
    var b$$754 = [];
    var d$$455;
    JAM.call(j$$125, null, [a$$787, v2020], JAM.policy.p3);
    return b$$754;
  }
  function v2019(a$$785, c$$622, d$$454) {
    function v2018(a$$786, b$$753, h$$189) {
      var v2614;
      if (c$$622) {
        v2614 = JAM.call(c$$622.call, c$$622, [d$$454, a$$786, b$$753, h$$189], JAM.policy.p3);
      } else {
        v2614 = a$$786;
      }
      b$$753 = v2614;
      var v2615 = b$$753 < e$$394.computed;
      if (v2615) {
        e$$394 = {value:a$$786, computed:b$$753};
      }
      return;
    }
    var v15034 = !c$$622;
    if (v15034) {
      v15034 = JAM.call(b$$743.isArray, b$$743, [a$$785], JAM.policy.p3);
    }
    var v9217 = v15034;
    if (v9217) {
      v9217 = a$$785[0] === +a$$785[0];
    }
    if (v9217) {
      var v2616 = Math.min;
      return JAM.call(v2616.apply, v2616, [Math, a$$785], JAM.policy.p3);
    }
    var v9218 = !c$$622;
    if (v9218) {
      v9218 = JAM.call(b$$743.isEmpty, b$$743, [a$$785], JAM.policy.p3);
    }
    if (v9218) {
      return Infinity;
    }
    var e$$394 = {computed:Infinity};
    JAM.call(j$$125, null, [a$$785, v2018], JAM.policy.p3);
    return e$$394.value;
  }
  function v2017(a$$783, c$$621, d$$453) {
    function v2016(a$$784, b$$752, h$$188) {
      var v2619;
      if (c$$621) {
        v2619 = JAM.call(c$$621.call, c$$621, [d$$453, a$$784, b$$752, h$$188], JAM.policy.p3);
      } else {
        v2619 = a$$784;
      }
      b$$752 = v2619;
      var v2620 = b$$752 >= e$$393.computed;
      if (v2620) {
        e$$393 = {value:a$$784, computed:b$$752};
      }
      return;
    }
    var v15037 = !c$$621;
    if (v15037) {
      v15037 = JAM.call(b$$743.isArray, b$$743, [a$$783], JAM.policy.p3);
    }
    var v9220 = v15037;
    if (v9220) {
      v9220 = a$$783[0] === +a$$783[0];
    }
    if (v9220) {
      var v2621 = Math.max;
      return JAM.call(v2621.apply, v2621, [Math, a$$783], JAM.policy.p3);
    }
    var v9221 = !c$$621;
    if (v9221) {
      v9221 = JAM.call(b$$743.isEmpty, b$$743, [a$$783], JAM.policy.p3);
    }
    if (v9221) {
      return -Infinity;
    }
    var e$$393 = {computed:-Infinity};
    JAM.call(j$$125, null, [a$$783, v2016], JAM.policy.p3);
    return e$$393.value;
  }
  function v2015(a$$781, c$$620) {
    function v2014(a$$782) {
      return a$$782[c$$620];
    }
    return JAM.call(b$$743.map, b$$743, [a$$781, v2014], JAM.policy.p3);
  }
  function v2013(a$$779, c$$619) {
    function v2012(a$$780) {
      var v9222;
      if (JAM.call(b$$743.isFunction, b$$743, [c$$619], JAM.policy.p3)) {
        v9222 = c$$619 || a$$780;
      } else {
        v9222 = a$$780[c$$619];
      }
      var v2625 = v9222;
      return JAM.call(v2625.apply, v2625, [a$$780, d$$452], JAM.policy.p3);
    }
    var d$$452 = JAM.call(i$$238.call, i$$238, [arguments, 2], JAM.policy.p3);
    return JAM.call(b$$743.map, b$$743, [a$$779, v2012], JAM.policy.p3);
  }
  function v2011(a$$777, c$$618) {
    function v2010(a$$778) {
      return a$$778 === c$$618;
    }
    var b$$751 = false;
    if (a$$777 == null) {
      return b$$751;
    }
    var v9223 = q$$27;
    if (v9223) {
      v9223 = a$$777.indexOf === q$$27;
    }
    if (v9223) {
      return JAM.call(a$$777.indexOf, a$$777, [c$$618], JAM.policy.p3) != -1;
    }
    return b$$751 = JAM.call(G$$4, null, [a$$777, v2010], JAM.policy.p3);
  }
  function v2009(a$$775, c$$617, d$$451) {
    function v2008(a$$776, b$$750, h$$187) {
      var v9224 = e$$392;
      if (!v9224) {
        v9224 = e$$392 = JAM.call(c$$617.call, c$$617, [d$$451, a$$776, b$$750, h$$187], JAM.policy.p3);
      }
      if (v9224) {
        return o$$41;
      }
      return;
    }
    if (!c$$617) {
      c$$617 = b$$743.identity;
    }
    var e$$392 = false;
    if (a$$775 == null) {
      return e$$392;
    }
    var v9226 = E$$5;
    if (v9226) {
      v9226 = a$$775.some === E$$5;
    }
    if (v9226) {
      return JAM.call(a$$775.some, a$$775, [c$$617, d$$451], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$775, v2008], JAM.policy.p3);
    return !!e$$392;
  }
  function v2007(a$$773, c$$616, b$$749) {
    function v2006(a$$774, g$$225, h$$186) {
      var v15044 = e$$391;
      if (v15044) {
        v15044 = JAM.call(c$$616.call, c$$616, [b$$749, a$$774, g$$225, h$$186], JAM.policy.p3);
      }
      if (!(e$$391 = v15044)) {
        return o$$41;
      }
      return;
    }
    var e$$391 = true;
    if (a$$773 == null) {
      return e$$391;
    }
    var v9228 = D$$5;
    if (v9228) {
      v9228 = a$$773.every === D$$5;
    }
    if (v9228) {
      return JAM.call(a$$773.every, a$$773, [c$$616, b$$749], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$773, v2006], JAM.policy.p3);
    return !!e$$391;
  }
  function v2005(a$$771, c$$615, b$$748) {
    function v2004(a$$772, g$$224, h$$185) {
      var v2637 = JAM.call(c$$615.call, c$$615, [b$$748, a$$772, g$$224, h$$185], JAM.policy.p3);
      if (!v2637) {
        e$$390[e$$390.length] = a$$772;
      }
      return;
    }
    var e$$390 = [];
    if (a$$771 == null) {
      return e$$390;
    }
    JAM.call(j$$125, null, [a$$771, v2004], JAM.policy.p3);
    return e$$390;
  }
  function v2003(a$$769, c$$614, b$$747) {
    function v2002(a$$770, g$$223, h$$184) {
      var v2639 = JAM.call(c$$614.call, c$$614, [b$$747, a$$770, g$$223, h$$184], JAM.policy.p3);
      if (v2639) {
        e$$389[e$$389.length] = a$$770;
      }
      return;
    }
    var e$$389 = [];
    if (a$$769 == null) {
      return e$$389;
    }
    var v9232 = C$$5;
    if (v9232) {
      v9232 = a$$769.filter === C$$5;
    }
    if (v9232) {
      return JAM.call(a$$769.filter, a$$769, [c$$614, b$$747], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$769, v2002], JAM.policy.p3);
    return e$$389;
  }
  function v2001(a$$767, c$$613, b$$746) {
    function v2000(a$$768, g$$222, h$$183) {
      if (JAM.call(c$$613.call, c$$613, [b$$746, a$$768, g$$222, h$$183], JAM.policy.p3)) {
        e$$388 = a$$768;
        return true;
      }
      return;
    }
    var e$$388;
    JAM.call(G$$4, null, [a$$767, v2000], JAM.policy.p3);
    return e$$388;
  }
  function v1999(a$$766, c$$612, d$$450, e$$387) {
    var f$$226 = arguments.length > 2;
    var v2644 = a$$766 == null;
    if (v2644) {
      a$$766 = [];
    }
    var v9233 = B$$6;
    if (v9233) {
      v9233 = a$$766.reduceRight === B$$6;
    }
    if (v9233) {
      if (e$$387) {
        c$$612 = JAM.call(b$$743.bind, b$$743, [c$$612, e$$387], JAM.policy.p3);
      }
      var v2645;
      if (f$$226) {
        v2645 = JAM.call(a$$766.reduceRight, a$$766, [c$$612, d$$450], JAM.policy.p3);
      } else {
        v2645 = JAM.call(a$$766.reduceRight, a$$766, [c$$612], JAM.policy.p3);
      }
      return v2645;
    }
    var v2647 = JAM.call(b$$743.toArray, b$$743, [a$$766], JAM.policy.p3);
    var g$$221 = JAM.call(v2647.reverse, v2647, [], JAM.policy.p3);
    var v9234 = e$$387;
    if (v9234) {
      v9234 = !f$$226;
    }
    var v2648 = v9234;
    if (v2648) {
      c$$612 = JAM.call(b$$743.bind, b$$743, [c$$612, e$$387], JAM.policy.p3);
    }
    var v2649;
    if (f$$226) {
      v2649 = JAM.call(b$$743.reduce, b$$743, [g$$221, c$$612, d$$450, e$$387], JAM.policy.p3);
    } else {
      v2649 = JAM.call(b$$743.reduce, b$$743, [g$$221, c$$612], JAM.policy.p3);
    }
    return v2649;
  }
  function v1998(a$$764, c$$611, d$$449, e$$386) {
    function v1997(a$$765, b$$745, i$$239) {
      if (f$$225) {
        d$$449 = JAM.call(c$$611.call, c$$611, [e$$386, d$$449, a$$765, b$$745, i$$239], JAM.policy.p3);
      } else {
        d$$449 = a$$765;
        f$$225 = true;
      }
      return;
    }
    var f$$225 = arguments.length > 2;
    var v2651 = a$$764 == null;
    if (v2651) {
      a$$764 = [];
    }
    var v9235 = A$$6;
    if (v9235) {
      v9235 = a$$764.reduce === A$$6;
    }
    if (v9235) {
      if (e$$386) {
        c$$611 = JAM.call(b$$743.bind, b$$743, [c$$611, e$$386], JAM.policy.p3);
      }
      var v2652;
      if (f$$225) {
        v2652 = JAM.call(a$$764.reduce, a$$764, [c$$611, d$$449], JAM.policy.p3);
      } else {
        v2652 = JAM.call(a$$764.reduce, a$$764, [c$$611], JAM.policy.p3);
      }
      return v2652;
    }
    JAM.call(j$$125, null, [a$$764, v1997], JAM.policy.p3);
    if (!f$$225) {
      throw new TypeError("Reduce of empty array with no initial value");
    }
    return d$$449;
  }
  function v1996(a$$762, c$$610, b$$744) {
    function v1995(a$$763, g$$220, h$$182) {
      var v2655 = e$$385;
      var v2656 = e$$385.length;
      var v30933 = JAM.call(c$$610.call, c$$610, [b$$744, a$$763, g$$220, h$$182], JAM.policy.p3);
      v2655[v2656] = v30933;
      return;
    }
    var e$$385 = [];
    if (a$$762 == null) {
      return e$$385;
    }
    var v9236 = z$$10;
    if (v9236) {
      v9236 = a$$762.map === z$$10;
    }
    if (v9236) {
      return JAM.call(a$$762.map, a$$762, [c$$610, b$$744], JAM.policy.p3);
    }
    JAM.call(j$$125, null, [a$$762, v1995], JAM.policy.p3);
    if (a$$762.length === +a$$762.length) {
      e$$385.length = a$$762.length;
    }
    return e$$385;
  }
  function v1994(a$$761, c$$609, d$$448) {
    if (a$$761 != null) {
      var v9239 = y$$56;
      if (v9239) {
        v9239 = a$$761.forEach === y$$56;
      }
      if (v9239) {
        JAM.call(a$$761.forEach, a$$761, [c$$609, d$$448], JAM.policy.p3);
      } else {
        if (a$$761.length === +a$$761.length) {
          var e$$384 = 0;
          var f$$224 = a$$761.length;
          var v2661 = e$$384 < f$$224;
          for (;v2661;) {
            var v9242 = e$$384 in a$$761;
            if (v9242) {
              v9242 = JAM.call(c$$609.call, c$$609, [d$$448, a$$761[e$$384], e$$384, a$$761], JAM.policy.p3) === o$$41;
            }
            if (v9242) {
              break;
            }
            e$$384++;
            v2661 = e$$384 < f$$224;
          }
        } else {
          for (e$$384 in a$$761) {
            var v9243 = JAM.call(b$$743.has, b$$743, [a$$761, e$$384], JAM.policy.p3);
            if (v9243) {
              v9243 = JAM.call(c$$609.call, c$$609, [d$$448, a$$761[e$$384], e$$384, a$$761], JAM.policy.p3) === o$$41;
            }
            if (v9243) {
              break;
            }
          }
        }
      }
    }
    return;
  }
  function M$$3(a$$871, c$$649) {
    function v1992() {
      var a$$872 = JAM.call(i$$238.call, i$$238, [arguments], JAM.policy.p3);
      JAM.call(J$$4.call, J$$4, [a$$872, this._wrapped], JAM.policy.p3);
      return x$$76(JAM.call(c$$649.apply, c$$649, [b$$743, a$$872], JAM.policy.p3), this._chain);
    }
    var v2669 = m$$63.prototype;
    introspect(JAM.policy.p2) {
      v2669[a$$871] = v1992;
    }
    return;
  }
  function x$$76(a$$870, c$$648) {
    var v2670;
    if (c$$648) {
      var v9244 = b$$743(a$$870);
      v2670 = JAM.call(v9244.chain, v9244, [], JAM.policy.p3);
    } else {
      v2670 = a$$870;
    }
    return v2670;
  }
  function m$$63(a$$869) {
    this._wrapped = a$$869;
    return;
  }
  function w$$20(a$$860) {
    function v1993(a$$861, b$$779) {
      return n$$109[b$$779];
    }
    return JAM.call(a$$860.replace, a$$860, [P$$3, v1993], JAM.policy.p3);
  }
  function H$$4() {
    return;
  }
  function b$$743(a$$760) {
    return new m$$63(a$$760);
  }
  function r$$31(a$$759, c$$608, d$$447) {
    if (a$$759 === c$$608) {
      var v2671 = 0 !== a$$759;
      if (!v2671) {
        v2671 = 1 / a$$759 == 1 / c$$608;
      }
      return v2671;
    }
    var v9248 = null == a$$759;
    if (!v9248) {
      v9248 = null == c$$608;
    }
    if (v9248) {
      return a$$759 === c$$608;
    }
    var v2674 = a$$759._chain;
    if (v2674) {
      a$$759 = a$$759._wrapped;
    }
    var v2675 = c$$608._chain;
    if (v2675) {
      c$$608 = c$$608._wrapped;
    }
    var v9249 = a$$759.isEqual;
    if (v9249) {
      v9249 = JAM.call(b$$743.isFunction, b$$743, [a$$759.isEqual], JAM.policy.p3);
    }
    if (v9249) {
      return JAM.call(a$$759.isEqual, a$$759, [c$$608], JAM.policy.p3);
    }
    var v9250 = c$$608.isEqual;
    if (v9250) {
      v9250 = JAM.call(b$$743.isFunction, b$$743, [c$$608.isEqual], JAM.policy.p3);
    }
    if (v9250) {
      return JAM.call(c$$608.isEqual, c$$608, [a$$759], JAM.policy.p3);
    }
    var e$$383 = JAM.call(l$$96.call, l$$96, [a$$759], JAM.policy.p3);
    if (e$$383 != JAM.call(l$$96.call, l$$96, [c$$608], JAM.policy.p3)) {
      return !1;
    }
    switch(e$$383) {
      case "[object String]":
        return a$$759 == "" + c$$608;
      case "[object Number]":
        var v2680;
        if (a$$759 != +a$$759) {
          v2680 = c$$608 != +c$$608;
        } else {
          var v9253;
          if (0 == a$$759) {
            v9253 = 1 / a$$759 == 1 / c$$608;
          } else {
            v9253 = a$$759 == +c$$608;
          }
          v2680 = v9253;
        }
        return v2680;
      case "[object Date]":
      ;
      case "[object Boolean]":
        return +a$$759 == +c$$608;
      case "[object RegExp]":
        var v15063 = a$$759.source == c$$608.source;
        if (v15063) {
          v15063 = a$$759.global == c$$608.global;
        }
        var v9255 = v15063;
        if (v9255) {
          v9255 = a$$759.multiline == c$$608.multiline;
        }
        var v2683 = v9255;
        if (v2683) {
          v2683 = a$$759.ignoreCase == c$$608.ignoreCase;
        }
        return v2683;
    }
    var v9258 = "object" != typeof a$$759;
    if (!v9258) {
      v9258 = "object" != typeof c$$608;
    }
    if (v9258) {
      return !1;
    }
    var f$$223 = d$$447.length;
    var v2686 = f$$223;
    f$$223 = f$$223 - 1;
    for (;v2686;) {
      if (d$$447[f$$223] == a$$759) {
        return !0;
      }
      v2686 = f$$223;
      f$$223 = f$$223 - 1;
    }
    JAM.call(d$$447.push, d$$447, [a$$759], JAM.policy.p3);
    f$$223 = 0;
    var g$$219 = !0;
    if ("[object Array]" == e$$383) {
      f$$223 = a$$759.length;
      if (g$$219 = f$$223 == c$$608.length) {
        var v9260 = f$$223;
        f$$223 = f$$223 - 1;
        if (v9260) {
          var v15070 = f$$223 in a$$759 == f$$223 in c$$608;
          if (v15070) {
            v15070 = r$$31(a$$759[f$$223], c$$608[f$$223], d$$447);
          }
          v9260 = g$$219 = v15070;
        }
        var v2687 = v9260;
        for (;v2687;) {
          var v9261 = f$$223;
          f$$223 = f$$223 - 1;
          if (v9261) {
            var v15071 = f$$223 in a$$759 == f$$223 in c$$608;
            if (v15071) {
              v15071 = r$$31(a$$759[f$$223], c$$608[f$$223], d$$447);
            }
            v9261 = g$$219 = v15071;
          }
          v2687 = v9261;
        }
      }
    } else {
      var v9262 = "constructor" in a$$759 != "constructor" in c$$608;
      if (!v9262) {
        v9262 = a$$759.constructor != c$$608.constructor;
      }
      if (v9262) {
        return !1;
      }
      var h$$181;
      for (h$$181 in a$$759) {
        var v9263 = JAM.call(b$$743.has, b$$743, [a$$759, h$$181], JAM.policy.p3);
        if (v9263) {
          f$$223++;
          var v24061 = JAM.call(b$$743.has, b$$743, [c$$608, h$$181], JAM.policy.p3);
          if (v24061) {
            v24061 = r$$31(a$$759[h$$181], c$$608[h$$181], d$$447);
          }
          v9263 = !(g$$219 = v24061);
        }
        if (v9263) {
          break;
        }
      }
      if (g$$219) {
        for (h$$181 in c$$608) {
          var v9264 = JAM.call(b$$743.has, b$$743, [c$$608, h$$181], JAM.policy.p3);
          if (v9264) {
            var v15077 = f$$223;
            f$$223 = f$$223 - 1;
            v9264 = !v15077;
          }
          if (v9264) {
            break;
          }
        }
        g$$219 = !f$$223;
      }
    }
    JAM.call(d$$447.pop, d$$447, [], JAM.policy.p3);
    return g$$219;
  }
  var s$$35 = this;
  var I$$4 = s$$35._;
  var o$$41 = {};
  var k$$92 = Array.prototype;
  var p$$60 = Object.prototype;
  var i$$238 = k$$92.slice;
  var J$$4 = k$$92.unshift;
  var l$$96 = p$$60.toString;
  var K$$3 = p$$60.hasOwnProperty;
  var y$$56 = k$$92.forEach;
  var z$$10 = k$$92.map;
  var A$$6 = k$$92.reduce;
  var B$$6 = k$$92.reduceRight;
  var C$$5 = k$$92.filter;
  var D$$5 = k$$92.every;
  var E$$5 = k$$92.some;
  var q$$27 = k$$92.indexOf;
  var F$$5 = k$$92.lastIndexOf;
  p$$60 = Array.isArray;
  var L$$3 = Object.keys;
  var t$$32 = Function.prototype.bind;
  var v2694;
  if ("undefined" !== typeof exports) {
    var v20941 = "undefined" !== typeof module;
    if (v20941) {
      v20941 = module.exports;
    }
    var v15079 = v20941;
    if (v15079) {
      exports = module.exports = b$$743;
    }
    v2694 = exports._ = b$$743;
  } else {
    v2694 = s$$35._ = b$$743;
  }
  v2694;
  b$$743.VERSION = "1.3.3";
  var j$$125 = b$$743.each = b$$743.forEach = v1994;
  b$$743.map = b$$743.collect = v1996;
  b$$743.reduce = b$$743.foldl = b$$743.inject = v1998;
  b$$743.reduceRight = b$$743.foldr = v1999;
  b$$743.find = b$$743.detect = v2001;
  b$$743.filter = b$$743.select = v2003;
  b$$743.reject = v2005;
  b$$743.every = b$$743.all = v2007;
  var G$$4 = b$$743.some = b$$743.any = v2009;
  b$$743.include = b$$743.contains = v2011;
  b$$743.invoke = v2013;
  b$$743.pluck = v2015;
  b$$743.max = v2017;
  b$$743.min = v2019;
  b$$743.shuffle = v2021;
  b$$743.sortBy = v2025;
  b$$743.groupBy = v2028;
  b$$743.sortedIndex = v2029;
  b$$743.toArray = v2030;
  b$$743.size = v2031;
  b$$743.first = b$$743.head = b$$743.take = v2032;
  b$$743.initial = v2033;
  b$$743.last = v2034;
  b$$743.rest = b$$743.tail = v2035;
  b$$743.compact = v2037;
  b$$743.flatten = v2039;
  b$$743.without = v2040;
  b$$743.uniq = b$$743.unique = v2042;
  b$$743.union = v2043;
  b$$743.intersection = b$$743.intersect = v2046;
  b$$743.difference = v2048;
  b$$743.zip = v2049;
  b$$743.indexOf = v2050;
  b$$743.lastIndexOf = v2051;
  b$$743.range = v2052;
  b$$743.bind = v2054;
  b$$743.bindAll = v2056;
  b$$743.memoize = v2058;
  b$$743.delay = v2060;
  b$$743.defer = v2061;
  b$$743.throttle = v2065;
  b$$743.debounce = v2068;
  b$$743.once = v2070;
  b$$743.wrap = v2072;
  b$$743.compose = v2074;
  b$$743.after = v2076;
  b$$743.keys = L$$3 || v2077;
  b$$743.values = v2078;
  b$$743.functions = b$$743.methods = v2079;
  b$$743.extend = v2081;
  b$$743.pick = v2083;
  b$$743.defaults = v2085;
  b$$743.clone = v2086;
  b$$743.tap = v2087;
  b$$743.isEqual = v2088;
  b$$743.isEmpty = v2089;
  b$$743.isElement = v2090;
  b$$743.isArray = p$$60 || v2091;
  b$$743.isObject = v2092;
  b$$743.isArguments = v2093;
  var v2695 = JAM.call(b$$743.isArguments, b$$743, [arguments], JAM.policy.p3);
  if (!v2695) {
    b$$743.isArguments = v2094;
  }
  b$$743.isFunction = v2095;
  b$$743.isString = v2096;
  b$$743.isNumber = v2097;
  b$$743.isFinite = v2098;
  b$$743.isNaN = v2099;
  b$$743.isBoolean = v2100;
  b$$743.isDate = v2101;
  b$$743.isRegExp = v2102;
  b$$743.isNull = v2103;
  b$$743.isUndefined = v2104;
  b$$743.has = v2105;
  b$$743.noConflict = v2106;
  b$$743.identity = v2107;
  b$$743.times = v2108;
  b$$743.escape = v2109;
  b$$743.result = v2110;
  b$$743.mixin = v2112;
  var N$$3 = 0;
  b$$743.uniqueId = v2113;
  b$$743.templateSettings = {evaluate:/<%([\s\S]+?)%>/g, interpolate:/<%=([\s\S]+?)%>/g, escape:/<%-([\s\S]+?)%>/g};
  var u$$19 = /.^/;
  var n$$109 = {"\\":"\\", "'":"'", r:"\r", n:"\n", t:"\t", u2028:"\u2028", u2029:"\u2029"};
  var v$$14;
  for (v$$14 in n$$109) {
    var v2696 = n$$109[v$$14];
    introspect(JAM.policy.p2) {
      n$$109[v2696] = v$$14;
    }
  }
  var O$$3 = /\\|'|\r|\n|\t|\u2028|\u2029/g;
  var P$$3 = /\\(\\|'|r|n|t|u2028|u2029)/g;
  b$$743.template = v2119;
  b$$743.chain = v2120;
  b$$743.prototype = m$$63.prototype;
  JAM.call(b$$743.mixin, b$$743, [b$$743], JAM.policy.p3);
  JAM.call(j$$125, null, [JAM.call("pop,push,reverse,shift,sort,splice,unshift".split, "pop,push,reverse,shift,sort,splice,unshift", [","], JAM.policy.p3), v2122], JAM.policy.p3);
  JAM.call(j$$125, null, [["concat", "join", "slice"], v2124], JAM.policy.p3);
  m$$63.prototype.chain = v2125;
  m$$63.prototype.value = v2126;
  return;
}
function v1991() {
  function v1990(a$$758) {
    var b$$742 = null;
    try {
      var v9267;
      if (document.all) {
        v9267 = new ActiveXObject("Microsoft.XMLDOM");
      } else {
        v9267 = new DOMParser;
      }
      b$$742 = v9267;
      b$$742.async = !1;
    } catch (f$$222) {
      throw Error("XML Parser could not be instantiated");
    }
    var k$$91;
    try {
      var v2701;
      if (document.all) {
        var v9268;
        if (JAM.call(b$$742.loadXML, b$$742, [a$$758], JAM.policy.p3)) {
          v9268 = b$$742;
        } else {
          v9268 = !1;
        }
        v2701 = v9268;
      } else {
        v2701 = JAM.call(b$$742.parseFromString, b$$742, [a$$758, "text/xml"], JAM.policy.p3);
      }
      k$$91 = v2701;
    } catch (l$$95) {
      throw Error("Error parsing XML string");
    }
    return k$$91;
  }
  function v1989(c$$589) {
    function v1988(a$$757, b$$741) {
      var c$$607;
      var e$$382;
      var f$$221;
      var m$$61 = "";
      if (!b$$741) {
        return;
      }
      var v2703 = b$$741.attributes.length > 0;
      if (v2703) {
        JAM.call(l$$92, null, [a$$757, b$$741], JAM.policy.p3);
      }
      a$$757.Text = "";
      if (JAM.call(b$$741.hasChildNodes, b$$741, [], JAM.policy.p3)) {
        var o$$40 = b$$741.childNodes.length - 1;
        var q$$26 = 0;
        var v9272 = q$$26;
        q$$26 = q$$26 + 1;
        var v2714 = v9272 < o$$40;
        do {
          e$$382 = b$$741.childNodes[q$$26];
          switch(e$$382.nodeType) {
            case 1:
              a$$757._children = [];
              var v2705;
              if (e$$382.localName) {
                v2705 = e$$382.localName;
              } else {
                v2705 = e$$382.baseName;
              }
              c$$607 = v2705;
              var v2706 = String(c$$607);
              c$$607 = JAM.call(v2706.replace, v2706, [/-/g, "_"], JAM.policy.p3);
              var v2707 = m$$61 != c$$607;
              if (v2707) {
                var v9274 = a$$757._children;
                JAM.call(v9274.push, v9274, [c$$607], JAM.policy.p3);
              }
              var v2708 = a$$757[c$$607];
              if (!v2708) {
                introspect(JAM.policy.p2) {
                  a$$757[c$$607] = [];
                }
              }
              f$$221 = {};
              var v2709 = a$$757[c$$607];
              JAM.call(v2709.push, v2709, [f$$221], JAM.policy.p3);
              var v2710 = e$$382.attributes.length > 0;
              if (v2710) {
                JAM.call(l$$92, null, [f$$221, e$$382], JAM.policy.p3);
              }
              var v2711 = a$$757[c$$607].contains;
              if (!v2711) {
                JAM.call(p$$59, null, [a$$757[c$$607]], JAM.policy.p3);
              }
              m$$61 = c$$607;
              var v2712 = JAM.call(e$$382.hasChildNodes, e$$382, [], JAM.policy.p3);
              if (v2712) {
                JAM.call(g$$212, null, [f$$221, e$$382], JAM.policy.p3);
              }
              break;
            case 3:
              a$$757.Text = a$$757.Text + JAM.call(k$$87, null, [e$$382.nodeValue], JAM.policy.p3);
              break;
            case 4:
              var v9282 = a$$757.Text;
              var v15086;
              if (e$$382.text) {
                v15086 = JAM.call(k$$87, null, [e$$382.text], JAM.policy.p3);
              } else {
                v15086 = JAM.call(k$$87, null, [e$$382.nodeValue], JAM.policy.p3);
              }
              a$$757.Text = v9282 + v15086;
          }
          var v9284 = q$$26;
          q$$26 = q$$26 + 1;
          v2714 = v9284 < o$$40;
        } while (v2714);
      }
      return;
    }
    function v1987(b$$731) {
      function v1986(b$$739, d$$445) {
        function v1985(a$$756, f$$220) {
          var g$$218 = 0;
          var k$$90;
          var l$$94;
          k$$90 = JAM.call(c$$605, null, [a$$756, b$$739], JAM.policy.p3);
          l$$94 = JAM.call(c$$605, null, [f$$220, b$$739], JAM.policy.p3);
          var v2716;
          if (k$$90 < l$$94) {
            v2716 = g$$218 = -1;
          } else {
            var v9285 = l$$94 < k$$90;
            if (v9285) {
              v9285 = g$$218 = 1;
            }
            v2716 = v9285;
          }
          v2716;
          if (d$$445) {
            var v9287;
            if (JAM.call(d$$445.toUpperCase, d$$445, [], JAM.policy.p3) == "DESC") {
              v9287 = 0 - g$$218;
            } else {
              v9287 = g$$218;
            }
            g$$218 = v9287;
          }
          return g$$218;
        }
        function v1984(b$$740, d$$446) {
          var c$$606 = b$$740[d$$446][0].Text;
          var v2718;
          if (a$$740(c$$606)) {
            v2718 = parseFloat(c$$606);
          } else {
            v2718 = c$$606;
          }
          return c$$606 = v2718;
        }
        if (this.length) {
          var c$$605 = v1984;
          JAM.call(this.sort, this, [v1985], JAM.policy.p3);
        }
        return;
      }
      function v1983(b$$737) {
        function v1982(a$$755, c$$604) {
          var f$$219 = 0;
          var g$$217;
          var k$$89;
          g$$217 = JAM.call(d$$444, null, [a$$755], JAM.policy.p3);
          k$$89 = JAM.call(d$$444, null, [c$$604], JAM.policy.p3);
          var v2720;
          if (g$$217 < k$$89) {
            v2720 = f$$219 = -1;
          } else {
            var v9290 = k$$89 < g$$217;
            if (v9290) {
              v9290 = f$$219 = 1;
            }
            v2720 = v9290;
          }
          v2720;
          if (b$$737) {
            var v9292;
            if (JAM.call(b$$737.toUpperCase, b$$737, [], JAM.policy.p3) == "DESC") {
              v9292 = 0 - f$$219;
            } else {
              v9292 = f$$219;
            }
            f$$219 = v9292;
          }
          return f$$219;
        }
        function v1981(b$$738) {
          b$$738 = b$$738.Text;
          var v2721;
          if (a$$740(b$$738)) {
            v2721 = parseFloat(b$$738);
          } else {
            v2721 = b$$738;
          }
          return b$$738 = v2721;
        }
        if (this.length) {
          var d$$444 = v1981;
          JAM.call(this.sort, this, [v1982], JAM.policy.p3);
        }
        return;
      }
      function v1980(b$$735, d$$442) {
        function v1979(a$$754, f$$218) {
          var g$$216 = 0;
          var k$$88;
          var l$$93;
          k$$88 = JAM.call(c$$602, null, [a$$754, b$$735], JAM.policy.p3);
          l$$93 = JAM.call(c$$602, null, [f$$218, b$$735], JAM.policy.p3);
          var v2723;
          if (k$$88 < l$$93) {
            v2723 = g$$216 = -1;
          } else {
            var v9294 = l$$93 < k$$88;
            if (v9294) {
              v9294 = g$$216 = 1;
            }
            v2723 = v9294;
          }
          v2723;
          if (d$$442) {
            var v9296;
            if (JAM.call(d$$442.toUpperCase, d$$442, [], JAM.policy.p3) == "DESC") {
              v9296 = 0 - g$$216;
            } else {
              v9296 = g$$216;
            }
            g$$216 = v9296;
          }
          return g$$216;
        }
        function v1978(b$$736, d$$443) {
          var c$$603 = b$$736[d$$443];
          var v2724;
          if (a$$740(c$$603)) {
            v2724 = parseFloat(c$$603);
          } else {
            v2724 = c$$603;
          }
          return c$$603 = v2724;
        }
        if (this.length) {
          var c$$602 = v1978;
          JAM.call(this.sort, this, [v1979], JAM.policy.p3);
        }
        return;
      }
      function v1977(a$$753, b$$734) {
        var d$$441 = -1;
        if (this.length > 0) {
          var c$$601 = this.length - 1;
          try {
            var v2728 = c$$601;
            c$$601 = c$$601 - 1;
            do {
              var v2727 = this[c$$601][a$$753] == b$$734;
              if (v2727) {
                d$$441 = c$$601;
              }
              v2728 = c$$601;
              c$$601 = c$$601 - 1;
            } while (v2728);
          } catch (f$$217) {
            return -1;
          }
          return d$$441;
        }
        return;
      }
      function v1976(a$$752, b$$733) {
        if (this.length > 0) {
          var d$$440 = this.length - 1;
          try {
            var v2732 = d$$440;
            d$$440 = d$$440 - 1;
            do {
              if (this[d$$440][a$$752] == b$$733) {
                return !0;
              }
              v2732 = d$$440;
              d$$440 = d$$440 - 1;
            } while (v2732);
          } catch (c$$600) {
          }
          return !1;
        }
        return;
      }
      function v1975(a$$751, b$$732) {
        if (this.length > 0) {
          var d$$439;
          var c$$599 = this.length - 1;
          try {
            var v2736 = c$$599;
            c$$599 = c$$599 - 1;
            do {
              d$$439 = this[c$$599];
              if (d$$439[a$$751] == b$$732) {
                return d$$439;
              }
              v2736 = c$$599;
              c$$599 = c$$599 - 1;
            } while (v2736);
          } catch (f$$216) {
          }
          return !1;
        }
        return;
      }
      b$$731.getNodeByAttribute = v1975;
      b$$731.contains = v1976;
      b$$731.indexOf = v1977;
      b$$731.SortByAttribute = v1980;
      b$$731.SortByValue = v1983;
      b$$731.SortByNode = v1986;
      return;
    }
    function v1974() {
      function v1973() {
        function v1972(b$$729, c$$598) {
          function v1971(a$$750, d$$438) {
            var f$$215;
            var g$$215;
            f$$215 = JAM.call(e$$381, null, [a$$750, b$$729], JAM.policy.p3);
            g$$215 = JAM.call(e$$381, null, [d$$438, b$$729], JAM.policy.p3);
            var v2738;
            if (f$$215 < g$$215) {
              v2738 = -1;
            } else {
              var v9303;
              if (g$$215 < f$$215) {
                v9303 = 1;
              } else {
                v9303 = 0;
              }
              v2738 = v9303;
            }
            f$$215 = v2738;
            if (c$$598) {
              var v9305;
              if (JAM.call(c$$598.toUpperCase, c$$598, [], JAM.policy.p3) === "DESC") {
                v9305 = 0 - f$$215;
              } else {
                v9305 = f$$215;
              }
              f$$215 = v9305;
            }
            return f$$215;
          }
          function v1970(a$$749, b$$730) {
            var d$$437 = a$$749[b$$730][0].Text;
            var v2740;
            var v15095 = bam.validation;
            if (JAM.call(v15095.isNumeric, v15095, [d$$437], JAM.policy.p3)) {
              v2740 = parseFloat(d$$437);
            } else {
              v2740 = d$$437;
            }
            return d$$437 = v2740;
          }
          var v9308 = a$$744;
          if (v9308) {
            v9308 = a$$744.length > 0;
          }
          if (v9308) {
            var e$$381 = v1970;
            JAM.call(a$$744.sort, a$$744, [v1971], JAM.policy.p3);
          }
          return;
        }
        function v1969(b$$728) {
          function v1968(a$$748, d$$436) {
            var f$$214;
            var g$$214;
            f$$214 = JAM.call(c$$597, null, [a$$748], JAM.policy.p3);
            g$$214 = JAM.call(c$$597, null, [d$$436], JAM.policy.p3);
            var v2742;
            if (f$$214 < g$$214) {
              v2742 = -1;
            } else {
              var v9309;
              if (g$$214 < f$$214) {
                v9309 = 1;
              } else {
                v9309 = 0;
              }
              v2742 = v9309;
            }
            f$$214 = v2742;
            if (b$$728) {
              var v9311;
              if (JAM.call(b$$728.toUpperCase, b$$728, [], JAM.policy.p3) === "DESC") {
                v9311 = 0 - f$$214;
              } else {
                v9311 = f$$214;
              }
              f$$214 = v9311;
            }
            return f$$214;
          }
          function v1967(a$$747) {
            a$$747 = a$$747.Text;
            var v2743;
            var v15099 = bam.validation;
            if (JAM.call(v15099.isNumeric, v15099, [a$$747], JAM.policy.p3)) {
              v2743 = parseFloat(a$$747);
            } else {
              v2743 = a$$747;
            }
            return a$$747 = v2743;
          }
          var v9313 = a$$744;
          if (v9313) {
            v9313 = a$$744.length > 0;
          }
          if (v9313) {
            var c$$597 = v1967;
            JAM.call(a$$744.sort, a$$744, [v1968], JAM.policy.p3);
          }
          return;
        }
        function v1966(b$$726, c$$596) {
          function v1965(a$$746, d$$435) {
            var f$$213;
            var g$$213;
            f$$213 = JAM.call(e$$380, null, [a$$746, b$$726], JAM.policy.p3);
            g$$213 = JAM.call(e$$380, null, [d$$435, b$$726], JAM.policy.p3);
            var v2745;
            if (f$$213 < g$$213) {
              v2745 = -1;
            } else {
              var v9314;
              if (g$$213 < f$$213) {
                v9314 = 1;
              } else {
                v9314 = 0;
              }
              v2745 = v9314;
            }
            f$$213 = v2745;
            if (c$$596) {
              var v9316;
              if (JAM.call(c$$596.toUpperCase, c$$596, [], JAM.policy.p3) === "DESC") {
                v9316 = 0 - f$$213;
              } else {
                v9316 = f$$213;
              }
              f$$213 = v9316;
            }
            return f$$213;
          }
          function v1964(a$$745, b$$727) {
            var d$$434 = a$$745[b$$727];
            var v2746;
            var v15103 = bam.validation;
            if (JAM.call(v15103.isNumeric, v15103, [d$$434], JAM.policy.p3)) {
              v2746 = parseFloat(d$$434);
            } else {
              v2746 = d$$434;
            }
            return d$$434 = v2746;
          }
          var v9318 = a$$744;
          if (v9318) {
            v9318 = a$$744.length > 0;
          }
          if (v9318) {
            var e$$380 = v1964;
            JAM.call(a$$744.sort, a$$744, [v1965], JAM.policy.p3);
          }
          return;
        }
        function v1963(b$$725, c$$595) {
          var e$$379 = -1;
          var v9319 = a$$744;
          if (v9319) {
            v9319 = a$$744.length > 0;
          }
          if (v9319) {
            var h$$180 = a$$744.length - 1;
            try {
              var v2750 = h$$180;
              h$$180 = h$$180 - 1;
              do {
                var v2749 = a$$744[h$$180][b$$725] === c$$595;
                if (v2749) {
                  e$$379 = h$$180;
                }
                v2750 = h$$180;
                h$$180 = h$$180 - 1;
              } while (v2750);
            } catch (f$$212) {
              return -1;
            }
            return e$$379;
          }
          return;
        }
        function v1962(b$$724, c$$594) {
          var v9321 = a$$744;
          if (v9321) {
            v9321 = a$$744.length > 0;
          }
          if (v9321) {
            var e$$378 = a$$744.length - 1;
            try {
              var v2754 = e$$378;
              e$$378 = e$$378 - 1;
              do {
                if (a$$744[e$$378][b$$724] === c$$594) {
                  return !0;
                }
                v2754 = e$$378;
                e$$378 = e$$378 - 1;
              } while (v2754);
            } catch (h$$179) {
            }
            return !1;
          }
          return;
        }
        function v1961(b$$723) {
          var v9323 = a$$744;
          if (v9323) {
            v9323 = a$$744.length > 0;
          }
          if (v9323) {
            var c$$593 = [];
            var e$$377;
            var h$$178 = a$$744.length - 1;
            try {
              var v2757 = h$$178;
              h$$178 = h$$178 - 1;
              do {
                e$$377 = a$$744[h$$178];
                var v15110 = e$$377.Text;
                if (v15110) {
                  v15110 = e$$377.Text === b$$723;
                }
                var v9324 = v15110;
                if (v9324) {
                  JAM.call(c$$593.push, c$$593, [e$$377], JAM.policy.p3);
                }
                v2757 = h$$178;
                h$$178 = h$$178 - 1;
              } while (v2757);
              return c$$593;
            } catch (f$$211) {
            }
            return null;
          }
          return;
        }
        function v1960(b$$722, c$$592) {
          var v9325 = a$$744;
          if (v9325) {
            v9325 = a$$744.length > 0;
          }
          if (v9325) {
            var e$$376;
            var h$$177 = a$$744.length - 1;
            try {
              var v2761 = h$$177;
              h$$177 = h$$177 - 1;
              do {
                e$$376 = a$$744[h$$177];
                if (e$$376[b$$722] === c$$592) {
                  return e$$376;
                }
                v2761 = h$$177;
                h$$177 = h$$177 - 1;
              } while (v2761);
            } catch (f$$210) {
            }
            return null;
          }
          return;
        }
        function v1959(b$$721, c$$591) {
          var v9326 = a$$744;
          if (v9326) {
            v9326 = a$$744.length > 0;
          }
          if (v9326) {
            var e$$375 = [];
            var h$$176;
            var f$$209 = a$$744.length - 1;
            try {
              var v2764 = f$$209;
              f$$209 = f$$209 - 1;
              do {
                h$$176 = a$$744[f$$209];
                var v9327 = h$$176[b$$721] === c$$591;
                if (v9327) {
                  JAM.call(e$$375.push, e$$375, [h$$176], JAM.policy.p3);
                }
                v2764 = f$$209;
                f$$209 = f$$209 - 1;
              } while (v2764);
              JAM.call(e$$375.reverse, e$$375, [], JAM.policy.p3);
              return e$$375;
            } catch (o$$39) {
            }
            return null;
          }
          return;
        }
        var a$$744 = [];
        a$$744.getNodesByAttribute = v1959;
        a$$744.getNodeByAttribute = v1960;
        a$$744.getNodesByValue = v1961;
        a$$744.contains = v1962;
        a$$744.indexOf = v1963;
        a$$744.SortByAttribute = v1966;
        a$$744.SortByValue = v1969;
        a$$744.SortByNode = v1972;
        return a$$744;
      }
      return {activate:v1973};
    }
    function v1958(a$$743, b$$720) {
      if (b$$720.attributes.length > 0) {
        var c$$590 = b$$720.attributes.length - 1;
        var e$$374;
        a$$743._attributes = [];
        var v2767 = c$$590;
        c$$590 = c$$590 - 1;
        do {
          var v20952 = String(b$$720.attributes[c$$590].name);
          e$$374 = String(JAM.call(v20952.replace, v20952, [/-/g, "_"], JAM.policy.p3));
          var v15117 = a$$743._attributes;
          JAM.call(v15117.push, v15117, [e$$374], JAM.policy.p3);
          var v30934 = JAM.call(k$$87, null, [b$$720.attributes[c$$590].value], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            a$$743[e$$374] = v30934;
          }
          v2767 = c$$590;
          c$$590 = c$$590 - 1;
        } while (v2767);
      }
      return;
    }
    function v1957(a$$742) {
      return JAM.call(a$$742.replace, a$$742, [/^\s+|\s+$/gm, ""], JAM.policy.p3);
    }
    try {
      if (!c$$589) {
        return null;
      }
      var b$$719 = {typeOf:"JSXBObject"};
      var v2770;
      if (c$$589.nodeType == 9) {
        v2770 = c$$589.documentElement;
      } else {
        v2770 = c$$589;
      }
      var f$$208 = v2770;
      var v2771 = f$$208.nodeName;
      if (!v2771) {
        v2771 = "";
      }
      b$$719.RootName = v2771;
      var v9333 = c$$589.nodeType == 3;
      if (!v9333) {
        v9333 = c$$589.nodeType == 4;
      }
      if (v9333) {
        return c$$589.nodeValue;
      }
      var k$$87 = v1957;
      var l$$92 = v1958;
      v1974();
      var p$$59 = v1987;
      var g$$212 = v1988;
      JAM.call(g$$212, null, [b$$719, f$$208], JAM.policy.p3);
      f$$208 = c$$589 = null;
      return b$$719;
    } catch (m$$62) {
      return null;
    }
    return;
  }
  function a$$740(a$$741) {
    var b$$718 = "";
    var v9334 = a$$741;
    if (v9334) {
      v9334 = typeof a$$741 === "string";
    }
    var v2773 = v9334;
    if (v2773) {
      b$$718 = a$$741;
    }
    return JAM.call(/^((-)?([0-9]*)((\.{0,1})([0-9]+))?$)/.test, /^((-)?([0-9]*)((\.{0,1})([0-9]+))?$)/, [b$$718], JAM.policy.p3);
  }
  return {xmlToJSON:v1989, textToXML:v1990};
}
function v1956() {
  function v1955(a$$739, b$$717, c$$588) {
    function v1954() {
      return JAM.call(b$$717.getRoot, b$$717, [], JAM.policy.p3);
    }
    function v1953() {
      return [h$$171, n$$106];
    }
    this.getCanvasSize = v1953;
    this.getRoot = v1954;
    if (JAM.call(b$$717.getValidate, b$$717, [], JAM.policy.p3)) {
      JAM.call(a$$739.draw, a$$739, [{type:"text", x:0, y:a$$739.canvasSize[1] / 3, text:JAM.call(b$$717.getValidate, b$$717, [], JAM.policy.p3)}], JAM.policy.p3);
    } else {
      i$$235 = a$$739;
      a$$739 = JAM.call(b$$717.getRoot, b$$717, [], JAM.policy.p3);
      var f$$207 = JAM.call(b$$717.getNewickLen, b$$717, [], JAM.policy.p3);
      h$$171 = i$$235.canvasSize[0];
      n$$106 = i$$235.canvasSize[1];
      E$$4 = h$$171 / 2;
      r$$29 = n$$106 / 2;
      var v2777 = Math.min;
      o$$36 = JAM.call(v2777.apply, v2777, [null, [h$$171, n$$106]], JAM.policy.p3);
      var v2779;
      if (e$$368.bufferRadius > 1) {
        v2779 = e$$368.bufferRadius;
      } else {
        var v9337 = Smits.Common;
        v2779 = JAM.call(v9337.roundFloat, v9337, [o$$36 * e$$368.bufferRadius, 4], JAM.policy.p3);
      }
      c$$588 = v2779;
      C$$4 = e$$368.bufferAngle;
      z$$9 = e$$368.innerCircleRadius;
      D$$4 = e$$368.initStartAngle;
      v$$13 = JAM.call(Math.round, Math, [(o$$36 - c$$588 - z$$9) / 2], JAM.policy.p3);
      q$$24 = (v$$13 - z$$9) / f$$207;
      var v2782 = Smits.Common;
      u$$18 = JAM.call(v2782.roundFloat, v2782, [(360 - C$$4) / JAM.call(a$$739.getCountAllChildren, a$$739, [], JAM.policy.p3), 4], JAM.policy.p3);
      p$$57(a$$739, z$$9);
      w$$19 = v$$13 + x$$75 + e$$368.bufferOuterLabels;
      if (Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts.length) {
        c$$588 = Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts;
        var g$$211;
        for (g$$211 in c$$588) {
          var v20956;
          if (c$$588[g$$211].thickness) {
            v20956 = c$$588[g$$211].thickness;
          } else {
            v20956 = Smits.PhyloCanvas.Render.Parameters.binaryChartThickness;
          }
          var v9345 = w$$19 - v20956;
          var v15131;
          if (c$$588[g$$211].bufferInner) {
            v15131 = c$$588[g$$211].bufferInner;
          } else {
            v15131 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner;
          }
          w$$19 = d$$423(v9345 - v15131, c$$588[g$$211].chart, c$$588[g$$211]);
        }
      }
      w$$19 = m$$58();
      if (Smits.PhyloCanvas.Render.Parameters.binaryCharts.length) {
        c$$588 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
        for (g$$211 in c$$588) {
          w$$19 = d$$423(w$$19, c$$588[g$$211].chart, c$$588[g$$211]);
        }
      }
      if (Smits.PhyloCanvas.Render.Parameters.barCharts.length) {
        c$$588 = Smits.PhyloCanvas.Render.Parameters.barCharts;
        for (g$$211 in c$$588) {
          w$$19 = j$$120(w$$19, c$$588[g$$211].chart, c$$588[g$$211]);
        }
      }
    }
    return;
  }
  function a$$731(a$$732, d$$424) {
    d$$424 = d$$424 + D$$4;
    var v9352 = Smits.Common;
    var v2800 = JAM.call(v9352.roundFloat, v9352, [E$$4 + a$$732 * JAM.call(Math.sin, Math, [d$$424 * F$$4], JAM.policy.p3), 4], JAM.policy.p3);
    var v9354 = Smits.Common;
    return [v2800, JAM.call(v9354.roundFloat, v9354, [r$$29 + a$$732 * JAM.call(Math.cos, Math, [d$$424 * F$$4], JAM.policy.p3), 4], JAM.policy.p3)];
  }
  function c$$583(a$$733) {
    a$$733 = k$$85(90 - a$$733 - D$$4);
    var v9357 = a$$733 > 90;
    if (v9357) {
      v9357 = a$$733 < 270;
    }
    if (v9357) {
      a$$733 = a$$733 + 180;
      var d$$425 = "end";
    } else {
      d$$425 = "start";
    }
    return [a$$733, d$$425];
  }
  function b$$710(d$$426, b$$711, c$$584, e$$369) {
    var i$$236 = a$$731(d$$426, b$$711);
    var h$$172 = a$$731(d$$426, c$$584);
    var j$$121 = [];
    var f$$204 = 0;
    var v2804;
    if (JAM.call(Math.abs, Math, [k$$85(c$$584 - b$$711)], JAM.policy.p3) > 180) {
      v2804 = 1;
    } else {
      v2804 = -1;
    }
    b$$711 = v2804;
    var v9359 = e$$369;
    if (v9359) {
      v9359 = e$$369.invertSecant;
    }
    var v2805 = v9359;
    if (v2805) {
      b$$711 = b$$711 * -1;
      f$$204 = 1;
    }
    var v9360 = !e$$369;
    if (!v9360) {
      v9360 = !e$$369.noMove;
    }
    var v2806 = v9360;
    if (v2806) {
      JAM.call(j$$121.push, j$$121, ["M"], JAM.policy.p3);
    }
    var v2807 = i$$236[0];
    var v2808 = i$$236[1];
    var v9361;
    if (b$$711 < 1) {
      v9361 = 0;
    } else {
      v9361 = 1;
    }
    JAM.call(j$$121.push, j$$121, [v2807, v2808, "A", d$$426, d$$426, 0, v9361, f$$204, h$$172[0], h$$172[1]], JAM.policy.p3);
    return j$$121;
  }
  function f$$203(d$$427, b$$712, c$$585) {
    var e$$370;
    var i$$237 = [];
    b$$712 = a$$731(b$$712, d$$427);
    d$$427 = a$$731(c$$585, d$$427);
    var v9362 = !e$$370;
    if (!v9362) {
      v9362 = !e$$370.noMove;
    }
    var v2812 = v9362;
    if (v2812) {
      JAM.call(i$$237.push, i$$237, ["M"], JAM.policy.p3);
    }
    JAM.call(i$$237.push, i$$237, [b$$712[0], b$$712[1], "L", d$$427[0], d$$427[1]], JAM.policy.p3);
    return i$$237;
  }
  function k$$85(a$$734) {
    var v9363 = a$$734 > 360;
    if (!v9363) {
      v9363 = a$$734 < 0;
    }
    var v2818 = v9363;
    for (;v2818;) {
      var v2817;
      if (a$$734 > 360) {
        v2817 = a$$734 = a$$734 - 360;
      } else {
        var v9364 = a$$734 < 0;
        if (v9364) {
          v9364 = a$$734 = a$$734 + 360;
        }
        v2817 = v9364;
      }
      v2817;
      var v9366 = a$$734 > 360;
      if (!v9366) {
        v9366 = a$$734 < 0;
      }
      v2818 = v9366;
    }
    return a$$734;
  }
  function l$$90(a$$735, d$$428, c$$586, e$$371) {
    var v9367 = !d$$428;
    if (v9367) {
      v9367 = a$$735.length > 1;
    }
    var v2819 = v9367;
    if (v2819) {
      e$$371 = a$$735[3];
      c$$586 = a$$735[2];
      d$$428 = a$$735[1];
      a$$735 = a$$735[0];
    }
    return g$$209("M", b$$710(a$$735, c$$586, e$$371, {noMove:1, invertSecant:0}), "L", b$$710(d$$428, e$$371, c$$586, {noMove:1, invertSecant:1}), "Z");
  }
  function p$$57(d$$429, h$$173) {
    var v2822 = d$$429.len;
    if (v2822) {
      var v9370;
      if (B$$5) {
        v9370 = A$$5 = C$$4 || 1;
      } else {
        var v15149 = d$$429.children.length == 0;
        if (v15149) {
          var v20968 = Smits.Common;
          v15149 = A$$5 = JAM.call(v20968.roundFloat, v20968, [A$$5 + u$$18, 4], JAM.policy.p3);
        }
        v9370 = v15149;
      }
      v9370;
    }
    if (d$$429.children.length > 0) {
      var j$$122 = [];
      var o$$37;
      var n$$107;
      var k$$86;
      o$$37 = h$$173;
      var v15151 = Smits.Common;
      n$$107 = h$$173 = h$$173 + JAM.call(v15151.roundFloat, v15151, [q$$24 * d$$429.len, 4], JAM.policy.p3);
      var v9373 = d$$429.children;
      if (v9373) {
        v9373 = d$$429.children.length;
      }
      if (v9373) {
        var l$$91 = 0;
        var v2825 = l$$91 < d$$429.children.length;
        for (;v2825;) {
          var m$$59 = p$$57(d$$429.children[l$$91], h$$173);
          var v2824 = m$$59 > 0;
          if (v2824) {
            JAM.call(j$$122.push, j$$122, [m$$59], JAM.policy.p3);
          }
          l$$91++;
          v2825 = l$$91 < d$$429.children.length;
        }
      }
      var v2827 = Smits.Common;
      var v9377 = Math.min;
      l$$91 = JAM.call(v2827.roundFloat, v2827, [JAM.call(v9377.apply, v9377, [null, j$$122], JAM.policy.p3), 4], JAM.policy.p3);
      var v2829 = Smits.Common;
      var v9378 = Math.max;
      j$$122 = JAM.call(v2829.roundFloat, v2829, [JAM.call(v9378.apply, v9378, [null, j$$122], JAM.policy.p3), 4], JAM.policy.p3);
      var v2831 = d$$429.level != 0;
      if (v2831) {
        JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [g$$209("M", a$$731(h$$173 + .01, l$$91), "L", b$$710(h$$173, l$$91, j$$122, {noMove:!0}), "L", a$$731(h$$173 + .01, j$$122))])], JAM.policy.p3);
      }
      var v2832 = d$$429.len;
      if (v2832) {
        var v15158 = Smits.Common;
        k$$86 = JAM.call(v15158.roundFloat, v15158, [l$$91 + (j$$122 - l$$91) / 2, 4], JAM.policy.p3);
        JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [f$$203(k$$86, o$$37, n$$107)])], JAM.policy.p3);
      }
    } else {
      d$$429.y = A$$5;
      JAM.call(s$$34.push, s$$34, [d$$429], JAM.policy.p3);
      o$$37 = h$$173;
      var v27740 = Smits.Common;
      n$$107 = JAM.call(v27740.roundFloat, v27740, [h$$173 + q$$24 * d$$429.len], JAM.policy.p3);
      k$$86 = A$$5;
      JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [f$$203(k$$86, o$$37, n$$107)])], JAM.policy.p3);
      JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [f$$203(k$$86, n$$107, v$$13), {attr:Smits.PhyloCanvas.Render.Style.connectedDash}])], JAM.policy.p3);
      if (d$$429.name) {
        o$$37 = a$$731(v$$13 + e$$368.bufferInnerLabels, k$$86);
        l$$91 = c$$583(k$$86);
        j$$122 = l$$91[0];
        l$$91 = l$$91[1];
        m$$59 = {};
        var v2834 = d$$429.style;
        if (v2834) {
          var v9382 = Smits.Common;
          var v15161 = Smits.PhyloCanvas.Render.Style;
          JAM.call(v9382.apply, v9382, [m$$59, JAM.call(v15161.getStyle, v15161, [d$$429.style, "text"], JAM.policy.p3)], JAM.policy.p3);
        }
        m$$59["text-anchor"] = l$$91;
        if (d$$429.uri) {
          m$$59.href = d$$429.uri;
        }
        if (d$$429.description) {
          m$$59.title = d$$429.description;
        }
        j$$122 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Text, [o$$37[0], o$$37[1], d$$429.name, {attr:m$$59, rotate:[j$$122, o$$37[0], o$$37[1]]}])], JAM.policy.p3);
        var v2838 = d$$429.bgStyle;
        if (v2838) {
          JAM.call(t$$30.push, t$$30, [[d$$429.bgStyle, k$$86]], JAM.policy.p3);
        }
        o$$37 = a$$731(n$$107, k$$86);
        var v2839 = Smits.PhyloCanvas.Render.Parameters.mouseRollOver;
        if (v2839) {
          var v9391 = Smits.Common;
          JAM.call(v9391.addRaphEventHandler, v9391, [j$$122[0], "mouseover", Smits.PhyloCanvas.Render.Parameters.mouseRollOver, {svg:i$$235, node:d$$429, x:o$$37[0], y:o$$37[1], textEl:j$$122[0]}], JAM.policy.p3);
        }
        var v2840 = Smits.PhyloCanvas.Render.Parameters.mouseRollOut;
        if (v2840) {
          var v9396 = Smits.Common;
          JAM.call(v9396.addRaphEventHandler, v9396, [j$$122[0], "mouseout", Smits.PhyloCanvas.Render.Parameters.mouseRollOut, {svg:i$$235, node:d$$429, x:o$$37[0], y:o$$37[1], textEl:j$$122[0]}], JAM.policy.p3);
        }
        var v2841 = Smits.PhyloCanvas.Render.Parameters.onClickAction;
        if (v2841) {
          var v9401 = Smits.Common;
          JAM.call(v9401.addRaphEventHandler, v9401, [j$$122[0], "click", Smits.PhyloCanvas.Render.Parameters.onClickAction, {svg:i$$235, node:d$$429, x:o$$37[0], y:o$$37[1], textEl:j$$122[0]}], JAM.policy.p3);
        }
        x$$75 = JAM.call(Math.max, Math, [j$$122[1], x$$75], JAM.policy.p3);
      }
    }
    if (B$$5) {
      B$$5 = !1;
    }
    return k$$86;
  }
  function g$$209(a$$736) {
    var d$$430 = a$$736;
    var b$$713 = 1;
    var v2846 = b$$713 < arguments.length;
    for (;v2846;) {
      d$$430 = JAM.call(d$$430.concat, d$$430, [arguments[b$$713]], JAM.policy.p3);
      b$$713++;
      v2846 = b$$713 < arguments.length;
    }
    return d$$430;
  }
  function m$$58() {
    var a$$737 = [];
    if (t$$30.length > 0) {
      if (Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList) {
        var d$$431 = 0;
        var v2852 = d$$431 < Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList.length;
        for (;v2852;) {
          var b$$714 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList[d$$431];
          var v2848 = Smits.Common;
          b$$714 = JAM.call(v2848.createGradientEl, v2848, [b$$714, Smits.PhyloCanvas.Render.Style[b$$714], [E$$4, r$$29, v$$13 + x$$75 + e$$368.bufferOuterLabels]], JAM.policy.p3);
          var v2851 = i$$235.svg.defs;
          JAM.call(v2851.appendChild, v2851, [b$$714], JAM.policy.p3);
          d$$431++;
          v2852 = d$$431 < Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList.length;
        }
      }
      d$$431 = 0;
      var v2855 = d$$431 < t$$30.length;
      for (;v2855;) {
        var v2854;
        var v15188 = d$$431 != t$$30.length - 1;
        if (v15188) {
          v15188 = t$$30[d$$431][0] == t$$30[d$$431 + 1][0];
        }
        if (v15188) {
          var v9416 = t$$30[d$$431 + 1];
          var v15190;
          if (t$$30[d$$431][2]) {
            v15190 = t$$30[d$$431][2];
          } else {
            v15190 = t$$30[d$$431][1];
          }
          v2854 = v9416[2] = v15190;
        } else {
          var v27745 = v$$13 + x$$75 + e$$368.bufferOuterLabels;
          var v28693;
          if (t$$30[d$$431][2]) {
            v28693 = t$$30[d$$431][2] - u$$18 / 2;
          } else {
            v28693 = t$$30[d$$431][1] - u$$18 / 2;
          }
          a$$737 = l$$90(v$$13, v27745, v28693, t$$30[d$$431][1] + u$$18 / 2);
          var v27748 = Smits.PhyloCanvas.Render.Style;
          b$$714 = JAM.call(v27748.getStyle, v27748, [t$$30[d$$431][0], "textSecantBg"], JAM.policy.p3);
          var v27750 = Smits.PhyloCanvas.Render.Path;
          var v29334;
          if (b$$714.type) {
            v29334 = {};
          } else {
            v29334 = b$$714;
          }
          a$$737 = JAM.call(i$$235.draw, i$$235, [JAM.new(v27750, [a$$737, {attr:v29334}])], JAM.policy.p3);
          var v26239 = b$$714.type;
          if (v26239) {
            v26239 = b$$714.type == "radialGradient";
          }
          var v24098 = v26239;
          if (v24098) {
            var v26240 = a$$737[0].node;
            JAM.call(v26240.setAttribute, v26240, ["fill", "url(#" + b$$714.name + ")"], JAM.policy.p3);
          }
          var v24099 = b$$714.type;
          if (v24099) {
            v24099 = b$$714.type == "radialGradient";
          }
          var v21000 = v24099;
          if (v21000) {
            var v24100 = a$$737[0].node;
            JAM.call(v24100.setAttribute, v24100, ["stroke", "none"], JAM.policy.p3);
          }
          var v15191 = a$$737[0];
          v2854 = JAM.call(v15191.toBack, v15191, [], JAM.policy.p3);
        }
        v2854;
        d$$431++;
        v2855 = d$$431 < t$$30.length;
      }
    }
    a$$737 = l$$90(v$$13, v$$13 + x$$75 + e$$368.bufferOuterLabels, (C$$4 || 1) - u$$18 / 2, 360 - u$$18 / 2);
    a$$737 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [a$$737, {attr:Smits.PhyloCanvas.Render.Style.textSecantBg}])], JAM.policy.p3);
    var v2861 = a$$737[0];
    JAM.call(v2861.toBack, v2861, [], JAM.policy.p3);
    return v$$13 + x$$75 + e$$368.bufferOuterLabels;
  }
  function d$$423(d$$432, b$$715, e$$372) {
    var v2864;
    var v15194 = e$$372;
    if (v15194) {
      v15194 = e$$372.bufferInner;
    }
    if (v15194) {
      v2864 = parseFloat(e$$372.bufferInner);
    } else {
      v2864 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner;
    }
    var j$$123 = v2864;
    var v9429;
    var v21004 = e$$372;
    if (v21004) {
      v21004 = e$$372.bufferSiblings;
    }
    if (v21004) {
      v9429 = e$$372.bufferSiblings * u$$18;
    } else {
      v9429 = 0;
    }
    var v2865 = v9429;
    var v9430;
    if (Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings < 1) {
      v9430 = u$$18 * Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    } else {
      v9430 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    }
    var h$$174 = v2865 | v9430;
    var v2867;
    var v15201 = e$$372;
    if (v15201) {
      v15201 = e$$372.thickness;
    }
    if (v15201) {
      v2867 = parseFloat(e$$372.thickness);
    } else {
      v2867 = Smits.PhyloCanvas.Render.Parameters.binaryChartThickness;
    }
    var f$$205 = v2867;
    var v9434;
    var v21009 = e$$372;
    if (v21009) {
      v21009 = e$$372.disjointed;
    }
    if (v21009) {
      v9434 = e$$372.disjointed;
    } else {
      v9434 = 0;
    }
    var o$$38 = v9434 | Smits.PhyloCanvas.Render.Parameters.binaryChartDisjointed;
    var v2870;
    var v15205 = e$$372;
    if (v15205) {
      v15205 = e$$372.isInternal;
    }
    if (v15205) {
      v2870 = e$$372.isInternal;
    } else {
      v2870 = !1;
    }
    e$$372 = v2870;
    var n$$108 = !0;
    var g$$210;
    var m$$60 = 0;
    var v2890 = m$$60 < s$$34.length;
    for (;v2890;) {
      var q$$25 = s$$34[m$$60];
      var v21011 = !s$$34[m$$60 + 1];
      if (!v21011) {
        v21011 = q$$25.chart[b$$715] !== s$$34[m$$60 + 1].chart[b$$715];
      }
      var v15206 = v21011;
      if (!v15206) {
        v15206 = o$$38;
      }
      var v9438 = v15206;
      if (v9438) {
        v9438 = q$$25.chart[b$$715] != "none";
      }
      if (v9438) {
        var v2871 = Smits.PhyloCanvas.Render.Style;
        var p$$58 = JAM.call(v2871.getStyle, v2871, [q$$25.chart[b$$715], "textSecantBg"], JAM.policy.p3);
        var v2873;
        if (e$$372) {
          var v9441 = v$$13 - j$$123 - f$$205;
          var v9442 = v$$13 - j$$123;
          var v24109;
          if (g$$210) {
            v24109 = g$$210;
          } else {
            v24109 = q$$25.y;
          }
          var v15210 = v24109 - u$$18 / 2;
          var v21016;
          var v26250 = n$$108;
          if (v26250) {
            v26250 = !o$$38;
          }
          if (v26250) {
            v21016 = 0;
          } else {
            v21016 = h$$174 / 2;
          }
          var v9443 = v15210 + v21016;
          var v15212 = q$$25.y + u$$18 / 2;
          var v21019;
          var v26251 = m$$60 == s$$34.length - 1;
          if (v26251) {
            v26251 = !o$$38;
          }
          if (v26251) {
            v21019 = 0;
          } else {
            v21019 = h$$174 / 2;
          }
          v2873 = [v9441, v9442, v9443, v15212 - v21019];
        } else {
          var v9445 = d$$432 + j$$123;
          var v9446 = d$$432 + j$$123 + f$$205;
          var v24112;
          if (g$$210) {
            v24112 = g$$210;
          } else {
            v24112 = q$$25.y;
          }
          var v15215 = v24112 - u$$18 / 2;
          var v21022;
          var v26252 = n$$108;
          if (v26252) {
            v26252 = !o$$38;
          }
          if (v26252) {
            v21022 = 0;
          } else {
            v21022 = h$$174 / 2;
          }
          var v9447 = v15215 + v21022;
          var v15217 = q$$25.y + u$$18 / 2;
          var v21025;
          var v26253 = m$$60 == s$$34.length - 1;
          if (v26253) {
            v26253 = !o$$38;
          }
          if (v26253) {
            v21025 = 0;
          } else {
            v21025 = h$$174 / 2;
          }
          v2873 = [v9445, v9446, v9447, v15217 - v21025];
        }
        g$$210 = v2873;
        if (p$$58.label) {
          var v2874 = Smits.PhyloCanvas.Render.Style;
          n$$108 = JAM.call(v2874.getStyle, v2874, [p$$58.labelStyle, "text"], JAM.policy.p3);
          q$$25 = a$$731((g$$210[0] + g$$210[1]) / 2, (g$$210[2] + g$$210[3]) / 2);
          var r$$30 = c$$583((g$$210[2] + g$$210[3]) / 2);
          var v9453 = r$$30[0];
          var v15226;
          if (n$$108.rotate) {
            v15226 = parseFloat(n$$108.rotate);
          } else {
            v15226 = 0;
          }
          r$$30 = k$$85(v9453 + v15226);
          var t$$31 = k$$85(90 - (g$$210[2] + g$$210[3]) / 2 - D$$4);
          var v9456 = t$$31 > 90;
          if (v9456) {
            v9456 = t$$31 < 270;
          }
          var v2881 = v9456;
          if (v2881) {
            r$$30 = r$$30 + 180;
          }
          var v2882 = n$$108["text-anchor"];
          if (!v2882) {
            n$$108["text-anchor"] = "middle";
          }
          var v2883 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Text, [q$$25[0], q$$25[1], p$$58.label, {attr:n$$108, rotate:r$$30}])], JAM.policy.p3)[0];
          JAM.call(v2883.toBack, v2883, [], JAM.policy.p3);
        }
        var v2885 = p$$58.borderStyle;
        if (v2885) {
          var v15229 = Smits.PhyloCanvas.Render.Style;
          n$$108 = JAM.call(v15229.getStyle, v15229, [p$$58.borderStyle, "textSecantBg"], JAM.policy.p3);
          var v26255 = Smits.PhyloCanvas.Render.Path;
          var v29335;
          if (n$$108.fullsize) {
            v29335 = g$$210[1];
          } else {
            v29335 = g$$210[0];
          }
          var v15231 = JAM.call(i$$235.draw, i$$235, [JAM.new(v26255, [l$$90([v$$13, v29335, g$$210[2], g$$210[3]]), {attr:n$$108}])], JAM.policy.p3)[0];
          JAM.call(v15231.toBack, v15231, [], JAM.policy.p3);
        }
        var v2886 = JAM.call(i$$235.draw, i$$235, [JAM.new(Smits.PhyloCanvas.Render.Path, [l$$90(g$$210), {attr:p$$58}])], JAM.policy.p3)[0];
        JAM.call(v2886.toBack, v2886, [], JAM.policy.p3);
        g$$210 = 0;
      } else {
        if (!g$$210) {
          g$$210 = q$$25.y;
        }
        var v2888 = q$$25.chart[b$$715] == "none";
        if (v2888) {
          g$$210 = 0;
        }
      }
      n$$108 = !1;
      m$$60++;
      v2890 = m$$60 < s$$34.length;
    }
    var v2891;
    if (e$$372) {
      v2891 = d$$432;
    } else {
      v2891 = d$$432 + j$$123 + f$$205;
    }
    return v2891;
  }
  function j$$120(d$$433, a$$738, b$$716) {
    var c$$587 = [];
    var v2892;
    var v15234 = b$$716;
    if (v15234) {
      v15234 = b$$716.bufferInner;
    }
    if (v15234) {
      v2892 = parseFloat(b$$716.bufferInner);
    } else {
      v2892 = Smits.PhyloCanvas.Render.Parameters.barChartBufferInner;
    }
    var e$$373 = v2892;
    var v2893;
    var v15236 = b$$716;
    if (v15236) {
      v15236 = b$$716.height;
    }
    if (v15236) {
      v2893 = parseFloat(b$$716.height);
    } else {
      var v9467;
      if (Smits.PhyloCanvas.Render.Parameters.barChartHeight) {
        v9467 = Smits.PhyloCanvas.Render.Parameters.barChartHeight;
      } else {
        v9467 = 0;
      }
      v2893 = v9467;
    }
    var j$$124 = v2893;
    var v2894;
    var v15239 = b$$716;
    if (v15239) {
      v15239 = b$$716.width;
    }
    if (v15239) {
      var v9469;
      if (parseFloat(b$$716.width) < 1) {
        v9469 = u$$18 * parseFloat(b$$716.width);
      } else {
        v9469 = parseFloat(b$$716.width);
      }
      v2894 = v9469;
    } else {
      var v15244;
      if (Smits.PhyloCanvas.Render.Parameters.barChartWidth < 1) {
        v15244 = u$$18 * Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      } else {
        v15244 = Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      }
      v2894 = 0 | v15244;
    }
    b$$716 = v2894;
    var h$$175 = 0;
    var f$$206 = 0;
    var v2896 = f$$206 < s$$34.length;
    for (;v2896;) {
      JAM.call(c$$587.push, c$$587, [s$$34[f$$206].chart[a$$738]], JAM.policy.p3);
      f$$206++;
      v2896 = f$$206 < s$$34.length;
    }
    var v2897 = Math.max;
    c$$587 = JAM.call(v2897.apply, v2897, [null, c$$587], JAM.policy.p3);
    var v2898 = Smits.Common;
    h$$175 = JAM.call(v2898.roundFloat, v2898, [j$$124 / c$$587, 4], JAM.policy.p3);
    f$$206 = 0;
    var v2900 = f$$206 < s$$34.length;
    for (;v2900;) {
      c$$587 = s$$34[f$$206];
      var v9476 = c$$587.chart[a$$738] > 0;
      if (v9476) {
        var v21048 = Smits.PhyloCanvas.Render.Path;
        var v21049 = l$$90(d$$433 + e$$373, d$$433 + e$$373 + h$$175 * c$$587.chart[a$$738], c$$587.y - b$$716 / 2, c$$587.y + b$$716 / 2);
        var v26270 = Smits.PhyloCanvas.Render.Style;
        JAM.call(i$$235.draw, i$$235, [JAM.new(v21048, [v21049, {attr:JAM.call(v26270.getStyle, v26270, [c$$587.chart[a$$738], "barChart"], JAM.policy.p3)}])], JAM.policy.p3);
      }
      f$$206++;
      v2900 = f$$206 < s$$34.length;
    }
    return d$$433 + e$$373 + j$$124;
  }
  var i$$235;
  var e$$368 = Smits.PhyloCanvas.Render.Parameters.Circular;
  var h$$171;
  var n$$106;
  var o$$36;
  var q$$24;
  var u$$18;
  var z$$9;
  var B$$5 = !0;
  var A$$5 = 0;
  var E$$4;
  var r$$29;
  var v$$13;
  var s$$34 = [];
  var t$$30 = [];
  var C$$4;
  var w$$19;
  var x$$75 = 0;
  var D$$4;
  var F$$4 = Math.PI / 180;
  return v1955;
}
function v1952() {
  function v1951(q$$23, m$$57) {
    function v1950() {
      return JAM.call(m$$57.getRoot, m$$57, [], JAM.policy.p3);
    }
    function v1949() {
      return [b$$706, f$$200];
    }
    this.getCanvasSize = v1949;
    this.getRoot = v1950;
    var v2904 = JAM.call(m$$57.getValidate, m$$57, [], JAM.policy.p3);
    if (v2904) {
      JAM.call(a$$730.draw, a$$730, [0, 0, JAM.call(m$$57.getValidate, m$$57, [], JAM.policy.p3)], JAM.policy.p3);
    }
    a$$730 = q$$23;
    var r$$28 = JAM.call(m$$57.getRoot, m$$57, [], JAM.policy.p3);
    var v$$12 = JAM.call(m$$57.getNewickLen, m$$57, [], JAM.policy.p3);
    b$$706 = a$$730.canvasSize[0];
    f$$200 = a$$730.canvasSize[1];
    h$$167 = c$$580.bufferX;
    n$$104 = c$$580.paddingX;
    o$$34 = c$$580.paddingY;
    g$$207 = c$$580.minHeightBetweenLeaves;
    d$$420 = o$$34;
    k$$84 = JAM.call(Math.round, Math, [(b$$706 - h$$167 - n$$104 * 2) / v$$12], JAM.policy.p3);
    var v9481 = f$$200 - o$$34 * 2;
    var v15252;
    if (c$$580.showScaleBar) {
      v15252 = JAM.call(r$$28.getCountAllChildren, r$$28, [], JAM.policy.p3);
    } else {
      v15252 = JAM.call(r$$28.getCountAllChildren, r$$28, [], JAM.policy.p3) - 1;
    }
    l$$89 = JAM.call(Math.round, Math, [v9481 / v15252], JAM.policy.p3);
    var v2909 = l$$89 < g$$207;
    if (v2909) {
      l$$89 = g$$207;
    }
    p$$56 = JAM.call(Math.round, Math, [b$$706 - h$$167 - n$$104 * 2], JAM.policy.p3);
    var v9485 = Smits.PhyloCanvas.Render.Parameters.binaryCharts.length;
    if (!v9485) {
      v9485 = Smits.PhyloCanvas.Render.Parameters.barCharts.length;
    }
    if (v9485) {
      c$$580.alignRight = !0;
    }
    u$$17(r$$28, n$$104);
    var v2912 = c$$580.showScaleBar;
    if (v2912) {
      y = d$$420 + l$$89;
      e$$364 = c$$580.showScaleBar * k$$84;
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Line, [0, e$$364, y, y])], JAM.policy.p3);
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Text, [(0 + e$$364) / 2, y - 8, c$$580.showScaleBar])], JAM.policy.p3);
    }
    i$$231 = p$$56 + j$$117 + c$$580.bufferInnerLabels;
    if (Smits.PhyloCanvas.Render.Parameters.binaryCharts.length) {
      r$$28 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
      var s$$33;
      for (s$$33 in r$$28) {
        i$$231 = z$$8(i$$231, r$$28[s$$33].chart, r$$28[s$$33]);
      }
    }
    if (Smits.PhyloCanvas.Render.Parameters.barCharts.length) {
      r$$28 = Smits.PhyloCanvas.Render.Parameters.barCharts;
      for (s$$33 in r$$28) {
        B$$4(i$$231, r$$28[s$$33].chart, r$$28[s$$33]);
      }
    }
    return;
  }
  function B$$4(d$$422, c$$582, b$$709) {
    var e$$367 = [];
    var v2923;
    var v15261 = b$$709;
    if (v15261) {
      v15261 = b$$709.bufferInner;
    }
    if (v15261) {
      v2923 = b$$709.bufferInner;
    } else {
      v2923 = 0 | Smits.PhyloCanvas.Render.Parameters.barChartBufferInner;
    }
    var i$$234 = v2923;
    var v2924;
    var v15263 = b$$709;
    if (v15263) {
      v15263 = b$$709.height;
    }
    if (v15263) {
      v2924 = b$$709.height;
    } else {
      v2924 = 0 | Smits.PhyloCanvas.Render.Parameters.barChartHeight;
    }
    var h$$170 = v2924;
    var v2925;
    var v15265 = b$$709;
    if (v15265) {
      v15265 = b$$709.width;
    }
    if (v15265) {
      var v9495;
      if (b$$709.width < 1) {
        v9495 = l$$89 * b$$709.width;
      } else {
        v9495 = b$$709.width;
      }
      v2925 = v9495;
    } else {
      var v15268;
      if (Smits.PhyloCanvas.Render.Parameters.barChartWidth < 1) {
        v15268 = l$$89 * Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      } else {
        v15268 = Smits.PhyloCanvas.Render.Parameters.barChartWidth;
      }
      v2925 = 0 | v15268;
    }
    b$$709 = v2925;
    var j$$119 = 0;
    var f$$202 = 0;
    var v2927 = f$$202 < q$$22.length;
    for (;v2927;) {
      JAM.call(e$$367.push, e$$367, [q$$22[f$$202].chart[c$$582]], JAM.policy.p3);
      f$$202++;
      v2927 = f$$202 < q$$22.length;
    }
    var v2928 = Math.max;
    e$$367 = JAM.call(v2928.apply, v2928, [null, e$$367], JAM.policy.p3);
    var v2929 = Smits.Common;
    j$$119 = JAM.call(v2929.roundFloat, v2929, [h$$170 / e$$367, 4], JAM.policy.p3);
    f$$202 = 0;
    var v2931 = f$$202 < q$$22.length;
    for (;v2931;) {
      e$$367 = q$$22[f$$202];
      var v15270 = Smits.PhyloCanvas.Render.Path;
      var v15271 = ["M", d$$422 + i$$234, e$$367.y - b$$709 / 2, "L", d$$422 + i$$234 + j$$119 * e$$367.chart[c$$582], e$$367.y - b$$709 / 2, "L", d$$422 + i$$234 + j$$119 * e$$367.chart[c$$582], e$$367.y + b$$709 / 2, "L", d$$422 + i$$234, e$$367.y + b$$709 / 2, "Z"];
      var v24160 = Smits.PhyloCanvas.Render.Style;
      JAM.call(a$$730.draw, a$$730, [JAM.new(v15270, [v15271, {attr:JAM.call(v24160.getStyle, v24160, [e$$367.chart[c$$582], "barChart"], JAM.policy.p3)}])], JAM.policy.p3);
      f$$202++;
      v2931 = f$$202 < q$$22.length;
    }
    return;
  }
  function z$$8(d$$421, c$$581, b$$708) {
    var v9504;
    var v21079 = b$$708;
    if (v21079) {
      v21079 = b$$708.bufferInner;
    }
    if (v21079) {
      v9504 = b$$708.bufferInner;
    } else {
      v9504 = 0;
    }
    var e$$366 = v9504 | Smits.PhyloCanvas.Render.Parameters.binaryChartBufferInner;
    var v9506;
    var v21081 = b$$708;
    if (v21081) {
      v21081 = b$$708.bufferSiblings;
    }
    if (v21081) {
      v9506 = b$$708.bufferSiblings * l$$89;
    } else {
      v9506 = 0;
    }
    var v2934 = v9506;
    var v9507;
    if (Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings < 1) {
      v9507 = l$$89 * Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    } else {
      v9507 = Smits.PhyloCanvas.Render.Parameters.binaryChartBufferSiblings;
    }
    var i$$233 = v2934 | v9507;
    var v9508;
    var v21085 = b$$708;
    if (v21085) {
      v21085 = b$$708.thickness;
    }
    if (v21085) {
      v9508 = b$$708.thickness;
    } else {
      v9508 = 0;
    }
    b$$708 = v9508 | Smits.PhyloCanvas.Render.Parameters.binaryChartThickness;
    var h$$169 = 0;
    var v2939 = h$$169 < q$$22.length;
    for (;v2939;) {
      var j$$118 = q$$22[h$$169];
      var v9511 = Smits.PhyloCanvas.Render.Path;
      var v9512 = ["M", d$$421 + e$$366, j$$118.y - l$$89 / 2 + i$$233 / 2, "L", d$$421 + e$$366 + b$$708, j$$118.y - l$$89 / 2 + i$$233 / 2, "L", d$$421 + e$$366 + b$$708, j$$118.y + l$$89 / 2 - i$$233 / 2, "L", d$$421 + e$$366, j$$118.y + l$$89 / 2 - i$$233 / 2, "Z"];
      var v21098 = Smits.PhyloCanvas.Render.Style;
      JAM.call(a$$730.draw, a$$730, [JAM.new(v9511, [v9512, {attr:JAM.call(v21098.getStyle, v21098, [j$$118.chart[c$$581], "textSecantBg"], JAM.policy.p3)}])], JAM.policy.p3);
      h$$169++;
      v2939 = h$$169 < q$$22.length;
    }
    return d$$421 + e$$366 + b$$708;
  }
  function u$$17(b$$707, e$$365) {
    var v15292 = b$$707.len;
    if (v15292) {
      v15292 = m$$56 == !1;
    }
    var v9515 = v15292;
    if (v9515) {
      v9515 = b$$707.children.length == 0;
    }
    var v2941 = v9515;
    if (v2941) {
      var v9516 = Smits.Common;
      d$$420 = JAM.call(v9516.roundFloat, v9516, [d$$420 + l$$89, 4], JAM.policy.p3);
    }
    if (b$$707.children.length > 0) {
      var i$$232 = [];
      var h$$168;
      var f$$201;
      var o$$35;
      var n$$105;
      var v2942 = b$$707.len;
      if (v2942) {
        h$$168 = e$$365;
        var v24175 = Smits.Common;
        f$$201 = e$$365 = JAM.call(v24175.roundFloat, v24175, [e$$365 + k$$84 * b$$707.len, 4], JAM.policy.p3);
        n$$105 = o$$35 = d$$420 + JAM.call(b$$707.getMidbranchPosition, b$$707, [m$$56], JAM.policy.p3) * l$$89;
        JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Line, [h$$168, f$$201, o$$35, n$$105])], JAM.policy.p3);
      }
      if (b$$707.name) {
        h$$168 = {};
        var v2943 = Smits.PhyloCanvas.Render.Style;
        h$$168 = JAM.call(v2943.getStyle, v2943, ["bootstrap", "text"], JAM.policy.p3);
        if (b$$707.uri) {
          h$$168.href = b$$707.uri;
        }
        if (b$$707.description) {
          h$$168.title = b$$707.description;
        }
        var v2946;
        if (b$$707.level == 0) {
          v2946 = d$$420 + JAM.call(b$$707.getMidbranchPosition, b$$707, [m$$56], JAM.policy.p3) * l$$89;
        } else {
          v2946 = n$$105;
        }
        var g$$208 = v2946;
        JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Text, [(f$$201 || e$$365) + 5, g$$208, b$$707.name, {attr:h$$168}])], JAM.policy.p3);
      }
      var v9527 = b$$707.children;
      if (v9527) {
        v9527 = b$$707.children.length;
      }
      if (v9527) {
        h$$168 = 0;
        var v2950 = h$$168 < b$$707.children.length;
        for (;v2950;) {
          JAM.call(i$$232.push, i$$232, [u$$17(b$$707.children[h$$168], e$$365)], JAM.policy.p3);
          h$$168++;
          v2950 = h$$168 < b$$707.children.length;
        }
      }
      f$$201 = [];
      h$$168 = 0;
      var v2952 = h$$168 < i$$232.length;
      for (;v2952;) {
        var v9532 = i$$232[h$$168][0];
        if (v9532) {
          JAM.call(f$$201.push, f$$201, [i$$232[h$$168][0]], JAM.policy.p3);
        }
        var v9533 = i$$232[h$$168][1];
        if (v9533) {
          JAM.call(f$$201.push, f$$201, [i$$232[h$$168][1]], JAM.policy.p3);
        }
        h$$168++;
        v2952 = h$$168 < i$$232.length;
      }
      var v2953 = Math.min;
      i$$232 = JAM.call(v2953.apply, v2953, [null, f$$201], JAM.policy.p3);
      var v2954 = Math.max;
      f$$201 = JAM.call(v2954.apply, v2954, [null, f$$201], JAM.policy.p3);
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Path, [["M", e$$365 + 1E-4, i$$232, "L", e$$365, i$$232, "L", e$$365, f$$201, "L", e$$365 + 1E-4, f$$201], {attr:Smits.PhyloCanvas.Render.Style.line}])], JAM.policy.p3);
    } else {
      h$$168 = e$$365;
      var v2956 = Smits.Common;
      f$$201 = JAM.call(v2956.roundFloat, v2956, [e$$365 + k$$84 * b$$707.len, 2], JAM.policy.p3);
      n$$105 = o$$35 = d$$420;
      b$$707.y = d$$420;
      JAM.call(q$$22.push, q$$22, [b$$707], JAM.policy.p3);
      JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Line, [h$$168, f$$201, o$$35, n$$105])], JAM.policy.p3);
      var v2959 = c$$580.alignRight;
      if (v2959) {
        JAM.call(a$$730.draw, a$$730, [JAM.new(Smits.PhyloCanvas.Render.Path, [["M", f$$201, o$$35, "L", c$$580.alignPadding + p$$56, n$$105], {attr:Smits.PhyloCanvas.Render.Style.connectedDash}])], JAM.policy.p3);
      }
      if (b$$707.name) {
        h$$168 = {};
        var v2960 = b$$707.style;
        if (v2960) {
          var v9541 = Smits.PhyloCanvas.Render.Style;
          h$$168 = JAM.call(v9541.getStyle, v9541, [b$$707.style, "text"], JAM.policy.p3);
        }
        h$$168["text-anchor"] = "start";
        if (b$$707.uri) {
          h$$168.href = b$$707.uri;
        }
        if (b$$707.description) {
          h$$168.title = b$$707.description;
        }
        var v9543 = Smits.PhyloCanvas.Render.Text;
        var v15320;
        if (c$$580.alignRight) {
          v15320 = p$$56 + c$$580.bufferInnerLabels + c$$580.alignPadding;
        } else {
          v15320 = f$$201 + c$$580.bufferInnerLabels;
        }
        i$$232 = JAM.call(a$$730.draw, a$$730, [JAM.new(v9543, [v15320, n$$105, b$$707.name, {attr:h$$168}])], JAM.policy.p3);
        j$$117 = JAM.call(Math.max, Math, [i$$232[1], j$$117], JAM.policy.p3);
        var v2965 = Smits.PhyloCanvas.Render.Parameters.mouseRollOver;
        if (v2965) {
          var v9548 = Smits.Common;
          JAM.call(v9548.addRaphEventHandler, v9548, [i$$232[0], "mouseover", Smits.PhyloCanvas.Render.Parameters.mouseRollOver, {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:i$$232[0]}], JAM.policy.p3);
        }
        var v2966 = Smits.PhyloCanvas.Render.Parameters.mouseRollOut;
        if (v2966) {
          var v9553 = Smits.Common;
          JAM.call(v9553.addRaphEventHandler, v9553, [i$$232[0], "mouseout", Smits.PhyloCanvas.Render.Parameters.mouseRollOut, {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:i$$232[0]}], JAM.policy.p3);
        }
        var v2967 = Smits.PhyloCanvas.Render.Parameters.onClickAction;
        if (v2967) {
          var v9558 = Smits.Common;
          JAM.call(v9558.addRaphEventHandler, v9558, [i$$232[0], "click", Smits.PhyloCanvas.Render.Parameters.onClickAction, {svg:a$$730, node:b$$707, x:f$$201, y:n$$105, textEl:i$$232[0]}], JAM.policy.p3);
        }
      }
      if (m$$56) {
        m$$56 = !1;
      }
    }
    return [o$$35, n$$105];
  }
  var a$$730;
  var c$$580 = Smits.PhyloCanvas.Render.Parameters.Rectangular;
  var b$$706;
  var f$$200;
  var k$$84;
  var l$$89;
  var p$$56;
  var g$$207;
  var m$$56 = !0;
  var d$$420 = 0;
  var j$$117 = 0;
  var i$$231;
  var e$$364;
  var h$$167;
  var n$$104;
  var o$$34;
  var q$$22 = [];
  return v1951;
}
function v1948(a$$729) {
  var c$$579;
  var b$$705;
  var v2971;
  if (a$$729.type == "line") {
    var v15332 = this.svg;
    var v9563 = JAM.call(v15332.path, v15332, [["M", a$$729.x1, a$$729.y1, "L", a$$729.x2, a$$729.y2]], JAM.policy.p3);
    v2971 = c$$579 = JAM.call(v9563.attr, v9563, [Smits.PhyloCanvas.Render.Style.line], JAM.policy.p3);
  } else {
    var v9565;
    if (a$$729.type == "path") {
      var v21132 = this.svg;
      var v15335 = JAM.call(v21132.path, v21132, [a$$729.path], JAM.policy.p3);
      v9565 = c$$579 = JAM.call(v15335.attr, v15335, [a$$729.attr], JAM.policy.p3);
    } else {
      var v15337;
      if (a$$729.type == "circle") {
        var v24189 = this.svg;
        var v21134 = JAM.call(v24189.circle, v24189, [a$$729.x, a$$729.y, a$$729.radius], JAM.policy.p3);
        v15337 = c$$579 = JAM.call(v21134.attr, v21134, [{stroke:"red"}], JAM.policy.p3);
      } else {
        var v21136 = a$$729.type == "text";
        if (v21136) {
          var v29730 = this.svg;
          var v29336 = JAM.call(v29730.text, v29730, [a$$729.x, a$$729.y, a$$729.text], JAM.policy.p3);
          c$$579 = JAM.call(v29336.attr, v29336, [Smits.PhyloCanvas.Render.Style.text], JAM.policy.p3);
          var v29338 = a$$729.attr;
          if (v29338) {
            JAM.call(c$$579.attr, c$$579, [a$$729.attr], JAM.policy.p3);
          }
          var v28712 = a$$729.rotate;
          if (v28712) {
            JAM.call(c$$579.rotate, c$$579, [a$$729.rotate], JAM.policy.p3);
          }
          a$$729 = JAM.call(c$$579.getBBox, c$$579, [], JAM.policy.p3);
          v21136 = b$$705 = JAM.call(Math.sqrt, Math, [a$$729.height * a$$729.height + a$$729.width * a$$729.width], JAM.policy.p3);
        }
        v15337 = v21136;
      }
      v9565 = v15337;
    }
    v2971 = v9565;
  }
  v2971;
  return [c$$579, b$$705];
}
function v1947() {
  var v2972 = this.phylogramObject;
  var a$$728 = JAM.call(v2972.getDrawInstructs, v2972, [], JAM.policy.p3);
  var v9567 = this.phylogramObject;
  JAM.call(console.log, console, ["render", JAM.call(v9567.getDrawInstructs, v9567, [], JAM.policy.p3)], JAM.policy.p3);
  var c$$578 = 0;
  var v2987 = c$$578 < a$$728.length;
  for (;v2987;) {
    if (a$$728[c$$578].type == "line") {
      var v9570 = this.svg;
      var v2974 = JAM.call(v9570.path, v9570, [["M", a$$728[c$$578].x1, a$$728[c$$578].y1, "L", a$$728[c$$578].x2, a$$728[c$$578].y2]], JAM.policy.p3);
      JAM.call(v2974.attr, v2974, [Smits.PhyloCanvas.Render.Style.line], JAM.policy.p3);
    } else {
      if (a$$728[c$$578].type == "path") {
        var v9574 = this.svg;
        var v2976 = JAM.call(v9574.path, v9574, [a$$728[c$$578].path], JAM.policy.p3);
        JAM.call(v2976.attr, v2976, [a$$728[c$$578].attr], JAM.policy.p3);
      } else {
        if (a$$728[c$$578].type == "circle") {
          var v9578 = this.svg;
          var v2978 = JAM.call(v9578.circle, v9578, [a$$728[c$$578].x, a$$728[c$$578].y, a$$728[c$$578].radius], JAM.policy.p3);
          JAM.call(v2978.attr, v2978, [{stroke:"red"}], JAM.policy.p3);
        } else {
          var v9582 = this.svg;
          var v2980 = JAM.call(v9582.text, v9582, [a$$728[c$$578].x, a$$728[c$$578].y, a$$728[c$$578].text], JAM.policy.p3);
          var b$$704 = JAM.call(v2980.attr, v2980, [Smits.PhyloCanvas.Render.Style.text], JAM.policy.p3);
          var v2982 = a$$728[c$$578].attr;
          if (v2982) {
            JAM.call(b$$704.attr, b$$704, [a$$728[c$$578].attr], JAM.policy.p3);
          }
          var v2983 = a$$728[c$$578].rotate;
          if (v2983) {
            JAM.call(b$$704.rotate, b$$704, [a$$728[c$$578].rotate], JAM.policy.p3);
          }
          JAM.call(b$$704.getBBox, b$$704, [], JAM.policy.p3);
        }
      }
    }
    c$$578++;
    v2987 = c$$578 < a$$728.length;
  }
  return;
}
function v1946() {
  function v1945(a$$727, c$$577, b$$703) {
    this.canvasSize = [c$$577, b$$703];
    var v30935 = JAM.call(Raphael, null, [a$$727, this.canvasSize[0], this.canvasSize[1]], JAM.policy.p3);
    this.svg = v30935;
    return;
  }
  return v1945;
}
function v1944() {
  function v1943(a$$726, c$$576, b$$702, f$$199) {
    this.type = "circle";
    this.x = a$$726;
    this.y = c$$576;
    this.radius = b$$702;
    var v9594 = f$$199;
    if (v9594) {
      var v21144 = Smits.Common;
      JAM.call(v21144.apply, v21144, [this, f$$199], JAM.policy.p3);
      v9594 = f$$199.attr;
    }
    if (v9594) {
      this.attr = f$$199.attr;
    }
    return;
  }
  return v1943;
}
function v1942() {
  function v1941(a$$725, c$$575) {
    this.type = "path";
    this.attr = Smits.PhyloCanvas.Render.Style.path;
    this.path = a$$725;
    var v9596 = c$$575;
    if (v9596) {
      var v21145 = Smits.Common;
      JAM.call(v21145.apply, v21145, [this, c$$575], JAM.policy.p3);
      v9596 = c$$575.attr;
    }
    if (v9596) {
      this.attr = c$$575.attr;
    }
    return;
  }
  return v1941;
}
function v1940() {
  function v1939(a$$724, c$$574, b$$701, f$$198) {
    this.type = "text";
    this.attr = Smits.PhyloCanvas.Render.Style.text;
    this.x = a$$724;
    this.y = c$$574;
    this.text = b$$701;
    var v9598 = f$$198;
    if (v9598) {
      var v21146 = Smits.Common;
      JAM.call(v21146.apply, v21146, [this, f$$198], JAM.policy.p3);
      v9598 = f$$198.attr;
    }
    if (v9598) {
      this.attr = f$$198.attr;
    }
    return;
  }
  return v1939;
}
function v1938() {
  function v1937(a$$723, c$$573, b$$700, f$$197, k$$83) {
    this.type = "line";
    this.attr = Smits.PhyloCanvas.Render.Style.line;
    this.x1 = a$$723;
    this.x2 = c$$573;
    this.y1 = b$$700;
    this.y2 = f$$197;
    var v9600 = k$$83;
    if (v9600) {
      var v21147 = Smits.Common;
      JAM.call(v21147.apply, v21147, [this, k$$83], JAM.policy.p3);
      v9600 = k$$83.attr;
    }
    if (v9600) {
      this.attr = k$$83.attr;
    }
    return;
  }
  return v1937;
}
function v1936(a$$722, c$$572, b$$699) {
  var v2997 = this.jsOverride;
  if (!v2997) {
    var v9601;
    if (b$$699) {
      var v15360;
      if (b$$699 == "circular") {
        var v21148 = this.Circular;
        var v30936 = parseFloat(c$$572);
        introspect(JAM.policy.p2) {
          v15360 = v21148[a$$722] = v30936;
        }
      } else {
        var v21149 = b$$699 == "rectangular";
        if (v21149) {
          var v24194 = this.Rectangular;
          var v30937 = parseFloat(c$$572);
          introspect(JAM.policy.p2) {
            v21149 = v24194[a$$722] = v30937;
          }
        }
        v15360 = v21149;
      }
      v9601 = v15360;
    } else {
      var v30938 = parseFloat(c$$572);
      introspect(JAM.policy.p2) {
        v9601 = this[a$$722] = v30938;
      }
    }
    v9601;
  }
  return;
}
function v1935(a$$721) {
  var v2998 = a$$721.node.edgeCircleHighlight;
  JAM.call(v2998.hide, v2998, [], JAM.policy.p3);
  var v2999 = a$$721.textEl;
  JAM.call(v2999.attr, v2999, [{fill:"#000"}], JAM.policy.p3);
  return;
}
function v1934(a$$720) {
  if (a$$720.node.edgeCircleHighlight) {
    var v3001 = a$$720.node.edgeCircleHighlight;
    JAM.call(v3001.show, v3001, [], JAM.policy.p3);
  } else {
    var v3002 = a$$720.svg;
    var c$$571 = JAM.call(v3002.draw, v3002, [JAM.new(Smits.PhyloCanvas.Render.Circle, [a$$720.x, a$$720.y, 5, {attr:Smits.PhyloCanvas.Render.Style.highlightedEdgeCircle}])], JAM.policy.p3);
    a$$720.node.edgeCircleHighlight = c$$571[0];
  }
  var v3006 = a$$720.textEl;
  JAM.call(v3006.attr, v3006, [{fill:"red"}], JAM.policy.p3);
  return;
}
function v1933(a$$719, c$$570) {
  var v3008;
  if (this[a$$719]) {
    v3008 = this[a$$719];
  } else {
    v3008 = this[c$$570];
  }
  return v3008;
}
function v1932() {
  function v1931(d$$419) {
    function v1930() {
      return f$$196;
    }
    function v1929() {
      return c$$567;
    }
    function v1928() {
      return a$$716;
    }
    function v1927() {
      return b$$695;
    }
    this.getRoot = v1927;
    this.getLevels = v1928;
    this.getNewickLen = v1929;
    this.getValidate = v1930;
    var j$$116 = d$$419.nexmlJson.nexml;
    var i$$230 = j$$116.render;
    var v9611 = i$$230;
    if (v9611) {
      v9611 = i$$230.styles;
    }
    if (v9611) {
      var e$$363 = i$$230.styles;
      var h$$166;
      for (h$$166 in e$$363) {
        var v9612 = h$$166 != "_children";
        if (v9612) {
          v9612 = h$$166 != "Text";
        }
        if (v9612) {
          var v15363 = e$$363[h$$166]["@attributes"].type;
          if (v15363) {
            v15363 = e$$363[h$$166]["@attributes"].type == "radialGradient";
          }
          var v9613 = v15363;
          if (v9613) {
            v9613 = Raphael.svg;
          }
          if (v9613) {
            e$$363[h$$166].name = h$$166;
            e$$363[h$$166].type = e$$363[h$$166]["@attributes"].type;
            var v21155 = Smits.PhyloCanvas.Render.Style;
            introspect(JAM.policy.p2) {
              v21155[h$$166] = e$$363[h$$166];
            }
            var v15364 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
            if (!v15364) {
              Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList = [];
            }
            var v9614 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
            JAM.call(v9614.push, v9614, [h$$166], JAM.policy.p3);
          } else {
            var n$$103;
            var v15366 = Smits.PhyloCanvas.Render.Style[h$$166];
            if (!v15366) {
              var v21161 = Smits.PhyloCanvas.Render.Style;
              introspect(JAM.policy.p2) {
                v21161[h$$166] = {};
              }
            }
            for (n$$103 in e$$363[h$$166]["@attributes"]) {
              var v15368 = n$$103 != "_attributes";
              if (v15368) {
                v15368 = n$$103 != "_children";
              }
              var v9615 = v15368;
              if (v9615) {
                v9615 = n$$103 != "type";
              }
              var v3010 = v9615;
              if (v3010) {
                var v9616 = Smits.PhyloCanvas.Render.Style[h$$166];
                var v9617 = JAM.call(n$$103.replace, n$$103, ["_", "-"], JAM.policy.p3);
                var v15370 = e$$363[h$$166]["@attributes"];
                introspect(JAM.policy.p2) {
                  v9616[v9617] = v15370[n$$103];
                }
              }
            }
          }
        }
      }
    }
    var v9618 = i$$230;
    if (v9618) {
      v9618 = i$$230.parameters;
    }
    var v3015 = v9618;
    if (v3015) {
      m$$55(i$$230.parameters);
    }
    var v9620 = i$$230;
    if (v9620) {
      v9620 = i$$230.charts;
    }
    if (v9620) {
      i$$230 = i$$230.charts;
      for (h$$166 in i$$230) {
        i$$230[h$$166]["@attributes"].chart = h$$166;
        var v9622;
        if (i$$230[h$$166]["@attributes"].type == "binary") {
          var v15372 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
          v9622 = JAM.call(v15372.push, v15372, [i$$230[h$$166]["@attributes"]], JAM.policy.p3);
        } else {
          var v15374;
          if (i$$230[h$$166]["@attributes"].type == "integratedBinary") {
            var v21168 = Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts;
            v15374 = JAM.call(v21168.push, v21168, [i$$230[h$$166]["@attributes"]], JAM.policy.p3);
          } else {
            var v21170 = i$$230[h$$166]["@attributes"].type == "bar";
            if (v21170) {
              var v24213 = Smits.PhyloCanvas.Render.Parameters.barCharts;
              v21170 = JAM.call(v24213.push, v24213, [i$$230[h$$166]["@attributes"]], JAM.policy.p3);
            }
            v15374 = v21170;
          }
          v9622 = v15374;
        }
        v9622;
      }
    }
    var v15376 = d$$419.tree;
    if (v15376) {
      v15376 = j$$116.trees[0];
    }
    var v9623 = v15376;
    if (v9623) {
      v9623 = j$$116.trees[0].tree[d$$419.tree - 1];
    }
    if (v9623) {
      k$$82 = j$$116.trees[0].tree[d$$419.tree - 1].edge;
      l$$88 = j$$116.trees[0].tree[d$$419.tree - 1].node;
    } else {
      h$$166 = 0;
      var v3019 = h$$166 < j$$116.trees.tree.edge.length;
      for (;v3019;) {
        JAM.call(k$$82.push, k$$82, [j$$116.trees.tree.edge[h$$166]["@attributes"]], JAM.policy.p3);
        h$$166++;
        v3019 = h$$166 < j$$116.trees.tree.edge.length;
      }
      h$$166 = 0;
      var v3023 = h$$166 < j$$116.trees.tree.node.length;
      for (;v3023;) {
        d$$419 = j$$116.trees.tree.node[h$$166]["@attributes"];
        if (d$$419.label) {
          d$$419.chart = j$$116.trees.tree.node[h$$166].chart;
        }
        JAM.call(l$$88.push, l$$88, [d$$419], JAM.policy.p3);
        h$$166++;
        v3023 = h$$166 < j$$116.trees.tree.node.length;
      }
    }
    h$$166 = 0;
    var v3026 = h$$166 < l$$88.length;
    for (;v3026;) {
      var v9634 = l$$88[h$$166].root;
      if (v9634) {
        v9634 = l$$88[h$$166].root == "true";
      }
      var v3025 = v9634;
      if (v3025) {
        b$$695 = l$$88[h$$166];
      }
      h$$166++;
      v3026 = h$$166 < l$$88.length;
    }
    var v3027;
    if (b$$695) {
      b$$695 = p$$55(b$$695);
      v3027 = b$$695 = g$$206(b$$695);
    } else {
      v3027 = f$$196 = "Error. Currently, only rooted NeXML trees are supported.";
    }
    v3027;
    return;
  }
  function m$$55(a$$718, c$$569) {
    var b$$698;
    for (b$$698 in a$$718) {
      var v9636 = b$$698 != "_children";
      if (v9636) {
        v9636 = b$$698 != "Text";
      }
      var v3028 = v9636;
      if (v3028) {
        var v9637;
        var v21187 = b$$698 == "rectangular";
        if (!v21187) {
          v21187 = b$$698 == "circular";
        }
        if (v21187) {
          v9637 = m$$55(a$$718[b$$698], b$$698);
        } else {
          var v21188 = Smits.PhyloCanvas.Render.Parameters[b$$698];
          if (!v21188) {
            var v24225 = Smits.PhyloCanvas.Render.Parameters;
            introspect(JAM.policy.p2) {
              v24225[b$$698] = {};
            }
          }
          var v21189 = Smits.PhyloCanvas.Render.Parameters;
          v9637 = JAM.call(v21189.set, v21189, [b$$698, a$$718[b$$698], c$$569], JAM.policy.p3);
        }
        v9637;
      }
    }
    return;
  }
  function g$$206(d$$418) {
    var v9638 = d$$418.children;
    if (v9638) {
      v9638 = d$$418.children.length;
    }
    if (v9638) {
      var b$$697 = 0;
      var v3034 = b$$697 < d$$418.children.length;
      for (;v3034;) {
        var i$$229 = d$$418.children[b$$697];
        i$$229.newickLen = JAM.call(Math.round, Math, [(i$$229.len + d$$418.newickLen) * 1E4], JAM.policy.p3) / 1E4;
        if (i$$229.level > a$$716) {
          a$$716 = i$$229.level;
        }
        if (i$$229.newickLen > c$$567) {
          c$$567 = i$$229.newickLen;
        }
        var v3033 = i$$229.children.length > 0;
        if (v3033) {
          g$$206(i$$229, d$$418);
        }
        b$$697++;
        v3034 = b$$697 < d$$418.children.length;
      }
    }
    return d$$418;
  }
  function p$$55(a$$717, c$$568, i$$228) {
    var e$$362 = new Smits.PhyloCanvas.Node;
    if (i$$228) {
      e$$362.level = i$$228.level + 1;
    }
    i$$228 = 0;
    var v3041 = i$$228 < k$$82.length;
    for (;v3041;) {
      if (k$$82[i$$228].source == a$$717.id) {
        var b$$696 = 0;
        var v3039 = b$$696 < l$$88.length;
        for (;v3039;) {
          var v3038 = k$$82[i$$228].target == l$$88[b$$696].id;
          if (v3038) {
            var v9652 = e$$362.children;
            JAM.call(v9652.push, v9652, [p$$55(l$$88[b$$696], k$$82[i$$228].length, e$$362)], JAM.policy.p3);
          }
          b$$696++;
          v3039 = b$$696 < l$$88.length;
        }
      }
      i$$228++;
      v3041 = i$$228 < k$$82.length;
    }
    var v9656 = c$$568;
    if (v9656) {
      var v21194 = Smits.Common;
      var v30939 = JAM.call(v21194.roundFloat, v21194, [c$$568, 4], JAM.policy.p3);
      e$$362.len = v30939;
      v9656 = e$$362.len == 0;
    }
    if (v9656) {
      e$$362.len = 1E-4;
    }
    if (a$$717.label) {
      e$$362.type = "label";
      e$$362.name = a$$717.label;
      if (a$$717.accession) {
        e$$362.accession = a$$717.accession;
      }
      if (a$$717.style) {
        e$$362.style = a$$717.style;
      }
      if (a$$717.bgStyle) {
        e$$362.bgStyle = a$$717.bgStyle;
      }
    }
    if (a$$717.chart) {
      e$$362.chart = a$$717.chart;
    }
    var v9657 = e$$362;
    if (v9657) {
      v9657 = e$$362.level > 1;
    }
    var v3048 = v9657;
    if (v3048) {
      var v9658 = e$$362.len;
      if (!v9658) {
        f$$196 = "Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.";
      }
    }
    return e$$362;
  }
  var a$$716 = 0;
  var c$$567 = 0;
  var b$$695;
  var f$$196;
  var k$$82 = [];
  var l$$88 = [];
  return v1931;
}
function v1926() {
  function v1925(m$$54, d$$417) {
    function v1924() {
      return f$$195;
    }
    function v1923() {
      return c$$565;
    }
    function v1922() {
      return a$$714;
    }
    function v1921() {
      return b$$693;
    }
    this.getRoot = v1921;
    this.getLevels = v1922;
    this.getNewickLen = v1923;
    this.getValidate = v1924;
    var v3049;
    var v21196 = d$$417.tree;
    if (v21196) {
      v21196 = m$$54.trees[0];
    }
    var v15406 = v21196;
    if (v15406) {
      v15406 = m$$54.trees[0].tree[d$$417.tree - 1];
    }
    if (v15406) {
      k$$81 = m$$54.trees[0].tree[d$$417.tree - 1].edge;
      v3049 = l$$87 = m$$54.trees[0].tree[d$$417.tree - 1].node;
    } else {
      k$$81 = m$$54.trees[0].tree[0].edge;
      v3049 = l$$87 = m$$54.trees[0].tree[0].node;
    }
    v3049;
    var j$$115 = 0;
    var v3054 = j$$115 < l$$87.length;
    for (;v3054;) {
      var i$$227 = 0;
      var v9661 = l$$87[j$$115].root;
      if (v9661) {
        v9661 = l$$87[j$$115].root == "true";
      }
      if (v9661) {
        b$$693 = l$$87[j$$115];
        break;
      }
      var e$$361 = 0;
      var v3052 = e$$361 < k$$81.length;
      for (;v3052;) {
        var v3051 = k$$81[e$$361].target == l$$87[j$$115].id;
        if (v3051) {
          i$$227++;
        }
        e$$361++;
        v3052 = e$$361 < k$$81.length;
      }
      if (i$$227 == 0) {
        b$$693 = l$$87[j$$115];
        break;
      }
      j$$115++;
      v3054 = j$$115 < l$$87.length;
    }
    var v3055;
    if (b$$693) {
      b$$693 = p$$54(b$$693);
      v3055 = b$$693 = g$$205(b$$693);
    } else {
      v3055 = f$$195 = "Error. Currently, only rooted NeXML trees are supported.";
    }
    v3055;
    return;
  }
  function g$$205(b$$694) {
    var v9667 = b$$694.children;
    if (v9667) {
      v9667 = b$$694.children.length;
    }
    if (v9667) {
      var d$$416 = 0;
      var v3061 = d$$416 < b$$694.children.length;
      for (;v3061;) {
        var j$$114 = b$$694.children[d$$416];
        j$$114.newickLen = JAM.call(Math.round, Math, [(j$$114.len + b$$694.newickLen) * 1E4], JAM.policy.p3) / 1E4;
        if (j$$114.level > a$$714) {
          a$$714 = j$$114.level;
        }
        if (j$$114.newickLen > c$$565) {
          c$$565 = j$$114.newickLen;
        }
        var v3060 = j$$114.children.length > 0;
        if (v3060) {
          g$$205(j$$114, b$$694);
        }
        d$$416++;
        v3061 = d$$416 < b$$694.children.length;
      }
    }
    return b$$694;
  }
  function p$$54(a$$715, d$$415, c$$566) {
    var i$$226 = new Smits.PhyloCanvas.Node;
    if (c$$566) {
      i$$226.level = c$$566.level + 1;
    }
    c$$566 = 0;
    var v3068 = c$$566 < k$$81.length;
    for (;v3068;) {
      if (k$$81[c$$566].source == a$$715.id) {
        var e$$360 = 0;
        var v3066 = e$$360 < l$$87.length;
        for (;v3066;) {
          var v3065 = k$$81[c$$566].target == l$$87[e$$360].id;
          if (v3065) {
            var v9681 = i$$226.children;
            JAM.call(v9681.push, v9681, [p$$54(l$$87[e$$360], k$$81[c$$566].length, i$$226)], JAM.policy.p3);
          }
          e$$360++;
          v3066 = e$$360 < l$$87.length;
        }
      }
      c$$566++;
      v3068 = c$$566 < k$$81.length;
    }
    var v15425 = i$$226;
    if (v15425) {
      v15425 = i$$226.level > 0;
    }
    var v9685 = v15425;
    if (v9685) {
      v9685 = !i$$226.len;
    }
    if (v9685) {
      i$$226.len = 1;
    }
    var v9686 = d$$415;
    if (v9686) {
      var v21210 = Smits.Common;
      var v30940 = JAM.call(v21210.roundFloat, v21210, [d$$415, 4], JAM.policy.p3);
      i$$226.len = v30940;
      v9686 = i$$226.len == 0;
    }
    if (v9686) {
      i$$226.len = 1E-4;
    }
    var v9687 = a$$715.label;
    if (v9687) {
      i$$226.type = "label";
      i$$226.name = a$$715.label;
      v9687 = a$$715.style;
    }
    if (v9687) {
      i$$226.style = a$$715.style;
    }
    return i$$226;
  }
  var a$$714 = 0;
  var c$$565 = 0;
  var b$$693;
  var f$$195;
  var k$$81;
  var l$$87;
  return v1925;
}
function v1920() {
  function v1919(g$$204) {
    function v1918() {
      return f$$193;
    }
    function v1917() {
      return c$$562;
    }
    function v1916() {
      return a$$711;
    }
    function v1915() {
      return b$$691;
    }
    this.getRoot = v1915;
    this.getLevels = v1916;
    this.getNewickLen = v1917;
    this.getValidate = v1918;
    var v15427 = g$$204.phylogeny;
    if (v15427) {
      v15427 = g$$204.phylogeny[0];
    }
    var v9688 = v15427;
    if (v9688) {
      v9688 = g$$204.phylogeny[0].clade;
    }
    var v3072 = v9688;
    if (v3072) {
      b$$691 = k$$80(g$$204.phylogeny[0].clade[0]);
    }
    var v21215 = g$$204.phylogeny;
    if (v21215) {
      v21215 = g$$204.phylogeny[0];
    }
    var v15430 = v21215;
    if (v15430) {
      v15430 = g$$204.phylogeny[0].render;
    }
    var v9690 = v15430;
    if (v9690) {
      v9690 = g$$204.phylogeny[0].render[0];
    }
    if (v9690) {
      var v9691 = g$$204 = g$$204.phylogeny[0].render[0];
      if (v9691) {
        v9691 = g$$204.styles;
      }
      if (v9691) {
        var m$$53 = g$$204.styles[0];
        var d$$414;
        for (d$$414 in m$$53) {
          var v9692 = d$$414 != "_children";
          if (v9692) {
            v9692 = d$$414 != "Text";
          }
          if (v9692) {
            var v15433 = m$$53[d$$414][0].type;
            if (v15433) {
              v15433 = m$$53[d$$414][0].type == "radialGradient";
            }
            var v9693 = v15433;
            if (v9693) {
              v9693 = Raphael.svg;
            }
            if (v9693) {
              m$$53[d$$414][0].name = d$$414;
              var v21222 = Smits.PhyloCanvas.Render.Style;
              var v24246 = m$$53[d$$414];
              introspect(JAM.policy.p2) {
                v21222[d$$414] = v24246[0];
              }
              var v15434 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
              if (!v15434) {
                Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList = [];
              }
              var v9694 = Smits.PhyloCanvas.Render.Style.jsphylosvgGradientList;
              JAM.call(v9694.push, v9694, [d$$414], JAM.policy.p3);
            } else {
              var j$$113;
              var v15436 = Smits.PhyloCanvas.Render.Style[d$$414];
              if (!v15436) {
                var v21228 = Smits.PhyloCanvas.Render.Style;
                introspect(JAM.policy.p2) {
                  v21228[d$$414] = {};
                }
              }
              for (j$$113 in m$$53[d$$414][0]) {
                var v15438 = j$$113 != "_attributes";
                if (v15438) {
                  v15438 = j$$113 != "_children";
                }
                var v9695 = v15438;
                if (v9695) {
                  v9695 = j$$113 != "type";
                }
                var v3074 = v9695;
                if (v3074) {
                  var v9696 = Smits.PhyloCanvas.Render.Style[d$$414];
                  var v9697 = JAM.call(j$$113.replace, j$$113, ["_", "-"], JAM.policy.p3);
                  var v15440 = m$$53[d$$414][0];
                  introspect(JAM.policy.p2) {
                    v9696[v9697] = v15440[j$$113];
                  }
                }
              }
            }
          }
        }
      }
      var v9698 = g$$204;
      if (v9698) {
        v9698 = g$$204.parameters;
      }
      var v3079 = v9698;
      if (v3079) {
        p$$53(g$$204.parameters[0]);
      }
      var v9700 = g$$204;
      if (v9700) {
        v9700 = g$$204.charts;
      }
      if (v9700) {
        g$$204 = g$$204.charts[0];
        for (d$$414 in g$$204) {
          var v9701 = d$$414 != "_children";
          if (v9701) {
            v9701 = d$$414 != "Text";
          }
          if (v9701) {
            for (j$$113 in g$$204[d$$414]) {
              if (g$$204[d$$414][j$$113].type == "binary") {
                g$$204[d$$414][j$$113].chart = d$$414;
                var v9704 = Smits.PhyloCanvas.Render.Parameters.binaryCharts;
                JAM.call(v9704.push, v9704, [g$$204[d$$414][j$$113]], JAM.policy.p3);
              } else {
                if (g$$204[d$$414][j$$113].type == "integratedBinary") {
                  g$$204[d$$414][j$$113].chart = d$$414;
                  var v9708 = Smits.PhyloCanvas.Render.Parameters.integratedBinaryCharts;
                  JAM.call(v9708.push, v9708, [g$$204[d$$414][j$$113]], JAM.policy.p3);
                } else {
                  if (g$$204[d$$414][j$$113].type == "bar") {
                    g$$204[d$$414][j$$113].chart = d$$414;
                    var v9712 = Smits.PhyloCanvas.Render.Parameters.barCharts;
                    JAM.call(v9712.push, v9712, [g$$204[d$$414][j$$113]], JAM.policy.p3);
                  }
                }
              }
            }
          }
        }
      }
    }
    b$$691 = l$$86(b$$691);
    return;
  }
  function p$$53(a$$713, c$$564) {
    var d$$413;
    for (d$$413 in a$$713) {
      var v9714 = d$$413 != "_children";
      if (v9714) {
        v9714 = d$$413 != "Text";
      }
      var v3088 = v9714;
      if (v3088) {
        var v9715;
        var v21238 = d$$413 == "rectangular";
        if (!v21238) {
          v21238 = d$$413 == "circular";
        }
        if (v21238) {
          v9715 = p$$53(a$$713[d$$413][0], d$$413);
        } else {
          var v21240 = Smits.PhyloCanvas.Render.Parameters[d$$413];
          if (!v21240) {
            var v24258 = Smits.PhyloCanvas.Render.Parameters;
            introspect(JAM.policy.p2) {
              v24258[d$$413] = {};
            }
          }
          var v21241 = Smits.PhyloCanvas.Render.Parameters;
          v9715 = JAM.call(v21241.set, v21241, [d$$413, a$$713[d$$413][0].Text, c$$564], JAM.policy.p3);
        }
        v9715;
      }
    }
    return;
  }
  function l$$86(b$$692) {
    var v9716 = b$$692.children;
    if (v9716) {
      v9716 = b$$692.children.length;
    }
    if (v9716) {
      var f$$194 = 0;
      var v3094 = f$$194 < b$$692.children.length;
      for (;v3094;) {
        var d$$412 = b$$692.children[f$$194];
        d$$412.newickLen = JAM.call(Math.round, Math, [(d$$412.len + b$$692.newickLen) * 1E4], JAM.policy.p3) / 1E4;
        if (d$$412.level > a$$711) {
          a$$711 = d$$412.level;
        }
        if (d$$412.newickLen > c$$562) {
          c$$562 = d$$412.newickLen;
        }
        var v3093 = d$$412.children.length > 0;
        if (v3093) {
          l$$86(d$$412, b$$692);
        }
        f$$194++;
        v3094 = f$$194 < b$$692.children.length;
      }
    }
    return b$$692;
  }
  function k$$80(a$$712, c$$563) {
    var d$$411 = new Smits.PhyloCanvas.Node;
    if (c$$563) {
      d$$411.level = c$$563.level + 1;
    }
    var v9724 = a$$712.clade;
    if (v9724) {
      v9724 = a$$712.clade.length;
    }
    if (v9724) {
      var j$$112 = 0;
      var v3100 = j$$112 < a$$712.clade.length;
      for (;v3100;) {
        var v3098 = d$$411.children;
        JAM.call(v3098.push, v3098, [k$$80(a$$712.clade[j$$112], d$$411)], JAM.policy.p3);
        j$$112++;
        v3100 = j$$112 < a$$712.clade.length;
      }
    }
    if (a$$712.branch_length) {
      if (typeof a$$712.branch_length === "object") {
        a$$712.branch_length = a$$712.branch_length[0].Text;
      }
      var v3104 = Smits.Common;
      var v30941 = JAM.call(v3104.roundFloat, v3104, [a$$712.branch_length, 4], JAM.policy.p3);
      d$$411.len = v30941;
      if (d$$411.len == 0) {
        d$$411.len = 1E-4;
      }
    }
    if (a$$712.name) {
      d$$411.type = "label";
      d$$411.name = a$$712.name[0].Text;
      var v9732 = a$$712.name[0];
      if (v9732) {
        v9732 = a$$712.name[0].style;
      }
      if (v9732) {
        d$$411.style = a$$712.name[0].style;
      }
      var v9734 = a$$712.name[0];
      if (v9734) {
        v9734 = a$$712.name[0].bgStyle;
      }
      if (v9734) {
        d$$411.bgStyle = a$$712.name[0].bgStyle;
      }
    } else {
      if (a$$712.confidence) {
        d$$411.name = a$$712.confidence[0].Text;
      }
    }
    var v24262 = a$$712.sequence;
    if (v24262) {
      v24262 = a$$712.sequence[0];
    }
    var v21247 = v24262;
    if (v21247) {
      v21247 = a$$712.sequence[0].name;
    }
    var v15471 = v21247;
    if (v15471) {
      v15471 = a$$712.sequence[0].name[0];
    }
    var v9737 = v15471;
    if (v9737) {
      v9737 = a$$712.sequence[0].name[0].Text;
    }
    if (v9737) {
      d$$411.sequenceName = a$$712.sequence[0].name[0].Text;
    }
    var v9739 = a$$712.taxonomy;
    if (v9739) {
      v9739 = a$$712.taxonomy[0];
    }
    if (v9739) {
      var v15475 = a$$712.taxonomy[0].scientific_name;
      if (v15475) {
        v15475 = a$$712.taxonomy[0].scientific_name[0];
      }
      var v9740 = v15475;
      if (v9740) {
        v9740 = a$$712.taxonomy[0].scientific_name[0].Text;
      }
      if (v9740) {
        d$$411.taxonomyScientificName = a$$712.taxonomy[0].scientific_name[0].Text;
      }
      var v15478 = a$$712.taxonomy[0].common_name;
      if (v15478) {
        v15478 = a$$712.taxonomy[0].common_name[0];
      }
      var v9742 = v15478;
      if (v9742) {
        v9742 = a$$712.taxonomy[0].common_name[0].Text;
      }
      if (v9742) {
        d$$411.taxonomyCommonName = a$$712.taxonomy[0].common_name[0].Text;
      }
    }
    var v24272 = a$$712.sequence;
    if (v24272) {
      v24272 = a$$712.sequence[0];
    }
    var v21259 = v24272;
    if (v21259) {
      v21259 = a$$712.sequence[0].accession;
    }
    var v15481 = v21259;
    if (v15481) {
      v15481 = a$$712.sequence[0].accession[0];
    }
    var v9744 = v15481;
    if (v9744) {
      v9744 = a$$712.sequence[0].accession[0].Text;
    }
    if (v9744) {
      d$$411.sequenceAccession = a$$712.sequence[0].accession[0].Text;
    }
    if (a$$712.point) {
      d$$411.LatLong = [a$$712.point[0].lat[0].Text, a$$712.point[0]["long"][0].Text];
    }
    if (!d$$411.name) {
      if (d$$411.sequenceName) {
        d$$411.name = d$$411.sequenceName;
      } else {
        if (d$$411.taxonomyScientificName) {
          d$$411.name = d$$411.taxonomyScientificName;
        } else {
          if (d$$411.taxonomyCommonName) {
            d$$411.name = d$$411.taxonomyCommonName;
          } else {
            if (d$$411.sequenceAccession) {
              d$$411.name = d$$411.sequenceAccession;
            }
          }
        }
      }
      if (d$$411.name) {
        d$$411.type = "label";
      }
    }
    if (a$$712.annotation) {
      var v21265 = a$$712.annotation[0];
      if (v21265) {
        v21265 = a$$712.annotation[0].desc;
      }
      var v15486 = v21265;
      if (v15486) {
        v15486 = a$$712.annotation[0].desc[0];
      }
      var v9749 = v15486;
      if (v9749) {
        v9749 = a$$712.annotation[0].desc[0].Text;
      }
      if (v9749) {
        d$$411.description = a$$712.annotation[0].desc[0].Text;
      }
      var v21269 = a$$712.annotation[0];
      if (v21269) {
        v21269 = a$$712.annotation[0].uri;
      }
      var v15489 = v21269;
      if (v15489) {
        v15489 = a$$712.annotation[0].uri[0];
      }
      var v9751 = v15489;
      if (v9751) {
        v9751 = a$$712.annotation[0].uri[0].Text;
      }
      if (v9751) {
        d$$411.uri = a$$712.annotation[0].uri[0].Text;
      }
      var v9753 = a$$712.annotation[0];
      if (v9753) {
        v9753 = a$$712.annotation[0].img;
      }
      if (v9753) {
        for (j$$112 in a$$712.annotation[0].img) {
          var v9755 = Smits.Common;
          if (JAM.call(v9755.isInteger, v9755, [j$$112], JAM.policy.p3)) {
            var v3138 = d$$411.img;
            var v9756 = a$$712.annotation[0].img[j$$112];
            introspect(JAM.policy.p2) {
              v3138[j$$112] = v9756.Text;
            }
          }
        }
      }
    }
    var v9757 = a$$712.chart;
    if (v9757) {
      v9757 = a$$712.chart[0];
    }
    if (v9757) {
      for (j$$112 in a$$712.chart[0]) {
        var v9759 = j$$112 != "Text";
        if (v9759) {
          v9759 = j$$112 != "_children";
        }
        if (v9759) {
          var v3143 = d$$411.chart;
          var v9760 = a$$712.chart[0][j$$112][0];
          introspect(JAM.policy.p2) {
            v3143[j$$112] = v9760.Text;
          }
        }
      }
    }
    var v9761 = d$$411;
    if (v9761) {
      v9761 = d$$411.level > 1;
    }
    var v3147 = v9761;
    if (v3147) {
      var v9762 = d$$411.len;
      if (!v9762) {
        f$$193 = "Error. Please include Branch Lengths - we only draw rooted phylogenetic trees.";
      }
    }
    return d$$411;
  }
  var a$$711 = 0;
  var c$$562 = 0;
  var b$$691;
  var f$$193;
  return v1919;
}
function v1914() {
  function v1913(c$$561) {
    function v1912() {
      return;
    }
    function v1911() {
      return k$$79;
    }
    function v1910() {
      return f$$192;
    }
    function v1909() {
      return l$$85;
    }
    this.getRoot = v1909;
    this.getLevels = v1910;
    this.getNewickLen = v1911;
    this.getValidate = v1912;
    k$$79 = f$$192 = 0;
    a$$706 = c$$561;
    b$$689 = 0;
    d$$409();
    l$$85 = g$$202();
    l$$85 = j$$110(l$$85);
    return;
  }
  function j$$110(d$$410) {
    var v9763 = d$$410.children;
    if (v9763) {
      v9763 = d$$410.children.length;
    }
    if (v9763) {
      var c$$560 = 0;
      var v3155 = c$$560 < d$$410.children.length;
      for (;v3155;) {
        var a$$710 = d$$410.children[c$$560];
        if (a$$710.len === 0) {
          a$$710.len = 1;
        }
        var v3150 = Smits.Common;
        var v30942 = JAM.call(v3150.roundFloat, v3150, [a$$710.len + d$$410.newickLen, 4], JAM.policy.p3);
        a$$710.newickLen = v30942;
        if (a$$710.level > f$$192) {
          f$$192 = a$$710.level;
        }
        if (a$$710.newickLen > k$$79) {
          k$$79 = a$$710.newickLen;
        }
        var v3154 = a$$710.children.length > 0;
        if (v3154) {
          j$$110(a$$710, d$$410);
        }
        c$$560++;
        v3155 = c$$560 < d$$410.children.length;
      }
    }
    return d$$410;
  }
  function d$$409() {
    c$$559 = JAM.call(a$$706.charAt, a$$706, [b$$689], JAM.policy.p3);
    b$$689 = b$$689 + 1;
    return;
  }
  function m$$52() {
    var a$$709 = "";
    var v21276 = c$$559 !== ":";
    if (v21276) {
      v21276 = c$$559 !== ")";
    }
    var v15504 = v21276;
    if (v15504) {
      v15504 = c$$559 !== ",";
    }
    var v9772 = v15504;
    if (v9772) {
      v9772 = c$$559 !== ";";
    }
    var v3157 = v9772;
    for (;v3157;) {
      a$$709 = a$$709 + c$$559;
      d$$409();
      var v21277 = c$$559 !== ":";
      if (v21277) {
        v21277 = c$$559 !== ")";
      }
      var v15505 = v21277;
      if (v15505) {
        v15505 = c$$559 !== ",";
      }
      var v9773 = v15505;
      if (v9773) {
        v9773 = c$$559 !== ";";
      }
      v3157 = v9773;
    }
    return a$$709;
  }
  function g$$202(a$$708) {
    var e$$359 = new Smits.PhyloCanvas.Node;
    if (a$$708) {
      e$$359.level = a$$708.level + 1;
    }
    var v3160 = c$$559 !== ")";
    for (;v3160;) {
      d$$409();
      var v9775;
      if (c$$559 === "(") {
        var v15506 = e$$359.children;
        v9775 = JAM.call(v15506.push, v15506, [g$$202(e$$359)], JAM.policy.p3);
      } else {
        var v15508 = e$$359.children;
        v9775 = JAM.call(v15508.push, v15508, [p$$52(e$$359)], JAM.policy.p3);
      }
      v9775;
      v3160 = c$$559 !== ")";
    }
    d$$409();
    var v21278 = c$$559 !== ":";
    if (v21278) {
      v21278 = c$$559 !== ")";
    }
    var v15511 = v21278;
    if (v15511) {
      v15511 = c$$559 !== ",";
    }
    var v9776 = v15511;
    if (v9776) {
      v9776 = c$$559 !== ";";
    }
    if (v9776) {
      e$$359.type = "label";
      var v30943 = m$$52();
      e$$359.name = v30943;
    }
    if (c$$559 === ":") {
      d$$409();
      var v3162 = Smits.Common;
      var v30944 = JAM.call(v3162.roundFloat, v3162, [m$$52(), 4], JAM.policy.p3);
      e$$359.len = v30944;
      if (e$$359.len == 0) {
        e$$359.len = 1E-4;
      }
      e$$359.type = "stem";
    }
    return e$$359;
  }
  function p$$52(a$$707) {
    var e$$358 = new Smits.PhyloCanvas.Node;
    var v9779 = c$$559 !== ")";
    if (v9779) {
      v9779 = c$$559 !== ",";
    }
    var v3171 = v9779;
    for (;v3171;) {
      if (c$$559 === ":") {
        d$$409();
        var v21279 = Smits.Common;
        var v30945 = JAM.call(v21279.roundFloat, v21279, [m$$52(), 4], JAM.policy.p3);
        e$$358.len = v30945;
        if (e$$358.len == 0) {
          e$$358.len = 1E-4;
        }
      } else {
        var v9780 = c$$559 === "'";
        if (!v9780) {
          v9780 = c$$559 === '"';
        }
        if (v9780) {
          e$$358.type = "label";
          var g$$203 = e$$358;
          var j$$111 = c$$559;
          var b$$690 = "";
          var v3168 = c$$559 !== j$$111;
          for (;v3168;) {
            b$$690 = b$$690 + c$$559;
            d$$409();
            v3168 = c$$559 !== j$$111;
          }
          g$$203.name = b$$690;
        } else {
          e$$358.type = "label";
          var v30946 = m$$52();
          e$$358.name = v30946;
        }
      }
      var v9781 = c$$559 !== ")";
      if (v9781) {
        v9781 = c$$559 !== ",";
      }
      v3171 = v9781;
    }
    e$$358.level = a$$707.level + 1;
    return e$$358;
  }
  var a$$706;
  var c$$559;
  var b$$689;
  var f$$192 = 0;
  var k$$79 = 0;
  var l$$85;
  return v1913;
}
function v1908(a$$705) {
  if (this._midBranchPosition !== !1) {
    return this._midBranchPosition;
  }
  var c$$558 = [0, 0];
  var b$$688 = 0;
  var v3176 = b$$688 < this.children.length;
  for (;v3176;) {
    var f$$191 = this.children[b$$688];
    var v3175;
    var v15515 = f$$191.children;
    if (v15515) {
      v15515 = f$$191.children.length > 0;
    }
    if (v15515) {
      var v9785;
      var v21282 = b$$688 == 0;
      if (v21282) {
        v21282 = a$$705;
      }
      if (v21282) {
        var v30947 = JAM.call(f$$191.getMidbranchPosition, f$$191, [!0], JAM.policy.p3);
        c$$558[0] = v30947;
        v9785 = c$$558[1] = c$$558[1] + (JAM.call(f$$191.getCountAllChildren, f$$191, [], JAM.policy.p3) - 1);
      } else {
        var v15516;
        if (b$$688 == 0) {
          var v30948 = JAM.call(f$$191.getMidbranchPosition, f$$191, [], JAM.policy.p3);
          c$$558[0] = v30948;
          v15516 = c$$558[1] = c$$558[1] + JAM.call(f$$191.getCountAllChildren, f$$191, [], JAM.policy.p3);
        } else {
          var v24291 = c$$558[1];
          var v26345;
          if (b$$688 == this.children.length - 1) {
            v26345 = JAM.call(f$$191.getMidbranchPosition, f$$191, [], JAM.policy.p3);
          } else {
            v26345 = JAM.call(f$$191.getCountAllChildren, f$$191, [], JAM.policy.p3);
          }
          v15516 = c$$558[1] = v24291 + v26345;
        }
        v9785 = v15516;
      }
      v3175 = v9785;
    } else {
      var v9786;
      var v21285 = b$$688 == 0;
      if (v21285) {
        v21285 = a$$705;
      }
      if (v21285) {
        v9786 = c$$558[0] = 0;
      } else {
        var v21286 = b$$688 == 0;
        if (v21286) {
          c$$558[0] = 1;
        }
        v9786 = c$$558[1] = c$$558[1] + 1;
      }
      v3175 = v9786;
    }
    v3175;
    b$$688++;
    v3176 = b$$688 < this.children.length;
  }
  var v3177;
  if (c$$558[1] >= c$$558[0]) {
    v3177 = (c$$558[1] + c$$558[0]) / 2;
  } else {
    v3177 = c$$558[0];
  }
  return this._midBranchPosition = v3177;
}
function v1907() {
  if (this._countImmediateChildren !== !1) {
    return this._countImmediateChildren;
  }
  var a$$704 = 0;
  var c$$557;
  for (c$$557 in this.children) {
    a$$704 = a$$704 + this.children[c$$557].length;
  }
  return this._countImmediateChildren = a$$704;
}
function v1906() {
  if (this._countAllChildren !== !1) {
    return this._countAllChildren;
  }
  var a$$703 = 0;
  var c$$556;
  for (c$$556 in this.children) {
    var v9796 = Smits.Common;
    if (JAM.call(v9796.isInteger, v9796, [c$$556], JAM.policy.p3)) {
      var b$$687 = this.children[c$$556];
      var v3182;
      var v15525 = b$$687.children;
      if (v15525) {
        v15525 = b$$687.children.length > 0;
      }
      if (v15525) {
        v3182 = a$$703 = a$$703 + JAM.call(b$$687.getCountAllChildren, b$$687, [], JAM.policy.p3);
      } else {
        v3182 = a$$703;
        a$$703 = a$$703 + 1;
      }
      v3182;
    }
  }
  return this._countAllChildren = a$$703;
}
function v1905() {
  function v1904(a$$702, c$$555) {
    var v3185 = Smits.Common;
    this.id = v3185.nodeIdIncrement = v3185.nodeIdIncrement + 1;
    this.newickLen = this.len = this.level = 0;
    this.type = this.name = "";
    this.chart = {};
    this.img = [];
    if (a$$702) {
      var v9798 = Smits.Common;
      JAM.call(v9798.apply, v9798, [this, a$$702], JAM.policy.p3);
    }
    this._midBranchPosition = this._countImmediateChildren = this._countAllChildren = !1;
    this.children = [];
    if (c$$555) {
      var v9799 = c$$555.children;
      JAM.call(v9799.push, v9799, [this], JAM.policy.p3);
    }
    return;
  }
  return v1904;
}
function v1903() {
  function v1902(k$$78, l$$84, p$$51, g$$201, m$$51) {
    function v1901() {
      var v3186;
      var v15528 = Raphael.svg;
      if (v15528) {
        var v21289 = Smits.Common;
        v15528 = JAM.call(v21289.isXMLSerializerAvailable, v21289, [], JAM.policy.p3);
      }
      if (v15528) {
        var v9800 = new XMLSerializer;
        v3186 = JAM.call(v9800.serializeToString, v9800, [b$$686.svg.canvas], JAM.policy.p3);
      } else {
        v3186 = !1;
      }
      return v3186;
    }
    function v1900() {
      return a$$701;
    }
    function v1899() {
      return b$$686;
    }
    function v1898(d$$408) {
      var v3187 = b$$686.svg;
      JAM.call(v3187.scale, v3187, [d$$408], JAM.policy.p3);
      return;
    }
    function v1897() {
      return;
    }
    function v1896() {
      return;
    }
    this.getNewickObject = v1896;
    this.clear = v1897;
    this.scale = v1898;
    this.getSvg = v1899;
    this.getPhylogram = v1900;
    this.getSvgSource = v1901;
    if (typeof k$$78 === "object") {
      if (k$$78.xml) {
        var v3188;
        if (k$$78.fileSource) {
          v3188 = k$$78.xml;
        } else {
          v3188 = JAM.call(XMLObjectifier.textToXML, XMLObjectifier, [k$$78.xml], JAM.policy.p3);
        }
        var d$$407 = v3188;
        d$$407 = JAM.call(XMLObjectifier.xmlToJSON, XMLObjectifier, [d$$407], JAM.policy.p3);
        f$$190 = JAM.new(Smits.PhyloCanvas.PhyloxmlParse, [d$$407]);
      } else {
        var v3190;
        if (k$$78.phyloxml) {
          var v21290;
          if (k$$78.fileSource) {
            v21290 = k$$78.phyloxml;
          } else {
            v21290 = JAM.call(XMLObjectifier.textToXML, XMLObjectifier, [k$$78.phyloxml], JAM.policy.p3);
          }
          d$$407 = v21290;
          d$$407 = JAM.call(XMLObjectifier.xmlToJSON, XMLObjectifier, [d$$407], JAM.policy.p3);
          v3190 = f$$190 = JAM.new(Smits.PhyloCanvas.PhyloxmlParse, [d$$407]);
        } else {
          var v9807;
          if (k$$78.nexml) {
            var v24297;
            if (k$$78.fileSource) {
              v24297 = k$$78.nexml;
            } else {
              v24297 = JAM.call(XMLObjectifier.textToXML, XMLObjectifier, [k$$78.nexml], JAM.policy.p3);
            }
            d$$407 = v24297;
            d$$407 = JAM.call(XMLObjectifier.xmlToJSON, XMLObjectifier, [d$$407], JAM.policy.p3);
            v9807 = f$$190 = JAM.new(Smits.PhyloCanvas.NexmlParse, [d$$407, k$$78]);
          } else {
            var v15531;
            if (k$$78.json) {
              v15531 = f$$190 = JAM.new(Smits.PhyloCanvas.PhyloxmlParse, [k$$78.json]);
            } else {
              var v21295;
              if (k$$78.newick) {
                v21295 = f$$190 = JAM.new(Smits.PhyloCanvas.NewickParse, [k$$78.newick]);
              } else {
                var v24302;
                if (k$$78.nexmlJson) {
                  v24302 = f$$190 = JAM.new(Smits.PhyloCanvas.NexmlJsonParse, [k$$78]);
                } else {
                  v24302 = alert("Please set the format of input data");
                }
                v21295 = v24302;
              }
              v15531 = v21295;
            }
            v9807 = v15531;
          }
          v3190 = v9807;
        }
        v3190;
      }
    } else {
      f$$190 = JAM.new(Smits.PhyloCanvas.NewickParse, [k$$78]);
    }
    c$$554 = l$$84;
    b$$686 = JAM.new(Smits.PhyloCanvas.Render.SVG, [c$$554, p$$51, g$$201]);
    var v3195;
    if (m$$51 == "circular") {
      v3195 = JAM.new(Smits.PhyloCanvas.Render.CircularPhylogram, [b$$686, f$$190]);
    } else {
      v3195 = JAM.new(Smits.PhyloCanvas.Render.Phylogram, [b$$686, f$$190]);
    }
    a$$701 = v3195;
    return;
  }
  var a$$701;
  var c$$554;
  var b$$686;
  var f$$190;
  return v1902;
}
function v1895(a$$700, c$$553) {
  var b$$685 = document.styleSheets[0];
  var v3197;
  if (b$$685.addRule) {
    v3197 = JAM.call(b$$685.addRule, b$$685, [a$$700, c$$553], JAM.policy.p3);
  } else {
    var v9814 = b$$685.insertRule;
    if (v9814) {
      v9814 = JAM.call(b$$685.insertRule, b$$685, [a$$700 + " { " + c$$553 + " }", b$$685.cssRules.length], JAM.policy.p3);
    }
    v3197 = v9814;
  }
  v3197;
  return;
}
function v1894(a$$699, c$$552, b$$684) {
  if (c$$552.type != "radialGradient") {
    return !1;
  }
  var v3199 = Smits.Common;
  a$$699 = JAM.call(v3199.createSvgEl, v3199, ["radialGradient", {id:a$$699, gradientUnits:"userSpaceOnUse", cx:b$$684[0], cy:b$$684[1], r:b$$684[2], fx:b$$684[0], fy:b$$684[1]}], JAM.policy.p3);
  if (c$$552.stop) {
    c$$552 = c$$552.stop;
    b$$684 = 0;
    var v3202 = b$$684 < c$$552.length;
    for (;v3202;) {
      var f$$189 = c$$552[b$$684];
      var v3201;
      if (f$$189["@attributes"]) {
        var v15538 = Smits.Common;
        v3201 = JAM.call(a$$699.appendChild, a$$699, [JAM.call(v15538.createSvgEl, v15538, ["stop", f$$189["@attributes"]], JAM.policy.p3)], JAM.policy.p3);
      } else {
        var v24305 = f$$189._attributes;
        if (v24305) {
          delete f$$189._attributes;
        }
        var v24306 = f$$189._children;
        if (v24306) {
          delete f$$189._children;
        }
        var v21301 = f$$189.__proto__;
        if (v21301) {
          delete f$$189.__proto__;
        }
        var v21302 = Smits.Common;
        v3201 = JAM.call(a$$699.appendChild, a$$699, [JAM.call(v21302.createSvgEl, v21302, ["stop", f$$189], JAM.policy.p3)], JAM.policy.p3);
      }
      v3201;
      b$$684++;
      v3202 = b$$684 < c$$552.length;
    }
  }
  return a$$699;
}
function v1893(a$$698, c$$551) {
  a$$698 = JAM.call(document.createElementNS, document, ["http://www.w3.org/2000/svg", a$$698], JAM.policy.p3);
  if (c$$551) {
    var b$$683;
    for (b$$683 in c$$551) {
      var v3204 = JAM.call(c$$551.hasOwnProperty, c$$551, [b$$683], JAM.policy.p3);
      if (v3204) {
        JAM.call(a$$698.setAttribute, a$$698, [b$$683, String(c$$551[b$$683])], JAM.policy.p3);
      }
    }
  }
  return a$$698;
}
function v1892() {
  var v3205;
  if (typeof XMLSerializer == "function") {
    v3205 = !0;
  } else {
    v3205 = !1;
  }
  return v3205;
}
function v1891(a$$697) {
  return !isNaN(parseInt(a$$697));
}
function v1890(a$$695, c$$549, b$$682, f$$188) {
  function v1889(c$$550, a$$696) {
    function v1888(g$$200) {
      a$$696.e = g$$200;
      JAM.call(c$$550, null, [a$$696], JAM.policy.p3);
      return;
    }
    return v1888;
  }
  try {
    JAM.call(a$$695[c$$549], a$$695, [v1889(b$$682, f$$188)], JAM.policy.p3);
  } catch (k$$77) {
  }
  return;
}
function v1887(a$$694, c$$548) {
  var v9829 = a$$694;
  if (v9829) {
    v9829 = typeof c$$548 == "object";
  }
  if (v9829) {
    var b$$681;
    for (b$$681 in c$$548) {
      introspect(JAM.policy.p2) {
        a$$694[b$$681] = c$$548[b$$681];
      }
    }
  }
  return a$$694;
}
function v1886(a$$693, c$$547) {
  var b$$680 = 0;
  var f$$187 = 1;
  var v3209 = b$$680 < c$$547;
  for (;v3209;) {
    f$$187 = f$$187 * 10;
    b$$680++;
    v3209 = b$$680 < c$$547;
  }
  return JAM.call(Math.round, Math, [a$$693 * f$$187], JAM.policy.p3) / f$$187;
}
function v1885(e$$347, t$$15, i$$210) {
  function v1884() {
    return JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
  }
  function v1883() {
    if (g$$199) {
      JAM.call(g$$199.stop, g$$199, [], JAM.policy.p3);
      var v29341 = e$$347.colorbox;
      JAM.call(v29341.close, v29341, [], JAM.policy.p3);
      var v28719 = JAM.call(g$$199.stop, g$$199, [], JAM.policy.p3);
      JAM.call(v28719.remove, v28719, [], JAM.policy.p3);
      JAM.call(w$$18.remove, w$$18, [], JAM.policy.p3);
      q$$21 = !1;
      g$$199 = null;
      var v24307 = JAM.call(e$$347, null, ["." + et$$1], JAM.policy.p3);
      var v21303 = JAM.call(v24307.removeData, v24307, [Y$$2], JAM.policy.p3);
      JAM.call(v21303.removeClass, v21303, [et$$1], JAM.policy.p3);
      var v15544 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
      JAM.call(v15544.unbind, v15544, ["click." + Z$$2], JAM.policy.p3);
    }
    return;
  }
  function v1882() {
    function v1881() {
      function v1880() {
        q$$21 = !1;
        c$$545(rt$$3, B$$3.onClosed);
        return;
      }
      var v24308 = JAM.call(g$$199.add, g$$199, [w$$18], JAM.policy.p3);
      var v21304 = JAM.call(v24308.css, v24308, [{opacity:1, cursor:"auto"}], JAM.policy.p3);
      JAM.call(v21304.hide, v21304, [], JAM.policy.p3);
      c$$545(ht);
      var v15546 = JAM.call(H$$3.empty, H$$3, [], JAM.policy.p3);
      JAM.call(v15546.remove, v15546, [], JAM.policy.p3);
      JAM.call(setTimeout, null, [v1880, 1]);
      return;
    }
    var v9832 = U$$2;
    if (v9832) {
      v9832 = !q$$21;
    }
    var v3211 = v9832;
    if (v3211) {
      q$$21 = !0;
      U$$2 = !1;
      c$$545(nt, B$$3.onCleanup);
      JAM.call(E$$3.unbind, E$$3, ["." + Z$$2], JAM.policy.p3);
      var v24311 = B$$3.fadeOut;
      if (!v24311) {
        v24311 = 0;
      }
      JAM.call(w$$18.fadeTo, w$$18, [v24311, 0], JAM.policy.p3);
      var v15547 = JAM.call(g$$199.stop, g$$199, [], JAM.policy.p3);
      var v21306 = B$$3.fadeOut;
      if (!v21306) {
        v21306 = 0;
      }
      JAM.call(v15547.fadeTo, v15547, [v21306, 0, v1881], JAM.policy.p3);
    }
    return;
  }
  function v1879() {
    var v15549 = !$$$4;
    if (v15549) {
      v15549 = k$$76[1];
    }
    var v9833 = v15549;
    if (v9833) {
      var v15550 = B$$3.loop;
      if (!v15550) {
        v15550 = z$$7;
      }
      v9833 = v15550;
    }
    var v3212 = v9833;
    if (v3212) {
      z$$7 = r$$22(-1);
      u$$13(k$$76[z$$7]);
    }
    return;
  }
  function v1878() {
    var v15552 = !$$$4;
    if (v15552) {
      v15552 = k$$76[1];
    }
    var v9834 = v15552;
    if (v9834) {
      var v15553 = B$$3.loop;
      if (!v15553) {
        v15553 = k$$76[z$$7 + 1];
      }
      v9834 = v15553;
    }
    var v3213 = v9834;
    if (v3213) {
      z$$7 = r$$22(1);
      u$$13(k$$76[z$$7]);
    }
    return;
  }
  function v1877(i$$223) {
    function v1876() {
      JAM.call(Q$$2.position, Q$$2, [0, a$$691], JAM.policy.p3);
      return;
    }
    function v1875() {
      function v1874() {
        n$$101.src = "//about:blank";
        return;
      }
      function v1873() {
        var i$$225;
        var o$$33;
        var n$$102 = k$$76[this];
        var r$$27 = JAM.call(e$$347.data, e$$347, [n$$102, Y$$2], JAM.policy.p3);
        var v9835;
        var v21310 = r$$27;
        if (v21310) {
          v21310 = r$$27.href;
        }
        if (v21310) {
          i$$225 = r$$27.href;
          var v21311 = JAM.call(e$$347.isFunction, e$$347, [i$$225], JAM.policy.p3);
          if (v21311) {
            v21311 = i$$225 = JAM.call(i$$225.call, i$$225, [n$$102], JAM.policy.p3);
          }
          v9835 = v21311;
        } else {
          var v15555 = JAM.call(e$$347, null, [n$$102], JAM.policy.p3);
          v9835 = i$$225 = JAM.call(v15555.attr, v15555, ["href"], JAM.policy.p3);
        }
        v9835;
        var v15557 = i$$225;
        if (v15557) {
          var v21312 = r$$27.photo;
          if (!v21312) {
            var v24313 = r$$27.photoRegex;
            v21312 = JAM.call(v24313.test, v24313, [i$$225], JAM.policy.p3);
          }
          v15557 = v21312;
        }
        var v9836 = v15557;
        if (v9836) {
          i$$225 = s$$30(r$$27, i$$225);
          o$$33 = JAM.call(t$$15.createElement, t$$15, ["img"], JAM.policy.p3);
          o$$33.src = i$$225;
        }
        return;
      }
      function v1872() {
        clearTimeout(G$$3);
        JAM.call(F$$3.hide, F$$3, [], JAM.policy.p3);
        c$$545(ot, B$$3.onComplete);
        return;
      }
      function i$$224() {
        var v3214 = e$$347.support.opacity === !1;
        if (v3214) {
          var v9840 = g$$199[0].style;
          JAM.call(v9840.removeAttribute, v9840, ["filter"], JAM.policy.p3);
        }
        return;
      }
      var n$$101;
      var h$$165;
      var a$$692 = k$$76.length;
      var u$$16 = "frameBorder";
      var f$$186 = "allowTransparency";
      if (U$$2) {
        h$$165 = v1872;
        var v27788 = JAM.call(L$$2.html, L$$2, [B$$3.title], JAM.policy.p3);
        var v26354 = JAM.call(v27788.add, v27788, [H$$3], JAM.policy.p3);
        JAM.call(v26354.show, v26354, [], JAM.policy.p3);
        var v24315;
        if (a$$692 > 1) {
          var v29737 = "string" == typeof B$$3.current;
          if (v29737) {
            var v30538 = B$$3.current;
            var v30393 = JAM.call(v30538.replace, v30538, ["{current}", z$$7 + 1], JAM.policy.p3);
            var v29991 = JAM.call(S$$2.html, S$$2, [JAM.call(v30393.replace, v30393, ["{total}", a$$692], JAM.policy.p3)], JAM.policy.p3);
            JAM.call(v29991.show, v29991, [], JAM.policy.p3);
          }
          var v30225;
          var v30540 = B$$3.loop;
          if (!v30540) {
            v30540 = a$$692 - 1 > z$$7;
          }
          if (v30540) {
            v30225 = "show";
          } else {
            v30225 = "hide";
          }
          var v29738 = JAM.call(R$$2[v30225], R$$2, [], JAM.policy.p3);
          JAM.call(v29738.html, v29738, [B$$3.next], JAM.policy.p3);
          var v29993;
          var v30395 = B$$3.loop;
          if (!v30395) {
            v30395 = z$$7;
          }
          if (v30395) {
            v29993 = "show";
          } else {
            v29993 = "hide";
          }
          var v29342 = JAM.call(I$$3[v29993], I$$3, [], JAM.policy.p3);
          JAM.call(v29342.html, v29342, [B$$3.previous], JAM.policy.p3);
          JAM.call(ct$$1, null, [], JAM.policy.p3);
          var v27789 = B$$3.preloading;
          if (v27789) {
            v27789 = JAM.call(e$$347.each, e$$347, [[r$$22(-1), r$$22(1)], v1873], JAM.policy.p3);
          }
          v24315 = v27789;
        } else {
          v24315 = JAM.call(P$$2.hide, P$$2, [], JAM.policy.p3);
        }
        v24315;
        var v21313;
        if (B$$3.iframe) {
          n$$101 = o$$26("iframe")[0];
          var v29995 = u$$16 in n$$101;
          if (v29995) {
            introspect(JAM.policy.p2) {
              n$$101[u$$16] = 0;
            }
          }
          var v29741 = f$$186 in n$$101;
          if (v29741) {
            introspect(JAM.policy.p2) {
              n$$101[f$$186] = "true";
            }
          }
          var v29346 = B$$3.scrolling;
          if (!v29346) {
            n$$101.scrolling = "no";
          }
          var v29743 = JAM.call(e$$347, null, [n$$101], JAM.policy.p3);
          var v29996 = B$$3.href;
          var v30227 = new Date;
          var v29347 = JAM.call(v29743.attr, v29743, [{src:v29996, name:JAM.call(v30227.getTime, v30227, [], JAM.policy.p3), "class":Z$$2 + "Iframe", allowFullScreen:!0, webkitAllowFullScreen:!0, mozallowfullscreen:!0}], JAM.policy.p3);
          var v28722 = JAM.call(v29347.one, v29347, ["load", h$$165], JAM.policy.p3);
          JAM.call(v28722.appendTo, v28722, [H$$3], JAM.policy.p3);
          JAM.call(lt.one, lt, [ht, v1874], JAM.policy.p3);
          var v26356 = B$$3.fastIframe;
          if (v26356) {
            var v27790 = JAM.call(e$$347, null, [n$$101], JAM.policy.p3);
            v26356 = JAM.call(v27790.trigger, v27790, ["load"], JAM.policy.p3);
          }
          v21313 = v26356;
        } else {
          v21313 = JAM.call(h$$165, null, [], JAM.policy.p3);
        }
        v21313;
        var v15560;
        if ("fade" === B$$3.transition) {
          v15560 = JAM.call(g$$199.fadeTo, g$$199, [d$$406, 1, i$$224], JAM.policy.p3);
        } else {
          v15560 = i$$224();
        }
        v15560;
      }
      return;
    }
    if (U$$2) {
      var a$$691;
      var v3215;
      if ("none" === B$$3.transition) {
        v3215 = 0;
      } else {
        v3215 = B$$3.speed;
      }
      var d$$406 = v3215;
      var v27791 = JAM.call(H$$3.empty, H$$3, [], JAM.policy.p3);
      JAM.call(v27791.remove, v27791, [], JAM.policy.p3);
      var v27792 = o$$26(st$$2, "LoadedContent");
      H$$3 = JAM.call(v27792.append, v27792, [i$$223], JAM.policy.p3);
      var v29348 = JAM.call(H$$3.hide, H$$3, [], JAM.policy.p3);
      var v28723 = JAM.call(v29348.appendTo, v29348, [JAM.call(W$$2.show, W$$2, [], JAM.policy.p3)], JAM.policy.p3);
      var v30228 = B$$3;
      var v30396 = B$$3.w;
      if (!v30396) {
        v30396 = JAM.call(H$$3.width, H$$3, [], JAM.policy.p3);
      }
      v30228.w = v30396;
      var v30229;
      var v30543 = B$$3.mw;
      if (v30543) {
        v30543 = B$$3.mw < B$$3.w;
      }
      if (v30543) {
        v30229 = B$$3.mw;
      } else {
        v30229 = B$$3.w;
      }
      B$$3.w = v30229;
      var v29350 = B$$3.w;
      var v29745;
      if (B$$3.scrolling) {
        v29745 = "auto";
      } else {
        v29745 = "hidden";
      }
      var v27793 = JAM.call(v28723.css, v28723, [{width:v29350, overflow:v29745}], JAM.policy.p3);
      var v30003 = B$$3;
      var v30230 = B$$3.h;
      if (!v30230) {
        v30230 = JAM.call(H$$3.height, H$$3, [], JAM.policy.p3);
      }
      v30003.h = v30230;
      var v30004;
      var v30399 = B$$3.mh;
      if (v30399) {
        v30399 = B$$3.mh < B$$3.h;
      }
      if (v30399) {
        v30004 = B$$3.mh;
      } else {
        v30004 = B$$3.h;
      }
      B$$3.h = v30004;
      var v26357 = JAM.call(v27793.css, v27793, [{height:B$$3.h}], JAM.policy.p3);
      JAM.call(v26357.prependTo, v26357, [y$$55], JAM.policy.p3);
      JAM.call(W$$2.hide, W$$2, [], JAM.policy.p3);
      var v21315 = JAM.call(e$$347, null, [j$$109], JAM.policy.p3);
      JAM.call(v21315.css, v21315, [{"float":"none"}], JAM.policy.p3);
      a$$691 = v1875;
      var v9842;
      if ("fade" === B$$3.transition) {
        v9842 = JAM.call(g$$199.fadeTo, g$$199, [d$$406, 0, v1876], JAM.policy.p3);
      } else {
        v9842 = JAM.call(Q$$2.position, Q$$2, [d$$406, a$$691], JAM.policy.p3);
      }
      v9842;
    }
    return;
  }
  function v1871(e$$357) {
    var t$$29;
    if (U$$2) {
      e$$357 = e$$357 || {};
      var v30005 = e$$357.width;
      if (v30005) {
        B$$3.w = h$$162(e$$357.width, "x") - A$$4 - _$$3;
      }
      var v29746 = e$$357.innerWidth;
      if (v29746) {
        var v30006 = B$$3;
        var v30949 = h$$162(e$$357.innerWidth, "x");
        v30006.w = v30949;
      }
      JAM.call(H$$3.css, H$$3, [{width:B$$3.w}], JAM.policy.p3);
      var v28726 = e$$357.height;
      if (v28726) {
        B$$3.h = h$$162(e$$357.height, "y") - D$$3 - O$$2;
      }
      var v27795 = e$$357.innerHeight;
      if (v27795) {
        var v28727 = B$$3;
        var v30950 = h$$162(e$$357.innerHeight, "y");
        v28727.h = v30950;
      }
      var v27796 = e$$357.innerHeight;
      if (!v27796) {
        v27796 = e$$357.height;
      }
      var v26358 = v27796;
      if (!v26358) {
        t$$29 = JAM.call(H$$3.scrollTop, H$$3, [], JAM.policy.p3);
        JAM.call(H$$3.css, H$$3, [{height:"auto"}], JAM.policy.p3);
        var v28729 = B$$3;
        var v30951 = JAM.call(H$$3.height, H$$3, [], JAM.policy.p3);
        v28729.h = v30951;
      }
      JAM.call(H$$3.css, H$$3, [{height:B$$3.h}], JAM.policy.p3);
      if (t$$29) {
        JAM.call(H$$3.scrollTop, H$$3, [t$$29], JAM.policy.p3);
      }
      var v21318;
      if ("none" === B$$3.transition) {
        v21318 = 0;
      } else {
        v21318 = B$$3.speed;
      }
      JAM.call(Q$$2.position, Q$$2, [v21318], JAM.policy.p3);
    }
    return;
  }
  function v1870(t$$28, i$$222) {
    function v1869() {
      function v1868() {
        JAM.call(E$$3.bind, E$$3, ["resize." + Z$$2, Q$$2.position], JAM.policy.p3);
        return;
      }
      o$$32();
      $$$4 = !1;
      v$$11[0].style.width = B$$3.w + A$$4 + _$$3 + "px";
      v$$11[0].style.height = B$$3.h + D$$3 + O$$2 + "px";
      var v15564 = B$$3.reposition;
      if (v15564) {
        JAM.call(setTimeout, null, [v1868, 1]);
      }
      if (i$$222) {
        JAM.call(i$$222, null, [], JAM.policy.p3);
      }
      return;
    }
    function v1867(e$$356) {
      var v3218;
      if (r$$26[e$$356] !== dt[e$$356]) {
        u$$15 = t$$28;
        v3218 = void 0;
      } else {
        v3218 = void 0;
      }
      return v3218;
    }
    function o$$32() {
      x$$74[0].style.width = C$$3[0].style.width = y$$55[0].style.width = parseInt(g$$199[0].style.width, 10) - _$$3 + "px";
      y$$55[0].style.height = b$$679[0].style.height = T$$4[0].style.height = parseInt(g$$199[0].style.height, 10) - O$$2 + "px";
      return;
    }
    var r$$26;
    var l$$83;
    var s$$32;
    var a$$690 = 0;
    var d$$405 = 0;
    var c$$546 = JAM.call(g$$199.offset, g$$199, [], JAM.policy.p3);
    JAM.call(E$$3.unbind, E$$3, ["resize." + Z$$2], JAM.policy.p3);
    JAM.call(g$$199.css, g$$199, [{top:-9E4, left:-9E4}], JAM.policy.p3);
    l$$83 = JAM.call(E$$3.scrollTop, E$$3, [], JAM.policy.p3);
    s$$32 = JAM.call(E$$3.scrollLeft, E$$3, [], JAM.policy.p3);
    var v29358;
    if (B$$3.fixed) {
      c$$546.top = c$$546.top - l$$83;
      c$$546.left = c$$546.left - s$$32;
      v29358 = JAM.call(g$$199.css, g$$199, [{position:"fixed"}], JAM.policy.p3);
    } else {
      a$$690 = l$$83;
      d$$405 = s$$32;
      v29358 = JAM.call(g$$199.css, g$$199, [{position:"absolute"}], JAM.policy.p3);
    }
    v29358;
    var v29359 = d$$405;
    var v29750;
    if (B$$3.right !== !1) {
      v29750 = JAM.call(Math.max, Math, [JAM.call(E$$3.width, E$$3, [], JAM.policy.p3) - B$$3.w - A$$4 - _$$3 - h$$162(B$$3.right, "x"), 0], JAM.policy.p3);
    } else {
      var v30011;
      if (B$$3.left !== !1) {
        v30011 = h$$162(B$$3.left, "x");
      } else {
        v30011 = JAM.call(Math.round, Math, [JAM.call(Math.max, Math, [JAM.call(E$$3.width, E$$3, [], JAM.policy.p3) - B$$3.w - A$$4 - _$$3, 0], JAM.policy.p3) / 2], JAM.policy.p3);
      }
      v29750 = v30011;
    }
    d$$405 = v29359 + v29750;
    var v28733 = a$$690;
    var v29361;
    if (B$$3.bottom !== !1) {
      v29361 = JAM.call(Math.max, Math, [n$$96() - B$$3.h - D$$3 - O$$2 - h$$162(B$$3.bottom, "y"), 0], JAM.policy.p3);
    } else {
      var v29752;
      if (B$$3.top !== !1) {
        v29752 = h$$162(B$$3.top, "y");
      } else {
        v29752 = JAM.call(Math.round, Math, [JAM.call(Math.max, Math, [n$$96() - B$$3.h - D$$3 - O$$2, 0], JAM.policy.p3) / 2], JAM.policy.p3);
      }
      v29361 = v29752;
    }
    a$$690 = v28733 + v29361;
    JAM.call(g$$199.css, g$$199, [{top:c$$546.top, left:c$$546.left, visibility:"visible"}], JAM.policy.p3);
    v$$11[0].style.width = v$$11[0].style.height = "9999px";
    r$$26 = {width:B$$3.w + A$$4 + _$$3, height:B$$3.h + D$$3 + O$$2, top:a$$690, left:d$$405};
    if (t$$28) {
      var u$$15 = 0;
      JAM.call(e$$347.each, e$$347, [r$$26, v1867], JAM.policy.p3);
      t$$28 = u$$15;
    }
    dt = r$$26;
    if (!t$$28) {
      JAM.call(g$$199.css, g$$199, [r$$26], JAM.policy.p3);
    }
    var v9846 = JAM.call(g$$199.dequeue, g$$199, [], JAM.policy.p3);
    JAM.call(v9846.animate, v9846, [r$$26, {duration:t$$28 || 0, complete:v1869, step:o$$32}], JAM.policy.p3);
    return;
  }
  function v1866(t$$27, i$$221) {
    function v1865() {
      var v15572 = JAM.call(e$$347.data, e$$347, [this, Y$$2], JAM.policy.p3);
      if (!v15572) {
        v15572 = X$$2;
      }
      JAM.call(e$$347.data, e$$347, [this, Y$$2, JAM.call(e$$347.extend, e$$347, [{}, v15572, t$$27], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var o$$31 = this;
    t$$27 = t$$27 || {};
    f$$184();
    if (p$$50()) {
      if (JAM.call(e$$347.isFunction, e$$347, [o$$31], JAM.policy.p3)) {
        o$$31 = JAM.call(e$$347, null, ["<a/>"], JAM.policy.p3);
        t$$27.open = !0;
      } else {
        if (!o$$31[0]) {
          return o$$31;
        }
      }
      if (i$$221) {
        t$$27.onComplete = i$$221;
      }
      var v15573 = JAM.call(o$$31.each, o$$31, [v1865], JAM.policy.p3);
      JAM.call(v15573.addClass, v15573, [et$$1], JAM.policy.p3);
      var v21328 = JAM.call(e$$347.isFunction, e$$347, [t$$27.open], JAM.policy.p3);
      if (v21328) {
        var v24331 = t$$27.open;
        v21328 = JAM.call(v24331.call, v24331, [o$$31], JAM.policy.p3);
      }
      var v15574 = v21328;
      if (!v15574) {
        v15574 = t$$27.open;
      }
      var v9850 = v15574;
      if (v9850) {
        u$$13(o$$31[0]);
      }
    }
    return o$$31;
  }
  function v1864() {
    function v1863() {
      var v3224;
      if (r$$25) {
        var v9851 = B$$3.slideshow;
        if (!v9851) {
          JAM.call(lt.unbind, lt, [nt, n$$99], JAM.policy.p3);
          v9851 = n$$99();
        }
        v3224 = v9851;
      } else {
        var v15577 = B$$3.slideshow;
        if (v15577) {
          v15577 = k$$76[1];
        }
        var v9852 = v15577;
        if (v9852) {
          r$$25 = !0;
          JAM.call(lt.one, lt, [nt, n$$99], JAM.policy.p3);
          var v24332;
          if (B$$3.slideshowAuto) {
            v24332 = i$$220();
          } else {
            v24332 = o$$30();
          }
          v24332;
          v9852 = JAM.call(M$$2.show, M$$2, [], JAM.policy.p3);
        }
        v3224 = v9852;
      }
      v3224;
      return;
    }
    function e$$355() {
      clearTimeout(h$$163);
      return;
    }
    function t$$26() {
      var v9853 = B$$3.loop;
      if (!v9853) {
        v9853 = k$$76[z$$7 + 1];
      }
      var v3225 = v9853;
      if (v3225) {
        e$$355();
        h$$163 = JAM.call(setTimeout, null, [Q$$2.next, B$$3.slideshowSpeed]);
      }
      return;
    }
    function i$$220() {
      var v21330 = JAM.call(M$$2.html, M$$2, [B$$3.slideshowStop], JAM.policy.p3);
      var v15582 = JAM.call(v21330.unbind, v21330, [s$$31], JAM.policy.p3);
      JAM.call(v15582.one, v15582, [s$$31, o$$30], JAM.policy.p3);
      var v15583 = JAM.call(lt.bind, lt, [ot, t$$26], JAM.policy.p3);
      JAM.call(v15583.bind, v15583, [it, e$$355], JAM.policy.p3);
      var v9854 = JAM.call(g$$199.removeClass, g$$199, [l$$82 + "off"], JAM.policy.p3);
      JAM.call(v9854.addClass, v9854, [l$$82 + "on"], JAM.policy.p3);
      return;
    }
    function o$$30() {
      function v1862() {
        JAM.call(Q$$2.next, Q$$2, [], JAM.policy.p3);
        i$$220();
        return;
      }
      e$$355();
      var v21331 = JAM.call(lt.unbind, lt, [ot, t$$26], JAM.policy.p3);
      JAM.call(v21331.unbind, v21331, [it, e$$355], JAM.policy.p3);
      var v21332 = JAM.call(M$$2.html, M$$2, [B$$3.slideshowStart], JAM.policy.p3);
      var v15585 = JAM.call(v21332.unbind, v21332, [s$$31], JAM.policy.p3);
      JAM.call(v15585.one, v15585, [s$$31, v1862], JAM.policy.p3);
      var v9856 = JAM.call(g$$199.removeClass, g$$199, [l$$82 + "on"], JAM.policy.p3);
      JAM.call(v9856.addClass, v9856, [l$$82 + "off"], JAM.policy.p3);
      return;
    }
    function n$$99() {
      r$$25 = !1;
      JAM.call(M$$2.hide, M$$2, [], JAM.policy.p3);
      e$$355();
      var v15587 = JAM.call(lt.unbind, lt, [ot, t$$26], JAM.policy.p3);
      JAM.call(v15587.unbind, v15587, [it, e$$355], JAM.policy.p3);
      JAM.call(g$$199.removeClass, g$$199, [l$$82 + "off " + l$$82 + "on"], JAM.policy.p3);
      return;
    }
    var r$$25;
    var h$$163;
    var l$$82 = Z$$2 + "Slideshow_";
    var s$$31 = "click." + Z$$2;
    return v1863;
  }
  function o$$26(i$$211, o$$27, n$$97) {
    var r$$23 = JAM.call(t$$15.createElement, t$$15, [i$$211], JAM.policy.p3);
    if (o$$27) {
      r$$23.id = Z$$2 + o$$27;
    }
    if (n$$97) {
      r$$23.style.cssText = n$$97;
    }
    return JAM.call(e$$347, null, [r$$23], JAM.policy.p3);
  }
  function n$$96() {
    var v3226;
    if (i$$210.innerHeight) {
      v3226 = i$$210.innerHeight;
    } else {
      var v9859 = JAM.call(e$$347, null, [i$$210], JAM.policy.p3);
      v3226 = JAM.call(v9859.height, v9859, [], JAM.policy.p3);
    }
    return v3226;
  }
  function r$$22(e$$348) {
    var t$$16 = k$$76.length;
    var i$$212 = (z$$7 + e$$348) % t$$16;
    var v3228;
    if (0 > i$$212) {
      v3228 = t$$16 + i$$212;
    } else {
      v3228 = i$$212;
    }
    return v3228;
  }
  function h$$162(e$$349, t$$17) {
    var v15589;
    if (JAM.call(/%/.test, /%/, [e$$349], JAM.policy.p3)) {
      var v24335;
      if ("x" === t$$17) {
        v24335 = JAM.call(E$$3.width, E$$3, [], JAM.policy.p3);
      } else {
        v24335 = n$$96();
      }
      v15589 = v24335 / 100;
    } else {
      v15589 = 1;
    }
    return JAM.call(Math.round, Math, [v15589 * parseInt(e$$349, 10)], JAM.policy.p3);
  }
  function s$$30(e$$351, t$$19) {
    var v3230;
    var v15590 = e$$351.retinaUrl;
    if (v15590) {
      v15590 = i$$210.devicePixelRatio > 1;
    }
    if (v15590) {
      v3230 = JAM.call(t$$19.replace, t$$19, [e$$351.photoRegex, e$$351.retinaSuffix], JAM.policy.p3);
    } else {
      v3230 = t$$19;
    }
    return v3230;
  }
  function a$$688(e$$352) {
    var v9867 = "contains" in g$$199[0];
    if (v9867) {
      var v21338 = g$$199[0];
      v9867 = !JAM.call(v21338.contains, v21338, [e$$352.target], JAM.policy.p3);
    }
    var v3231 = v9867;
    if (v3231) {
      JAM.call(e$$352.stopPropagation, e$$352, [], JAM.policy.p3);
      JAM.call(g$$199.focus, g$$199, [], JAM.policy.p3);
    }
    return;
  }
  function d$$404() {
    var t$$20;
    var i$$213 = JAM.call(e$$347.data, e$$347, [N$$2, Y$$2], JAM.policy.p3);
    var v3232;
    if (null == i$$213) {
      B$$3 = JAM.call(e$$347.extend, e$$347, [{}, X$$2], JAM.policy.p3);
      var v21340 = console;
      if (v21340) {
        v21340 = console.log;
      }
      var v15593 = v21340;
      if (v15593) {
        v15593 = JAM.call(console.log, console, ["Error: cboxElement missing settings object"], JAM.policy.p3);
      }
      v3232 = v15593;
    } else {
      v3232 = B$$3 = JAM.call(e$$347.extend, e$$347, [{}, i$$213], JAM.policy.p3);
    }
    v3232;
    for (t$$20 in B$$3) {
      var v9869 = JAM.call(e$$347.isFunction, e$$347, [B$$3[t$$20]], JAM.policy.p3);
      if (v9869) {
        v9869 = "on" !== JAM.call(t$$20.slice, t$$20, [0, 2], JAM.policy.p3);
      }
      var v3233 = v9869;
      if (v3233) {
        var v9870 = B$$3;
        var v15596 = B$$3[t$$20];
        var v30952 = JAM.call(v15596.call, v15596, [N$$2], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          v9870[t$$20] = v30952;
        }
      }
    }
    var v21341 = B$$3;
    var v27805 = B$$3.rel;
    if (!v27805) {
      v27805 = N$$2.rel;
    }
    var v26373 = v27805;
    if (!v26373) {
      var v27806 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      v26373 = JAM.call(v27806.data, v27806, ["rel"], JAM.policy.p3);
    }
    var v24336 = v26373;
    if (!v24336) {
      v24336 = "nofollow";
    }
    v21341.rel = v24336;
    var v21342 = B$$3;
    var v24337 = B$$3.href;
    if (!v24337) {
      var v26375 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      v24337 = JAM.call(v26375.attr, v26375, ["href"], JAM.policy.p3);
    }
    v21342.href = v24337;
    var v15597 = B$$3.title;
    if (!v15597) {
      v15597 = N$$2.title;
    }
    B$$3.title = v15597;
    var v9871 = "string" == typeof B$$3.href;
    if (v9871) {
      var v15599 = B$$3;
      var v30953 = JAM.call(e$$347.trim, e$$347, [B$$3.href], JAM.policy.p3);
      v15599.href = v30953;
    }
    return;
  }
  function c$$545(i$$214, o$$28) {
    var v15600 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
    JAM.call(v15600.trigger, v15600, [i$$214], JAM.policy.p3);
    JAM.call(lt.triggerHandler, lt, [i$$214], JAM.policy.p3);
    var v9872 = JAM.call(e$$347.isFunction, e$$347, [o$$28], JAM.policy.p3);
    if (v9872) {
      JAM.call(o$$28.call, o$$28, [N$$2], JAM.policy.p3);
    }
    return;
  }
  function u$$13(i$$215) {
    function v1846() {
      var v3234 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      JAM.call(v3234.focus, v3234, [], JAM.policy.p3);
      return;
    }
    function v1845() {
      JAM.call(t$$15.removeEventListener, t$$15, ["focus", a$$688, !0], JAM.policy.p3);
      return;
    }
    function v1844() {
      var t$$21;
      var i$$216 = JAM.call(e$$347.data, e$$347, [this, Y$$2], JAM.policy.p3);
      if (i$$216) {
        var v24338 = JAM.call(e$$347, null, [this], JAM.policy.p3);
        var v21346 = JAM.call(v24338.data, v24338, ["rel"], JAM.policy.p3);
        if (!v21346) {
          v21346 = i$$216.rel;
        }
        var v15601 = v21346;
        if (!v15601) {
          v15601 = this.rel;
        }
        t$$21 = v15601;
      }
      return t$$21 === B$$3.rel;
    }
    if (!q$$21) {
      N$$2 = i$$215;
      d$$404();
      k$$76 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
      z$$7 = 0;
      var v29754 = "nofollow" !== B$$3.rel;
      if (v29754) {
        var v30410 = JAM.call(e$$347, null, ["." + et$$1], JAM.policy.p3);
        k$$76 = JAM.call(v30410.filter, v30410, [v1844], JAM.policy.p3);
        z$$7 = JAM.call(k$$76.index, k$$76, [N$$2], JAM.policy.p3);
        var v30249 = -1 === z$$7;
        if (v30249) {
          k$$76 = JAM.call(k$$76.add, k$$76, [N$$2], JAM.policy.p3);
          z$$7 = k$$76.length - 1;
        }
      }
      var v30021 = parseFloat(B$$3.opacity);
      var v30251;
      if (B$$3.overlayClose) {
        v30251 = "pointer";
      } else {
        v30251 = "auto";
      }
      var v29362 = JAM.call(w$$18.css, w$$18, [{opacity:v30021, cursor:v30251, visibility:"visible"}], JAM.policy.p3);
      JAM.call(v29362.show, v29362, [], JAM.policy.p3);
      if (J$$3) {
        var v29363 = JAM.call(g$$199.add, g$$199, [w$$18], JAM.policy.p3);
        JAM.call(v29363.removeClass, v29363, [J$$3], JAM.policy.p3);
      }
      var v27808 = B$$3.className;
      if (v27808) {
        var v28736 = JAM.call(g$$199.add, g$$199, [w$$18], JAM.policy.p3);
        JAM.call(v28736.addClass, v28736, [B$$3.className], JAM.policy.p3);
      }
      J$$3 = B$$3.className;
      var v24340;
      if (B$$3.closeButton) {
        var v26377 = JAM.call(K$$2.html, K$$2, [B$$3.close], JAM.policy.p3);
        v24340 = JAM.call(v26377.appendTo, v26377, [y$$55], JAM.policy.p3);
      } else {
        v24340 = JAM.call(K$$2.appendTo, K$$2, ["<div/>"], JAM.policy.p3);
      }
      v24340;
      if (!U$$2) {
        U$$2 = $$$4 = !0;
        JAM.call(g$$199.css, g$$199, [{visibility:"hidden", display:"block"}], JAM.policy.p3);
        H$$3 = o$$26(st$$2, "LoadedContent", "width:0; height:0; overflow:hidden");
        var v30802 = JAM.call(y$$55.css, y$$55, [{width:"", height:""}], JAM.policy.p3);
        JAM.call(v30802.append, v30802, [H$$3], JAM.policy.p3);
        O$$2 = JAM.call(x$$74.height, x$$74, [], JAM.policy.p3) + JAM.call(C$$3.height, C$$3, [], JAM.policy.p3) + JAM.call(y$$55.outerHeight, y$$55, [!0], JAM.policy.p3) - JAM.call(y$$55.height, y$$55, [], JAM.policy.p3);
        _$$3 = JAM.call(b$$679.width, b$$679, [], JAM.policy.p3) + JAM.call(T$$4.width, T$$4, [], JAM.policy.p3) + JAM.call(y$$55.outerWidth, y$$55, [!0], JAM.policy.p3) - JAM.call(y$$55.width, y$$55, [], JAM.policy.p3);
        D$$3 = JAM.call(H$$3.outerHeight, H$$3, [!0], JAM.policy.p3);
        A$$4 = JAM.call(H$$3.outerWidth, H$$3, [!0], JAM.policy.p3);
        var v30554 = B$$3;
        var v30954 = h$$162(B$$3.initialWidth, "x");
        v30554.w = v30954;
        var v30412 = B$$3;
        var v30955 = h$$162(B$$3.initialHeight, "y");
        v30412.h = v30955;
        JAM.call(H$$3.css, H$$3, [{width:"", height:B$$3.h}], JAM.policy.p3);
        JAM.call(Q$$2.position, Q$$2, [], JAM.policy.p3);
        c$$545(tt$$1, B$$3.onOpen);
        var v29364 = JAM.call(P$$2.add, P$$2, [L$$2], JAM.policy.p3);
        JAM.call(v29364.hide, v29364, [], JAM.policy.p3);
        JAM.call(g$$199.focus, g$$199, [], JAM.policy.p3);
        var v28738 = B$$3.trapFocus;
        if (v28738) {
          v28738 = t$$15.addEventListener;
        }
        var v27810 = v28738;
        if (v27810) {
          JAM.call(t$$15.addEventListener, t$$15, ["focus", a$$688, !0], JAM.policy.p3);
          JAM.call(lt.one, lt, [rt$$3, v1845], JAM.policy.p3);
        }
        var v26379 = B$$3.returnFocus;
        if (v26379) {
          JAM.call(lt.one, lt, [rt$$3, v1846], JAM.policy.p3);
        }
      }
      m$$50();
    }
    return;
  }
  function f$$184() {
    var v9875 = !g$$199;
    if (v9875) {
      v9875 = t$$15.body;
    }
    var v3236 = v9875;
    if (v3236) {
      V$$2 = !1;
      E$$3 = JAM.call(e$$347, null, [i$$210], JAM.policy.p3);
      var v30414 = o$$26(st$$2);
      var v30647;
      if (e$$347.support.opacity === !1) {
        v30647 = Z$$2 + "IE";
      } else {
        v30647 = "";
      }
      var v30253 = JAM.call(v30414.attr, v30414, [{id:Y$$2, "class":v30647, role:"dialog", tabindex:"-1"}], JAM.policy.p3);
      g$$199 = JAM.call(v30253.hide, v30253, [], JAM.policy.p3);
      var v30023 = o$$26(st$$2, "Overlay");
      w$$18 = JAM.call(v30023.hide, v30023, [], JAM.policy.p3);
      F$$3 = JAM.call(e$$347, null, [[o$$26(st$$2, "LoadingOverlay")[0], o$$26(st$$2, "LoadingGraphic")[0]]], JAM.policy.p3);
      v$$11 = o$$26(st$$2, "Wrapper");
      var v28739 = o$$26(st$$2, "Content");
      var v28740 = L$$2 = o$$26(st$$2, "Title");
      var v28741 = S$$2 = o$$26(st$$2, "Current");
      var v29366 = JAM.call(e$$347, null, ['<button type="button"/>'], JAM.policy.p3);
      var v28742 = I$$3 = JAM.call(v29366.attr, v29366, [{id:Z$$2 + "Previous"}], JAM.policy.p3);
      var v29368 = JAM.call(e$$347, null, ['<button type="button"/>'], JAM.policy.p3);
      y$$55 = JAM.call(v28739.append, v28739, [v28740, v28741, v28742, R$$2 = JAM.call(v29368.attr, v29368, [{id:Z$$2 + "Next"}], JAM.policy.p3), M$$2 = o$$26("button", "Slideshow"), F$$3], JAM.policy.p3);
      var v27811 = JAM.call(e$$347, null, ['<button type="button"/>'], JAM.policy.p3);
      K$$2 = JAM.call(v27811.attr, v27811, [{id:Z$$2 + "Close"}], JAM.policy.p3);
      var v29370 = o$$26(st$$2);
      var v28746 = JAM.call(v29370.append, v29370, [o$$26(st$$2, "TopLeft"), x$$74 = o$$26(st$$2, "TopCenter"), o$$26(st$$2, "TopRight")], JAM.policy.p3);
      var v29374 = o$$26(st$$2, !1, "clear:left");
      var v28747 = JAM.call(v29374.append, v29374, [b$$679 = o$$26(st$$2, "MiddleLeft"), y$$55, T$$4 = o$$26(st$$2, "MiddleRight")], JAM.policy.p3);
      var v29377 = o$$26(st$$2, !1, "clear:left");
      var v27813 = JAM.call(v$$11.append, v$$11, [v28746, v28747, JAM.call(v29377.append, v29377, [o$$26(st$$2, "BottomLeft"), C$$3 = o$$26(st$$2, "BottomCenter"), o$$26(st$$2, "BottomRight")], JAM.policy.p3)], JAM.policy.p3);
      var v26380 = JAM.call(v27813.find, v27813, ["div div"], JAM.policy.p3);
      JAM.call(v26380.css, v26380, [{"float":"left"}], JAM.policy.p3);
      W$$2 = o$$26(st$$2, !1, "position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;");
      var v24343 = JAM.call(R$$2.add, R$$2, [I$$3], JAM.policy.p3);
      var v21348 = JAM.call(v24343.add, v24343, [S$$2], JAM.policy.p3);
      P$$2 = JAM.call(v21348.add, v21348, [M$$2], JAM.policy.p3);
      var v15602 = JAM.call(e$$347, null, [t$$15.body], JAM.policy.p3);
      JAM.call(v15602.append, v15602, [w$$18, JAM.call(g$$199.append, g$$199, [v$$11, W$$2], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function p$$50() {
    function v1851(e$$354) {
      var t$$22 = e$$354.keyCode;
      var v21350 = U$$2;
      if (v21350) {
        v21350 = B$$3.escKey;
      }
      var v15604 = v21350;
      if (v15604) {
        v15604 = 27 === t$$22;
      }
      var v9876 = v15604;
      if (v9876) {
        JAM.call(e$$354.preventDefault, e$$354, [], JAM.policy.p3);
        JAM.call(Q$$2.close, Q$$2, [], JAM.policy.p3);
      }
      var v24344 = U$$2;
      if (v24344) {
        v24344 = B$$3.arrowKey;
      }
      var v21351 = v24344;
      if (v21351) {
        v21351 = k$$76[1];
      }
      var v15605 = v21351;
      if (v15605) {
        v15605 = !e$$354.altKey;
      }
      var v9877 = v15605;
      if (v9877) {
        var v15606;
        if (37 === t$$22) {
          JAM.call(e$$354.preventDefault, e$$354, [], JAM.policy.p3);
          v15606 = JAM.call(I$$3.click, I$$3, [], JAM.policy.p3);
        } else {
          var v21353 = 39 === t$$22;
          if (v21353) {
            JAM.call(e$$354.preventDefault, e$$354, [], JAM.policy.p3);
            v21353 = JAM.call(R$$2.click, R$$2, [], JAM.policy.p3);
          }
          v15606 = v21353;
        }
        v15606;
      }
      return;
    }
    function v1850() {
      var v3237 = B$$3.overlayClose;
      if (v3237) {
        JAM.call(Q$$2.close, Q$$2, [], JAM.policy.p3);
      }
      return;
    }
    function v1849() {
      JAM.call(Q$$2.close, Q$$2, [], JAM.policy.p3);
      return;
    }
    function v1848() {
      JAM.call(Q$$2.prev, Q$$2, [], JAM.policy.p3);
      return;
    }
    function v1847() {
      JAM.call(Q$$2.next, Q$$2, [], JAM.policy.p3);
      return;
    }
    function i$$217(e$$353) {
      var v24345 = e$$353.which > 1;
      if (!v24345) {
        v24345 = e$$353.shiftKey;
      }
      var v21355 = v24345;
      if (!v21355) {
        v21355 = e$$353.altKey;
      }
      var v15607 = v21355;
      if (!v15607) {
        v15607 = e$$353.metaKey;
      }
      var v9878 = v15607;
      if (!v9878) {
        v9878 = e$$353.ctrlKey;
      }
      var v3238 = v9878;
      if (!v3238) {
        JAM.call(e$$353.preventDefault, e$$353, [], JAM.policy.p3);
        u$$13(this);
      }
      return;
    }
    var v3239;
    if (g$$199) {
      if (!V$$2) {
        V$$2 = !0;
        JAM.call(R$$2.click, R$$2, [v1847], JAM.policy.p3);
        JAM.call(I$$3.click, I$$3, [v1848], JAM.policy.p3);
        JAM.call(K$$2.click, K$$2, [v1849], JAM.policy.p3);
        JAM.call(w$$18.click, w$$18, [v1850], JAM.policy.p3);
        var v26384 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
        JAM.call(v26384.bind, v26384, ["keydown." + Z$$2, v1851], JAM.policy.p3);
        var v24347;
        if (JAM.call(e$$347.isFunction, e$$347, [e$$347.fn.on], JAM.policy.p3)) {
          var v26386 = JAM.call(e$$347, null, [t$$15], JAM.policy.p3);
          v24347 = JAM.call(v26386.on, v26386, ["click." + Z$$2, "." + et$$1, i$$217], JAM.policy.p3);
        } else {
          var v26389 = JAM.call(e$$347, null, ["." + et$$1], JAM.policy.p3);
          v24347 = JAM.call(v26389.live, v26389, ["click." + Z$$2, i$$217], JAM.policy.p3);
        }
        v24347;
      }
      v3239 = !0;
    } else {
      v3239 = !1;
    }
    return v3239;
  }
  function m$$50() {
    function v1861(t$$25, i$$219) {
      var v3240 = f$$185 === at;
      if (v3240) {
        var v15609;
        if ("error" === i$$219) {
          var v21358 = o$$26(st$$2, "Error");
          v15609 = JAM.call(v21358.html, v21358, [B$$3.xhrError], JAM.policy.p3);
        } else {
          var v21360 = JAM.call(e$$347, null, [this], JAM.policy.p3);
          v15609 = JAM.call(v21360.contents, v21360, [], JAM.policy.p3);
        }
        JAM.call(u$$14, null, [v15609], JAM.policy.p3);
      }
      return;
    }
    function v1860() {
      j$$109.src = n$$98;
      return;
    }
    function v1859() {
      function v1858() {
        JAM.call(u$$14, null, [j$$109], JAM.policy.p3);
        return;
      }
      function v1857() {
        JAM.call(Q$$2.next, Q$$2, [], JAM.policy.p3);
        return;
      }
      function v1856() {
        j$$109.height = j$$109.height - j$$109.height * t$$23;
        j$$109.width = j$$109.width - j$$109.width * t$$23;
        return;
      }
      function v1855(t$$24, i$$218) {
        var v9881 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
        var v3241 = JAM.call(v9881.attr, v9881, [i$$218], JAM.policy.p3);
        if (!v3241) {
          var v9882 = JAM.call(e$$347, null, [N$$2], JAM.policy.p3);
          v3241 = JAM.call(v9882.attr, v9882, ["data-" + i$$218], JAM.policy.p3);
        }
        var o$$29 = v3241;
        if (o$$29) {
          JAM.call(j$$109.setAttribute, j$$109, [i$$218, o$$29], JAM.policy.p3);
        }
        return;
      }
      var t$$23;
      var v3242 = f$$185 === at;
      if (v3242) {
        JAM.call(e$$347.each, e$$347, [["alt", "longdesc", "aria-describedby"], v1855], JAM.policy.p3);
        var v29762 = B$$3.retinaImage;
        if (v29762) {
          v29762 = i$$210.devicePixelRatio > 1;
        }
        var v29382 = v29762;
        if (v29382) {
          j$$109.height = j$$109.height / i$$210.devicePixelRatio;
          j$$109.width = j$$109.width / i$$210.devicePixelRatio;
        }
        var v28750 = B$$3.scalePhotos;
        if (v28750) {
          r$$24 = v1856;
          var v30256 = B$$3.mw;
          if (v30256) {
            v30256 = j$$109.width > B$$3.mw;
          }
          var v30031 = v30256;
          if (v30031) {
            t$$23 = (j$$109.width - B$$3.mw) / j$$109.width;
            JAM.call(r$$24, null, [], JAM.policy.p3);
          }
          var v30032 = B$$3.mh;
          if (v30032) {
            v30032 = j$$109.height > B$$3.mh;
          }
          var v29763 = v30032;
          if (v29763) {
            t$$23 = (j$$109.height - B$$3.mh) / j$$109.height;
            JAM.call(r$$24, null, [], JAM.policy.p3);
          }
        }
        var v27816 = B$$3.h;
        if (v27816) {
          j$$109.style.marginTop = JAM.call(Math.max, Math, [B$$3.mh - j$$109.height, 0], JAM.policy.p3) / 2 + "px";
        }
        var v27817 = k$$76[1];
        if (v27817) {
          var v28752 = B$$3.loop;
          if (!v28752) {
            v28752 = k$$76[z$$7 + 1];
          }
          v27817 = v28752;
        }
        var v26392 = v27817;
        if (v26392) {
          j$$109.style.cursor = "pointer";
          JAM.set(j$$109, "onclick", v1857);
        }
        j$$109.style.width = j$$109.width + "px";
        j$$109.style.height = j$$109.height + "px";
        JAM.call(setTimeout, null, [v1858, 1]);
      }
      return;
    }
    function v1854() {
      B$$3.title = !1;
      var v15614 = o$$26(st$$2, "Error");
      JAM.call(u$$14, null, [JAM.call(v15614.html, v15614, [B$$3.imgError], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1853() {
      JAM.call(a$$689.replaceWith, a$$689, [JAM.call(H$$3.children, H$$3, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1852() {
      JAM.call(F$$3.show, F$$3, [], JAM.policy.p3);
      return;
    }
    var n$$98;
    var r$$24;
    var a$$689;
    var u$$14 = Q$$2.prep;
    var f$$185 = at = at + 1;
    $$$4 = !0;
    j$$109 = !1;
    N$$2 = k$$76[z$$7];
    d$$404();
    c$$545(ht);
    c$$545(it, B$$3.onLoad);
    var v29765 = B$$3;
    var v30035;
    if (B$$3.height) {
      v30035 = h$$162(B$$3.height, "y") - D$$3 - O$$2;
    } else {
      var v30264 = B$$3.innerHeight;
      if (v30264) {
        v30264 = h$$162(B$$3.innerHeight, "y");
      }
      v30035 = v30264;
    }
    v29765.h = v30035;
    var v29386 = B$$3;
    var v29766;
    if (B$$3.width) {
      v29766 = h$$162(B$$3.width, "x") - A$$4 - _$$3;
    } else {
      var v30037 = B$$3.innerWidth;
      if (v30037) {
        v30037 = h$$162(B$$3.innerWidth, "x");
      }
      v29766 = v30037;
    }
    v29386.w = v29766;
    B$$3.mw = B$$3.w;
    B$$3.mh = B$$3.h;
    var v26394 = B$$3.maxWidth;
    if (v26394) {
      B$$3.mw = h$$162(B$$3.maxWidth, "x") - A$$4 - _$$3;
      var v28755;
      var v29768 = B$$3.w;
      if (v29768) {
        v29768 = B$$3.w < B$$3.mw;
      }
      if (v29768) {
        v28755 = B$$3.w;
      } else {
        v28755 = B$$3.mw;
      }
      B$$3.mw = v28755;
    }
    var v24350 = B$$3.maxHeight;
    if (v24350) {
      B$$3.mh = h$$162(B$$3.maxHeight, "y") - D$$3 - O$$2;
      var v27819;
      var v29390 = B$$3.h;
      if (v29390) {
        v29390 = B$$3.h < B$$3.mh;
      }
      if (v29390) {
        v27819 = B$$3.h;
      } else {
        v27819 = B$$3.mh;
      }
      B$$3.mh = v27819;
    }
    n$$98 = B$$3.href;
    G$$3 = JAM.call(setTimeout, null, [v1852, 100]);
    var v9886;
    if (B$$3.inline) {
      var v26395 = o$$26(st$$2);
      var v24351 = JAM.call(v26395.hide, v26395, [], JAM.policy.p3);
      a$$689 = JAM.call(v24351.insertBefore, v24351, [JAM.call(e$$347, null, [n$$98], JAM.policy.p3)[0]], JAM.policy.p3);
      JAM.call(lt.one, lt, [ht, v1853], JAM.policy.p3);
      v9886 = JAM.call(u$$14, null, [JAM.call(e$$347, null, [n$$98], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var v15616;
      if (B$$3.iframe) {
        v15616 = JAM.call(u$$14, null, [" "], JAM.policy.p3);
      } else {
        var v21366;
        if (B$$3.html) {
          v21366 = JAM.call(u$$14, null, [B$$3.html], JAM.policy.p3);
        } else {
          var v24354;
          var v27820 = B$$3.photo;
          if (!v27820) {
            var v28758 = B$$3.photoRegex;
            v27820 = JAM.call(v28758.test, v28758, [n$$98], JAM.policy.p3);
          }
          if (v27820) {
            n$$98 = s$$30(B$$3, n$$98);
            j$$109 = JAM.call(t$$15.createElement, t$$15, ["img"], JAM.policy.p3);
            var v29772 = JAM.call(e$$347, null, [j$$109], JAM.policy.p3);
            var v29391 = JAM.call(v29772.addClass, v29772, [Z$$2 + "Photo"], JAM.policy.p3);
            var v28760 = JAM.call(v29391.bind, v29391, ["error", v1854], JAM.policy.p3);
            JAM.call(v28760.one, v28760, ["load", v1859], JAM.policy.p3);
            v24354 = JAM.call(setTimeout, null, [v1860, 1]);
          } else {
            var v26397 = n$$98;
            if (v26397) {
              v26397 = JAM.call(W$$2.load, W$$2, [n$$98, B$$3.data, v1861], JAM.policy.p3);
            }
            v24354 = v26397;
          }
          v21366 = v24354;
        }
        v15616 = v21366;
      }
      v9886 = v15616;
    }
    v9886;
    return;
  }
  var w$$18;
  var g$$199;
  var v$$11;
  var y$$55;
  var x$$74;
  var b$$679;
  var T$$4;
  var C$$3;
  var k$$76;
  var E$$3;
  var H$$3;
  var W$$2;
  var F$$3;
  var L$$2;
  var S$$2;
  var M$$2;
  var R$$2;
  var I$$3;
  var K$$2;
  var P$$2;
  var B$$3;
  var O$$2;
  var _$$3;
  var D$$3;
  var A$$4;
  var N$$2;
  var z$$7;
  var j$$109;
  var U$$2;
  var $$$4;
  var q$$21;
  var G$$3;
  var Q$$2;
  var J$$3;
  var V$$2;
  var X$$2 = {html:!1, photo:!1, iframe:!1, inline:!1, transition:"elastic", speed:300, fadeOut:300, width:!1, initialWidth:"600", innerWidth:!1, maxWidth:!1, height:!1, initialHeight:"450", innerHeight:!1, maxHeight:!1, scalePhotos:!0, scrolling:!0, href:!1, title:!1, rel:!1, opacity:.9, preloading:!0, className:!1, overlayClose:!0, escKey:!0, arrowKey:!0, top:!1, bottom:!1, left:!1, right:!1, fixed:!1, data:void 0, closeButton:!0, fastIframe:!0, open:!1, reposition:!0, loop:!0, slideshow:!1, slideshowAuto:!0, 
  slideshowSpeed:2500, slideshowStart:"start slideshow", slideshowStop:"stop slideshow", photoRegex:/\.(gif|png|jp(e|g|eg)|bmp|ico|webp)((#|\?).*)?$/i, retinaImage:!1, retinaUrl:!1, retinaSuffix:"@2x.$1", current:"image {current} of {total}", previous:"previous", next:"next", close:"close", xhrError:"This content failed to load.", imgError:"This image failed to load.", returnFocus:!0, trapFocus:!0, onOpen:!1, onLoad:!1, onComplete:!1, onCleanup:!1, onClosed:!1};
  var Y$$2 = "colorbox";
  var Z$$2 = "cbox";
  var et$$1 = Z$$2 + "Element";
  var tt$$1 = Z$$2 + "_open";
  var it = Z$$2 + "_load";
  var ot = Z$$2 + "_complete";
  var nt = Z$$2 + "_cleanup";
  var rt$$3 = Z$$2 + "_closed";
  var ht = Z$$2 + "_purge";
  var lt = JAM.call(e$$347, null, ["<a/>"], JAM.policy.p3);
  var st$$2 = "div";
  var at = 0;
  var dt = {};
  var ct$$1 = v1864();
  var v3286 = e$$347.colorbox;
  if (!v3286) {
    JAM.call(e$$347, null, [f$$184], JAM.policy.p3);
    var v30268 = e$$347.fn;
    introspect(JAM.policy.p2) {
      Q$$2 = v30268[Y$$2] = e$$347[Y$$2] = v1866;
    }
    Q$$2.position = v1870;
    Q$$2.resize = v1871;
    Q$$2.prep = v1877;
    Q$$2.next = v1878;
    Q$$2.prev = v1879;
    Q$$2.close = v1882;
    Q$$2.remove = v1883;
    Q$$2.element = v1884;
    Q$$2.settings = X$$2;
  }
  return;
}
function v1843(a$$663, b$$652) {
  function v1842(a$$684, b$$677) {
    function v1841(a$$687) {
      var v3287 = a$$687.clientX;
      if (v3287) {
        JAM.call(c$$544.rotate, c$$544, [null], JAM.policy.p3);
      }
      return;
    }
    function v1840(a$$686) {
      JAM.call(e$$346, null, [], JAM.policy.p3);
      return;
    }
    function v1839(b$$678) {
      function v1838() {
        var a$$685 = d$$403.selected;
        var v9888;
        if ((a$$685 = a$$685 + 1) < c$$544.anchors.length) {
          v9888 = a$$685;
        } else {
          v9888 = 0;
        }
        JAM.call(c$$544.select, c$$544, [v9888], JAM.policy.p3);
        return;
      }
      clearTimeout(c$$544.rotation);
      var v15620 = c$$544;
      var v30956 = JAM.call(setTimeout, null, [v1838, a$$684]);
      v15620.rotation = v30956;
      if (b$$678) {
        JAM.call(b$$678.stopPropagation, b$$678, [], JAM.policy.p3);
      }
      return;
    }
    var c$$544 = this;
    var d$$403 = this.options;
    var v3289 = c$$544._rotate;
    if (!v3289) {
      v3289 = c$$544._rotate = v1839;
    }
    var e$$346 = v3289;
    var v3290 = c$$544._unrotate;
    if (!v3290) {
      var v9890;
      if (b$$677) {
        v9890 = v1840;
      } else {
        v9890 = v1841;
      }
      v3290 = c$$544._unrotate = v9890;
    }
    var f$$183 = v3290;
    var v9892;
    if (a$$684) {
      var v24357 = this.element;
      JAM.call(v24357.bind, v24357, ["tabsshow", e$$346], JAM.policy.p3);
      var v24358 = this.anchors;
      JAM.call(v24358.bind, v24358, [d$$403.event + ".tabs", f$$183], JAM.policy.p3);
      v9892 = JAM.call(e$$346, null, [], JAM.policy.p3);
    } else {
      clearTimeout(c$$544.rotation);
      var v27823 = this.element;
      JAM.call(v27823.unbind, v27823, ["tabsshow", e$$346], JAM.policy.p3);
      var v26400 = this.anchors;
      JAM.call(v26400.unbind, v26400, [d$$403.event + ".tabs", f$$183], JAM.policy.p3);
      delete this._rotate;
      v9892 = delete this._unrotate;
    }
    v9892;
    return this;
  }
  function v1837() {
    return this.anchors.length;
  }
  function v1836(a$$683, b$$676) {
    var v21370 = this.anchors;
    var v15621 = JAM.call(v21370.eq, v21370, [a$$683], JAM.policy.p3);
    var v9893 = JAM.call(v15621.removeData, v15621, ["cache.tabs"], JAM.policy.p3);
    JAM.call(v9893.data, v9893, ["load.tabs", b$$676], JAM.policy.p3);
    return this;
  }
  function v1835() {
    var v26402 = this.element;
    JAM.call(v26402.queue, v26402, [[]], JAM.policy.p3);
    var v26403 = this.panels;
    JAM.call(v26403.stop, v26403, [!1, !0], JAM.policy.p3);
    var v24360 = this.element;
    var v27825 = this.element;
    var v26406 = JAM.call(v27825.queue, v27825, ["tabs"], JAM.policy.p3);
    JAM.call(v24360.queue, v24360, ["tabs", JAM.call(v26406.splice, v26406, [-2, 2], JAM.policy.p3)], JAM.policy.p3);
    var v21371 = this.xhr;
    if (v21371) {
      var v26407 = this.xhr;
      JAM.call(v26407.abort, v26407, [], JAM.policy.p3);
      delete this.xhr;
    }
    JAM.call(this._cleanup, this, [], JAM.policy.p3);
    return this;
  }
  function v1834(b$$675) {
    function v1833(a$$682, f$$182, g$$197) {
      JAM.call(c$$543._cleanup, c$$543, [], JAM.policy.p3);
      JAM.call(c$$543._trigger, c$$543, ["load", null, JAM.call(c$$543._ui, c$$543, [c$$543.anchors[b$$675], c$$543.panels[b$$675]], JAM.policy.p3)], JAM.policy.p3);
      try {
        var v3292 = d$$402.ajaxOptions;
        JAM.call(v3292.error, v3292, [a$$682, f$$182, b$$675, e$$345], JAM.policy.p3);
      } catch (g$$198) {
      }
      return;
    }
    function v1832(f$$181, g$$196) {
      var v24362 = c$$543.element;
      var v21374 = JAM.call(v24362.find, v24362, [JAM.call(c$$543._sanitizeSelector, c$$543, [e$$345.hash], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v21374.html, v21374, [f$$181], JAM.policy.p3);
      JAM.call(c$$543._cleanup, c$$543, [], JAM.policy.p3);
      var v15624 = d$$402.cache;
      if (v15624) {
        JAM.call(a$$663.data, a$$663, [e$$345, "cache.tabs", !0], JAM.policy.p3);
      }
      JAM.call(c$$543._trigger, c$$543, ["load", null, JAM.call(c$$543._ui, c$$543, [c$$543.anchors[b$$675], c$$543.panels[b$$675]], JAM.policy.p3)], JAM.policy.p3);
      try {
        var v3293 = d$$402.ajaxOptions;
        JAM.call(v3293.success, v3293, [f$$181, g$$196], JAM.policy.p3);
      } catch (h$$161) {
      }
      return;
    }
    b$$675 = JAM.call(this._getIndex, this, [b$$675], JAM.policy.p3);
    var c$$543 = this;
    var d$$402 = this.options;
    var v9896 = this.anchors;
    var e$$345 = JAM.call(v9896.eq, v9896, [b$$675], JAM.policy.p3)[0];
    var f$$180 = JAM.call(a$$663.data, a$$663, [e$$345, "load.tabs"], JAM.policy.p3);
    JAM.call(this.abort, this, [], JAM.policy.p3);
    var v9897 = !f$$180;
    if (!v9897) {
      var v26409 = this.element;
      var v15627 = JAM.call(v26409.queue, v26409, ["tabs"], JAM.policy.p3).length !== 0;
      if (v15627) {
        v15627 = JAM.call(a$$663.data, a$$663, [e$$345, "cache.tabs"], JAM.policy.p3);
      }
      v9897 = v15627;
    }
    if (v9897) {
      var v3295 = this.element;
      JAM.call(v3295.dequeue, v3295, ["tabs"], JAM.policy.p3);
      return;
    }
    var v9898 = this.lis;
    var v3297 = JAM.call(v9898.eq, v9898, [b$$675], JAM.policy.p3);
    JAM.call(v3297.addClass, v3297, ["ui-state-processing"], JAM.policy.p3);
    if (d$$402.spinner) {
      var g$$195 = JAM.call(a$$663, null, ["span", e$$345], JAM.policy.p3);
      var v3298 = JAM.call(g$$195.data, g$$195, ["label.tabs", JAM.call(g$$195.html, g$$195, [], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v3298.html, v3298, [d$$402.spinner], JAM.policy.p3);
    }
    var v30957 = JAM.call(a$$663.ajax, a$$663, [JAM.call(a$$663.extend, a$$663, [{}, d$$402.ajaxOptions, {url:f$$180, success:v1832, error:v1833}], JAM.policy.p3)], JAM.policy.p3);
    this.xhr = v30957;
    var v15630 = c$$543.element;
    JAM.call(v15630.dequeue, v15630, ["tabs"], JAM.policy.p3);
    return this;
  }
  function v1831(a$$681) {
    a$$681 = JAM.call(this._getIndex, this, [a$$681], JAM.policy.p3);
    if (a$$681 == -1) {
      var v9900 = this.options.collapsible;
      if (v9900) {
        v9900 = this.options.selected != -1;
      }
      if (v9900) {
        a$$681 = this.options.selected;
      } else {
        return this;
      }
    }
    var v15633 = this.anchors;
    var v9901 = JAM.call(v15633.eq, v15633, [a$$681], JAM.policy.p3);
    JAM.call(v9901.trigger, v9901, [this.options.event + ".tabs"], JAM.policy.p3);
    return this;
  }
  function v1830(a$$680) {
    a$$680 = JAM.call(this._getIndex, this, [a$$680], JAM.policy.p3);
    var b$$674 = this;
    var c$$542 = this.options;
    var v9903 = a$$680 != c$$542.selected;
    if (v9903) {
      var v27826 = this.lis;
      var v26410 = JAM.call(v27826.eq, v27826, [a$$680], JAM.policy.p3);
      JAM.call(v26410.addClass, v26410, ["ui-state-disabled"], JAM.policy.p3);
      var v26411 = c$$542.disabled;
      JAM.call(v26411.push, v26411, [a$$680], JAM.policy.p3);
      var v24365 = c$$542.disabled;
      JAM.call(v24365.sort, v24365, [], JAM.policy.p3);
      JAM.call(this._trigger, this, ["disable", null, JAM.call(this._ui, this, [this.anchors[a$$680], this.panels[a$$680]], JAM.policy.p3)], JAM.policy.p3);
    }
    return this;
  }
  function v1829(b$$673) {
    function v1828(a$$679, c$$541) {
      return a$$679 != b$$673;
    }
    b$$673 = JAM.call(this._getIndex, this, [b$$673], JAM.policy.p3);
    var c$$540 = this.options;
    if (JAM.call(a$$663.inArray, a$$663, [b$$673, c$$540.disabled], JAM.policy.p3) == -1) {
      return;
    }
    var v24368 = this.lis;
    var v21384 = JAM.call(v24368.eq, v24368, [b$$673], JAM.policy.p3);
    JAM.call(v21384.removeClass, v21384, ["ui-state-disabled"], JAM.policy.p3);
    var v21385 = c$$540;
    var v30958 = JAM.call(a$$663.grep, a$$663, [c$$540.disabled, v1828], JAM.policy.p3);
    v21385.disabled = v30958;
    JAM.call(this._trigger, this, ["enable", null, JAM.call(this._ui, this, [this.anchors[b$$673], this.panels[b$$673]], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v1827(b$$672) {
    function v1826(a$$678, c$$539) {
      var v3305;
      if (a$$678 >= b$$672) {
        v3305 = a$$678 = a$$678 - 1;
      } else {
        v3305 = a$$678;
      }
      return v3305;
    }
    function v1825(a$$677, c$$538) {
      return a$$677 != b$$672;
    }
    b$$672 = JAM.call(this._getIndex, this, [b$$672], JAM.policy.p3);
    var c$$537 = this.options;
    var v9906 = this.lis;
    var v3306 = JAM.call(v9906.eq, v9906, [b$$672], JAM.policy.p3);
    var d$$401 = JAM.call(v3306.remove, v3306, [], JAM.policy.p3);
    var v9907 = this.panels;
    var v3307 = JAM.call(v9907.eq, v9907, [b$$672], JAM.policy.p3);
    var e$$344 = JAM.call(v3307.remove, v3307, [], JAM.policy.p3);
    var v26414 = JAM.call(d$$401.hasClass, d$$401, ["ui-tabs-selected"], JAM.policy.p3);
    if (v26414) {
      v26414 = this.anchors.length > 1;
    }
    var v24372 = v26414;
    if (v24372) {
      var v28762;
      if (b$$672 + 1 < this.anchors.length) {
        v28762 = 1;
      } else {
        v28762 = -1;
      }
      JAM.call(this.select, this, [b$$672 + v28762], JAM.policy.p3);
    }
    var v24373 = c$$537;
    var v30959 = JAM.call(a$$663.map, a$$663, [JAM.call(a$$663.grep, a$$663, [c$$537.disabled, v1825], JAM.policy.p3), v1826], JAM.policy.p3);
    v24373.disabled = v30959;
    JAM.call(this._tabify, this, [], JAM.policy.p3);
    JAM.call(this._trigger, this, ["remove", null, JAM.call(this._ui, this, [JAM.call(d$$401.find, d$$401, ["a"], JAM.policy.p3)[0], e$$344[0]], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v1824(c$$536, d$$400, e$$343) {
    function v1823() {
      JAM.call(f$$179._trigger, f$$179, ["show", null, JAM.call(f$$179._ui, f$$179, [f$$179.anchors[0], f$$179.panels[0]], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1822(a$$676, b$$671) {
      var v3309;
      if (a$$676 >= e$$343) {
        v3309 = a$$676 = a$$676 + 1;
      } else {
        v3309 = a$$676;
      }
      return v3309;
    }
    var v3310 = e$$343 === b$$652;
    if (v3310) {
      e$$343 = this.anchors.length;
    }
    var f$$179 = this;
    var g$$194 = this.options;
    var v15641 = g$$194.tabTemplate;
    var v9912 = JAM.call(v15641.replace, v15641, [/#\{href\}/g, c$$536], JAM.policy.p3);
    var h$$160 = JAM.call(a$$663, null, [JAM.call(v9912.replace, v9912, [/#\{label\}/g, d$$400], JAM.policy.p3)], JAM.policy.p3);
    var v3312;
    if (JAM.call(c$$536.indexOf, c$$536, ["#"], JAM.policy.p3)) {
      v3312 = JAM.call(this._tabId, this, [JAM.call(a$$663, null, ["a", h$$160], JAM.policy.p3)[0]], JAM.policy.p3);
    } else {
      v3312 = JAM.call(c$$536.replace, c$$536, ["#", ""], JAM.policy.p3);
    }
    var i$$209 = v3312;
    var v3313 = JAM.call(h$$160.addClass, h$$160, ["ui-state-default ui-corner-top"], JAM.policy.p3);
    JAM.call(v3313.data, v3313, ["destroy.tabs", !0], JAM.policy.p3);
    var v3315 = f$$179.element;
    var j$$108 = JAM.call(v3315.find, v3315, ["#" + i$$209], JAM.policy.p3);
    var v28763 = j$$108.length;
    if (!v28763) {
      var v29776 = JAM.call(a$$663, null, [g$$194.panelTemplate], JAM.policy.p3);
      var v29393 = JAM.call(v29776.attr, v29776, ["id", i$$209], JAM.policy.p3);
      j$$108 = JAM.call(v29393.data, v29393, ["destroy.tabs", !0], JAM.policy.p3);
    }
    JAM.call(j$$108.addClass, j$$108, ["ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide"], JAM.policy.p3);
    var v27830;
    if (e$$343 >= this.lis.length) {
      JAM.call(h$$160.appendTo, h$$160, [this.list], JAM.policy.p3);
      v27830 = JAM.call(j$$108.appendTo, j$$108, [this.list[0].parentNode], JAM.policy.p3);
    } else {
      JAM.call(h$$160.insertBefore, h$$160, [this.lis[e$$343]], JAM.policy.p3);
      v27830 = JAM.call(j$$108.insertBefore, j$$108, [this.panels[e$$343]], JAM.policy.p3);
    }
    v27830;
    var v26417 = g$$194;
    var v30960 = JAM.call(a$$663.map, a$$663, [g$$194.disabled, v1822], JAM.policy.p3);
    v26417.disabled = v30960;
    JAM.call(this._tabify, this, [], JAM.policy.p3);
    var v21390 = this.anchors.length == 1;
    if (v21390) {
      g$$194.selected = 0;
      JAM.call(h$$160.addClass, h$$160, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      JAM.call(j$$108.removeClass, j$$108, ["ui-tabs-hide"], JAM.policy.p3);
      var v27832 = this.element;
      JAM.call(v27832.queue, v27832, ["tabs", v1823], JAM.policy.p3);
      JAM.call(this.load, this, [0], JAM.policy.p3);
    }
    JAM.call(this._trigger, this, ["add", null, JAM.call(this._ui, this, [this.anchors[e$$343], this.panels[e$$343]], JAM.policy.p3)], JAM.policy.p3);
    return this;
  }
  function v1821() {
    function v1820() {
      var v3317;
      if (JAM.call(a$$663.data, a$$663, [this, "destroy.tabs"], JAM.policy.p3)) {
        var v9915 = JAM.call(a$$663, null, [this], JAM.policy.p3);
        v3317 = JAM.call(v9915.remove, v9915, [], JAM.policy.p3);
      } else {
        var v9916 = JAM.call(a$$663, null, [this], JAM.policy.p3);
        var v15644 = ["ui-state-default", "ui-corner-top", "ui-tabs-selected", "ui-state-active", "ui-state-hover", "ui-state-focus", "ui-state-disabled", "ui-tabs-panel", "ui-widget-content", "ui-corner-bottom", "ui-tabs-hide"];
        v3317 = JAM.call(v9916.removeClass, v9916, [JAM.call(v15644.join, v15644, [" "], JAM.policy.p3)], JAM.policy.p3);
      }
      v3317;
      return;
    }
    function v1819() {
      function v1818(a$$675, b$$670) {
        JAM.call(c$$535.removeData, c$$535, [b$$670 + ".tabs"], JAM.policy.p3);
        return;
      }
      var b$$669 = JAM.call(a$$663.data, a$$663, [this, "href.tabs"], JAM.policy.p3);
      if (b$$669) {
        this.href = b$$669;
      }
      var v3319 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      var c$$535 = JAM.call(v3319.unbind, v3319, [".tabs"], JAM.policy.p3);
      JAM.call(a$$663.each, a$$663, [["href", "load", "cache"], v1818], JAM.policy.p3);
      return;
    }
    var b$$668 = this.options;
    JAM.call(this.abort, this, [], JAM.policy.p3);
    var v29401 = this.element;
    var v28765 = JAM.call(v29401.unbind, v29401, [".tabs"], JAM.policy.p3);
    var v27833 = JAM.call(v28765.removeClass, v28765, ["ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"], JAM.policy.p3);
    JAM.call(v27833.removeData, v27833, ["tabs"], JAM.policy.p3);
    var v26419 = this.list;
    JAM.call(v26419.removeClass, v26419, ["ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"], JAM.policy.p3);
    var v24378 = this.anchors;
    JAM.call(v24378.each, v24378, [v1819], JAM.policy.p3);
    var v26420 = this.lis;
    var v24379 = JAM.call(v26420.unbind, v26420, [".tabs"], JAM.policy.p3);
    var v21393 = JAM.call(v24379.add, v24379, [this.panels], JAM.policy.p3);
    JAM.call(v21393.each, v21393, [v1820], JAM.policy.p3);
    var v15645 = b$$668.cookie;
    if (v15645) {
      JAM.call(this._cookie, this, [null, b$$668.cookie], JAM.policy.p3);
    }
    return this;
  }
  function v1817(a$$674) {
    var v9919 = typeof a$$674 == "string";
    if (v9919) {
      var v15647 = this.anchors;
      var v21395 = this.anchors;
      a$$674 = JAM.call(v15647.index, v15647, [JAM.call(v21395.filter, v21395, ["[href$='" + a$$674 + "']"], JAM.policy.p3)], JAM.policy.p3);
    }
    return a$$674;
  }
  function v1816(c$$528) {
    function v1815() {
      return !1;
    }
    function v1814() {
      function v1813() {
        JAM.call(n$$95, null, [b$$667, g$$193], JAM.policy.p3);
        return;
      }
      function v1812() {
        JAM.call(o$$25, null, [b$$667, f$$178], JAM.policy.p3);
        return;
      }
      function v1811() {
        JAM.call(n$$95, null, [b$$667, g$$193], JAM.policy.p3);
        return;
      }
      function v1810() {
        JAM.call(o$$25, null, [b$$667, f$$178], JAM.policy.p3);
        return;
      }
      var b$$667 = this;
      var v3321 = JAM.call(a$$663, null, [b$$667], JAM.policy.p3);
      var c$$534 = JAM.call(v3321.closest, v3321, ["li"], JAM.policy.p3);
      var v3322 = d$$399.panels;
      var f$$178 = JAM.call(v3322.filter, v3322, [":not(.ui-tabs-hide)"], JAM.policy.p3);
      var v3323 = d$$399.element;
      var g$$193 = JAM.call(v3323.find, v3323, [JAM.call(d$$399._sanitizeSelector, d$$399, [b$$667.hash], JAM.policy.p3)], JAM.policy.p3);
      var v26421 = JAM.call(c$$534.hasClass, c$$534, ["ui-tabs-selected"], JAM.policy.p3);
      if (v26421) {
        v26421 = !e$$342.collapsible;
      }
      var v24382 = v26421;
      if (!v24382) {
        v24382 = JAM.call(c$$534.hasClass, c$$534, ["ui-state-disabled"], JAM.policy.p3);
      }
      var v21397 = v24382;
      if (!v21397) {
        v21397 = JAM.call(c$$534.hasClass, c$$534, ["ui-state-processing"], JAM.policy.p3);
      }
      var v15649 = v21397;
      if (!v15649) {
        var v24384 = d$$399.panels;
        v15649 = JAM.call(v24384.filter, v24384, [":animated"], JAM.policy.p3).length;
      }
      var v9921 = v15649;
      if (!v9921) {
        v9921 = JAM.call(d$$399._trigger, d$$399, ["select", null, JAM.call(d$$399._ui, d$$399, [this, g$$193[0]], JAM.policy.p3)], JAM.policy.p3) === !1;
      }
      if (v9921) {
        JAM.call(this.blur, this, [], JAM.policy.p3);
        return !1;
      }
      var v9922 = e$$342;
      var v15653 = d$$399.anchors;
      var v30961 = JAM.call(v15653.index, v15653, [this], JAM.policy.p3);
      v9922.selected = v30961;
      JAM.call(d$$399.abort, d$$399, [], JAM.policy.p3);
      if (e$$342.collapsible) {
        if (JAM.call(c$$534.hasClass, c$$534, ["ui-tabs-selected"], JAM.policy.p3)) {
          e$$342.selected = -1;
          var v24386 = e$$342.cookie;
          if (v24386) {
            JAM.call(d$$399._cookie, d$$399, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
          }
          var v24387 = d$$399.element;
          var v21401 = JAM.call(v24387.queue, v24387, ["tabs", v1810], JAM.policy.p3);
          JAM.call(v21401.dequeue, v21401, ["tabs"], JAM.policy.p3);
          JAM.call(this.blur, this, [], JAM.policy.p3);
          return !1;
        }
        if (!f$$178.length) {
          var v24388 = e$$342.cookie;
          if (v24388) {
            JAM.call(d$$399._cookie, d$$399, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
          }
          var v24389 = d$$399.element;
          JAM.call(v24389.queue, v24389, ["tabs", v1811], JAM.policy.p3);
          var v24390 = d$$399.anchors;
          JAM.call(d$$399.load, d$$399, [JAM.call(v24390.index, v24390, [this], JAM.policy.p3)], JAM.policy.p3);
          JAM.call(this.blur, this, [], JAM.policy.p3);
          return !1;
        }
      }
      var v3329 = e$$342.cookie;
      if (v3329) {
        JAM.call(d$$399._cookie, d$$399, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
      }
      if (g$$193.length) {
        var v15654 = f$$178.length;
        if (v15654) {
          var v21403 = d$$399.element;
          JAM.call(v21403.queue, v21403, ["tabs", v1812], JAM.policy.p3);
        }
        var v15655 = d$$399.element;
        JAM.call(v15655.queue, v15655, ["tabs", v1813], JAM.policy.p3);
        var v15656 = d$$399.anchors;
        JAM.call(d$$399.load, d$$399, [JAM.call(v15656.index, v15656, [this], JAM.policy.p3)], JAM.policy.p3);
      } else {
        throw "jQuery UI Tabs: Mismatching fragment identifier.";
      }
      var v3331 = a$$663.browser.msie;
      if (v3331) {
        JAM.call(this.blur, this, [], JAM.policy.p3);
      }
      return;
    }
    function v1809(a$$673, b$$666, c$$533) {
      var v15657 = d$$399.lis;
      JAM.call(v15657.removeClass, v15657, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      JAM.call(b$$666.addClass, b$$666, ["ui-tabs-hide"], JAM.policy.p3);
      var v9928 = d$$399.element;
      JAM.call(v9928.dequeue, v9928, ["tabs"], JAM.policy.p3);
      return;
    }
    function v1808(a$$672, b$$665) {
      function v1807() {
        var v21404 = d$$399.lis;
        JAM.call(v21404.removeClass, v21404, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
        JAM.call(b$$665.addClass, b$$665, ["ui-tabs-hide"], JAM.policy.p3);
        m$$49(b$$665, k$$74);
        var v9929 = d$$399.element;
        JAM.call(v9929.dequeue, v9929, ["tabs"], JAM.policy.p3);
        return;
      }
      var v9930 = k$$74.duration;
      if (!v9930) {
        v9930 = "normal";
      }
      JAM.call(b$$665.animate, b$$665, [k$$74, v9930, v1807], JAM.policy.p3);
      return;
    }
    function v1806(b$$664, c$$532) {
      var v21405 = JAM.call(a$$663, null, [b$$664], JAM.policy.p3);
      var v15659 = JAM.call(v21405.closest, v21405, ["li"], JAM.policy.p3);
      JAM.call(v15659.addClass, v15659, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      JAM.call(c$$532.removeClass, c$$532, ["ui-tabs-hide"], JAM.policy.p3);
      JAM.call(d$$399._trigger, d$$399, ["show", null, JAM.call(d$$399._ui, d$$399, [b$$664, c$$532[0]], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1805(b$$663, c$$531) {
      function v1804() {
        m$$49(c$$531, l$$80);
        JAM.call(d$$399._trigger, d$$399, ["show", null, JAM.call(d$$399._ui, d$$399, [b$$663, c$$531[0]], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      var v15662 = JAM.call(a$$663, null, [b$$663], JAM.policy.p3);
      var v9933 = JAM.call(v15662.closest, v15662, ["li"], JAM.policy.p3);
      JAM.call(v9933.addClass, v9933, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      var v15663 = JAM.call(c$$531.hide, c$$531, [], JAM.policy.p3);
      var v9934 = JAM.call(v15663.removeClass, v15663, ["ui-tabs-hide"], JAM.policy.p3);
      var v15664 = l$$80.duration;
      if (!v15664) {
        v15664 = "normal";
      }
      JAM.call(v9934.animate, v9934, [l$$80, v15664, v1804], JAM.policy.p3);
      return;
    }
    function v1803() {
      var v3333 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      var b$$inline_78 = JAM.call(v3333.closest, v3333, ["li"], JAM.policy.p3);
      JAM.call(b$$inline_78.removeClass, b$$inline_78, ["ui-state-" + "focus"], JAM.policy.p3);
      return;
    }
    function v1802() {
      var v9936 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      JAM.call(i$$207, null, ["focus", JAM.call(v9936.closest, v9936, ["li"], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1801() {
      var b$$inline_75 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      JAM.call(b$$inline_75.removeClass, b$$inline_75, ["ui-state-" + "hover"], JAM.policy.p3);
      return;
    }
    function v1800() {
      JAM.call(i$$207, null, ["hover", JAM.call(a$$663, null, [this], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1799(a$$670, b$$661) {
      var v3338 = JAM.call(b$$661.is, b$$661, [":not(.ui-state-disabled)"], JAM.policy.p3);
      if (v3338) {
        JAM.call(b$$661.addClass, b$$661, ["ui-state-" + a$$670], JAM.policy.p3);
      }
      return;
    }
    function v1798() {
      var v15665 = d$$399.lis;
      var v9938 = JAM.call(v15665.add, v15665, [d$$399.anchors], JAM.policy.p3);
      JAM.call(v9938.unbind, v9938, [".tabs"], JAM.policy.p3);
      d$$399.lis = d$$399.anchors = d$$399.panels = null;
      return;
    }
    function v1797() {
      var v9939 = d$$399.anchors[e$$342.selected];
      var v21407 = d$$399.element;
      JAM.call(d$$399._trigger, d$$399, ["show", null, JAM.call(d$$399._ui, d$$399, [v9939, JAM.call(v21407.find, v21407, [JAM.call(d$$399._sanitizeSelector, d$$399, [d$$399.anchors[e$$342.selected].hash], JAM.policy.p3)], JAM.policy.p3)[0]], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1796(a$$669, b$$660) {
      var v3340 = d$$399.lis;
      return JAM.call(v3340.index, v3340, [a$$669], JAM.policy.p3);
    }
    function v1795(a$$668, b$$659) {
      if (b$$659.hash == location.hash) {
        e$$342.selected = a$$668;
        return !1;
      }
      return;
    }
    function v1794(b$$658, c$$530) {
      var v3342 = JAM.call(a$$663, null, [c$$530], JAM.policy.p3);
      var g$$192 = JAM.call(v3342.attr, v3342, ["href"], JAM.policy.p3);
      var h$$159 = JAM.call(g$$192.split, g$$192, ["#"], JAM.policy.p3)[0];
      var i$$208;
      var v9943 = h$$159;
      if (v9943) {
        var v26428 = JAM.call(location.toString, location, [], JAM.policy.p3);
        var v15670 = h$$159 === JAM.call(v26428.split, v26428, ["#"], JAM.policy.p3)[0];
        if (!v15670) {
          var v21410 = i$$208 = JAM.call(a$$663, null, ["base"], JAM.policy.p3)[0];
          if (v21410) {
            v21410 = h$$159 === i$$208.href;
          }
          v15670 = v21410;
        }
        v9943 = v15670;
      }
      var v3344 = v9943;
      if (v3344) {
        g$$192 = c$$530.hash;
        c$$530.href = g$$192;
      }
      if (JAM.call(f$$177.test, f$$177, [g$$192], JAM.policy.p3)) {
        var v3345 = d$$399;
        var v9944 = d$$399.panels;
        var v15671 = d$$399.element;
        var v30962 = JAM.call(v9944.add, v9944, [JAM.call(v15671.find, v15671, [JAM.call(d$$399._sanitizeSelector, d$$399, [g$$192], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
        v3345.panels = v30962;
      } else {
        var v9946 = g$$192;
        if (v9946) {
          v9946 = g$$192 !== "#";
        }
        if (v9946) {
          JAM.call(a$$663.data, a$$663, [c$$530, "href.tabs", g$$192], JAM.policy.p3);
          JAM.call(a$$663.data, a$$663, [c$$530, "load.tabs", JAM.call(g$$192.replace, g$$192, [/#.*$/, ""], JAM.policy.p3)], JAM.policy.p3);
          var j$$107 = JAM.call(d$$399._tabId, d$$399, [c$$530], JAM.policy.p3);
          c$$530.href = "#" + j$$107;
          var v3346 = d$$399.element;
          var k$$75 = JAM.call(v3346.find, v3346, ["#" + j$$107], JAM.policy.p3);
          var v9948 = k$$75.length;
          if (!v9948) {
            var v26429 = JAM.call(a$$663, null, [e$$342.panelTemplate], JAM.policy.p3);
            var v24395 = JAM.call(v26429.attr, v26429, ["id", j$$107], JAM.policy.p3);
            var v21412 = JAM.call(v24395.addClass, v24395, ["ui-tabs-panel ui-widget-content ui-corner-bottom"], JAM.policy.p3);
            var v24396 = d$$399.panels[b$$658 - 1];
            if (!v24396) {
              v24396 = d$$399.list;
            }
            k$$75 = JAM.call(v21412.insertAfter, v21412, [v24396], JAM.policy.p3);
            JAM.call(k$$75.data, k$$75, ["destroy.tabs", !0], JAM.policy.p3);
          }
          var v9949 = d$$399;
          var v15674 = d$$399.panels;
          var v30963 = JAM.call(v15674.add, v15674, [k$$75], JAM.policy.p3);
          v9949.panels = v30963;
        } else {
          var v3348 = e$$342.disabled;
          JAM.call(v3348.push, v3348, [b$$658], JAM.policy.p3);
        }
      }
      return;
    }
    function v1793() {
      return JAM.call(a$$663, null, ["a", this], JAM.policy.p3)[0];
    }
    function m$$49(b$$657, c$$529) {
      JAM.call(b$$657.css, b$$657, ["display", ""], JAM.policy.p3);
      var v15675 = !a$$663.support.opacity;
      if (v15675) {
        v15675 = c$$529.opacity;
      }
      var v9950 = v15675;
      if (v9950) {
        var v15676 = b$$657[0].style;
        JAM.call(v15676.removeAttribute, v15676, ["filter"], JAM.policy.p3);
      }
      return;
    }
    var d$$399 = this;
    var e$$342 = this.options;
    var f$$177 = /^#.+/;
    var v29402 = this.element;
    var v28766 = JAM.call(v29402.find, v29402, ["ol,ul"], JAM.policy.p3);
    var v30964 = JAM.call(v28766.eq, v28766, [0], JAM.policy.p3);
    this.list = v30964;
    var v30965 = JAM.call(a$$663, null, [" > li:has(a[href])", this.list], JAM.policy.p3);
    this.lis = v30965;
    var v27838 = this.lis;
    var v30966 = JAM.call(v27838.map, v27838, [v1793], JAM.policy.p3);
    this.anchors = v30966;
    var v30967 = JAM.call(a$$663, null, [[]], JAM.policy.p3);
    this.panels = v30967;
    var v24398 = this.anchors;
    JAM.call(v24398.each, v24398, [v1794], JAM.policy.p3);
    var v21417;
    if (c$$528) {
      var v30705 = this.element;
      JAM.call(v30705.addClass, v30705, ["ui-tabs ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
      var v30706 = this.list;
      JAM.call(v30706.addClass, v30706, ["ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"], JAM.policy.p3);
      var v30648 = this.lis;
      JAM.call(v30648.addClass, v30648, ["ui-state-default ui-corner-top"], JAM.policy.p3);
      var v30560 = this.panels;
      JAM.call(v30560.addClass, v30560, ["ui-tabs-panel ui-widget-content ui-corner-bottom"], JAM.policy.p3);
      var v30425;
      if (e$$342.selected === b$$652) {
        var v30753 = location.hash;
        if (v30753) {
          var v30782 = this.anchors;
          JAM.call(v30782.each, v30782, [v1795], JAM.policy.p3);
        }
        var v30783 = typeof e$$342.selected != "number";
        if (v30783) {
          v30783 = e$$342.cookie;
        }
        var v30754 = v30783;
        if (v30754) {
          var v30784 = e$$342;
          var v30968 = parseInt(JAM.call(d$$399._cookie, d$$399, [], JAM.policy.p3), 10);
          v30784.selected = v30968;
        }
        var v30755 = typeof e$$342.selected != "number";
        if (v30755) {
          var v30811 = this.lis;
          v30755 = JAM.call(v30811.filter, v30811, [".ui-tabs-selected"], JAM.policy.p3).length;
        }
        var v30707 = v30755;
        if (v30707) {
          var v30756 = e$$342;
          var v30787 = this.lis;
          var v30812 = this.lis;
          var v30969 = JAM.call(v30787.index, v30787, [JAM.call(v30812.filter, v30812, [".ui-tabs-selected"], JAM.policy.p3)], JAM.policy.p3);
          v30756.selected = v30969;
        }
        var v30650 = e$$342.selected;
        if (!v30650) {
          var v30708;
          if (this.lis.length) {
            v30708 = 0;
          } else {
            v30708 = -1;
          }
          v30650 = v30708;
        }
        v30425 = e$$342.selected = v30650;
      } else {
        var v30561 = e$$342.selected === null;
        if (v30561) {
          v30561 = e$$342.selected = -1;
        }
        v30425 = v30561;
      }
      v30425;
      var v30269;
      var v30652 = e$$342.selected >= 0;
      if (v30652) {
        v30652 = this.anchors[e$$342.selected];
      }
      var v30563 = v30652;
      if (!v30563) {
        v30563 = e$$342.selected < 0;
      }
      if (v30563) {
        v30269 = e$$342.selected;
      } else {
        v30269 = 0;
      }
      e$$342.selected = v30269;
      var v30045 = e$$342;
      var v30564 = e$$342.disabled;
      var v30713 = this.lis;
      var v30270 = JAM.call(a$$663.unique, a$$663, [JAM.call(v30564.concat, v30564, [JAM.call(a$$663.map, a$$663, [JAM.call(v30713.filter, v30713, [".ui-state-disabled"], JAM.policy.p3), v1796], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      var v30970 = JAM.call(v30270.sort, v30270, [], JAM.policy.p3);
      v30045.disabled = v30970;
      var v29781 = JAM.call(a$$663.inArray, a$$663, [e$$342.selected, e$$342.disabled], JAM.policy.p3) != -1;
      if (v29781) {
        var v30047 = e$$342.disabled;
        JAM.call(v30047.splice, v30047, [JAM.call(a$$663.inArray, a$$663, [e$$342.selected, e$$342.disabled], JAM.policy.p3), 1], JAM.policy.p3);
      }
      var v29403 = this.panels;
      JAM.call(v29403.addClass, v29403, ["ui-tabs-hide"], JAM.policy.p3);
      var v28768 = this.lis;
      JAM.call(v28768.removeClass, v28768, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
      var v28769 = e$$342.selected >= 0;
      if (v28769) {
        v28769 = this.anchors.length;
      }
      var v27839 = v28769;
      if (v27839) {
        var v30275 = d$$399.element;
        var v30049 = JAM.call(v30275.find, v30275, [JAM.call(d$$399._sanitizeSelector, d$$399, [d$$399.anchors[e$$342.selected].hash], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(v30049.removeClass, v30049, ["ui-tabs-hide"], JAM.policy.p3);
        var v30277 = this.lis;
        var v30050 = JAM.call(v30277.eq, v30277, [e$$342.selected], JAM.policy.p3);
        JAM.call(v30050.addClass, v30050, ["ui-tabs-selected ui-state-active"], JAM.policy.p3);
        var v29782 = d$$399.element;
        JAM.call(v29782.queue, v29782, ["tabs", v1797], JAM.policy.p3);
        JAM.call(this.load, this, [e$$342.selected], JAM.policy.p3);
      }
      var v26433 = JAM.call(a$$663, null, [window], JAM.policy.p3);
      v21417 = JAM.call(v26433.bind, v26433, ["unload", v1798], JAM.policy.p3);
    } else {
      var v24399 = e$$342;
      var v26434 = this.lis;
      var v27840 = this.lis;
      var v30971 = JAM.call(v26434.index, v26434, [JAM.call(v27840.filter, v27840, [".ui-tabs-selected"], JAM.policy.p3)], JAM.policy.p3);
      v21417 = v24399.selected = v30971;
    }
    v21417;
    var v15677 = this.element;
    var v21418;
    if (e$$342.collapsible) {
      v21418 = "addClass";
    } else {
      v21418 = "removeClass";
    }
    JAM.call(v15677[v21418], v15677, ["ui-tabs-collapsible"], JAM.policy.p3);
    var v9951 = e$$342.cookie;
    if (v9951) {
      JAM.call(this._cookie, this, [e$$342.selected, e$$342.cookie], JAM.policy.p3);
    }
    var g$$191 = 0;
    var h$$158;
    var v3354 = h$$158 = this.lis[g$$191];
    for (;v3354;) {
      var v3352 = JAM.call(a$$663, null, [h$$158], JAM.policy.p3);
      var v9953;
      var v21419 = JAM.call(a$$663.inArray, a$$663, [g$$191, e$$342.disabled], JAM.policy.p3) != -1;
      if (v21419) {
        var v26437 = JAM.call(a$$663, null, [h$$158], JAM.policy.p3);
        v21419 = !JAM.call(v26437.hasClass, v26437, ["ui-tabs-selected"], JAM.policy.p3);
      }
      if (v21419) {
        v9953 = "addClass";
      } else {
        v9953 = "removeClass";
      }
      JAM.call(v3352[v9953], v3352, ["ui-state-disabled"], JAM.policy.p3);
      g$$191++;
      v3354 = h$$158 = this.lis[g$$191];
    }
    var v9955 = e$$342.cache === !1;
    if (v9955) {
      var v15684 = this.anchors;
      JAM.call(v15684.removeData, v15684, ["cache.tabs"], JAM.policy.p3);
    }
    var v15685 = this.lis;
    var v9956 = JAM.call(v15685.add, v15685, [this.anchors], JAM.policy.p3);
    JAM.call(v9956.unbind, v9956, [".tabs"], JAM.policy.p3);
    if (e$$342.event !== "mouseover") {
      var i$$207 = v1799;
      var v21420 = this.lis;
      JAM.call(v21420.bind, v21420, ["mouseover.tabs", v1800], JAM.policy.p3);
      var v21421 = this.lis;
      JAM.call(v21421.bind, v21421, ["mouseout.tabs", v1801], JAM.policy.p3);
      var v15687 = this.anchors;
      JAM.call(v15687.bind, v15687, ["focus.tabs", v1802], JAM.policy.p3);
      var v9958 = this.anchors;
      JAM.call(v9958.bind, v9958, ["blur.tabs", v1803], JAM.policy.p3);
    }
    var k$$74;
    var l$$80;
    var v3356 = e$$342.fx;
    if (v3356) {
      var v9959;
      if (JAM.call(a$$663.isArray, a$$663, [e$$342.fx], JAM.policy.p3)) {
        k$$74 = e$$342.fx[0];
        v9959 = l$$80 = e$$342.fx[1];
      } else {
        v9959 = k$$74 = l$$80 = e$$342.fx;
      }
      v9959;
    }
    var v3357;
    if (l$$80) {
      v3357 = v1805;
    } else {
      v3357 = v1806;
    }
    var n$$95 = v3357;
    var v3358;
    if (k$$74) {
      v3358 = v1808;
    } else {
      v3358 = v1809;
    }
    var o$$25 = v3358;
    var v9960 = this.anchors;
    JAM.call(v9960.bind, v9960, [e$$342.event + ".tabs", v1814], JAM.policy.p3);
    var v9962 = this.anchors;
    JAM.call(v9962.bind, v9962, ["click.tabs", v1815], JAM.policy.p3);
    return;
  }
  function v1792() {
    function v1791() {
      var b$$656 = JAM.call(a$$663, null, [this], JAM.policy.p3);
      var v3359 = JAM.call(b$$656.html, b$$656, [JAM.call(b$$656.data, b$$656, ["label.tabs"], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v3359.removeData, v3359, ["label.tabs"], JAM.policy.p3);
      return;
    }
    var v21425 = this.lis;
    var v15690 = JAM.call(v21425.filter, v21425, [".ui-state-processing"], JAM.policy.p3);
    var v9964 = JAM.call(v15690.removeClass, v15690, ["ui-state-processing"], JAM.policy.p3);
    var v3360 = JAM.call(v9964.find, v9964, ["span:data(label.tabs)"], JAM.policy.p3);
    JAM.call(v3360.each, v3360, [v1791], JAM.policy.p3);
    return;
  }
  function v1790(a$$667, b$$655) {
    var v9965 = this.anchors;
    return {tab:a$$667, panel:b$$655, index:JAM.call(v9965.index, v9965, [a$$667], JAM.policy.p3)};
  }
  function v1789() {
    var v3362 = this.cookie;
    if (!v3362) {
      var v9966 = this.options.cookie.name;
      if (!v9966) {
        v9966 = "ui-tabs-" + (d$$398 = d$$398 + 1);
      }
      introspect(JAM.policy.p2) {
        v3362 = this.cookie = v9966;
      }
    }
    var b$$654 = v3362;
    var v3363 = a$$663.cookie;
    var v9968 = [b$$654];
    return JAM.call(v3363.apply, v3363, [null, JAM.call(v9968.concat, v9968, [JAM.call(a$$663.makeArray, a$$663, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1788(a$$666) {
    return JAM.call(a$$666.replace, a$$666, [/:/g, "\\:"], JAM.policy.p3);
  }
  function v1787(a$$665) {
    var v9970 = a$$665.title;
    if (v9970) {
      var v21427 = a$$665.title;
      var v15694 = JAM.call(v21427.replace, v21427, [/\s/g, "_"], JAM.policy.p3);
      v9970 = JAM.call(v15694.replace, v15694, [/[^\w\u00c0-\uFFFF-]/g, ""], JAM.policy.p3);
    }
    var v3365 = v9970;
    if (!v3365) {
      v3365 = this.options.idPrefix + (c$$527 = c$$527 + 1);
    }
    return v3365;
  }
  function v1786(a$$664, b$$653) {
    if (a$$664 == "selected") {
      var v9974 = this.options.collapsible;
      if (v9974) {
        v9974 = b$$653 == this.options.selected;
      }
      if (v9974) {
        return;
      }
      JAM.call(this.select, this, [b$$653], JAM.policy.p3);
    } else {
      var v9975 = this.options;
      introspect(JAM.policy.p2) {
        v9975[a$$664] = b$$653;
      }
      JAM.call(this._tabify, this, [], JAM.policy.p3);
    }
    return;
  }
  function v1785() {
    JAM.call(this._tabify, this, [!0], JAM.policy.p3);
    return;
  }
  var c$$527 = 0;
  var d$$398 = 0;
  JAM.call(a$$663.widget, a$$663, ["ui.tabs", {options:{add:null, ajaxOptions:null, cache:!1, cookie:null, collapsible:!1, disable:null, disabled:[], enable:null, event:"click", fx:null, idPrefix:"ui-tabs-", load:null, panelTemplate:"<div></div>", remove:null, select:null, show:null, spinner:"<em>Loading&#8230;</em>", tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"}, _create:v1785, _setOption:v1786, _tabId:v1787, _sanitizeSelector:v1788, _cookie:v1789, _ui:v1790, _cleanup:v1792, 
  _tabify:v1816, _getIndex:v1817, destroy:v1821, add:v1824, remove:v1827, enable:v1829, disable:v1830, select:v1831, load:v1834, abort:v1835, url:v1836, length:v1837}], JAM.policy.p3);
  JAM.call(a$$663.extend, a$$663, [a$$663.ui.tabs, {version:"1.8.24"}], JAM.policy.p3);
  JAM.call(a$$663.extend, a$$663, [a$$663.ui.tabs.prototype, {rotation:null, rotate:v1842}], JAM.policy.p3);
  return;
}
function v1784(a$$649, b$$635) {
  function v1783() {
    function v1782(b$$651, i$$206) {
      f$$175 = (JAM.call(d$$397.values, d$$397, [b$$651], JAM.policy.p3) - d$$397.options.min) / (d$$397.options.max - d$$397.options.min) * 100;
      var v26440;
      if (d$$397.orientation === "horizontal") {
        v26440 = "left";
      } else {
        v26440 = "bottom";
      }
      var v24406 = v26440;
      introspect(JAM.policy.p2) {
        g$$190[v24406] = f$$175 + "%";
      }
      var v24407 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      var v21432 = JAM.call(v24407.stop, v24407, [1, 1], JAM.policy.p3);
      var v24408;
      if (e$$340) {
        v24408 = "animate";
      } else {
        v24408 = "css";
      }
      JAM.call(v21432[v24408], v21432, [g$$190, c$$526.animate], JAM.policy.p3);
      var v15702 = d$$397.options.range === !0;
      if (v15702) {
        var v21437;
        if (d$$397.orientation === "horizontal") {
          var v26442 = b$$651 === 0;
          if (v26442) {
            var v28774 = d$$397.range;
            var v27846 = JAM.call(v28774.stop, v28774, [1, 1], JAM.policy.p3);
            var v28775;
            if (e$$340) {
              v28775 = "animate";
            } else {
              v28775 = "css";
            }
            JAM.call(v27846[v28775], v27846, [{left:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
          }
          var v26443 = b$$651 === 1;
          if (v26443) {
            var v27850 = d$$397.range;
            var v28777;
            if (e$$340) {
              v28777 = "animate";
            } else {
              v28777 = "css";
            }
            v26443 = JAM.call(v27850[v28777], v27850, [{width:f$$175 - h$$157 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
          }
          v21437 = v26443;
        } else {
          var v26444 = b$$651 === 0;
          if (v26444) {
            var v28781 = d$$397.range;
            var v27854 = JAM.call(v28781.stop, v28781, [1, 1], JAM.policy.p3);
            var v28782;
            if (e$$340) {
              v28782 = "animate";
            } else {
              v28782 = "css";
            }
            JAM.call(v27854[v28782], v27854, [{bottom:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
          }
          var v26445 = b$$651 === 1;
          if (v26445) {
            var v27858 = d$$397.range;
            var v28784;
            if (e$$340) {
              v28784 = "animate";
            } else {
              v28784 = "css";
            }
            v26445 = JAM.call(v27858[v28784], v27858, [{height:f$$175 - h$$157 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
          }
          v21437 = v26445;
        }
        v21437;
      }
      h$$157 = f$$175;
      return;
    }
    var b$$650 = this.options.range;
    var c$$526 = this.options;
    var d$$397 = this;
    var v3370;
    if (this._animateOff) {
      v3370 = !1;
    } else {
      v3370 = c$$526.animate;
    }
    var e$$340 = v3370;
    var f$$175;
    var g$$190 = {};
    var h$$157;
    var i$$205;
    var j$$105;
    var k$$73;
    var v3371;
    var v15703 = this.options.values;
    if (v15703) {
      v15703 = this.options.values.length;
    }
    if (v15703) {
      var v9979 = this.handles;
      v3371 = JAM.call(v9979.each, v9979, [v1782], JAM.policy.p3);
    } else {
      i$$205 = JAM.call(this.value, this, [], JAM.policy.p3);
      j$$105 = this.options.min;
      k$$73 = this.options.max;
      var v29409;
      if (k$$73 !== j$$105) {
        v29409 = (i$$205 - j$$105) / (k$$73 - j$$105) * 100;
      } else {
        v29409 = 0;
      }
      f$$175 = v29409;
      var v29410;
      if (d$$397.orientation === "horizontal") {
        v29410 = "left";
      } else {
        v29410 = "bottom";
      }
      var v28788 = v29410;
      introspect(JAM.policy.p2) {
        g$$190[v28788] = f$$175 + "%";
      }
      var v28789 = this.handle;
      var v27862 = JAM.call(v28789.stop, v28789, [1, 1], JAM.policy.p3);
      var v28790;
      if (e$$340) {
        v28790 = "animate";
      } else {
        v28790 = "css";
      }
      JAM.call(v27862[v28790], v27862, [g$$190, c$$526.animate], JAM.policy.p3);
      var v27865 = b$$650 === "min";
      if (v27865) {
        v27865 = this.orientation === "horizontal";
      }
      var v26446 = v27865;
      if (v26446) {
        var v28792 = this.range;
        var v27866 = JAM.call(v28792.stop, v28792, [1, 1], JAM.policy.p3);
        var v28793;
        if (e$$340) {
          v28793 = "animate";
        } else {
          v28793 = "css";
        }
        JAM.call(v27866[v28793], v27866, [{width:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
      }
      var v26447 = b$$650 === "max";
      if (v26447) {
        v26447 = this.orientation === "horizontal";
      }
      var v24412 = v26447;
      if (v24412) {
        var v26448 = this.range;
        var v27871;
        if (e$$340) {
          v27871 = "animate";
        } else {
          v27871 = "css";
        }
        JAM.call(v26448[v27871], v26448, [{width:100 - f$$175 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
      }
      var v24413 = b$$650 === "min";
      if (v24413) {
        v24413 = this.orientation === "vertical";
      }
      var v21440 = v24413;
      if (v21440) {
        var v26453 = this.range;
        var v24414 = JAM.call(v26453.stop, v26453, [1, 1], JAM.policy.p3);
        var v26454;
        if (e$$340) {
          v26454 = "animate";
        } else {
          v26454 = "css";
        }
        JAM.call(v24414[v26454], v24414, [{height:f$$175 + "%"}, c$$526.animate], JAM.policy.p3);
      }
      var v21441 = b$$650 === "max";
      if (v21441) {
        v21441 = this.orientation === "vertical";
      }
      var v15704 = v21441;
      if (v15704) {
        var v21442 = this.range;
        var v24419;
        if (e$$340) {
          v24419 = "animate";
        } else {
          v24419 = "css";
        }
        v15704 = JAM.call(v21442[v24419], v21442, [{height:100 - f$$175 + "%"}, {queue:!1, duration:c$$526.animate}], JAM.policy.p3);
      }
      v3371 = v15704;
    }
    v3371;
    return;
  }
  function v1781() {
    return this.options.max;
  }
  function v1780() {
    return this.options.min;
  }
  function v1779(a$$662) {
    if (a$$662 <= this.options.min) {
      return this.options.min;
    }
    if (a$$662 >= this.options.max) {
      return this.options.max;
    }
    var v3378;
    if (this.options.step > 0) {
      v3378 = this.options.step;
    } else {
      v3378 = 1;
    }
    var b$$649 = v3378;
    var c$$525 = (a$$662 - this.options.min) % b$$649;
    var d$$396 = a$$662 - c$$525;
    var v9986 = JAM.call(Math.abs, Math, [c$$525], JAM.policy.p3) * 2 >= b$$649;
    if (v9986) {
      var v24423;
      if (c$$525 > 0) {
        v24423 = b$$649;
      } else {
        v24423 = -b$$649;
      }
      d$$396 = d$$396 + v24423;
    }
    return parseFloat(JAM.call(d$$396.toFixed, d$$396, [5], JAM.policy.p3));
  }
  function v1778(a$$661) {
    var b$$648;
    var c$$524;
    var d$$395;
    if (arguments.length) {
      b$$648 = this.options.values[a$$661];
      b$$648 = JAM.call(this._trimAlignValue, this, [b$$648], JAM.policy.p3);
      return b$$648;
    }
    var v3381 = this.options.values;
    c$$524 = JAM.call(v3381.slice, v3381, [], JAM.policy.p3);
    d$$395 = 0;
    var v3383 = d$$395 < c$$524.length;
    for (;v3383;) {
      var v30972 = JAM.call(this._trimAlignValue, this, [c$$524[d$$395]], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        c$$524[d$$395] = v30972;
      }
      d$$395 = d$$395 + 1;
      v3383 = d$$395 < c$$524.length;
    }
    return c$$524;
  }
  function v1777() {
    var a$$660 = this.options.value;
    a$$660 = JAM.call(this._trimAlignValue, this, [a$$660], JAM.policy.p3);
    return a$$660;
  }
  function v1776(b$$647, c$$523) {
    var d$$394;
    var e$$339 = 0;
    var v9991 = JAM.call(a$$649.isArray, a$$649, [this.options.values], JAM.policy.p3);
    if (v9991) {
      e$$339 = this.options.values.length;
    }
    var v9992 = a$$649.Widget.prototype._setOption;
    JAM.call(v9992.apply, v9992, [this, arguments], JAM.policy.p3);
    switch(b$$647) {
      case "disabled":
        var v3385;
        if (c$$523) {
          var v26458 = this.handles;
          var v24424 = JAM.call(v26458.filter, v26458, [".ui-state-focus"], JAM.policy.p3);
          JAM.call(v24424.blur, v24424, [], JAM.policy.p3);
          var v24425 = this.handles;
          JAM.call(v24425.removeClass, v24425, ["ui-state-hover"], JAM.policy.p3);
          var v21453 = this.handles;
          JAM.call(v21453.propAttr, v21453, ["disabled", !0], JAM.policy.p3);
          var v15714 = this.element;
          v3385 = JAM.call(v15714.addClass, v15714, ["ui-disabled"], JAM.policy.p3);
        } else {
          var v15715 = this.handles;
          JAM.call(v15715.propAttr, v15715, ["disabled", !1], JAM.policy.p3);
          var v15717 = this.element;
          v3385 = JAM.call(v15717.removeClass, v15717, ["ui-disabled"], JAM.policy.p3);
        }
        v3385;
        break;
      case "orientation":
        JAM.call(this._detectOrientation, this, [], JAM.policy.p3);
        var v21455 = this.element;
        var v15718 = JAM.call(v21455.removeClass, v21455, ["ui-slider-horizontal ui-slider-vertical"], JAM.policy.p3);
        JAM.call(v15718.addClass, v15718, ["ui-slider-" + this.orientation], JAM.policy.p3);
        JAM.call(this._refreshValue, this, [], JAM.policy.p3);
        break;
      case "value":
        this._animateOff = !0;
        JAM.call(this._refreshValue, this, [], JAM.policy.p3);
        JAM.call(this._change, this, [null, 0], JAM.policy.p3);
        this._animateOff = !1;
        break;
      case "values":
        this._animateOff = !0;
        JAM.call(this._refreshValue, this, [], JAM.policy.p3);
        d$$394 = 0;
        var v3386 = d$$394 < e$$339;
        for (;v3386;) {
          JAM.call(this._change, this, [null, d$$394], JAM.policy.p3);
          d$$394 = d$$394 + 1;
          v3386 = d$$394 < e$$339;
        }
        this._animateOff = !1;
    }
    return;
  }
  function v1775(b$$646, c$$522) {
    var d$$393;
    var e$$338;
    var f$$174;
    if (arguments.length > 1) {
      var v15720 = this.options.values;
      var v30973 = JAM.call(this._trimAlignValue, this, [c$$522], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v15720[b$$646] = v30973;
      }
      JAM.call(this._refreshValue, this, [], JAM.policy.p3);
      JAM.call(this._change, this, [null, b$$646], JAM.policy.p3);
      return;
    }
    if (!arguments.length) {
      return JAM.call(this._values, this, [], JAM.policy.p3);
    }
    if (!JAM.call(a$$649.isArray, a$$649, [arguments[0]], JAM.policy.p3)) {
      var v3389;
      var v15722 = this.options.values;
      if (v15722) {
        v15722 = this.options.values.length;
      }
      if (v15722) {
        v3389 = JAM.call(this._values, this, [b$$646], JAM.policy.p3);
      } else {
        v3389 = JAM.call(this.value, this, [], JAM.policy.p3);
      }
      return v3389;
    }
    d$$393 = this.options.values;
    e$$338 = arguments[0];
    f$$174 = 0;
    var v3391 = f$$174 < d$$393.length;
    for (;v3391;) {
      var v30974 = JAM.call(this._trimAlignValue, this, [e$$338[f$$174]], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        d$$393[f$$174] = v30974;
      }
      JAM.call(this._change, this, [null, f$$174], JAM.policy.p3);
      f$$174 = f$$174 + 1;
      v3391 = f$$174 < d$$393.length;
    }
    JAM.call(this._refreshValue, this, [], JAM.policy.p3);
    return;
  }
  function v1774(a$$659) {
    if (arguments.length) {
      var v15723 = this.options;
      var v30975 = JAM.call(this._trimAlignValue, this, [a$$659], JAM.policy.p3);
      v15723.value = v30975;
      JAM.call(this._refreshValue, this, [], JAM.policy.p3);
      JAM.call(this._change, this, [null, 0], JAM.policy.p3);
      return;
    }
    return JAM.call(this._value, this, [], JAM.policy.p3);
  }
  function v1773(a$$658, b$$645) {
    var v10001 = !this._keySliding;
    if (v10001) {
      v10001 = !this._mouseSliding;
    }
    if (v10001) {
      var c$$521 = {handle:this.handles[b$$645], value:JAM.call(this.value, this, [], JAM.policy.p3)};
      var v15726 = this.options.values;
      if (v15726) {
        v15726 = this.options.values.length;
      }
      var v10003 = v15726;
      if (v10003) {
        var v30976 = JAM.call(this.values, this, [b$$645], JAM.policy.p3);
        c$$521.value = v30976;
        var v30977 = JAM.call(this.values, this, [], JAM.policy.p3);
        c$$521.values = v30977;
      }
      JAM.call(this._trigger, this, ["change", a$$658, c$$521], JAM.policy.p3);
    }
    return;
  }
  function v1772(a$$657, b$$644) {
    var c$$520 = {handle:this.handles[b$$644], value:JAM.call(this.value, this, [], JAM.policy.p3)};
    var v15727 = this.options.values;
    if (v15727) {
      v15727 = this.options.values.length;
    }
    var v10005 = v15727;
    if (v10005) {
      var v30978 = JAM.call(this.values, this, [b$$644], JAM.policy.p3);
      c$$520.value = v30978;
      var v30979 = JAM.call(this.values, this, [], JAM.policy.p3);
      c$$520.values = v30979;
    }
    JAM.call(this._trigger, this, ["stop", a$$657, c$$520], JAM.policy.p3);
    return;
  }
  function v1771(a$$656, b$$643, c$$519) {
    var d$$392;
    var e$$337;
    var f$$173;
    var v3398;
    var v15728 = this.options.values;
    if (v15728) {
      v15728 = this.options.values.length;
    }
    if (v15728) {
      var v24430;
      if (b$$643) {
        v24430 = 0;
      } else {
        v24430 = 1;
      }
      d$$392 = JAM.call(this.values, this, [v24430], JAM.policy.p3);
      var v26459 = this.options.values.length === 2;
      if (v26459) {
        v26459 = this.options.range === !0;
      }
      var v24431 = v26459;
      if (v24431) {
        var v27878 = b$$643 === 0;
        if (v27878) {
          v27878 = c$$519 > d$$392;
        }
        var v26460 = v27878;
        if (!v26460) {
          var v27879 = b$$643 === 1;
          if (v27879) {
            v27879 = c$$519 < d$$392;
          }
          v26460 = v27879;
        }
        v24431 = v26460;
      }
      var v21467 = v24431;
      if (v21467) {
        c$$519 = d$$392;
      }
      var v15729 = c$$519 !== JAM.call(this.values, this, [b$$643], JAM.policy.p3);
      if (v15729) {
        e$$337 = JAM.call(this.values, this, [], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          e$$337[b$$643] = c$$519;
        }
        f$$173 = JAM.call(this._trigger, this, ["slide", a$$656, {handle:this.handles[b$$643], value:c$$519, values:e$$337}], JAM.policy.p3);
        var v27882;
        if (b$$643) {
          v27882 = 0;
        } else {
          v27882 = 1;
        }
        d$$392 = JAM.call(this.values, this, [v27882], JAM.policy.p3);
        var v24432 = f$$173 !== !1;
        if (v24432) {
          v24432 = JAM.call(this.values, this, [b$$643, c$$519, !0], JAM.policy.p3);
        }
        v15729 = v24432;
      }
      v3398 = v15729;
    } else {
      var v10006 = c$$519 !== JAM.call(this.value, this, [], JAM.policy.p3);
      if (v10006) {
        f$$173 = JAM.call(this._trigger, this, ["slide", a$$656, {handle:this.handles[b$$643], value:c$$519}], JAM.policy.p3);
        var v21470 = f$$173 !== !1;
        if (v21470) {
          v21470 = JAM.call(this.value, this, [c$$519], JAM.policy.p3);
        }
        v10006 = v21470;
      }
      v3398 = v10006;
    }
    v3398;
    return;
  }
  function v1770(a$$655, b$$642) {
    var c$$518 = {handle:this.handles[b$$642], value:JAM.call(this.value, this, [], JAM.policy.p3)};
    var v15731 = this.options.values;
    if (v15731) {
      v15731 = this.options.values.length;
    }
    var v10009 = v15731;
    if (v10009) {
      var v30980 = JAM.call(this.values, this, [b$$642], JAM.policy.p3);
      c$$518.value = v30980;
      var v30981 = JAM.call(this.values, this, [], JAM.policy.p3);
      c$$518.values = v30981;
    }
    return JAM.call(this._trigger, this, ["start", a$$655, c$$518], JAM.policy.p3);
  }
  function v1769(a$$654) {
    var b$$641;
    var c$$517;
    var d$$391;
    var e$$336;
    var f$$172;
    var v28799;
    if (this.orientation === "horizontal") {
      b$$641 = this.elementSize.width;
      var v29789 = a$$654.x - this.elementOffset.left;
      var v30057;
      if (this._clickOffset) {
        v30057 = this._clickOffset.left;
      } else {
        v30057 = 0;
      }
      v28799 = c$$517 = v29789 - v30057;
    } else {
      b$$641 = this.elementSize.height;
      var v29792 = a$$654.y - this.elementOffset.top;
      var v30060;
      if (this._clickOffset) {
        v30060 = this._clickOffset.top;
      } else {
        v30060 = 0;
      }
      v28799 = c$$517 = v29792 - v30060;
    }
    v28799;
    d$$391 = c$$517 / b$$641;
    var v27883 = d$$391 > 1;
    if (v27883) {
      d$$391 = 1;
    }
    var v26465 = d$$391 < 0;
    if (v26465) {
      d$$391 = 0;
    }
    var v24436 = this.orientation === "vertical";
    if (v24436) {
      d$$391 = 1 - d$$391;
    }
    e$$336 = this.options.max - this.options.min;
    f$$172 = this.options.min + d$$391 * e$$336;
    return JAM.call(this._trimAlignValue, this, [f$$172], JAM.policy.p3);
  }
  function v1768() {
    var v3401;
    if (this.options.orientation === "vertical") {
      v3401 = "vertical";
    } else {
      v3401 = "horizontal";
    }
    this.orientation = v3401;
    return;
  }
  function v1767(a$$653) {
    var v28800 = this.handles;
    JAM.call(v28800.removeClass, v28800, ["ui-state-active"], JAM.policy.p3);
    this._mouseSliding = !1;
    JAM.call(this._stop, this, [a$$653, this._handleIndex], JAM.policy.p3);
    JAM.call(this._change, this, [a$$653, this._handleIndex], JAM.policy.p3);
    this._handleIndex = null;
    this._clickOffset = null;
    this._animateOff = !1;
    return !1;
  }
  function v1766(a$$652) {
    var b$$640 = {x:a$$652.pageX, y:a$$652.pageY};
    var c$$516 = JAM.call(this._normValueFromMouse, this, [b$$640], JAM.policy.p3);
    JAM.call(this._slide, this, [a$$652, this._handleIndex, c$$516], JAM.policy.p3);
    return !1;
  }
  function v1765(a$$651) {
    return !0;
  }
  function v1764(b$$638) {
    function v1763(b$$639) {
      var c$$515 = JAM.call(Math.abs, Math, [e$$335 - JAM.call(h$$156.values, h$$156, [b$$639], JAM.policy.p3)], JAM.policy.p3);
      var v3405 = f$$171 > c$$515;
      if (v3405) {
        f$$171 = c$$515;
        g$$189 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        i$$204 = b$$639;
      }
      return;
    }
    var c$$514 = this.options;
    var d$$390;
    var e$$335;
    var f$$171;
    var g$$189;
    var h$$156;
    var i$$204;
    var j$$104;
    var k$$72;
    var l$$79;
    var v3406;
    if (c$$514.disabled) {
      v3406 = !1;
    } else {
      var v30285 = this.element;
      var v30061 = JAM.call(v30285.outerWidth, v30285, [], JAM.policy.p3);
      var v30286 = this.element;
      this.elementSize = {width:v30061, height:JAM.call(v30286.outerHeight, v30286, [], JAM.policy.p3)};
      var v30063 = this.element;
      var v30982 = JAM.call(v30063.offset, v30063, [], JAM.policy.p3);
      this.elementOffset = v30982;
      d$$390 = {x:b$$638.pageX, y:b$$638.pageY};
      e$$335 = JAM.call(this._normValueFromMouse, this, [d$$390], JAM.policy.p3);
      f$$171 = this.options.max - this.options.min + 1;
      h$$156 = this;
      var v26468 = this.handles;
      JAM.call(v26468.each, v26468, [v1763], JAM.policy.p3);
      var v26469 = c$$514.range === !0;
      if (v26469) {
        v26469 = JAM.call(this.values, this, [1], JAM.policy.p3) === c$$514.min;
      }
      var v24439 = v26469;
      if (v24439) {
        i$$204 = i$$204 + 1;
        g$$189 = JAM.call(a$$649, null, [this.handles[i$$204]], JAM.policy.p3);
      }
      j$$104 = JAM.call(this._start, this, [b$$638, i$$204], JAM.policy.p3);
      var v15735;
      if (j$$104 === !1) {
        v15735 = !1;
      } else {
        this._mouseSliding = !0;
        h$$156._handleIndex = i$$204;
        var v30064 = JAM.call(g$$189.addClass, g$$189, ["ui-state-active"], JAM.policy.p3);
        JAM.call(v30064.focus, v30064, [], JAM.policy.p3);
        k$$72 = JAM.call(g$$189.offset, g$$189, [], JAM.policy.p3);
        var v30287 = JAM.call(a$$649, null, [b$$638.target], JAM.policy.p3);
        var v30065 = JAM.call(v30287.parents, v30287, [], JAM.policy.p3);
        var v29798 = JAM.call(v30065.andSelf, v30065, [], JAM.policy.p3);
        l$$79 = !JAM.call(v29798.is, v29798, [".ui-slider-handle"], JAM.policy.p3);
        var v28803;
        if (l$$79) {
          v28803 = {left:0, top:0};
        } else {
          var v29417 = b$$638.pageX - k$$72.left - JAM.call(g$$189.width, g$$189, [], JAM.policy.p3) / 2;
          var v30288 = b$$638.pageY - k$$72.top - JAM.call(g$$189.height, g$$189, [], JAM.policy.p3) / 2;
          var v30432 = parseInt(JAM.call(g$$189.css, g$$189, ["borderTopWidth"], JAM.policy.p3), 10);
          if (!v30432) {
            v30432 = 0;
          }
          var v30069 = v30288 - v30432;
          var v30290 = parseInt(JAM.call(g$$189.css, g$$189, ["borderBottomWidth"], JAM.policy.p3), 10);
          if (!v30290) {
            v30290 = 0;
          }
          var v29801 = v30069 - v30290;
          var v30071 = parseInt(JAM.call(g$$189.css, g$$189, ["marginTop"], JAM.policy.p3), 10);
          if (!v30071) {
            v30071 = 0;
          }
          v28803 = {left:v29417, top:v29801 + v30071};
        }
        this._clickOffset = v28803;
        var v28804 = this.handles;
        var v27890 = JAM.call(v28804.hasClass, v28804, ["ui-state-hover"], JAM.policy.p3);
        if (!v27890) {
          JAM.call(this._slide, this, [b$$638, i$$204, e$$335], JAM.policy.p3);
        }
        this._animateOff = !0;
        v15735 = !0;
      }
      v3406 = v15735;
    }
    return v3406;
  }
  function v1762() {
    var v24441 = this.handles;
    JAM.call(v24441.remove, v24441, [], JAM.policy.p3);
    var v24442 = this.range;
    JAM.call(v24442.remove, v24442, [], JAM.policy.p3);
    var v26470 = this.element;
    var v24443 = JAM.call(v26470.removeClass, v26470, ["ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    var v21478 = JAM.call(v24443.removeData, v24443, ["slider"], JAM.policy.p3);
    JAM.call(v21478.unbind, v21478, [".slider"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    return this;
  }
  function v1761() {
    function v1760(c$$513) {
      var v3407 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      var d$$389 = JAM.call(v3407.data, v3407, ["index.ui-slider-handle"], JAM.policy.p3);
      var v3408 = b$$636._keySliding;
      if (v3408) {
        b$$636._keySliding = !1;
        JAM.call(b$$636._stop, b$$636, [c$$513, d$$389], JAM.policy.p3);
        JAM.call(b$$636._change, b$$636, [c$$513, d$$389], JAM.policy.p3);
        var v15736 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        JAM.call(v15736.removeClass, v15736, ["ui-state-active"], JAM.policy.p3);
      }
      return;
    }
    function v1759(d$$388) {
      var v3409 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      var e$$334 = JAM.call(v3409.data, v3409, ["index.ui-slider-handle"], JAM.policy.p3);
      var f$$170;
      var g$$188;
      var h$$155;
      var i$$203;
      if (b$$636.options.disabled) {
        return;
      }
      switch(d$$388.keyCode) {
        case a$$649.ui.keyCode.HOME:
        ;
        case a$$649.ui.keyCode.END:
        ;
        case a$$649.ui.keyCode.PAGE_UP:
        ;
        case a$$649.ui.keyCode.PAGE_DOWN:
        ;
        case a$$649.ui.keyCode.UP:
        ;
        case a$$649.ui.keyCode.RIGHT:
        ;
        case a$$649.ui.keyCode.DOWN:
        ;
        case a$$649.ui.keyCode.LEFT:
          JAM.call(d$$388.preventDefault, d$$388, [], JAM.policy.p3);
          if (!b$$636._keySliding) {
            b$$636._keySliding = !0;
            var v15737 = JAM.call(a$$649, null, [this], JAM.policy.p3);
            JAM.call(v15737.addClass, v15737, ["ui-state-active"], JAM.policy.p3);
            f$$170 = JAM.call(b$$636._start, b$$636, [d$$388, e$$334], JAM.policy.p3);
            if (f$$170 === !1) {
              return;
            }
          }
        ;
      }
      i$$203 = b$$636.options.step;
      var v10019;
      var v21479 = b$$636.options.values;
      if (v21479) {
        v21479 = b$$636.options.values.length;
      }
      if (v21479) {
        v10019 = g$$188 = h$$155 = JAM.call(b$$636.values, b$$636, [e$$334], JAM.policy.p3);
      } else {
        v10019 = g$$188 = h$$155 = JAM.call(b$$636.value, b$$636, [], JAM.policy.p3);
      }
      v10019;
      switch(d$$388.keyCode) {
        case a$$649.ui.keyCode.HOME:
          h$$155 = b$$636.options.min;
          break;
        case a$$649.ui.keyCode.END:
          h$$155 = b$$636.options.max;
          break;
        case a$$649.ui.keyCode.PAGE_UP:
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 + (b$$636.options.max - b$$636.options.min) / c$$512], JAM.policy.p3);
          break;
        case a$$649.ui.keyCode.PAGE_DOWN:
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 - (b$$636.options.max - b$$636.options.min) / c$$512], JAM.policy.p3);
          break;
        case a$$649.ui.keyCode.UP:
        ;
        case a$$649.ui.keyCode.RIGHT:
          if (g$$188 === b$$636.options.max) {
            return;
          }
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 + i$$203], JAM.policy.p3);
          break;
        case a$$649.ui.keyCode.DOWN:
        ;
        case a$$649.ui.keyCode.LEFT:
          if (g$$188 === b$$636.options.min) {
            return;
          }
          h$$155 = JAM.call(b$$636._trimAlignValue, b$$636, [g$$188 - i$$203], JAM.policy.p3);
      }
      JAM.call(b$$636._slide, b$$636, [d$$388, e$$334, h$$155], JAM.policy.p3);
      return;
    }
    function v1758(b$$637) {
      var v3423 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      JAM.call(v3423.data, v3423, ["index.ui-slider-handle", b$$637], JAM.policy.p3);
      return;
    }
    function v1757() {
      var v3424 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      JAM.call(v3424.removeClass, v3424, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1756() {
      var v3425;
      if (d$$387.disabled) {
        var v10024 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        v3425 = JAM.call(v10024.blur, v10024, [], JAM.policy.p3);
      } else {
        var v15743 = JAM.call(a$$649, null, [".ui-slider .ui-state-focus"], JAM.policy.p3);
        JAM.call(v15743.removeClass, v15743, ["ui-state-focus"], JAM.policy.p3);
        var v15744 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        v3425 = JAM.call(v15744.addClass, v15744, ["ui-state-focus"], JAM.policy.p3);
      }
      v3425;
      return;
    }
    function v1755() {
      var v3426 = JAM.call(a$$649, null, [this], JAM.policy.p3);
      JAM.call(v3426.removeClass, v3426, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1754() {
      var v3427 = d$$387.disabled;
      if (!v3427) {
        var v10026 = JAM.call(a$$649, null, [this], JAM.policy.p3);
        JAM.call(v10026.addClass, v10026, ["ui-state-hover"], JAM.policy.p3);
      }
      return;
    }
    function v1753(a$$650) {
      JAM.call(a$$650.preventDefault, a$$650, [], JAM.policy.p3);
      return;
    }
    var b$$636 = this;
    var d$$387 = this.options;
    var v10028 = this.element;
    var v3428 = JAM.call(v10028.find, v10028, [".ui-slider-handle"], JAM.policy.p3);
    var e$$333 = JAM.call(v3428.addClass, v3428, ["ui-state-default ui-corner-all"], JAM.policy.p3);
    var f$$169 = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>";
    var v10029 = d$$387.values;
    if (v10029) {
      v10029 = d$$387.values.length;
    }
    var v3429 = v10029;
    if (!v3429) {
      v3429 = 1;
    }
    var g$$187 = v3429;
    var h$$154 = [];
    this._keySliding = !1;
    this._mouseSliding = !1;
    this._animateOff = !0;
    this._handleIndex = null;
    JAM.call(this._detectOrientation, this, [], JAM.policy.p3);
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    var v21484 = this.element;
    var v24450 = "ui-slider ui-slider-" + this.orientation + " ui-widget" + " ui-widget-content" + " ui-corner-all";
    var v26473;
    if (d$$387.disabled) {
      v26473 = " ui-slider-disabled ui-disabled";
    } else {
      v26473 = "";
    }
    JAM.call(v21484.addClass, v21484, [v24450 + v26473], JAM.policy.p3);
    var v30983 = JAM.call(a$$649, null, [[]], JAM.policy.p3);
    this.range = v30983;
    var v10031 = d$$387.range;
    if (v10031) {
      var v21486 = d$$387.range === !0;
      if (v21486) {
        var v26474 = d$$387.values;
        if (!v26474) {
          d$$387.values = [this.options.min, this.options.min];
        }
        var v27896 = d$$387.values.length;
        if (v27896) {
          v27896 = d$$387.values.length !== 2;
        }
        var v26475 = v27896;
        if (v26475) {
          d$$387.values = [d$$387.values[0], d$$387.values[0]];
        }
      }
      var v24454 = JAM.call(a$$649, null, ["<div></div>"], JAM.policy.p3);
      var v21487 = JAM.call(v24454.appendTo, v24454, [this.element], JAM.policy.p3);
      var v26476;
      var v28813 = d$$387.range === "min";
      if (!v28813) {
        v28813 = d$$387.range === "max";
      }
      if (v28813) {
        v26476 = " ui-slider-range-" + d$$387.range;
      } else {
        v26476 = "";
      }
      var v30984 = JAM.call(v21487.addClass, v21487, ["ui-slider-range ui-widget-header" + v26476], JAM.policy.p3);
      this.range = v30984;
    }
    var i$$202 = e$$333.length;
    var v3430 = i$$202 < g$$187;
    for (;v3430;) {
      JAM.call(h$$154.push, h$$154, [f$$169], JAM.policy.p3);
      i$$202 = i$$202 + 1;
      v3430 = i$$202 < g$$187;
    }
    var v28814 = JAM.call(a$$649, null, [JAM.call(h$$154.join, h$$154, [""], JAM.policy.p3)], JAM.policy.p3);
    var v30985 = JAM.call(e$$333.add, e$$333, [JAM.call(v28814.appendTo, v28814, [b$$636.element], JAM.policy.p3)], JAM.policy.p3);
    this.handles = v30985;
    var v27902 = this.handles;
    var v30986 = JAM.call(v27902.eq, v27902, [0], JAM.policy.p3);
    this.handle = v30986;
    var v30072 = this.handles;
    var v29803 = JAM.call(v30072.add, v30072, [this.range], JAM.policy.p3);
    var v29425 = JAM.call(v29803.filter, v29803, ["a"], JAM.policy.p3);
    var v28816 = JAM.call(v29425.click, v29425, [v1753], JAM.policy.p3);
    var v27903 = JAM.call(v28816.hover, v28816, [v1754, v1755], JAM.policy.p3);
    var v26477 = JAM.call(v27903.focus, v27903, [v1756], JAM.policy.p3);
    JAM.call(v26477.blur, v26477, [v1757], JAM.policy.p3);
    var v24457 = this.handles;
    JAM.call(v24457.each, v24457, [v1758], JAM.policy.p3);
    var v24458 = this.handles;
    var v21489 = JAM.call(v24458.keydown, v24458, [v1759], JAM.policy.p3);
    JAM.call(v21489.keyup, v21489, [v1760], JAM.policy.p3);
    JAM.call(this._refreshValue, this, [], JAM.policy.p3);
    this._animateOff = !1;
    return;
  }
  var c$$512 = 5;
  JAM.call(a$$649.widget, a$$649, ["ui.slider", a$$649.ui.mouse, {widgetEventPrefix:"slide", options:{animate:!1, distance:0, max:100, min:0, orientation:"horizontal", range:!1, step:1, value:0, values:null}, _create:v1761, destroy:v1762, _mouseCapture:v1764, _mouseStart:v1765, _mouseDrag:v1766, _mouseStop:v1767, _detectOrientation:v1768, _normValueFromMouse:v1769, _start:v1770, _slide:v1771, _stop:v1772, _change:v1773, value:v1774, values:v1775, _setOption:v1776, _value:v1777, _values:v1778, _trimAlignValue:v1779, 
  _valueMin:v1780, _valueMax:v1781, _refreshValue:v1783}], JAM.policy.p3);
  JAM.call(a$$649.extend, a$$649, [a$$649.ui.slider, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1752(a$$645, b$$632) {
  function v1751() {
    var a$$648 = JAM.call(this.value, this, [], JAM.policy.p3);
    var b$$634 = JAM.call(this._percentage, this, [], JAM.policy.p3);
    var v15749 = this.oldValue !== a$$648;
    if (v15749) {
      this.oldValue = a$$648;
      JAM.call(this._trigger, this, ["change"], JAM.policy.p3);
    }
    var v24459 = this.valueDiv;
    var v21493 = JAM.call(v24459.toggle, v24459, [a$$648 > this.min], JAM.policy.p3);
    var v15750 = JAM.call(v21493.toggleClass, v21493, ["ui-corner-right", a$$648 === this.options.max], JAM.policy.p3);
    JAM.call(v15750.width, v15750, [JAM.call(b$$634.toFixed, b$$634, [0], JAM.policy.p3) + "%"], JAM.policy.p3);
    var v10036 = this.element;
    JAM.call(v10036.attr, v10036, ["aria-valuenow", a$$648], JAM.policy.p3);
    return;
  }
  function v1750() {
    return 100 * JAM.call(this._value, this, [], JAM.policy.p3) / this.options.max;
  }
  function v1749() {
    var a$$647 = this.options.value;
    var v10039 = typeof a$$647 != "number";
    if (v10039) {
      a$$647 = 0;
    }
    return JAM.call(Math.min, Math, [this.options.max, JAM.call(Math.max, Math, [this.min, a$$647], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1748(b$$633, c$$511) {
    var v10042 = b$$633 === "value";
    if (v10042) {
      this.options.value = c$$511;
      JAM.call(this._refreshValue, this, [], JAM.policy.p3);
      var v21496 = JAM.call(this._value, this, [], JAM.policy.p3) === this.options.max;
      if (v21496) {
        JAM.call(this._trigger, this, ["complete"], JAM.policy.p3);
      }
    }
    var v10043 = a$$645.Widget.prototype._setOption;
    JAM.call(v10043.apply, v10043, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1747(a$$646) {
    var v3434;
    if (a$$646 === b$$632) {
      v3434 = JAM.call(this._value, this, [], JAM.policy.p3);
    } else {
      JAM.call(this._setOption, this, ["value", a$$646], JAM.policy.p3);
      v3434 = this;
    }
    return v3434;
  }
  function v1746() {
    var v27904 = this.element;
    var v26481 = JAM.call(v27904.removeClass, v27904, ["ui-progressbar ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    var v24465 = JAM.call(v26481.removeAttr, v26481, ["role"], JAM.policy.p3);
    var v21498 = JAM.call(v24465.removeAttr, v24465, ["aria-valuemin"], JAM.policy.p3);
    var v15756 = JAM.call(v21498.removeAttr, v21498, ["aria-valuemax"], JAM.policy.p3);
    JAM.call(v15756.removeAttr, v15756, ["aria-valuenow"], JAM.policy.p3);
    var v15757 = this.valueDiv;
    JAM.call(v15757.remove, v15757, [], JAM.policy.p3);
    var v10045 = a$$645.Widget.prototype.destroy;
    JAM.call(v10045.apply, v10045, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1745() {
    var v24466 = this.element;
    var v21500 = JAM.call(v24466.addClass, v24466, ["ui-progressbar ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    JAM.call(v21500.attr, v21500, [{role:"progressbar", "aria-valuemin":this.min, "aria-valuemax":this.options.max, "aria-valuenow":JAM.call(this._value, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v21502 = JAM.call(a$$645, null, ["<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>"], JAM.policy.p3);
    var v30987 = JAM.call(v21502.appendTo, v21502, [this.element], JAM.policy.p3);
    this.valueDiv = v30987;
    var v30988 = JAM.call(this._value, this, [], JAM.policy.p3);
    this.oldValue = v30988;
    JAM.call(this._refreshValue, this, [], JAM.policy.p3);
    return;
  }
  JAM.call(a$$645.widget, a$$645, ["ui.progressbar", {options:{value:0, max:100}, min:0, _create:v1745, destroy:v1746, value:v1747, _setOption:v1748, _value:v1749, _percentage:v1750, _refreshValue:v1751}], JAM.policy.p3);
  JAM.call(a$$645.extend, a$$645, [a$$645.ui.progressbar, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1744(a$$642, b$$622) {
  function v1743() {
    function v1742(a$$644, b$$631) {
      return b$$631;
    }
    var b$$630 = JAM.call(document.getElementsByTagName, document, ["body"], JAM.policy.p3)[0];
    var c$$510 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
    var d$$386;
    var e$$332;
    var g$$186;
    var h$$153;
    var i$$201;
    var v21504;
    if (b$$630) {
      v21504 = "div";
    } else {
      v21504 = "body";
    }
    d$$386 = JAM.call(document.createElement, document, [v21504], JAM.policy.p3);
    g$$186 = {visibility:"hidden", width:0, height:0, border:0, margin:0, background:"none"};
    if (b$$630) {
      JAM.call(a$$642.extend, a$$642, [g$$186, {position:"absolute", left:"-1000px", top:"-1000px"}], JAM.policy.p3);
    }
    var j$$103;
    for (j$$103 in g$$186) {
      var v3436 = d$$386.style;
      introspect(JAM.policy.p2) {
        v3436[j$$103] = g$$186[j$$103];
      }
    }
    JAM.call(d$$386.appendChild, d$$386, [c$$510], JAM.policy.p3);
    var v29426 = b$$630;
    if (!v29426) {
      v29426 = document.documentElement;
    }
    e$$332 = v29426;
    JAM.call(e$$332.insertBefore, e$$332, [d$$386, e$$332.firstChild], JAM.policy.p3);
    c$$510.style.cssText = "position: absolute; left: 10.7432222px; top: 10.432325px; height: 30px; width: 201px;";
    var v27906 = JAM.call(a$$642, null, [c$$510], JAM.policy.p3);
    var v26483 = JAM.call(v27906.offset, v27906, [v1742], JAM.policy.p3);
    h$$153 = JAM.call(v26483.offset, v26483, [], JAM.policy.p3);
    JAM.set(d$$386, "innerHTML", "");
    JAM.call(e$$332.removeChild, e$$332, [d$$386], JAM.policy.p3);
    var v15763 = h$$153.top + h$$153.left;
    var v21507;
    if (b$$630) {
      v21507 = 2E3;
    } else {
      v21507 = 0;
    }
    i$$201 = v15763 + v21507;
    var v10049 = i$$201 > 21;
    if (v10049) {
      v10049 = i$$201 < 22;
    }
    f$$165.fractions = v10049;
    return;
  }
  function v1741(b$$629) {
    function v1740() {
      var v3437 = a$$642.offset;
      JAM.call(v3437.setOffset, v3437, [this, b$$629], JAM.policy.p3);
      return;
    }
    function v1739(c$$509) {
      var v3438 = JAM.call(a$$642, null, [this], JAM.policy.p3);
      var v15765 = JAM.call(a$$642, null, [this], JAM.policy.p3);
      JAM.call(v3438.offset, v3438, [JAM.call(b$$629.call, b$$629, [this, c$$509, JAM.call(v15765.offset, v15765, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var c$$508 = this[0];
    var v3440;
    var v15766 = !c$$508;
    if (!v15766) {
      v15766 = !c$$508.ownerDocument;
    }
    if (v15766) {
      v3440 = null;
    } else {
      var v10051;
      if (b$$629) {
        var v15767;
        if (JAM.call(a$$642.isFunction, a$$642, [b$$629], JAM.policy.p3)) {
          v15767 = JAM.call(this.each, this, [v1739], JAM.policy.p3);
        } else {
          v15767 = JAM.call(this.each, this, [v1740], JAM.policy.p3);
        }
        v10051 = v15767;
      } else {
        v10051 = JAM.call(h$$147.call, h$$147, [this], JAM.policy.p3);
      }
      v3440 = v10051;
    }
    return v3440;
  }
  function v1738(b$$628, c$$507) {
    var v3441 = JAM.call(/static/.test, /static/, [JAM.call(a$$642.curCSS, a$$642, [b$$628, "position"], JAM.policy.p3)], JAM.policy.p3);
    if (v3441) {
      b$$628.style.position = "relative";
    }
    var d$$385 = JAM.call(a$$642, null, [b$$628], JAM.policy.p3);
    var e$$331 = JAM.call(d$$385.offset, d$$385, [], JAM.policy.p3);
    var v3442 = parseInt(JAM.call(a$$642.curCSS, a$$642, [b$$628, "top", !0], JAM.policy.p3), 10);
    if (!v3442) {
      v3442 = 0;
    }
    var f$$168 = v3442;
    var v3443 = parseInt(JAM.call(a$$642.curCSS, a$$642, [b$$628, "left", !0], JAM.policy.p3), 10);
    if (!v3443) {
      v3443 = 0;
    }
    var g$$185 = v3443;
    var h$$152 = {top:c$$507.top - e$$331.top + f$$168, left:c$$507.left - e$$331.left + g$$185};
    var v3446;
    if ("using" in c$$507) {
      var v10061 = c$$507.using;
      v3446 = JAM.call(v10061.call, v10061, [b$$628, h$$152], JAM.policy.p3);
    } else {
      v3446 = JAM.call(d$$385.css, d$$385, [h$$152], JAM.policy.p3);
    }
    v3446;
    return;
  }
  function v1737(b$$627, c$$506) {
    if (c$$506.at[1] === e$$327) {
      return;
    }
    var d$$384 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var f$$167 = c$$506.collisionPosition.top + c$$506.collisionHeight - JAM.call(d$$384.height, d$$384, [], JAM.policy.p3) - JAM.call(d$$384.scrollTop, d$$384, [], JAM.policy.p3);
    var v3450;
    if (c$$506.my[1] === "top") {
      v3450 = -c$$506.elemHeight;
    } else {
      var v10067;
      if (c$$506.my[1] === "bottom") {
        v10067 = c$$506.elemHeight;
      } else {
        v10067 = 0;
      }
      v3450 = v10067;
    }
    var g$$184 = v3450;
    var v3451;
    if (c$$506.at[1] === "top") {
      v3451 = c$$506.targetHeight;
    } else {
      v3451 = -c$$506.targetHeight;
    }
    var h$$151 = v3451;
    var i$$200 = -2 * c$$506.offset[1];
    var v10072 = b$$627.top;
    var v15780;
    if (c$$506.collisionPosition.top < 0) {
      v15780 = g$$184 + h$$151 + i$$200;
    } else {
      var v21516;
      if (f$$167 > 0) {
        v21516 = g$$184 + h$$151 + i$$200;
      } else {
        v21516 = 0;
      }
      v15780 = v21516;
    }
    b$$627.top = v10072 + v15780;
    return;
  }
  function v1736(b$$626, c$$505) {
    if (c$$505.at[0] === e$$327) {
      return;
    }
    var d$$383 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var f$$166 = c$$505.collisionPosition.left + c$$505.collisionWidth - JAM.call(d$$383.width, d$$383, [], JAM.policy.p3) - JAM.call(d$$383.scrollLeft, d$$383, [], JAM.policy.p3);
    var v3456;
    if (c$$505.my[0] === "left") {
      v3456 = -c$$505.elemWidth;
    } else {
      var v10078;
      if (c$$505.my[0] === "right") {
        v10078 = c$$505.elemWidth;
      } else {
        v10078 = 0;
      }
      v3456 = v10078;
    }
    var g$$183 = v3456;
    var v3457;
    if (c$$505.at[0] === "left") {
      v3457 = c$$505.targetWidth;
    } else {
      v3457 = -c$$505.targetWidth;
    }
    var h$$150 = v3457;
    var i$$199 = -2 * c$$505.offset[0];
    var v10083 = b$$626.left;
    var v15787;
    if (c$$505.collisionPosition.left < 0) {
      v15787 = g$$183 + h$$150 + i$$199;
    } else {
      var v21523;
      if (f$$166 > 0) {
        v21523 = g$$183 + h$$150 + i$$199;
      } else {
        v21523 = 0;
      }
      v15787 = v21523;
    }
    b$$626.left = v10083 + v15787;
    return;
  }
  function v1735(b$$625, c$$504) {
    var d$$382 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var e$$330 = c$$504.collisionPosition.top + c$$504.collisionHeight - JAM.call(d$$382.height, d$$382, [], JAM.policy.p3) - JAM.call(d$$382.scrollTop, d$$382, [], JAM.policy.p3);
    var v3461;
    if (e$$330 > 0) {
      v3461 = b$$625.top - e$$330;
    } else {
      v3461 = JAM.call(Math.max, Math, [b$$625.top - c$$504.collisionPosition.top, b$$625.top], JAM.policy.p3);
    }
    b$$625.top = v3461;
    return;
  }
  function v1734(b$$624, c$$503) {
    var d$$381 = JAM.call(a$$642, null, [window], JAM.policy.p3);
    var e$$329 = c$$503.collisionPosition.left + c$$503.collisionWidth - JAM.call(d$$381.width, d$$381, [], JAM.policy.p3) - JAM.call(d$$381.scrollLeft, d$$381, [], JAM.policy.p3);
    var v3464;
    if (e$$329 > 0) {
      v3464 = b$$624.left - e$$329;
    } else {
      v3464 = JAM.call(Math.max, Math, [b$$624.left - c$$503.collisionPosition.left, b$$624.left], JAM.policy.p3);
    }
    b$$624.left = v3464;
    return;
  }
  function v1733(b$$623) {
    function v1732() {
      function v1731(c$$502, e$$328) {
        var v3465 = a$$642.ui.position[j$$102[c$$502]];
        if (v3465) {
          var v10099 = a$$642.ui.position[j$$102[c$$502]];
          JAM.call(v10099[e$$328], v10099, [q$$20, {targetWidth:l$$78, targetHeight:m$$48, elemWidth:d$$380, elemHeight:g$$182, collisionPosition:r$$21, collisionWidth:o$$24, collisionHeight:p$$49, offset:k$$71, my:b$$623.my, at:b$$623.at}], JAM.policy.p3);
        }
        return;
      }
      var c$$501 = JAM.call(a$$642, null, [this], JAM.policy.p3);
      var d$$380 = JAM.call(c$$501.outerWidth, c$$501, [], JAM.policy.p3);
      var g$$182 = JAM.call(c$$501.outerHeight, c$$501, [], JAM.policy.p3);
      var v3466 = parseInt(JAM.call(a$$642.curCSS, a$$642, [this, "marginLeft", !0], JAM.policy.p3));
      if (!v3466) {
        v3466 = 0;
      }
      var h$$149 = v3466;
      var v3467 = parseInt(JAM.call(a$$642.curCSS, a$$642, [this, "marginTop", !0], JAM.policy.p3));
      if (!v3467) {
        v3467 = 0;
      }
      var i$$198 = v3467;
      var v3468 = d$$380 + h$$149;
      var v10105 = parseInt(JAM.call(a$$642.curCSS, a$$642, [this, "marginRight", !0], JAM.policy.p3));
      if (!v10105) {
        v10105 = 0;
      }
      var o$$24 = v3468 + v10105;
      var v3470 = g$$182 + i$$198;
      var v10106 = parseInt(JAM.call(a$$642.curCSS, a$$642, [this, "marginBottom", !0], JAM.policy.p3));
      if (!v10106) {
        v10106 = 0;
      }
      var p$$49 = v3470 + v10106;
      var q$$20 = JAM.call(a$$642.extend, a$$642, [{}, n$$94], JAM.policy.p3);
      var r$$21;
      var v27907;
      if (b$$623.my[0] === "right") {
        v27907 = q$$20.left = q$$20.left - d$$380;
      } else {
        var v28818 = b$$623.my[0] === e$$327;
        if (v28818) {
          v28818 = q$$20.left = q$$20.left - d$$380 / 2;
        }
        v27907 = v28818;
      }
      v27907;
      var v27908;
      if (b$$623.my[1] === "bottom") {
        v27908 = q$$20.top = q$$20.top - g$$182;
      } else {
        var v28820 = b$$623.my[1] === e$$327;
        if (v28820) {
          v28820 = q$$20.top = q$$20.top - g$$182 / 2;
        }
        v27908 = v28820;
      }
      v27908;
      var v26486 = f$$165.fractions;
      if (!v26486) {
        var v28822 = q$$20;
        var v30989 = JAM.call(Math.round, Math, [q$$20.left], JAM.policy.p3);
        v28822.left = v30989;
        var v28823 = q$$20;
        var v30990 = JAM.call(Math.round, Math, [q$$20.top], JAM.policy.p3);
        v28823.top = v30990;
      }
      r$$21 = {left:q$$20.left - h$$149, top:q$$20.top - i$$198};
      JAM.call(a$$642.each, a$$642, [["left", "top"], v1731], JAM.policy.p3);
      var v15807 = a$$642.fn.bgiframe;
      if (v15807) {
        JAM.call(c$$501.bgiframe, c$$501, [], JAM.policy.p3);
      }
      JAM.call(c$$501.offset, c$$501, [JAM.call(a$$642.extend, a$$642, [q$$20, {using:b$$623.using}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1730() {
      var v10108 = b$$623[this];
      if (!v10108) {
        v10108 = "";
      }
      var v3472 = v10108;
      var a$$643 = JAM.call(v3472.split, v3472, [" "], JAM.policy.p3);
      var v21535 = a$$643.length === 1;
      if (v21535) {
        var v24481;
        if (JAM.call(c$$500.test, c$$500, [a$$643[0]], JAM.policy.p3)) {
          v24481 = JAM.call(a$$643.concat, a$$643, [[e$$327]], JAM.policy.p3);
        } else {
          var v26490;
          if (JAM.call(d$$379.test, d$$379, [a$$643[0]], JAM.policy.p3)) {
            var v27911 = [e$$327];
            v26490 = JAM.call(v27911.concat, v27911, [a$$643], JAM.policy.p3);
          } else {
            v26490 = [e$$327, e$$327];
          }
          v24481 = v26490;
        }
        a$$643 = v24481;
      }
      var v21536;
      if (JAM.call(c$$500.test, c$$500, [a$$643[0]], JAM.policy.p3)) {
        v21536 = a$$643[0];
      } else {
        v21536 = e$$327;
      }
      a$$643[0] = v21536;
      var v15810;
      if (JAM.call(d$$379.test, d$$379, [a$$643[1]], JAM.policy.p3)) {
        v15810 = a$$643[1];
      } else {
        v15810 = e$$327;
      }
      a$$643[1] = v15810;
      introspect(JAM.policy.p2) {
        b$$623[this] = a$$643;
      }
      return;
    }
    var v10109 = !b$$623;
    if (!v10109) {
      v10109 = !b$$623.of;
    }
    if (v10109) {
      return JAM.call(g$$181.apply, g$$181, [this, arguments], JAM.policy.p3);
    }
    b$$623 = JAM.call(a$$642.extend, a$$642, [{}, b$$623], JAM.policy.p3);
    var h$$148 = JAM.call(a$$642, null, [b$$623.of], JAM.policy.p3);
    var i$$197 = h$$148[0];
    var v10110 = b$$623.collision;
    if (!v10110) {
      v10110 = "flip";
    }
    var v3475 = v10110;
    var j$$102 = JAM.call(v3475.split, v3475, [" "], JAM.policy.p3);
    var v3476;
    if (b$$623.offset) {
      var v10111 = b$$623.offset;
      v3476 = JAM.call(v10111.split, v10111, [" "], JAM.policy.p3);
    } else {
      v3476 = [0, 0];
    }
    var k$$71 = v3476;
    var l$$78;
    var m$$48;
    var n$$94;
    var v30074;
    if (i$$197.nodeType === 9) {
      l$$78 = JAM.call(h$$148.width, h$$148, [], JAM.policy.p3);
      m$$48 = JAM.call(h$$148.height, h$$148, [], JAM.policy.p3);
      v30074 = n$$94 = {top:0, left:0};
    } else {
      var v30293;
      if (i$$197.setTimeout) {
        l$$78 = JAM.call(h$$148.width, h$$148, [], JAM.policy.p3);
        m$$48 = JAM.call(h$$148.height, h$$148, [], JAM.policy.p3);
        v30293 = n$$94 = {top:JAM.call(h$$148.scrollTop, h$$148, [], JAM.policy.p3), left:JAM.call(h$$148.scrollLeft, h$$148, [], JAM.policy.p3)};
      } else {
        var v30436;
        if (i$$197.preventDefault) {
          b$$623.at = "left top";
          l$$78 = m$$48 = 0;
          v30436 = n$$94 = {top:b$$623.of.pageY, left:b$$623.of.pageX};
        } else {
          l$$78 = JAM.call(h$$148.outerWidth, h$$148, [], JAM.policy.p3);
          m$$48 = JAM.call(h$$148.outerHeight, h$$148, [], JAM.policy.p3);
          v30436 = n$$94 = JAM.call(h$$148.offset, h$$148, [], JAM.policy.p3);
        }
        v30293 = v30436;
      }
      v30074 = v30293;
    }
    v30074;
    JAM.call(a$$642.each, a$$642, [["my", "at"], v1730], JAM.policy.p3);
    var v29813 = j$$102.length === 1;
    if (v29813) {
      j$$102[1] = j$$102[0];
    }
    var v29435 = k$$71;
    var v29814 = parseInt(k$$71[0], 10);
    if (!v29814) {
      v29814 = 0;
    }
    v29435[0] = v29814;
    var v28825 = k$$71.length === 1;
    if (v28825) {
      k$$71[1] = k$$71[0];
    }
    var v27913 = k$$71;
    var v28826 = parseInt(k$$71[1], 10);
    if (!v28826) {
      v28826 = 0;
    }
    v27913[1] = v28826;
    var v26493;
    if (b$$623.at[0] === "right") {
      v26493 = n$$94.left = n$$94.left + l$$78;
    } else {
      var v27914 = b$$623.at[0] === e$$327;
      if (v27914) {
        v27914 = n$$94.left = n$$94.left + l$$78 / 2;
      }
      v26493 = v27914;
    }
    v26493;
    var v24484;
    if (b$$623.at[1] === "bottom") {
      v24484 = n$$94.top = n$$94.top + m$$48;
    } else {
      var v26494 = b$$623.at[1] === e$$327;
      if (v26494) {
        v26494 = n$$94.top = n$$94.top + m$$48 / 2;
      }
      v24484 = v26494;
    }
    v24484;
    n$$94.left = n$$94.left + k$$71[0];
    n$$94.top = n$$94.top + k$$71[1];
    return JAM.call(this.each, this, [v1732], JAM.policy.p3);
  }
  var v3477 = a$$642.ui;
  if (!v3477) {
    v3477 = {};
  }
  a$$642.ui = v3477;
  var c$$500 = /left|center|right/;
  var d$$379 = /top|center|bottom/;
  var e$$327 = "center";
  var f$$165 = {};
  var g$$181 = a$$642.fn.position;
  var h$$147 = a$$642.fn.offset;
  a$$642.fn.position = v1733;
  a$$642.ui.position = {fit:{left:v1734, top:v1735}, flip:{left:v1736, top:v1737}};
  var v21540 = a$$642.offset.setOffset;
  if (!v21540) {
    a$$642.offset.setOffset = v1738;
    a$$642.fn.offset = v1741;
  }
  var v15814 = a$$642.curCSS;
  if (!v15814) {
    a$$642.curCSS = a$$642.css;
  }
  v1743();
  return;
}
function v1729(a$$628, b$$594) {
  function v1728() {
    var v3480 = a$$628.ui.dialog.overlay;
    JAM.call(v3480.destroy, v3480, [this.$el], JAM.policy.p3);
    return;
  }
  function v1727() {
    function v1726() {
      b$$621 = JAM.call(b$$621.add, b$$621, [this], JAM.policy.p3);
      return;
    }
    var b$$621 = JAM.call(a$$628, null, [[]], JAM.policy.p3);
    JAM.call(a$$628.each, a$$628, [a$$628.ui.dialog.overlay.instances, v1726], JAM.policy.p3);
    var v10116 = JAM.call(b$$621.css, b$$621, [{width:0, height:0}], JAM.policy.p3);
    var v21543 = a$$628.ui.dialog.overlay;
    var v15818 = JAM.call(v21543.width, v21543, [], JAM.policy.p3);
    var v21544 = a$$628.ui.dialog.overlay;
    JAM.call(v10116.css, v10116, [{width:v15818, height:JAM.call(v21544.height, v21544, [], JAM.policy.p3)}], JAM.policy.p3);
    return;
  }
  function v1725() {
    var b$$620;
    var c$$499;
    var v3482;
    if (a$$628.browser.msie) {
      b$$620 = JAM.call(Math.max, Math, [document.documentElement.scrollWidth, document.body.scrollWidth], JAM.policy.p3);
      c$$499 = JAM.call(Math.max, Math, [document.documentElement.offsetWidth, document.body.offsetWidth], JAM.policy.p3);
      var v15821;
      if (b$$620 < c$$499) {
        var v24498 = JAM.call(a$$628, null, [window], JAM.policy.p3);
        v15821 = JAM.call(v24498.width, v24498, [], JAM.policy.p3) + "px";
      } else {
        v15821 = b$$620 + "px";
      }
      v3482 = v15821;
    } else {
      var v15822 = JAM.call(a$$628, null, [document], JAM.policy.p3);
      v3482 = JAM.call(v15822.width, v15822, [], JAM.policy.p3) + "px";
    }
    return v3482;
  }
  function v1724() {
    var b$$619;
    var c$$498;
    var v3483;
    var v15823 = a$$628.browser.msie;
    if (v15823) {
      v15823 = a$$628.browser.version < 7;
    }
    if (v15823) {
      b$$619 = JAM.call(Math.max, Math, [document.documentElement.scrollHeight, document.body.scrollHeight], JAM.policy.p3);
      c$$498 = JAM.call(Math.max, Math, [document.documentElement.offsetHeight, document.body.offsetHeight], JAM.policy.p3);
      var v15824;
      if (b$$619 < c$$498) {
        var v24504 = JAM.call(a$$628, null, [window], JAM.policy.p3);
        v15824 = JAM.call(v24504.height, v24504, [], JAM.policy.p3) + "px";
      } else {
        v15824 = b$$619 + "px";
      }
      v3483 = v15824;
    } else {
      var v15825 = JAM.call(a$$628, null, [document], JAM.policy.p3);
      v3483 = JAM.call(v15825.height, v15825, [], JAM.policy.p3) + "px";
    }
    return v3483;
  }
  function v1723(b$$618) {
    function v1722() {
      d$$378 = JAM.call(Math.max, Math, [d$$378, JAM.call(this.css, this, ["z-index"], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var c$$497 = JAM.call(a$$628.inArray, a$$628, [b$$618, this.instances], JAM.policy.p3);
    var v15826 = c$$497 != -1;
    if (v15826) {
      var v21559 = this.oldInstances;
      var v26502 = this.instances;
      JAM.call(v21559.push, v21559, [JAM.call(v26502.splice, v26502, [c$$497, 1], JAM.policy.p3)[0]], JAM.policy.p3);
    }
    var v15827 = this.instances.length === 0;
    if (v15827) {
      var v21562 = JAM.call(a$$628, null, [[document, window]], JAM.policy.p3);
      JAM.call(v21562.unbind, v21562, [".dialog-overlay"], JAM.policy.p3);
    }
    JAM.call(b$$618.remove, b$$618, [], JAM.policy.p3);
    var d$$378 = 0;
    JAM.call(a$$628.each, a$$628, [this.instances, v1722], JAM.policy.p3);
    this.maxZ = d$$378;
    return;
  }
  function v1721(b$$616) {
    function v1720(c$$496) {
      var v21563 = b$$616.options.closeOnEscape;
      if (v21563) {
        v21563 = !JAM.call(c$$496.isDefaultPrevented, c$$496, [], JAM.policy.p3);
      }
      var v15828 = v21563;
      if (v15828) {
        v15828 = c$$496.keyCode;
      }
      var v10123 = v15828;
      if (v10123) {
        v10123 = c$$496.keyCode === a$$628.ui.keyCode.ESCAPE;
      }
      var v3486 = v10123;
      if (v3486) {
        JAM.call(b$$616.close, b$$616, [c$$496], JAM.policy.p3);
        JAM.call(c$$496.preventDefault, c$$496, [], JAM.policy.p3);
      }
      return;
    }
    function v1719() {
      function v1718(b$$617) {
        var v15831 = JAM.call(a$$628, null, [b$$617.target], JAM.policy.p3);
        if (JAM.call(v15831.zIndex, v15831, [], JAM.policy.p3) < a$$628.ui.dialog.overlay.maxZ) {
          return !1;
        }
        return;
      }
      var v3488 = a$$628.ui.dialog.overlay.instances.length;
      if (v3488) {
        var v10127 = JAM.call(a$$628, null, [document], JAM.policy.p3);
        JAM.call(v10127.bind, v10127, [a$$628.ui.dialog.overlay.events, v1718], JAM.policy.p3);
      }
      return;
    }
    var v3489 = this.instances.length === 0;
    if (v3489) {
      JAM.call(setTimeout, null, [v1719, 1]);
      var v21569 = JAM.call(a$$628, null, [document], JAM.policy.p3);
      JAM.call(v21569.bind, v21569, ["keydown.dialog-overlay", v1720], JAM.policy.p3);
      var v15836 = JAM.call(a$$628, null, [window], JAM.policy.p3);
      JAM.call(v15836.bind, v15836, ["resize.dialog-overlay", a$$628.ui.dialog.overlay.resize], JAM.policy.p3);
    }
    var v21571 = this.oldInstances;
    var v15838 = JAM.call(v21571.pop, v21571, [], JAM.policy.p3);
    if (!v15838) {
      var v21572 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
      v15838 = JAM.call(v21572.addClass, v21572, ["ui-widget-overlay"], JAM.policy.p3);
    }
    var v10130 = v15838;
    var v3490 = JAM.call(v10130.appendTo, v10130, [document.body], JAM.policy.p3);
    var c$$495 = JAM.call(v3490.css, v3490, [{width:JAM.call(this.width, this, [], JAM.policy.p3), height:JAM.call(this.height, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v15839 = a$$628.fn.bgiframe;
    if (v15839) {
      JAM.call(c$$495.bgiframe, c$$495, [], JAM.policy.p3);
    }
    var v15840 = this.instances;
    JAM.call(v15840.push, v15840, [c$$495], JAM.policy.p3);
    return c$$495;
  }
  function v1717(a$$641) {
    return a$$641 + ".dialog-overlay";
  }
  function v1716(b$$615) {
    var v3492 = a$$628.ui.dialog.overlay;
    var v30991 = JAM.call(v3492.create, v3492, [b$$615], JAM.policy.p3);
    this.$el = v30991;
    return;
  }
  function v1715(a$$640) {
    var b$$614 = JAM.call(a$$640.attr, a$$640, ["id"], JAM.policy.p3);
    if (!b$$614) {
      this.uuid = this.uuid + 1;
      b$$614 = this.uuid;
    }
    return "ui-dialog-title-" + b$$614;
  }
  function v1714() {
    var b$$613 = this.options;
    var c$$494;
    var d$$377;
    var v3493 = this.uiDialog;
    var e$$326 = JAM.call(v3493.is, v3493, [":visible"], JAM.policy.p3);
    var v24516 = this.element;
    var v21575 = JAM.call(v24516.show, v24516, [], JAM.policy.p3);
    JAM.call(v21575.css, v21575, [{width:"auto", minHeight:0, height:0}], JAM.policy.p3);
    var v21577 = b$$613.minWidth > b$$613.width;
    if (v21577) {
      b$$613.width = b$$613.minWidth;
    }
    var v21578 = this.uiDialog;
    var v15843 = JAM.call(v21578.css, v21578, [{height:"auto", width:b$$613.width}], JAM.policy.p3);
    c$$494 = JAM.call(v15843.height, v15843, [], JAM.policy.p3);
    d$$377 = JAM.call(Math.max, Math, [0, b$$613.minHeight - c$$494], JAM.policy.p3);
    if (b$$613.height === "auto") {
      if (a$$628.support.minHeight) {
        var v3494 = this.element;
        JAM.call(v3494.css, v3494, [{minHeight:d$$377, height:"auto"}], JAM.policy.p3);
      } else {
        var v3496 = this.uiDialog;
        JAM.call(v3496.show, v3496, [], JAM.policy.p3);
        var v10138 = this.element;
        var v3497 = JAM.call(v10138.css, v10138, ["height", "auto"], JAM.policy.p3);
        var f$$164 = JAM.call(v3497.height, v3497, [], JAM.policy.p3);
        if (!e$$326) {
          var v15845 = this.uiDialog;
          JAM.call(v15845.hide, v15845, [], JAM.policy.p3);
        }
        var v10139 = this.element;
        JAM.call(v10139.height, v10139, [JAM.call(Math.max, Math, [f$$164, d$$377], JAM.policy.p3)], JAM.policy.p3);
      }
    } else {
      var v3499 = this.element;
      JAM.call(v3499.height, v3499, [JAM.call(Math.max, Math, [b$$613.height - c$$494, 0], JAM.policy.p3)], JAM.policy.p3);
    }
    var v10142 = this.uiDialog;
    var v3502 = JAM.call(v10142.is, v10142, [":data(resizable)"], JAM.policy.p3);
    if (v3502) {
      var v10143 = this.uiDialog;
      JAM.call(v10143.resizable, v10143, ["option", "minHeight", JAM.call(this._minHeight, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1713(b$$612, d$$376) {
    var e$$325 = this;
    var f$$163 = e$$325.uiDialog;
    switch(b$$612) {
      case "beforeclose":
        b$$612 = "beforeClose";
        break;
      case "buttons":
        JAM.call(e$$325._createButtons, e$$325, [d$$376], JAM.policy.p3);
        break;
      case "closeText":
        var v3503 = e$$325.uiDialogTitlebarCloseText;
        JAM.call(v3503.text, v3503, ["" + d$$376], JAM.policy.p3);
        break;
      case "dialogClass":
        var v3505 = JAM.call(f$$163.removeClass, f$$163, [e$$325.options.dialogClass], JAM.policy.p3);
        JAM.call(v3505.addClass, v3505, [c$$479 + d$$376], JAM.policy.p3);
        break;
      case "disabled":
        var v3507;
        if (d$$376) {
          v3507 = JAM.call(f$$163.addClass, f$$163, ["ui-dialog-disabled"], JAM.policy.p3);
        } else {
          v3507 = JAM.call(f$$163.removeClass, f$$163, ["ui-dialog-disabled"], JAM.policy.p3);
        }
        v3507;
        break;
      case "draggable":
        var g$$180 = JAM.call(f$$163.is, f$$163, [":data(draggable)"], JAM.policy.p3);
        var v15849 = g$$180;
        if (v15849) {
          v15849 = !d$$376;
        }
        var v10146 = v15849;
        if (v10146) {
          JAM.call(f$$163.draggable, f$$163, ["destroy"], JAM.policy.p3);
        }
        var v15850 = !g$$180;
        if (v15850) {
          v15850 = d$$376;
        }
        var v10147 = v15850;
        if (v10147) {
          JAM.call(e$$325._makeDraggable, e$$325, [], JAM.policy.p3);
        }
        break;
      case "position":
        JAM.call(e$$325._position, e$$325, [d$$376], JAM.policy.p3);
        break;
      case "resizable":
        var h$$146 = JAM.call(f$$163.is, f$$163, [":data(resizable)"], JAM.policy.p3);
        var v21580 = h$$146;
        if (v21580) {
          v21580 = !d$$376;
        }
        var v15851 = v21580;
        if (v15851) {
          JAM.call(f$$163.resizable, f$$163, ["destroy"], JAM.policy.p3);
        }
        var v21581 = h$$146;
        if (v21581) {
          v21581 = typeof d$$376 == "string";
        }
        var v15852 = v21581;
        if (v15852) {
          JAM.call(f$$163.resizable, f$$163, ["option", "handles", d$$376], JAM.policy.p3);
        }
        var v15853 = !h$$146;
        if (v15853) {
          v15853 = d$$376 !== !1;
        }
        var v10148 = v15853;
        if (v10148) {
          JAM.call(e$$325._makeResizable, e$$325, [d$$376], JAM.policy.p3);
        }
        break;
      case "title":
        var v3508 = JAM.call(a$$628, null, [".ui-dialog-title", e$$325.uiDialogTitlebar], JAM.policy.p3);
        JAM.call(v3508.html, v3508, ["" + (d$$376 || "&#160;")], JAM.policy.p3);
    }
    var v3510 = a$$628.Widget.prototype._setOption;
    JAM.call(v3510.apply, v3510, [e$$325, arguments], JAM.policy.p3);
    return;
  }
  function v1712(b$$610) {
    function v1711(a$$639, b$$611) {
      JAM.call(c$$493._setOption, c$$493, [a$$639, b$$611], JAM.policy.p3);
      var v15855 = a$$639 in d$$364;
      if (v15855) {
        g$$179 = !0;
      }
      var v10152 = a$$639 in e$$315;
      if (v10152) {
        introspect(JAM.policy.p2) {
          f$$162[a$$639] = b$$611;
        }
      }
      return;
    }
    var c$$493 = this;
    var f$$162 = {};
    var g$$179 = !1;
    JAM.call(a$$628.each, a$$628, [b$$610, v1711], JAM.policy.p3);
    if (g$$179) {
      JAM.call(this._size, this, [], JAM.policy.p3);
    }
    var v15856 = this.uiDialog;
    var v10153 = JAM.call(v15856.is, v15856, [":data(resizable)"], JAM.policy.p3);
    if (v10153) {
      var v15857 = this.uiDialog;
      JAM.call(v15857.resizable, v15857, ["option", f$$162], JAM.policy.p3);
    }
    return;
  }
  function v1710(b$$608) {
    function v1709(a$$638, b$$609) {
      var v3511 = +c$$492[a$$638] === c$$492[a$$638];
      if (v3511) {
        introspect(JAM.policy.p2) {
          d$$375[a$$638] = c$$492[a$$638];
        }
        introspect(JAM.policy.p2) {
          c$$492[a$$638] = b$$609;
        }
      }
      return;
    }
    var c$$492 = [];
    var d$$375 = [0, 0];
    var e$$324;
    if (b$$608) {
      var v10156 = typeof b$$608 == "string";
      if (!v10156) {
        var v15860 = typeof b$$608 == "object";
        if (v15860) {
          v15860 = "0" in b$$608;
        }
        v10156 = v15860;
      }
      if (v10156) {
        var v21584;
        if (b$$608.split) {
          v21584 = JAM.call(b$$608.split, b$$608, [" "], JAM.policy.p3);
        } else {
          v21584 = [b$$608[0], b$$608[1]];
        }
        c$$492 = v21584;
        var v21585 = c$$492.length === 1;
        if (v21585) {
          c$$492[1] = c$$492[0];
        }
        JAM.call(a$$628.each, a$$628, [["left", "top"], v1709], JAM.policy.p3);
        b$$608 = {my:JAM.call(c$$492.join, c$$492, [" "], JAM.policy.p3), at:JAM.call(c$$492.join, c$$492, [" "], JAM.policy.p3), offset:JAM.call(d$$375.join, d$$375, [" "], JAM.policy.p3)};
      }
      b$$608 = JAM.call(a$$628.extend, a$$628, [{}, a$$628.ui.dialog.prototype.options.position, b$$608], JAM.policy.p3);
    } else {
      b$$608 = a$$628.ui.dialog.prototype.options.position;
    }
    var v21588 = this.uiDialog;
    e$$324 = JAM.call(v21588.is, v21588, [":visible"], JAM.policy.p3);
    if (!e$$324) {
      var v24526 = this.uiDialog;
      JAM.call(v24526.show, v24526, [], JAM.policy.p3);
    }
    var v21589 = this.uiDialog;
    var v15865 = JAM.call(v21589.css, v21589, [{top:0, left:0}], JAM.policy.p3);
    JAM.call(v15865.position, v15865, [JAM.call(a$$628.extend, a$$628, [{of:window}, b$$608], JAM.policy.p3)], JAM.policy.p3);
    if (!e$$324) {
      var v15867 = this.uiDialog;
      JAM.call(v15867.hide, v15867, [], JAM.policy.p3);
    }
    return;
  }
  function v1708() {
    var a$$637 = this.options;
    var v3515;
    if (a$$637.height === "auto") {
      v3515 = a$$637.minHeight;
    } else {
      v3515 = JAM.call(Math.min, Math, [a$$637.minHeight, a$$637.height], JAM.policy.p3);
    }
    return v3515;
  }
  function v1707(c$$489) {
    function v1706(b$$607, c$$491) {
      var v24528 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      JAM.call(v24528.removeClass, v24528, ["ui-dialog-resizing"], JAM.policy.p3);
      var v24529 = e$$323;
      var v26504 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v30992 = JAM.call(v26504.height, v26504, [], JAM.policy.p3);
      v24529.height = v30992;
      var v21592 = e$$323;
      var v24530 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v30993 = JAM.call(v24530.width, v24530, [], JAM.policy.p3);
      v21592.width = v30993;
      JAM.call(d$$374._trigger, d$$374, ["resizeStop", b$$607, h$$145(c$$491)], JAM.policy.p3);
      var v10165 = a$$628.ui.dialog.overlay;
      JAM.call(v10165.resize, v10165, [], JAM.policy.p3);
      return;
    }
    function v1705(a$$636, b$$606) {
      JAM.call(d$$374._trigger, d$$374, ["resize", a$$636, h$$145(b$$606)], JAM.policy.p3);
      return;
    }
    function v1704(b$$605, c$$490) {
      var v10166 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      JAM.call(v10166.addClass, v10166, ["ui-dialog-resizing"], JAM.policy.p3);
      JAM.call(d$$374._trigger, d$$374, ["resizeStart", b$$605, h$$145(c$$490)], JAM.policy.p3);
      return;
    }
    function h$$145(a$$635) {
      return {originalPosition:a$$635.originalPosition, originalSize:a$$635.originalSize, position:a$$635.position, size:a$$635.size};
    }
    var v3521;
    if (c$$489 === b$$594) {
      v3521 = this.options.resizable;
    } else {
      v3521 = c$$489;
    }
    c$$489 = v3521;
    var d$$374 = this;
    var e$$323 = d$$374.options;
    var v3522 = d$$374.uiDialog;
    var f$$161 = JAM.call(v3522.css, v3522, ["position"], JAM.policy.p3);
    var v3523;
    if (typeof c$$489 == "string") {
      v3523 = c$$489;
    } else {
      v3523 = "n,e,s,w,se,sw,ne,nw";
    }
    var g$$178 = v3523;
    var v21594 = d$$374.uiDialog;
    var v15873 = JAM.call(v21594.resizable, v21594, [{cancel:".ui-dialog-content", containment:"document", alsoResize:d$$374.element, maxWidth:e$$323.maxWidth, maxHeight:e$$323.maxHeight, minWidth:e$$323.minWidth, minHeight:JAM.call(d$$374._minHeight, d$$374, [], JAM.policy.p3), handles:g$$178, start:v1704, resize:v1705, stop:v1706}], JAM.policy.p3);
    var v10171 = JAM.call(v15873.css, v15873, ["position", f$$161], JAM.policy.p3);
    var v3524 = JAM.call(v10171.find, v10171, [".ui-resizable-se"], JAM.policy.p3);
    JAM.call(v3524.addClass, v3524, ["ui-icon ui-icon-grip-diagonal-se"], JAM.policy.p3);
    return;
  }
  function v1703() {
    function v1702(g$$177, h$$144) {
      c$$487.position = [h$$144.position.left - JAM.call(d$$372.scrollLeft, d$$372, [], JAM.policy.p3), h$$144.position.top - JAM.call(d$$372.scrollTop, d$$372, [], JAM.policy.p3)];
      var v24538 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v21597 = JAM.call(v24538.removeClass, v24538, ["ui-dialog-dragging"], JAM.policy.p3);
      JAM.call(v21597.height, v21597, [e$$322], JAM.policy.p3);
      JAM.call(b$$604._trigger, b$$604, ["dragStop", g$$177, f$$160(h$$144)], JAM.policy.p3);
      var v10172 = a$$628.ui.dialog.overlay;
      JAM.call(v10172.resize, v10172, [], JAM.policy.p3);
      return;
    }
    function v1701(a$$634, c$$488) {
      JAM.call(b$$604._trigger, b$$604, ["drag", a$$634, f$$160(c$$488)], JAM.policy.p3);
      return;
    }
    function v1700(d$$373, g$$176) {
      var v15876;
      if (c$$487.height === "auto") {
        v15876 = "auto";
      } else {
        var v21599 = JAM.call(a$$628, null, [this], JAM.policy.p3);
        v15876 = JAM.call(v21599.height, v21599, [], JAM.policy.p3);
      }
      e$$322 = v15876;
      var v21601 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v24540 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      var v15877 = JAM.call(v21601.height, v21601, [JAM.call(v24540.height, v24540, [], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v15877.addClass, v15877, ["ui-dialog-dragging"], JAM.policy.p3);
      JAM.call(b$$604._trigger, b$$604, ["dragStart", d$$373, f$$160(g$$176)], JAM.policy.p3);
      return;
    }
    function f$$160(a$$633) {
      return {position:a$$633.position, offset:a$$633.offset};
    }
    var b$$604 = this;
    var c$$487 = b$$604.options;
    var d$$372 = JAM.call(a$$628, null, [document], JAM.policy.p3);
    var e$$322;
    var v3528 = b$$604.uiDialog;
    JAM.call(v3528.draggable, v3528, [{cancel:".ui-dialog-content, .ui-dialog-titlebar-close", handle:".ui-dialog-titlebar", containment:"document", start:v1700, drag:v1701, stop:v1702}], JAM.policy.p3);
    return;
  }
  function v1699(b$$601) {
    function v1698(b$$602, d$$371) {
      function v1697(a$$632, b$$603) {
        if (a$$632 === "click") {
          return;
        }
        var v3531;
        if (a$$632 in e$$321) {
          v3531 = JAM.call(e$$321[a$$632], e$$321, [b$$603], JAM.policy.p3);
        } else {
          v3531 = JAM.call(e$$321.attr, e$$321, [a$$632, b$$603], JAM.policy.p3);
        }
        v3531;
        return;
      }
      function v1696() {
        var v3532 = d$$371.click;
        JAM.call(v3532.apply, v3532, [c$$486.element[0], arguments], JAM.policy.p3);
        return;
      }
      var v3534;
      if (JAM.call(a$$628.isFunction, a$$628, [d$$371], JAM.policy.p3)) {
        v3534 = {click:d$$371, text:b$$602};
      } else {
        v3534 = d$$371;
      }
      d$$371 = v3534;
      var v10177 = JAM.call(a$$628, null, ['<button type="button"></button>'], JAM.policy.p3);
      var v3535 = JAM.call(v10177.click, v10177, [v1696], JAM.policy.p3);
      var e$$321 = JAM.call(v3535.appendTo, v3535, [f$$159], JAM.policy.p3);
      JAM.call(a$$628.each, a$$628, [d$$371, v1697], JAM.policy.p3);
      var v10178 = a$$628.fn.button;
      if (v10178) {
        JAM.call(e$$321.button, e$$321, [], JAM.policy.p3);
      }
      return;
    }
    function v1695() {
      return !(d$$370 = !0);
    }
    var c$$486 = this;
    var d$$370 = !1;
    var v3537 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var e$$320 = JAM.call(v3537.addClass, v3537, ["ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"], JAM.policy.p3);
    var v10179 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var v3538 = JAM.call(v10179.addClass, v10179, ["ui-dialog-buttonset"], JAM.policy.p3);
    var f$$159 = JAM.call(v3538.appendTo, v3538, [e$$320], JAM.policy.p3);
    var v21603 = c$$486.uiDialog;
    var v15879 = JAM.call(v21603.find, v21603, [".ui-dialog-buttonpane"], JAM.policy.p3);
    JAM.call(v15879.remove, v15879, [], JAM.policy.p3);
    var v21604 = typeof b$$601 == "object";
    if (v21604) {
      v21604 = b$$601 !== null;
    }
    var v15880 = v21604;
    if (v15880) {
      JAM.call(a$$628.each, a$$628, [b$$601, v1695], JAM.policy.p3);
    }
    if (d$$370) {
      JAM.call(a$$628.each, a$$628, [b$$601, v1698], JAM.policy.p3);
      JAM.call(e$$320.appendTo, e$$320, [c$$486.uiDialog], JAM.policy.p3);
    }
    return;
  }
  function v1694() {
    function v1693(b$$600) {
      if (b$$600.keyCode !== a$$628.ui.keyCode.TAB) {
        return;
      }
      var c$$485 = JAM.call(a$$628, null, [":tabbable", this], JAM.policy.p3);
      var d$$369 = JAM.call(c$$485.filter, c$$485, [":first"], JAM.policy.p3);
      var e$$319 = JAM.call(c$$485.filter, c$$485, [":last"], JAM.policy.p3);
      var v10182 = b$$600.target === e$$319[0];
      if (v10182) {
        v10182 = !b$$600.shiftKey;
      }
      if (v10182) {
        JAM.call(d$$369.focus, d$$369, [1], JAM.policy.p3);
        return !1;
      }
      var v10183 = b$$600.target === d$$369[0];
      if (v10183) {
        v10183 = b$$600.shiftKey;
      }
      if (v10183) {
        JAM.call(e$$319.focus, e$$319, [1], JAM.policy.p3);
        return !1;
      }
      return;
    }
    if (this._isOpen) {
      return;
    }
    var b$$599 = this;
    var c$$484 = b$$599.options;
    var d$$368 = b$$599.uiDialog;
    var v29815 = b$$599;
    var v30079;
    if (c$$484.modal) {
      v30079 = JAM.new(a$$628.ui.dialog.overlay, [b$$599]);
    } else {
      v30079 = null;
    }
    v29815.overlay = v30079;
    JAM.call(b$$599._size, b$$599, [], JAM.policy.p3);
    JAM.call(b$$599._position, b$$599, [c$$484.position], JAM.policy.p3);
    JAM.call(d$$368.show, d$$368, [c$$484.show], JAM.policy.p3);
    JAM.call(b$$599.moveToTop, b$$599, [!0], JAM.policy.p3);
    var v26509 = c$$484.modal;
    if (v26509) {
      JAM.call(d$$368.bind, d$$368, ["keydown.ui-dialog", v1693], JAM.policy.p3);
    }
    var v29816 = b$$599.element;
    var v29444 = JAM.call(v29816.find, v29816, [":tabbable"], JAM.policy.p3);
    var v28835 = JAM.call(v29444.get, v29444, [], JAM.policy.p3);
    var v29817 = JAM.call(d$$368.find, d$$368, [".ui-dialog-buttonpane :tabbable"], JAM.policy.p3);
    var v29445 = JAM.call(v29817.get, v29817, [], JAM.policy.p3);
    var v26510 = JAM.call(a$$628, null, [JAM.call(v28835.concat, v28835, [JAM.call(v29445.concat, v29445, [JAM.call(d$$368.get, d$$368, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    var v24542 = JAM.call(v26510.eq, v26510, [0], JAM.policy.p3);
    JAM.call(v24542.focus, v24542, [], JAM.policy.p3);
    b$$599._isOpen = !0;
    JAM.call(b$$599._trigger, b$$599, ["open"], JAM.policy.p3);
    return b$$599;
  }
  function v1692(b$$598, c$$483) {
    var d$$367 = this;
    var e$$318 = d$$367.options;
    var f$$158;
    var v3543;
    var v21607 = e$$318.modal;
    if (v21607) {
      v21607 = !b$$598;
    }
    var v15887 = v21607;
    if (!v15887) {
      var v21608 = !e$$318.stack;
      if (v21608) {
        v21608 = !e$$318.modal;
      }
      v15887 = v21608;
    }
    if (v15887) {
      v3543 = JAM.call(d$$367._trigger, d$$367, ["focus", c$$483], JAM.policy.p3);
    } else {
      var v29447 = e$$318.zIndex > a$$628.ui.dialog.maxZ;
      if (v29447) {
        a$$628.ui.dialog.maxZ = e$$318.zIndex;
      }
      var v29448 = d$$367.overlay;
      if (v29448) {
        var v30082 = a$$628.ui.dialog;
        v30082.maxZ = v30082.maxZ + 1;
        var v30083 = d$$367.overlay.$el;
        JAM.call(v30083.css, v30083, ["z-index", a$$628.ui.dialog.overlay.maxZ = a$$628.ui.dialog.maxZ], JAM.policy.p3);
      }
      var v29449 = d$$367.element;
      var v28837 = JAM.call(v29449.scrollTop, v29449, [], JAM.policy.p3);
      var v29450 = d$$367.element;
      f$$158 = {scrollTop:v28837, scrollLeft:JAM.call(v29450.scrollLeft, v29450, [], JAM.policy.p3)};
      var v27923 = a$$628.ui.dialog;
      v27923.maxZ = v27923.maxZ + 1;
      var v26511 = d$$367.uiDialog;
      JAM.call(v26511.css, v26511, ["z-index", a$$628.ui.dialog.maxZ], JAM.policy.p3);
      var v24545 = d$$367.element;
      JAM.call(v24545.attr, v24545, [f$$158], JAM.policy.p3);
      JAM.call(d$$367._trigger, d$$367, ["focus", c$$483], JAM.policy.p3);
      v3543 = d$$367;
    }
    return v3543;
  }
  function v1691() {
    return this._isOpen;
  }
  function v1690(b$$597) {
    function v1689() {
      var v3544 = this !== c$$482.uiDialog[0];
      if (v3544) {
        var v15889 = JAM.call(a$$628, null, [this], JAM.policy.p3);
        e$$317 = JAM.call(v15889.css, v15889, ["z-index"], JAM.policy.p3);
        var v15890 = isNaN(e$$317);
        if (!v15890) {
          d$$366 = JAM.call(Math.max, Math, [d$$366, e$$317], JAM.policy.p3);
        }
      }
      return;
    }
    function v1688() {
      JAM.call(c$$482._trigger, c$$482, ["close", b$$597], JAM.policy.p3);
      return;
    }
    var c$$482 = this;
    var d$$366;
    var e$$317;
    if (!1 === JAM.call(c$$482._trigger, c$$482, ["beforeClose", b$$597], JAM.policy.p3)) {
      return;
    }
    var v27925 = c$$482.overlay;
    if (v27925) {
      var v28841 = c$$482.overlay;
      JAM.call(v28841.destroy, v28841, [], JAM.policy.p3);
    }
    var v27926 = c$$482.uiDialog;
    JAM.call(v27926.unbind, v27926, ["keypress.ui-dialog"], JAM.policy.p3);
    c$$482._isOpen = !1;
    var v24546;
    if (c$$482.options.hide) {
      var v26513 = c$$482.uiDialog;
      v24546 = JAM.call(v26513.hide, v26513, [c$$482.options.hide, v1688], JAM.policy.p3);
    } else {
      var v27929 = c$$482.uiDialog;
      JAM.call(v27929.hide, v27929, [], JAM.policy.p3);
      v24546 = JAM.call(c$$482._trigger, c$$482, ["close", b$$597], JAM.policy.p3);
    }
    v24546;
    var v21611 = a$$628.ui.dialog.overlay;
    JAM.call(v21611.resize, v21611, [], JAM.policy.p3);
    var v15891 = c$$482.options.modal;
    if (v15891) {
      d$$366 = 0;
      var v26517 = JAM.call(a$$628, null, [".ui-dialog"], JAM.policy.p3);
      JAM.call(v26517.each, v26517, [v1689], JAM.policy.p3);
      a$$628.ui.dialog.maxZ = d$$366;
    }
    return c$$482;
  }
  function v1687() {
    return this.uiDialog;
  }
  function v1686() {
    var a$$631 = this;
    var v26519 = a$$631.overlay;
    if (v26519) {
      var v27930 = a$$631.overlay;
      JAM.call(v27930.destroy, v27930, [], JAM.policy.p3);
    }
    var v26520 = a$$631.uiDialog;
    JAM.call(v26520.hide, v26520, [], JAM.policy.p3);
    var v29452 = a$$631.element;
    var v28842 = JAM.call(v29452.unbind, v29452, [".dialog"], JAM.policy.p3);
    var v27931 = JAM.call(v28842.removeData, v28842, ["dialog"], JAM.policy.p3);
    var v26521 = JAM.call(v27931.removeClass, v27931, ["ui-dialog-content ui-widget-content"], JAM.policy.p3);
    var v24549 = JAM.call(v26521.hide, v26521, [], JAM.policy.p3);
    JAM.call(v24549.appendTo, v24549, ["body"], JAM.policy.p3);
    var v21613 = a$$631.uiDialog;
    JAM.call(v21613.remove, v21613, [], JAM.policy.p3);
    var v15892 = a$$631.originalTitle;
    if (v15892) {
      var v21614 = a$$631.element;
      JAM.call(v21614.attr, v21614, ["title", a$$631.originalTitle], JAM.policy.p3);
    }
    return a$$631;
  }
  function v1685() {
    var v3546 = this.options.autoOpen;
    if (v3546) {
      JAM.call(this.open, this, [], JAM.policy.p3);
    }
    return;
  }
  function v1684() {
    function v1683(a$$630) {
      JAM.call(b$$596.close, b$$596, [a$$630], JAM.policy.p3);
      return !1;
    }
    function v1682() {
      JAM.call(j$$101.removeClass, j$$101, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1681() {
      JAM.call(j$$101.addClass, j$$101, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1680() {
      JAM.call(j$$101.removeClass, j$$101, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1679() {
      JAM.call(j$$101.addClass, j$$101, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1678(a$$629) {
      JAM.call(b$$596.moveToTop, b$$596, [!1, a$$629], JAM.policy.p3);
      return;
    }
    function v1677(c$$481) {
      var v21616 = d$$365.closeOnEscape;
      if (v21616) {
        v21616 = !JAM.call(c$$481.isDefaultPrevented, c$$481, [], JAM.policy.p3);
      }
      var v15893 = v21616;
      if (v15893) {
        v15893 = c$$481.keyCode;
      }
      var v10189 = v15893;
      if (v10189) {
        v10189 = c$$481.keyCode === a$$628.ui.keyCode.ESCAPE;
      }
      var v3548 = v10189;
      if (v3548) {
        JAM.call(b$$596.close, b$$596, [c$$481], JAM.policy.p3);
        JAM.call(c$$481.preventDefault, c$$481, [], JAM.policy.p3);
      }
      return;
    }
    var v15896 = this.element;
    var v30994 = JAM.call(v15896.attr, v15896, ["title"], JAM.policy.p3);
    this.originalTitle = v30994;
    var v15897 = typeof this.originalTitle != "string";
    if (v15897) {
      this.originalTitle = "";
    }
    var v10190 = this.options;
    var v15898 = this.options.title;
    if (!v15898) {
      v15898 = this.originalTitle;
    }
    v10190.title = v15898;
    var b$$596 = this;
    var d$$365 = b$$596.options;
    var v3549 = d$$365.title;
    if (!v3549) {
      v3549 = "&#160;";
    }
    var e$$316 = v3549;
    var v3550 = a$$628.ui.dialog;
    var f$$157 = JAM.call(v3550.getTitleId, v3550, [b$$596.element], JAM.policy.p3);
    var v29821 = b$$596;
    var v30995 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var v29453 = v29821.uiDialog = v30995;
    var v28843 = JAM.call(v29453.appendTo, v29453, [document.body], JAM.policy.p3);
    var v27932 = JAM.call(v28843.hide, v28843, [], JAM.policy.p3);
    var v26522 = JAM.call(v27932.addClass, v27932, [c$$479 + d$$365.dialogClass], JAM.policy.p3);
    var v24553 = JAM.call(v26522.css, v26522, [{zIndex:d$$365.zIndex}], JAM.policy.p3);
    var v21621 = JAM.call(v24553.attr, v24553, ["tabIndex", -1], JAM.policy.p3);
    var v15899 = JAM.call(v21621.css, v21621, ["outline", 0], JAM.policy.p3);
    var v10193 = JAM.call(v15899.keydown, v15899, [v1677], JAM.policy.p3);
    var v3552 = JAM.call(v10193.attr, v10193, [{role:"dialog", "aria-labelledby":f$$157}], JAM.policy.p3);
    var g$$175 = JAM.call(v3552.mousedown, v3552, [v1678], JAM.policy.p3);
    var v21622 = b$$596.element;
    var v15900 = JAM.call(v21622.show, v21622, [], JAM.policy.p3);
    var v10195 = JAM.call(v15900.removeAttr, v15900, ["title"], JAM.policy.p3);
    var v3553 = JAM.call(v10195.addClass, v10195, ["ui-dialog-content ui-widget-content"], JAM.policy.p3);
    var h$$143 = JAM.call(v3553.appendTo, v3553, [g$$175], JAM.policy.p3);
    var v15901 = b$$596;
    var v30996 = JAM.call(a$$628, null, ["<div></div>"], JAM.policy.p3);
    var v10196 = v15901.uiDialogTitlebar = v30996;
    var v3554 = JAM.call(v10196.addClass, v10196, ["ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix"], JAM.policy.p3);
    var i$$196 = JAM.call(v3554.prependTo, v3554, [g$$175], JAM.policy.p3);
    var v27935 = JAM.call(a$$628, null, ['<a href="#"></a>'], JAM.policy.p3);
    var v26524 = JAM.call(v27935.addClass, v27935, ["ui-dialog-titlebar-close ui-corner-all"], JAM.policy.p3);
    var v24554 = JAM.call(v26524.attr, v26524, ["role", "button"], JAM.policy.p3);
    var v21623 = JAM.call(v24554.hover, v24554, [v1679, v1680], JAM.policy.p3);
    var v15902 = JAM.call(v21623.focus, v21623, [v1681], JAM.policy.p3);
    var v10197 = JAM.call(v15902.blur, v15902, [v1682], JAM.policy.p3);
    var v3555 = JAM.call(v10197.click, v10197, [v1683], JAM.policy.p3);
    var j$$101 = JAM.call(v3555.appendTo, v3555, [i$$196], JAM.policy.p3);
    var v21624 = b$$596;
    var v30997 = JAM.call(a$$628, null, ["<span></span>"], JAM.policy.p3);
    var v15903 = v21624.uiDialogTitlebarCloseText = v30997;
    var v10198 = JAM.call(v15903.addClass, v15903, ["ui-icon ui-icon-closethick"], JAM.policy.p3);
    var v3556 = JAM.call(v10198.text, v10198, [d$$365.closeText], JAM.policy.p3);
    var k$$70 = JAM.call(v3556.appendTo, v3556, [j$$101], JAM.policy.p3);
    var v21625 = JAM.call(a$$628, null, ["<span></span>"], JAM.policy.p3);
    var v15904 = JAM.call(v21625.addClass, v21625, ["ui-dialog-title"], JAM.policy.p3);
    var v10200 = JAM.call(v15904.attr, v15904, ["id", f$$157], JAM.policy.p3);
    var v3557 = JAM.call(v10200.html, v10200, [e$$316], JAM.policy.p3);
    var l$$77 = JAM.call(v3557.prependTo, v3557, [i$$196], JAM.policy.p3);
    var v28845 = JAM.call(a$$628.isFunction, a$$628, [d$$365.beforeclose], JAM.policy.p3);
    if (v28845) {
      v28845 = !JAM.call(a$$628.isFunction, a$$628, [d$$365.beforeClose], JAM.policy.p3);
    }
    var v27936 = v28845;
    if (v27936) {
      d$$365.beforeClose = d$$365.beforeclose;
    }
    var v28846 = JAM.call(i$$196.find, i$$196, ["*"], JAM.policy.p3);
    var v27937 = JAM.call(v28846.add, v28846, [i$$196], JAM.policy.p3);
    JAM.call(v27937.disableSelection, v27937, [], JAM.policy.p3);
    var v27938 = d$$365.draggable;
    if (v27938) {
      v27938 = a$$628.fn.draggable;
    }
    var v26525 = v27938;
    if (v26525) {
      JAM.call(b$$596._makeDraggable, b$$596, [], JAM.policy.p3);
    }
    var v26526 = d$$365.resizable;
    if (v26526) {
      v26526 = a$$628.fn.resizable;
    }
    var v24555 = v26526;
    if (v24555) {
      JAM.call(b$$596._makeResizable, b$$596, [], JAM.policy.p3);
    }
    JAM.call(b$$596._createButtons, b$$596, [d$$365.buttons], JAM.policy.p3);
    b$$596._isOpen = !1;
    var v10201 = a$$628.fn.bgiframe;
    if (v10201) {
      JAM.call(g$$175.bgiframe, g$$175, [], JAM.policy.p3);
    }
    return;
  }
  function v1676(b$$595) {
    var v15906 = JAM.call(a$$628, null, [this], JAM.policy.p3);
    var v10202 = JAM.call(v15906.css, v15906, [b$$595], JAM.policy.p3);
    var c$$480 = JAM.call(v10202.offset, v10202, [], JAM.policy.p3).top;
    var v3559 = c$$480 < 0;
    if (v3559) {
      var v10203 = JAM.call(a$$628, null, [this], JAM.policy.p3);
      JAM.call(v10203.css, v10203, ["top", b$$595.top - c$$480], JAM.policy.p3);
    }
    return;
  }
  var c$$479 = "ui-dialog ui-widget ui-widget-content ui-corner-all ";
  var d$$364 = {buttons:!0, height:!0, maxHeight:!0, maxWidth:!0, minHeight:!0, minWidth:!0, width:!0};
  var e$$315 = {maxHeight:!0, maxWidth:!0, minHeight:!0, minWidth:!0};
  JAM.call(a$$628.widget, a$$628, ["ui.dialog", {options:{autoOpen:!0, buttons:{}, closeOnEscape:!0, closeText:"close", dialogClass:"", draggable:!0, hide:null, height:"auto", maxHeight:!1, maxWidth:!1, minHeight:150, minWidth:150, modal:!1, position:{my:"center", at:"center", collision:"fit", using:v1676}, resizable:!0, show:null, stack:!0, title:"", width:300, zIndex:1E3}, _create:v1684, _init:v1685, destroy:v1686, widget:v1687, close:v1690, isOpen:v1691, moveToTop:v1692, open:v1694, _createButtons:v1699, 
  _makeDraggable:v1703, _makeResizable:v1707, _minHeight:v1708, _position:v1710, _setOptions:v1712, _setOption:v1713, _size:v1714}], JAM.policy.p3);
  JAM.call(a$$628.extend, a$$628, [a$$628.ui.dialog, {version:"1.8.24", uuid:0, maxZ:0, getTitleId:v1715, overlay:v1716}], JAM.policy.p3);
  var v15908 = a$$628.ui.dialog.overlay;
  var v24559 = JAM.call(a$$628.map, a$$628, [JAM.call("focus,mousedown,mouseup,keydown,keypress,click".split, "focus,mousedown,mouseup,keydown,keypress,click", [","], JAM.policy.p3), v1717], JAM.policy.p3);
  JAM.call(a$$628.extend, a$$628, [v15908, {instances:[], oldInstances:[], maxZ:0, events:JAM.call(v24559.join, v24559, [" "], JAM.policy.p3), create:v1721, destroy:v1723, height:v1724, width:v1725, resize:v1727}], JAM.policy.p3);
  JAM.call(a$$628.extend, a$$628, [a$$628.ui.dialog.overlay.prototype, {destroy:v1728}], JAM.policy.p3);
  return;
}
function v1675($$$3, undefined$$1) {
  function v1674(a$$627) {
    function v1673() {
      var v3571;
      if (typeof a$$627 == "string") {
        var v10207 = $$$3.datepicker["_" + a$$627 + "Datepicker"];
        var v10208 = $$$3.datepicker;
        var v15914 = [this];
        v3571 = JAM.call(v10207.apply, v10207, [v10208, JAM.call(v15914.concat, v15914, [b$$593], JAM.policy.p3)], JAM.policy.p3);
      } else {
        var v10210 = $$$3.datepicker;
        v3571 = JAM.call(v10210._attachDatepicker, v10210, [this, a$$627], JAM.policy.p3);
      }
      v3571;
      return;
    }
    if (!this.length) {
      return this;
    }
    var v3573 = $$$3.datepicker.initialized;
    if (!v3573) {
      var v24561 = JAM.call($$$3, null, [document], JAM.policy.p3);
      var v21634 = JAM.call(v24561.mousedown, v24561, [$$$3.datepicker._checkExternalClick], JAM.policy.p3);
      var v15915 = JAM.call(v21634.find, v21634, ["body"], JAM.policy.p3);
      JAM.call(v15915.append, v15915, [$$$3.datepicker.dpDiv], JAM.policy.p3);
      $$$3.datepicker.initialized = !0;
    }
    var v3574 = Array.prototype.slice;
    var b$$593 = JAM.call(v3574.call, v3574, [arguments, 1], JAM.policy.p3);
    var v3575;
    var v15918 = typeof a$$627 != "string";
    if (!v15918) {
      var v24563 = a$$627 != "isDisabled";
      if (v24563) {
        v24563 = a$$627 != "getDate";
      }
      var v21637 = v24563;
      if (v21637) {
        v21637 = a$$627 != "widget";
      }
      v15918 = v21637;
    }
    if (v15918) {
      var v10216;
      var v24564 = a$$627 == "option";
      if (v24564) {
        v24564 = arguments.length == 2;
      }
      var v21639 = v24564;
      if (v21639) {
        v21639 = typeof arguments[1] == "string";
      }
      if (v21639) {
        var v15919 = $$$3.datepicker["_" + a$$627 + "Datepicker"];
        var v15920 = $$$3.datepicker;
        var v21642 = [this[0]];
        v10216 = JAM.call(v15919.apply, v15919, [v15920, JAM.call(v21642.concat, v21642, [b$$593], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v10216 = JAM.call(this.each, this, [v1673], JAM.policy.p3);
      }
      v3575 = v10216;
    } else {
      var v10217 = $$$3.datepicker["_" + a$$627 + "Datepicker"];
      var v10218 = $$$3.datepicker;
      var v15925 = [this[0]];
      v3575 = JAM.call(v10217.apply, v10217, [v10218, JAM.call(v15925.concat, v15925, [b$$593], JAM.policy.p3)], JAM.policy.p3);
    }
    return v3575;
  }
  function v1672(a$$626, b$$592, c$$478, d$$363) {
    if (!b$$592) {
      a$$626.currentDay = a$$626.selectedDay;
      a$$626.currentMonth = a$$626.selectedMonth;
      a$$626.currentYear = a$$626.selectedYear;
    }
    var v3576;
    if (b$$592) {
      var v10222;
      if (typeof b$$592 == "object") {
        v10222 = b$$592;
      } else {
        v10222 = JAM.call(this._daylightSavingAdjust, this, [new Date(d$$363, c$$478, b$$592)], JAM.policy.p3);
      }
      v3576 = v10222;
    } else {
      v3576 = JAM.call(this._daylightSavingAdjust, this, [new Date(a$$626.currentYear, a$$626.currentMonth, a$$626.currentDay)], JAM.policy.p3);
    }
    var e$$314 = v3576;
    return JAM.call(this.formatDate, this, [JAM.call(this._get, this, [a$$626, "dateFormat"], JAM.policy.p3), e$$314, JAM.call(this._getFormatConfig, this, [a$$626], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1671(a$$625) {
    var b$$591 = JAM.call(this._get, this, [a$$625, "shortYearCutoff"], JAM.policy.p3);
    var v10224;
    if (typeof b$$591 != "string") {
      v10224 = b$$591;
    } else {
      var v24568 = new Date;
      v10224 = JAM.call(v24568.getFullYear, v24568, [], JAM.policy.p3) % 100 + parseInt(b$$591, 10);
    }
    b$$591 = v10224;
    return {shortYearCutoff:b$$591, dayNamesShort:JAM.call(this._get, this, [a$$625, "dayNamesShort"], JAM.policy.p3), dayNames:JAM.call(this._get, this, [a$$625, "dayNames"], JAM.policy.p3), monthNamesShort:JAM.call(this._get, this, [a$$625, "monthNamesShort"], JAM.policy.p3), monthNames:JAM.call(this._get, this, [a$$625, "monthNames"], JAM.policy.p3)};
  }
  function v1670(a$$624, b$$590) {
    var c$$477 = JAM.call(this._getMinMaxDate, this, [a$$624, "min"], JAM.policy.p3);
    var d$$362 = JAM.call(this._getMinMaxDate, this, [a$$624, "max"], JAM.policy.p3);
    var v10229 = !c$$477;
    if (!v10229) {
      v10229 = JAM.call(b$$590.getTime, b$$590, [], JAM.policy.p3) >= JAM.call(c$$477.getTime, c$$477, [], JAM.policy.p3);
    }
    var v3579 = v10229;
    if (v3579) {
      var v10230 = !d$$362;
      if (!v10230) {
        v10230 = JAM.call(b$$590.getTime, b$$590, [], JAM.policy.p3) <= JAM.call(d$$362.getTime, d$$362, [], JAM.policy.p3);
      }
      v3579 = v10230;
    }
    return v3579;
  }
  function v1669(a$$623, b$$589, c$$476, d$$361) {
    var e$$313 = JAM.call(this._getNumberOfMonths, this, [a$$623], JAM.policy.p3);
    var v21648;
    if (b$$589 < 0) {
      v21648 = b$$589;
    } else {
      v21648 = e$$313[0] * e$$313[1];
    }
    var f$$156 = JAM.call(this._daylightSavingAdjust, this, [new Date(c$$476, d$$361 + v21648, 1)], JAM.policy.p3);
    var v10232 = b$$589 < 0;
    if (v10232) {
      JAM.call(f$$156.setDate, f$$156, [JAM.call(this._getDaysInMonth, this, [JAM.call(f$$156.getFullYear, f$$156, [], JAM.policy.p3), JAM.call(f$$156.getMonth, f$$156, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    return JAM.call(this._isInRange, this, [a$$623, f$$156], JAM.policy.p3);
  }
  function v1668(a$$622, b$$588) {
    var v3581 = new Date(a$$622, b$$588, 1);
    return JAM.call(v3581.getDay, v3581, [], JAM.policy.p3);
  }
  function v1667(a$$621, b$$587) {
    var v10233 = JAM.call(this._daylightSavingAdjust, this, [new Date(a$$621, b$$587, 32)], JAM.policy.p3);
    return 32 - JAM.call(v10233.getDate, v10233, [], JAM.policy.p3);
  }
  function v1666(a$$620, b$$586) {
    return JAM.call(this._determineDate, this, [a$$620, JAM.call(this._get, this, [a$$620, b$$586 + "Date"], JAM.policy.p3), null], JAM.policy.p3);
  }
  function v1665(a$$619) {
    var b$$585 = JAM.call(this._get, this, [a$$619, "numberOfMonths"], JAM.policy.p3);
    var v3584;
    if (b$$585 == null) {
      v3584 = [1, 1];
    } else {
      var v10235;
      if (typeof b$$585 == "number") {
        v10235 = [1, b$$585];
      } else {
        v10235 = b$$585;
      }
      v3584 = v10235;
    }
    return v3584;
  }
  function v1664(a$$618) {
    var b$$584 = JAM.call(this._get, this, [a$$618, "onChangeMonthYear"], JAM.policy.p3);
    if (b$$584) {
      var v15944;
      if (a$$618.input) {
        v15944 = a$$618.input[0];
      } else {
        v15944 = null;
      }
      JAM.call(b$$584.apply, b$$584, [v15944, [a$$618.selectedYear, a$$618.selectedMonth + 1, a$$618]], JAM.policy.p3);
    }
    return;
  }
  function v1663(a$$617, b$$583) {
    var c$$475 = JAM.call(this._getMinMaxDate, this, [a$$617, "min"], JAM.policy.p3);
    var d$$360 = JAM.call(this._getMinMaxDate, this, [a$$617, "max"], JAM.policy.p3);
    var v3585;
    var v15947 = c$$475;
    if (v15947) {
      v15947 = b$$583 < c$$475;
    }
    if (v15947) {
      v3585 = c$$475;
    } else {
      v3585 = b$$583;
    }
    var e$$312 = v3585;
    var v10240;
    var v21655 = d$$360;
    if (v21655) {
      v21655 = e$$312 > d$$360;
    }
    if (v21655) {
      v10240 = d$$360;
    } else {
      v10240 = e$$312;
    }
    e$$312 = v10240;
    return e$$312;
  }
  function v1662(a$$616, b$$582, c$$474) {
    var v3586 = a$$616.drawYear;
    var v10241;
    if (c$$474 == "Y") {
      v10241 = b$$582;
    } else {
      v10241 = 0;
    }
    var d$$359 = v3586 + v10241;
    var v3588 = a$$616.drawMonth;
    var v10242;
    if (c$$474 == "M") {
      v10242 = b$$582;
    } else {
      v10242 = 0;
    }
    var e$$311 = v3588 + v10242;
    var v3590 = JAM.call(Math.min, Math, [a$$616.selectedDay, JAM.call(this._getDaysInMonth, this, [d$$359, e$$311], JAM.policy.p3)], JAM.policy.p3);
    var v10245;
    if (c$$474 == "D") {
      v10245 = b$$582;
    } else {
      v10245 = 0;
    }
    var f$$155 = v3590 + v10245;
    var g$$174 = JAM.call(this._restrictMinMax, this, [a$$616, JAM.call(this._daylightSavingAdjust, this, [new Date(d$$359, e$$311, f$$155)], JAM.policy.p3)], JAM.policy.p3);
    var v30998 = JAM.call(g$$174.getDate, g$$174, [], JAM.policy.p3);
    a$$616.selectedDay = v30998;
    var v30999 = JAM.call(g$$174.getMonth, g$$174, [], JAM.policy.p3);
    a$$616.drawMonth = a$$616.selectedMonth = v30999;
    var v31000 = JAM.call(g$$174.getFullYear, g$$174, [], JAM.policy.p3);
    a$$616.drawYear = a$$616.selectedYear = v31000;
    var v15952 = c$$474 == "M";
    if (!v15952) {
      v15952 = c$$474 == "Y";
    }
    var v10247 = v15952;
    if (v10247) {
      JAM.call(this._notifyChange, this, [a$$616], JAM.policy.p3);
    }
    return;
  }
  function v1661(a$$614, b$$580, c$$473, d$$358, e$$310, f$$154, g$$173, h$$142) {
    function v1660(a$$615) {
      var v3593;
      if (JAM.call(a$$615.match, a$$615, [/c[+-].*/], JAM.policy.p3)) {
        v3593 = c$$473 + parseInt(JAM.call(a$$615.substring, a$$615, [1], JAM.policy.p3), 10);
      } else {
        var v10250;
        if (JAM.call(a$$615.match, a$$615, [/[+-].*/], JAM.policy.p3)) {
          v10250 = r$$20 + parseInt(a$$615, 10);
        } else {
          v10250 = parseInt(a$$615, 10);
        }
        v3593 = v10250;
      }
      var b$$581 = v3593;
      var v3594;
      if (isNaN(b$$581)) {
        v3594 = r$$20;
      } else {
        v3594 = b$$581;
      }
      return v3594;
    }
    var i$$195 = JAM.call(this._get, this, [a$$614, "changeMonth"], JAM.policy.p3);
    var j$$100 = JAM.call(this._get, this, [a$$614, "changeYear"], JAM.policy.p3);
    var k$$69 = JAM.call(this._get, this, [a$$614, "showMonthAfterYear"], JAM.policy.p3);
    var l$$76 = '<div class="ui-datepicker-title">';
    var m$$47 = "";
    var v10253 = f$$154;
    if (!v10253) {
      v10253 = !i$$195;
    }
    if (v10253) {
      m$$47 = m$$47 + ('<span class="ui-datepicker-month">' + g$$173[b$$580] + "</span>");
    } else {
      var v3595 = d$$358;
      if (v3595) {
        v3595 = JAM.call(d$$358.getFullYear, d$$358, [], JAM.policy.p3) == c$$473;
      }
      var n$$93 = v3595;
      var v3596 = e$$310;
      if (v3596) {
        v3596 = JAM.call(e$$310.getFullYear, e$$310, [], JAM.policy.p3) == c$$473;
      }
      var o$$23 = v3596;
      m$$47 = m$$47 + '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
      var p$$48 = 0;
      var v3598 = p$$48 < 12;
      for (;v3598;) {
        var v15959 = !n$$93;
        if (!v15959) {
          v15959 = p$$48 >= JAM.call(d$$358.getMonth, d$$358, [], JAM.policy.p3);
        }
        var v10257 = v15959;
        if (v10257) {
          var v15960 = !o$$23;
          if (!v15960) {
            v15960 = p$$48 <= JAM.call(e$$310.getMonth, e$$310, [], JAM.policy.p3);
          }
          v10257 = v15960;
        }
        var v3597 = v10257;
        if (v3597) {
          var v27940 = '<option value="' + p$$48 + '"';
          var v28849;
          if (p$$48 == b$$580) {
            v28849 = ' selected="selected"';
          } else {
            v28849 = "";
          }
          m$$47 = m$$47 + (v27940 + v28849 + ">" + h$$142[p$$48] + "</option>");
        }
        p$$48++;
        v3598 = p$$48 < 12;
      }
      m$$47 = m$$47 + "</select>";
    }
    if (!k$$69) {
      var v24574;
      var v28850 = f$$154;
      if (!v28850) {
        v28850 = !i$$195;
      }
      var v27942 = v28850;
      if (!v27942) {
        v27942 = !j$$100;
      }
      if (v27942) {
        v24574 = "&#xa0;";
      } else {
        v24574 = "";
      }
      l$$76 = l$$76 + (m$$47 + v24574);
    }
    if (!a$$614.yearshtml) {
      a$$614.yearshtml = "";
      var v10260 = f$$154;
      if (!v10260) {
        v10260 = !j$$100;
      }
      if (v10260) {
        l$$76 = l$$76 + ('<span class="ui-datepicker-year">' + c$$473 + "</span>");
      } else {
        var v3600 = JAM.call(this._get, this, [a$$614, "yearRange"], JAM.policy.p3);
        var q$$19 = JAM.call(v3600.split, v3600, [":"], JAM.policy.p3);
        var v3601 = new Date;
        var r$$20 = JAM.call(v3601.getFullYear, v3601, [], JAM.policy.p3);
        var s$$29 = v1660;
        var t$$14 = JAM.call(s$$29, null, [q$$19[0]], JAM.policy.p3);
        var v15965 = q$$19[1];
        if (!v15965) {
          v15965 = "";
        }
        var u$$12 = JAM.call(Math.max, Math, [t$$14, JAM.call(s$$29, null, [v15965], JAM.policy.p3)], JAM.policy.p3);
        var v15966;
        if (d$$358) {
          v15966 = JAM.call(Math.max, Math, [t$$14, JAM.call(d$$358.getFullYear, d$$358, [], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v15966 = t$$14;
        }
        t$$14 = v15966;
        var v15967;
        if (e$$310) {
          v15967 = JAM.call(Math.min, Math, [u$$12, JAM.call(e$$310.getFullYear, e$$310, [], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v15967 = u$$12;
        }
        u$$12 = v15967;
        a$$614.yearshtml = a$$614.yearshtml + '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
        var v3604 = t$$14 <= u$$12;
        for (;v3604;) {
          var v10263 = a$$614.yearshtml;
          var v26542 = '<option value="' + t$$14 + '"';
          var v27944;
          if (t$$14 == c$$473) {
            v27944 = ' selected="selected"';
          } else {
            v27944 = "";
          }
          a$$614.yearshtml = v10263 + (v26542 + v27944 + ">" + t$$14 + "</option>");
          t$$14++;
          v3604 = t$$14 <= u$$12;
        }
        a$$614.yearshtml = a$$614.yearshtml + "</select>";
        l$$76 = l$$76 + a$$614.yearshtml;
        a$$614.yearshtml = null;
      }
    }
    l$$76 = l$$76 + JAM.call(this._get, this, [a$$614, "yearSuffix"], JAM.policy.p3);
    if (k$$69) {
      var v28853;
      var v30085 = f$$154;
      if (!v30085) {
        v30085 = !i$$195;
      }
      var v29823 = v30085;
      if (!v29823) {
        v29823 = !j$$100;
      }
      if (v29823) {
        v28853 = "&#xa0;";
      } else {
        v28853 = "";
      }
      l$$76 = l$$76 + (v28853 + m$$47);
    }
    l$$76 = l$$76 + "</div>";
    return l$$76;
  }
  function v1659(a$$613) {
    var b$$579 = new Date;
    b$$579 = JAM.call(this._daylightSavingAdjust, this, [new Date(JAM.call(b$$579.getFullYear, b$$579, [], JAM.policy.p3), JAM.call(b$$579.getMonth, b$$579, [], JAM.policy.p3), JAM.call(b$$579.getDate, b$$579, [], JAM.policy.p3))], JAM.policy.p3);
    var c$$472 = JAM.call(this._get, this, [a$$613, "isRTL"], JAM.policy.p3);
    var d$$357 = JAM.call(this._get, this, [a$$613, "showButtonPanel"], JAM.policy.p3);
    var e$$309 = JAM.call(this._get, this, [a$$613, "hideIfNoPrevNext"], JAM.policy.p3);
    var f$$153 = JAM.call(this._get, this, [a$$613, "navigationAsDateFormat"], JAM.policy.p3);
    var g$$172 = JAM.call(this._getNumberOfMonths, this, [a$$613], JAM.policy.p3);
    var h$$141 = JAM.call(this._get, this, [a$$613, "showCurrentAtPos"], JAM.policy.p3);
    var i$$194 = JAM.call(this._get, this, [a$$613, "stepMonths"], JAM.policy.p3);
    var v3608 = g$$172[0] != 1;
    if (!v3608) {
      v3608 = g$$172[1] != 1;
    }
    var j$$99 = v3608;
    var v10271;
    if (a$$613.currentDay) {
      v10271 = new Date(a$$613.currentYear, a$$613.currentMonth, a$$613.currentDay);
    } else {
      v10271 = new Date(9999, 9, 9);
    }
    var k$$68 = JAM.call(this._daylightSavingAdjust, this, [v10271], JAM.policy.p3);
    var l$$75 = JAM.call(this._getMinMaxDate, this, [a$$613, "min"], JAM.policy.p3);
    var m$$46 = JAM.call(this._getMinMaxDate, this, [a$$613, "max"], JAM.policy.p3);
    var n$$92 = a$$613.drawMonth - h$$141;
    var o$$22 = a$$613.drawYear;
    var v3611 = n$$92 < 0;
    if (v3611) {
      n$$92 = n$$92 + 12;
      o$$22--;
    }
    if (m$$46) {
      var p$$47 = JAM.call(this._daylightSavingAdjust, this, [new Date(JAM.call(m$$46.getFullYear, m$$46, [], JAM.policy.p3), JAM.call(m$$46.getMonth, m$$46, [], JAM.policy.p3) - g$$172[0] * g$$172[1] + 1, JAM.call(m$$46.getDate, m$$46, [], JAM.policy.p3))], JAM.policy.p3);
      var v3613;
      var v15975 = l$$75;
      if (v15975) {
        v15975 = p$$47 < l$$75;
      }
      if (v15975) {
        v3613 = l$$75;
      } else {
        v3613 = p$$47;
      }
      p$$47 = v3613;
      var v3614 = JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92, 1)], JAM.policy.p3) > p$$47;
      for (;v3614;) {
        n$$92--;
        var v10277 = n$$92 < 0;
        if (v10277) {
          n$$92 = 11;
          o$$22--;
        }
        v3614 = JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92, 1)], JAM.policy.p3) > p$$47;
      }
    }
    a$$613.drawMonth = n$$92;
    a$$613.drawYear = o$$22;
    var q$$18 = JAM.call(this._get, this, [a$$613, "prevText"], JAM.policy.p3);
    var v3615;
    if (f$$153) {
      v3615 = JAM.call(this.formatDate, this, [q$$18, JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92 - i$$194, 1)], JAM.policy.p3), JAM.call(this._getFormatConfig, this, [a$$613], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v3615 = q$$18;
    }
    q$$18 = v3615;
    var v3616;
    if (JAM.call(this._canAdjustMonth, this, [a$$613, -1, o$$22, n$$92], JAM.policy.p3)) {
      var v24580 = '<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="' + q$$18 + '"><span class="ui-icon ui-icon-circle-triangle-';
      var v26546;
      if (c$$472) {
        v26546 = "e";
      } else {
        v26546 = "w";
      }
      v3616 = v24580 + v26546 + '">' + q$$18 + "</span></a>";
    } else {
      var v10282;
      if (e$$309) {
        v10282 = "";
      } else {
        var v26547 = '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + q$$18 + '"><span class="ui-icon ui-icon-circle-triangle-';
        var v27947;
        if (c$$472) {
          v27947 = "e";
        } else {
          v27947 = "w";
        }
        v10282 = v26547 + v27947 + '">' + q$$18 + "</span></a>";
      }
      v3616 = v10282;
    }
    var r$$19 = v3616;
    var s$$28 = JAM.call(this._get, this, [a$$613, "nextText"], JAM.policy.p3);
    var v3617;
    if (f$$153) {
      v3617 = JAM.call(this.formatDate, this, [s$$28, JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92 + i$$194, 1)], JAM.policy.p3), JAM.call(this._getFormatConfig, this, [a$$613], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v3617 = s$$28;
    }
    s$$28 = v3617;
    var v3618;
    if (JAM.call(this._canAdjustMonth, this, [a$$613, 1, o$$22, n$$92], JAM.policy.p3)) {
      var v24583 = '<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="' + s$$28 + '"><span class="ui-icon ui-icon-circle-triangle-';
      var v26550;
      if (c$$472) {
        v26550 = "w";
      } else {
        v26550 = "e";
      }
      v3618 = v24583 + v26550 + '">' + s$$28 + "</span></a>";
    } else {
      var v10287;
      if (e$$309) {
        v10287 = "";
      } else {
        var v26551 = '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + s$$28 + '"><span class="ui-icon ui-icon-circle-triangle-';
        var v27949;
        if (c$$472) {
          v27949 = "w";
        } else {
          v27949 = "e";
        }
        v10287 = v26551 + v27949 + '">' + s$$28 + "</span></a>";
      }
      v3618 = v10287;
    }
    var t$$13 = v3618;
    var u$$11 = JAM.call(this._get, this, [a$$613, "currentText"], JAM.policy.p3);
    var v3619;
    var v15984 = JAM.call(this._get, this, [a$$613, "gotoCurrent"], JAM.policy.p3);
    if (v15984) {
      v15984 = a$$613.currentDay;
    }
    if (v15984) {
      v3619 = k$$68;
    } else {
      v3619 = b$$579;
    }
    var v$$10 = v3619;
    var v3620;
    if (f$$153) {
      v3620 = JAM.call(this.formatDate, this, [u$$11, v$$10, JAM.call(this._getFormatConfig, this, [a$$613], JAM.policy.p3)], JAM.policy.p3);
    } else {
      v3620 = u$$11;
    }
    u$$11 = v3620;
    var v3621;
    if (a$$613.inline) {
      v3621 = "";
    } else {
      v3621 = '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' + JAM.call(this._get, this, [a$$613, "closeText"], JAM.policy.p3) + "</button>";
    }
    var w$$17 = v3621;
    var v3622;
    if (d$$357) {
      var v26553;
      if (c$$472) {
        v26553 = w$$17;
      } else {
        v26553 = "";
      }
      var v21680 = '<div class="ui-datepicker-buttonpane ui-widget-content">' + v26553;
      var v24587;
      if (JAM.call(this._isInRange, this, [a$$613, v$$10], JAM.policy.p3)) {
        v24587 = '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">' + u$$11 + "</button>";
      } else {
        v24587 = "";
      }
      var v15986 = v21680 + v24587;
      var v21682;
      if (c$$472) {
        v21682 = "";
      } else {
        v21682 = w$$17;
      }
      v3622 = v15986 + v21682 + "</div>";
    } else {
      v3622 = "";
    }
    var x$$73 = v3622;
    var y$$54 = parseInt(JAM.call(this._get, this, [a$$613, "firstDay"], JAM.policy.p3), 10);
    var v3624;
    if (isNaN(y$$54)) {
      v3624 = 0;
    } else {
      v3624 = y$$54;
    }
    y$$54 = v3624;
    var z$$6 = JAM.call(this._get, this, [a$$613, "showWeek"], JAM.policy.p3);
    var A$$3 = JAM.call(this._get, this, [a$$613, "dayNames"], JAM.policy.p3);
    var B$$2 = JAM.call(this._get, this, [a$$613, "dayNamesShort"], JAM.policy.p3);
    var C$$2 = JAM.call(this._get, this, [a$$613, "dayNamesMin"], JAM.policy.p3);
    var D$$2 = JAM.call(this._get, this, [a$$613, "monthNames"], JAM.policy.p3);
    var E$$2 = JAM.call(this._get, this, [a$$613, "monthNamesShort"], JAM.policy.p3);
    var F$$2 = JAM.call(this._get, this, [a$$613, "beforeShowDay"], JAM.policy.p3);
    var G$$2 = JAM.call(this._get, this, [a$$613, "showOtherMonths"], JAM.policy.p3);
    var H$$2 = JAM.call(this._get, this, [a$$613, "selectOtherMonths"], JAM.policy.p3);
    var v3625 = JAM.call(this._get, this, [a$$613, "calculateWeek"], JAM.policy.p3);
    if (!v3625) {
      v3625 = this.iso8601Week;
    }
    var I$$2 = v3625;
    var J$$2 = JAM.call(this._getDefaultDate, this, [a$$613], JAM.policy.p3);
    var K$$1 = "";
    var L$$1 = 0;
    var v3643 = L$$1 < g$$172[0];
    for (;v3643;) {
      var M$$1 = "";
      this.maxRows = 4;
      var N$$1 = 0;
      var v3642 = N$$1 < g$$172[1];
      for (;v3642;) {
        var O$$1 = JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92, a$$613.selectedDay)], JAM.policy.p3);
        var P$$1 = " ui-corner-all";
        var Q$$1 = "";
        if (j$$99) {
          Q$$1 = Q$$1 + '<div class="ui-datepicker-group';
          if (g$$172[1] > 1) {
            switch(N$$1) {
              case 0:
                Q$$1 = Q$$1 + " ui-datepicker-group-first";
                var v15988;
                if (c$$472) {
                  v15988 = "right";
                } else {
                  v15988 = "left";
                }
                P$$1 = " ui-corner-" + v15988;
                break;
              case g$$172[1] - 1:
                Q$$1 = Q$$1 + " ui-datepicker-group-last";
                var v15989;
                if (c$$472) {
                  v15989 = "left";
                } else {
                  v15989 = "right";
                }
                P$$1 = " ui-corner-" + v15989;
                break;
              default:
                Q$$1 = Q$$1 + " ui-datepicker-group-middle";
                P$$1 = "";
            }
          }
          Q$$1 = Q$$1 + '">';
        }
        var v27950 = '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + P$$1 + '">';
        var v28855;
        var v29824 = JAM.call(/all|left/.test, /all|left/, [P$$1], JAM.policy.p3);
        if (v29824) {
          v29824 = L$$1 == 0;
        }
        if (v29824) {
          var v29460;
          if (c$$472) {
            v29460 = t$$13;
          } else {
            v29460 = r$$19;
          }
          v28855 = v29460;
        } else {
          v28855 = "";
        }
        var v26556 = v27950 + v28855;
        var v27952;
        var v29462 = JAM.call(/all|right/.test, /all|right/, [P$$1], JAM.policy.p3);
        if (v29462) {
          v29462 = L$$1 == 0;
        }
        if (v29462) {
          var v28856;
          if (c$$472) {
            v28856 = r$$19;
          } else {
            v28856 = t$$13;
          }
          v27952 = v28856;
        } else {
          v27952 = "";
        }
        var v24588 = v26556 + v27952;
        var v27953 = L$$1 > 0;
        if (!v27953) {
          v27953 = N$$1 > 0;
        }
        Q$$1 = Q$$1 + (v24588 + JAM.call(this._generateMonthYearHeader, this, [a$$613, n$$92, o$$22, l$$75, m$$46, v27953, D$$2, E$$2], JAM.policy.p3) + '</div><table class="ui-datepicker-calendar"><thead>' + "<tr>");
        var v3628;
        if (z$$6) {
          v3628 = '<th class="ui-datepicker-week-col">' + JAM.call(this._get, this, [a$$613, "weekHeader"], JAM.policy.p3) + "</th>";
        } else {
          v3628 = "";
        }
        var R$$1 = v3628;
        var S$$1 = 0;
        var v3630 = S$$1 < 7;
        for (;v3630;) {
          var T$$3 = (S$$1 + y$$54) % 7;
          var v29825;
          if ((S$$1 + y$$54 + 6) % 7 >= 5) {
            v29825 = ' class="ui-datepicker-week-end"';
          } else {
            v29825 = "";
          }
          R$$1 = R$$1 + ("<th" + v29825 + ">" + '<span title="' + A$$3[T$$3] + '">' + C$$2[T$$3] + "</span></th>");
          S$$1++;
          v3630 = S$$1 < 7;
        }
        Q$$1 = Q$$1 + (R$$1 + "</tr></thead><tbody>");
        var U$$1 = JAM.call(this._getDaysInMonth, this, [o$$22, n$$92], JAM.policy.p3);
        var v10306 = o$$22 == a$$613.selectedYear;
        if (v10306) {
          v10306 = n$$92 == a$$613.selectedMonth;
        }
        var v3631 = v10306;
        if (v3631) {
          var v31001 = JAM.call(Math.min, Math, [a$$613.selectedDay, U$$1], JAM.policy.p3);
          a$$613.selectedDay = v31001;
        }
        var V$$1 = (JAM.call(this._getFirstDayOfMonth, this, [o$$22, n$$92], JAM.policy.p3) - y$$54 + 7) % 7;
        var W$$1 = JAM.call(Math.ceil, Math, [(V$$1 + U$$1) / 7], JAM.policy.p3);
        var v3634;
        if (j$$99) {
          var v10310;
          if (this.maxRows > W$$1) {
            v10310 = this.maxRows;
          } else {
            v10310 = W$$1;
          }
          v3634 = v10310;
        } else {
          v3634 = W$$1;
        }
        var X$$1 = v3634;
        this.maxRows = X$$1;
        var Y$$1 = JAM.call(this._daylightSavingAdjust, this, [new Date(o$$22, n$$92, 1 - V$$1)], JAM.policy.p3);
        var Z$$1 = 0;
        var v3641 = Z$$1 < X$$1;
        for (;v3641;) {
          Q$$1 = Q$$1 + "<tr>";
          var v3636;
          if (z$$6) {
            v3636 = '<td class="ui-datepicker-week-col">' + JAM.call(JAM.call(this._get, this, [a$$613, "calculateWeek"], JAM.policy.p3), null, [Y$$1], JAM.policy.p3) + "</td>";
          } else {
            v3636 = "";
          }
          var _$$2 = v3636;
          S$$1 = 0;
          var v3640 = S$$1 < 7;
          for (;v3640;) {
            var v3637;
            if (F$$2) {
              var v15998;
              if (a$$613.input) {
                v15998 = a$$613.input[0];
              } else {
                v15998 = null;
              }
              v3637 = JAM.call(F$$2.apply, F$$2, [v15998, [Y$$1]], JAM.policy.p3);
            } else {
              v3637 = [!0, ""];
            }
            var ba$$1 = v3637;
            var bb$$1 = JAM.call(Y$$1.getMonth, Y$$1, [], JAM.policy.p3) != n$$92;
            var v21690 = bb$$1;
            if (v21690) {
              v21690 = !H$$2;
            }
            var v15999 = v21690;
            if (!v15999) {
              v15999 = !ba$$1[0];
            }
            var v10316 = v15999;
            if (!v10316) {
              var v16000 = l$$75;
              if (v16000) {
                v16000 = Y$$1 < l$$75;
              }
              v10316 = v16000;
            }
            var v3639 = v10316;
            if (!v3639) {
              var v10317 = m$$46;
              if (v10317) {
                v10317 = Y$$1 > m$$46;
              }
              v3639 = v10317;
            }
            var bc$$1 = v3639;
            var v30716;
            if ((S$$1 + y$$54 + 6) % 7 >= 5) {
              v30716 = " ui-datepicker-week-end";
            } else {
              v30716 = "";
            }
            var v30579 = '<td class="' + v30716;
            var v30661;
            if (bb$$1) {
              v30661 = " ui-datepicker-other-month";
            } else {
              v30661 = "";
            }
            var v30443 = v30579 + v30661;
            var v30581;
            var v30791 = JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(O$$1.getTime, O$$1, [], JAM.policy.p3);
            if (v30791) {
              v30791 = n$$92 == a$$613.selectedMonth;
            }
            var v30759 = v30791;
            if (v30759) {
              v30759 = a$$613._keyEvent;
            }
            var v30717 = v30759;
            if (!v30717) {
              var v30760 = JAM.call(J$$2.getTime, J$$2, [], JAM.policy.p3) == JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3);
              if (v30760) {
                v30760 = JAM.call(J$$2.getTime, J$$2, [], JAM.policy.p3) == JAM.call(O$$1.getTime, O$$1, [], JAM.policy.p3);
              }
              v30717 = v30760;
            }
            if (v30717) {
              v30581 = " " + this._dayOverClass;
            } else {
              v30581 = "";
            }
            var v30303 = v30443 + v30581;
            var v30445;
            if (bc$$1) {
              v30445 = " " + this._unselectableClass + " ui-state-disabled";
            } else {
              v30445 = "";
            }
            var v30088 = v30303 + v30445;
            var v30305;
            var v30583 = bb$$1;
            if (v30583) {
              v30583 = !G$$2;
            }
            if (v30583) {
              v30305 = "";
            } else {
              var v30584 = " " + ba$$1[1];
              var v30666;
              if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(k$$68.getTime, k$$68, [], JAM.policy.p3)) {
                v30666 = " " + this._currentClass;
              } else {
                v30666 = "";
              }
              var v30446 = v30584 + v30666;
              var v30586;
              if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(b$$579.getTime, b$$579, [], JAM.policy.p3)) {
                v30586 = " ui-datepicker-today";
              } else {
                v30586 = "";
              }
              v30305 = v30446 + v30586;
            }
            var v29464 = v30088 + v30305 + '"';
            var v29827;
            var v30449 = !bb$$1;
            if (!v30449) {
              v30449 = G$$2;
            }
            var v30306 = v30449;
            if (v30306) {
              v30306 = ba$$1[2];
            }
            if (v30306) {
              v29827 = ' title="' + ba$$1[2] + '"';
            } else {
              v29827 = "";
            }
            var v28860 = v29464 + v29827;
            var v29466;
            if (bc$$1) {
              v29466 = "";
            } else {
              v29466 = ' data-handler="selectDay" data-event="click" data-month="' + JAM.call(Y$$1.getMonth, Y$$1, [], JAM.policy.p3) + '" data-year="' + JAM.call(Y$$1.getFullYear, Y$$1, [], JAM.policy.p3) + '"';
            }
            var v26561 = v28860 + v29466 + ">";
            var v27956;
            var v29467 = bb$$1;
            if (v29467) {
              v29467 = !G$$2;
            }
            if (v29467) {
              v27956 = "&#xa0;";
            } else {
              var v28862;
              if (bc$$1) {
                v28862 = '<span class="ui-state-default">' + JAM.call(Y$$1.getDate, Y$$1, [], JAM.policy.p3) + "</span>";
              } else {
                var v30668;
                if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(b$$579.getTime, b$$579, [], JAM.policy.p3)) {
                  v30668 = " ui-state-highlight";
                } else {
                  v30668 = "";
                }
                var v30451 = '<a class="ui-state-default' + v30668;
                var v30589;
                if (JAM.call(Y$$1.getTime, Y$$1, [], JAM.policy.p3) == JAM.call(k$$68.getTime, k$$68, [], JAM.policy.p3)) {
                  v30589 = " ui-state-active";
                } else {
                  v30589 = "";
                }
                var v30309 = v30451 + v30589;
                var v30453;
                if (bb$$1) {
                  v30453 = " ui-priority-secondary";
                } else {
                  v30453 = "";
                }
                v28862 = v30309 + v30453 + '" href="#">' + JAM.call(Y$$1.getDate, Y$$1, [], JAM.policy.p3) + "</a>";
              }
              v27956 = v28862;
            }
            _$$2 = _$$2 + (v26561 + v27956 + "</td>");
            JAM.call(Y$$1.setDate, Y$$1, [JAM.call(Y$$1.getDate, Y$$1, [], JAM.policy.p3) + 1], JAM.policy.p3);
            Y$$1 = JAM.call(this._daylightSavingAdjust, this, [Y$$1], JAM.policy.p3);
            S$$1++;
            v3640 = S$$1 < 7;
          }
          Q$$1 = Q$$1 + (_$$2 + "</tr>");
          Z$$1++;
          v3641 = Z$$1 < X$$1;
        }
        n$$92++;
        var v21695 = n$$92 > 11;
        if (v21695) {
          n$$92 = 0;
          o$$22++;
        }
        var v26563;
        if (j$$99) {
          var v28864;
          var v29832 = g$$172[0] > 0;
          if (v29832) {
            v29832 = N$$1 == g$$172[1] - 1;
          }
          if (v29832) {
            v28864 = '<div class="ui-datepicker-row-break"></div>';
          } else {
            v28864 = "";
          }
          v26563 = "</div>" + v28864;
        } else {
          v26563 = "";
        }
        Q$$1 = Q$$1 + ("</tbody></table>" + v26563);
        M$$1 = M$$1 + Q$$1;
        N$$1++;
        v3642 = N$$1 < g$$172[1];
      }
      K$$1 = K$$1 + M$$1;
      L$$1++;
      v3643 = L$$1 < g$$172[0];
    }
    var v26564;
    var v29471 = $$$3.browser.msie;
    if (v29471) {
      v29471 = parseInt($$$3.browser.version, 10) < 7;
    }
    var v28865 = v29471;
    if (v28865) {
      v28865 = !a$$613.inline;
    }
    if (v28865) {
      v26564 = '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>';
    } else {
      v26564 = "";
    }
    K$$1 = K$$1 + (x$$73 + v26564);
    a$$613._keyEvent = !1;
    return K$$1;
  }
  function v1658(a$$611) {
    function v1657() {
      function v1656() {
        var v10322 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v10322._selectMonthYear, v10322, [c$$471, this, "Y"], JAM.policy.p3);
        return !1;
      }
      function v1655() {
        var v10323 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v10323._selectMonthYear, v10323, [c$$471, this, "M"], JAM.policy.p3);
        return !1;
      }
      function v1654() {
        var v10324 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v10324._selectDay, v10324, [c$$471, +JAM.call(this.getAttribute, this, ["data-month"], JAM.policy.p3), +JAM.call(this.getAttribute, this, ["data-year"], JAM.policy.p3), this], JAM.policy.p3);
        return !1;
      }
      function v1653() {
        var v3644 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3644._gotoToday, v3644, [c$$471], JAM.policy.p3);
        return;
      }
      function v1652() {
        var v3645 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3645._hideDatepicker, v3645, [], JAM.policy.p3);
        return;
      }
      function v1651() {
        var v3646 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3646._adjustDate, v3646, [c$$471, +b$$578, "M"], JAM.policy.p3);
        return;
      }
      function v1650() {
        var v3648 = window["DP_jQuery_" + dpuuid].datepicker;
        JAM.call(v3648._adjustDate, v3648, [c$$471, -b$$578, "M"], JAM.policy.p3);
        return;
      }
      var a$$612 = {prev:v1650, next:v1651, hide:v1652, today:v1653, selectDay:v1654, selectMonth:v1655, selectYear:v1656};
      var v3650 = JAM.call($$$3, null, [this], JAM.policy.p3);
      JAM.call(v3650.bind, v3650, [JAM.call(this.getAttribute, this, ["data-event"], JAM.policy.p3), a$$612[JAM.call(this.getAttribute, this, ["data-handler"], JAM.policy.p3)]], JAM.policy.p3);
      return;
    }
    var b$$578 = JAM.call(this._get, this, [a$$611, "stepMonths"], JAM.policy.p3);
    var v10333 = a$$611.id;
    var c$$471 = "#" + JAM.call(v10333.replace, v10333, [/\\\\/g, "\\"], JAM.policy.p3);
    var v10334 = a$$611.dpDiv;
    var v3654 = JAM.call(v10334.find, v10334, ["[data-handler]"], JAM.policy.p3);
    JAM.call(v3654.map, v3654, [v1657], JAM.policy.p3);
    return;
  }
  function v1649(a$$610) {
    var v3655;
    var v16012 = !a$$610.currentYear;
    if (!v16012) {
      var v21702 = a$$610.input;
      if (v21702) {
        var v26565 = a$$610.input;
        v21702 = JAM.call(v26565.val, v26565, [], JAM.policy.p3) == "";
      }
      v16012 = v21702;
    }
    if (v16012) {
      v3655 = null;
    } else {
      v3655 = JAM.call(this._daylightSavingAdjust, this, [new Date(a$$610.currentYear, a$$610.currentMonth, a$$610.currentDay)], JAM.policy.p3);
    }
    var b$$577 = v3655;
    return b$$577;
  }
  function v1648(a$$609, b$$576, c$$470) {
    var d$$356 = !b$$576;
    var e$$308 = a$$609.selectedMonth;
    var f$$152 = a$$609.selectedYear;
    var g$$171 = JAM.call(this._restrictMinMax, this, [a$$609, JAM.call(this._determineDate, this, [a$$609, b$$576, new Date], JAM.policy.p3)], JAM.policy.p3);
    var v31002 = JAM.call(g$$171.getDate, g$$171, [], JAM.policy.p3);
    a$$609.selectedDay = a$$609.currentDay = v31002;
    var v31003 = JAM.call(g$$171.getMonth, g$$171, [], JAM.policy.p3);
    a$$609.drawMonth = a$$609.selectedMonth = a$$609.currentMonth = v31003;
    var v31004 = JAM.call(g$$171.getFullYear, g$$171, [], JAM.policy.p3);
    a$$609.drawYear = a$$609.selectedYear = a$$609.currentYear = v31004;
    var v26566 = e$$308 != a$$609.selectedMonth;
    if (!v26566) {
      v26566 = f$$152 != a$$609.selectedYear;
    }
    var v24595 = v26566;
    if (v24595) {
      v24595 = !c$$470;
    }
    var v21704 = v24595;
    if (v21704) {
      JAM.call(this._notifyChange, this, [a$$609], JAM.policy.p3);
    }
    JAM.call(this._adjustInstDate, this, [a$$609], JAM.policy.p3);
    var v10338 = a$$609.input;
    if (v10338) {
      var v16016 = a$$609.input;
      var v21705;
      if (d$$356) {
        v21705 = "";
      } else {
        v21705 = JAM.call(this._formatDate, this, [a$$609], JAM.policy.p3);
      }
      JAM.call(v16016.val, v16016, [v21705], JAM.policy.p3);
    }
    return;
  }
  function v1647(a$$608) {
    var v3657;
    if (a$$608) {
      var v21706;
      if (JAM.call(a$$608.getHours, a$$608, [], JAM.policy.p3) > 12) {
        v21706 = JAM.call(a$$608.getHours, a$$608, [], JAM.policy.p3) + 2;
      } else {
        v21706 = 0;
      }
      JAM.call(a$$608.setHours, a$$608, [v21706], JAM.policy.p3);
      v3657 = a$$608;
    } else {
      v3657 = null;
    }
    return v3657;
  }
  function v1646(a$$606, b$$573, c$$468) {
    function e$$306(b$$575) {
      try {
        var v3658 = $$$3.datepicker;
        var v10339 = $$$3.datepicker;
        var v3659 = JAM.call(v10339._get, v10339, [a$$606, "dateFormat"], JAM.policy.p3);
        var v10340 = $$$3.datepicker;
        return JAM.call(v3658.parseDate, v3658, [v3659, b$$575, JAM.call(v10340._getFormatConfig, v10340, [a$$606], JAM.policy.p3)], JAM.policy.p3);
      } catch (c$$469) {
      }
      var v10341;
      var v21707 = JAM.call(b$$575.toLowerCase, b$$575, [], JAM.policy.p3);
      if (JAM.call(v21707.match, v21707, [/^c/], JAM.policy.p3)) {
        var v16019 = $$$3.datepicker;
        v10341 = JAM.call(v16019._getDate, v16019, [a$$606], JAM.policy.p3);
      } else {
        v10341 = null;
      }
      var v3661 = v10341;
      if (!v3661) {
        v3661 = new Date;
      }
      var d$$355 = v3661;
      var e$$307 = JAM.call(d$$355.getFullYear, d$$355, [], JAM.policy.p3);
      var f$$151 = JAM.call(d$$355.getMonth, d$$355, [], JAM.policy.p3);
      var g$$170 = JAM.call(d$$355.getDate, d$$355, [], JAM.policy.p3);
      var h$$140 = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;
      var i$$193 = JAM.call(h$$140.exec, h$$140, [b$$575], JAM.policy.p3);
      for (;i$$193;) {
        var v10343 = i$$193[2];
        if (!v10343) {
          v10343 = "d";
        }
        switch(v10343) {
          case "d":
          ;
          case "D":
            g$$170 = g$$170 + parseInt(i$$193[1], 10);
            break;
          case "w":
          ;
          case "W":
            g$$170 = g$$170 + parseInt(i$$193[1], 10) * 7;
            break;
          case "m":
          ;
          case "M":
            f$$151 = f$$151 + parseInt(i$$193[1], 10);
            var v16025 = $$$3.datepicker;
            g$$170 = JAM.call(Math.min, Math, [g$$170, JAM.call(v16025._getDaysInMonth, v16025, [e$$307, f$$151], JAM.policy.p3)], JAM.policy.p3);
            break;
          case "y":
          ;
          case "Y":
            e$$307 = e$$307 + parseInt(i$$193[1], 10);
            var v16027 = $$$3.datepicker;
            g$$170 = JAM.call(Math.min, Math, [g$$170, JAM.call(v16027._getDaysInMonth, v16027, [e$$307, f$$151], JAM.policy.p3)], JAM.policy.p3);
        }
        i$$193 = JAM.call(h$$140.exec, h$$140, [b$$575], JAM.policy.p3);
      }
      return new Date(e$$307, f$$151, g$$170);
    }
    function d$$354(a$$607) {
      var b$$574 = new Date;
      JAM.call(b$$574.setDate, b$$574, [JAM.call(b$$574.getDate, b$$574, [], JAM.policy.p3) + a$$607], JAM.policy.p3);
      return b$$574;
    }
    var v3663;
    var v16029 = b$$573 == null;
    if (!v16029) {
      v16029 = b$$573 === "";
    }
    if (v16029) {
      v3663 = c$$468;
    } else {
      var v10349;
      if (typeof b$$573 == "string") {
        v10349 = e$$306(b$$573);
      } else {
        var v16030;
        if (typeof b$$573 == "number") {
          var v21713;
          if (isNaN(b$$573)) {
            v21713 = c$$468;
          } else {
            v21713 = d$$354(b$$573);
          }
          v16030 = v21713;
        } else {
          v16030 = new Date(JAM.call(b$$573.getTime, b$$573, [], JAM.policy.p3));
        }
        v10349 = v16030;
      }
      v3663 = v10349;
    }
    var f$$150 = v3663;
    var v16032;
    var v24600 = f$$150;
    if (v24600) {
      v24600 = JAM.call(f$$150.toString, f$$150, [], JAM.policy.p3) == "Invalid Date";
    }
    if (v24600) {
      v16032 = c$$468;
    } else {
      v16032 = f$$150;
    }
    f$$150 = v16032;
    if (f$$150) {
      JAM.call(f$$150.setHours, f$$150, [0], JAM.policy.p3);
      JAM.call(f$$150.setMinutes, f$$150, [0], JAM.policy.p3);
      JAM.call(f$$150.setSeconds, f$$150, [0], JAM.policy.p3);
      JAM.call(f$$150.setMilliseconds, f$$150, [0], JAM.policy.p3);
    }
    return JAM.call(this._daylightSavingAdjust, this, [f$$150], JAM.policy.p3);
  }
  function v1645(a$$605) {
    return JAM.call(this._restrictMinMax, this, [a$$605, JAM.call(this._determineDate, this, [a$$605, JAM.call(this._get, this, [a$$605, "defaultDate"], JAM.policy.p3), new Date], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1644(a$$604, b$$572) {
    var v16033 = a$$604.input;
    if (JAM.call(v16033.val, v16033, [], JAM.policy.p3) == a$$604.lastVal) {
      return;
    }
    var c$$467 = JAM.call(this._get, this, [a$$604, "dateFormat"], JAM.policy.p3);
    var v3666;
    if (a$$604.input) {
      var v10355 = a$$604.input;
      v3666 = JAM.call(v10355.val, v10355, [], JAM.policy.p3);
    } else {
      v3666 = null;
    }
    var d$$353 = a$$604.lastVal = v3666;
    var e$$305;
    var f$$149;
    e$$305 = f$$149 = JAM.call(this._getDefaultDate, this, [a$$604], JAM.policy.p3);
    var g$$169 = JAM.call(this._getFormatConfig, this, [a$$604], JAM.policy.p3);
    try {
      var v3667 = JAM.call(this.parseDate, this, [c$$467, d$$353, g$$169], JAM.policy.p3);
      if (!v3667) {
        v3667 = f$$149;
      }
      e$$305 = v3667;
    } catch (h$$139) {
      JAM.call(this.log, this, [h$$139], JAM.policy.p3);
      var v10358;
      if (b$$572) {
        v10358 = "";
      } else {
        v10358 = d$$353;
      }
      d$$353 = v10358;
    }
    var v31005 = JAM.call(e$$305.getDate, e$$305, [], JAM.policy.p3);
    a$$604.selectedDay = v31005;
    var v31006 = JAM.call(e$$305.getMonth, e$$305, [], JAM.policy.p3);
    a$$604.drawMonth = a$$604.selectedMonth = v31006;
    var v31007 = JAM.call(e$$305.getFullYear, e$$305, [], JAM.policy.p3);
    a$$604.drawYear = a$$604.selectedYear = v31007;
    var v24601;
    if (d$$353) {
      v24601 = JAM.call(e$$305.getDate, e$$305, [], JAM.policy.p3);
    } else {
      v24601 = 0;
    }
    a$$604.currentDay = v24601;
    var v21717;
    if (d$$353) {
      v21717 = JAM.call(e$$305.getMonth, e$$305, [], JAM.policy.p3);
    } else {
      v21717 = 0;
    }
    a$$604.currentMonth = v21717;
    var v16034;
    if (d$$353) {
      v16034 = JAM.call(e$$305.getFullYear, e$$305, [], JAM.policy.p3);
    } else {
      v16034 = 0;
    }
    a$$604.currentYear = v16034;
    JAM.call(this._adjustInstDate, this, [a$$604], JAM.policy.p3);
    return;
  }
  function v1643(a$$603, b$$571) {
    var v3668;
    if (a$$603.settings[b$$571] !== undefined$$1) {
      v3668 = a$$603.settings[b$$571];
    } else {
      v3668 = this._defaults[b$$571];
    }
    return v3668;
  }
  function v1642(a$$602) {
    function d$$352() {
      var b$$570 = "'";
      var v3669 = e$$304 + 1 < a$$602.length;
      if (v3669) {
        v3669 = JAM.call(a$$602.charAt, a$$602, [e$$304 + 1], JAM.policy.p3) == b$$570;
      }
      var c$$466 = v3669;
      if (c$$466) {
        e$$304++;
      }
      return c$$466;
    }
    var b$$569 = "";
    var c$$465 = !1;
    var e$$304 = 0;
    var v3673 = e$$304 < a$$602.length;
    for (;v3673;) {
      if (c$$465) {
        var v3670;
        var v16037 = JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3) == "'";
        if (v16037) {
          v16037 = !d$$352();
        }
        if (v16037) {
          v3670 = c$$465 = !1;
        } else {
          v3670 = b$$569 = b$$569 + JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3);
        }
        v3670;
      } else {
        switch(JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3)) {
          case "d":
          ;
          case "m":
          ;
          case "y":
          ;
          case "@":
            b$$569 = b$$569 + "0123456789";
            break;
          case "D":
          ;
          case "M":
            return null;
          case "'":
            var v3671;
            if (d$$352()) {
              v3671 = b$$569 = b$$569 + "'";
            } else {
              v3671 = c$$465 = !0;
            }
            v3671;
            break;
          default:
            b$$569 = b$$569 + JAM.call(a$$602.charAt, a$$602, [e$$304], JAM.policy.p3);
        }
      }
      e$$304++;
      v3673 = e$$304 < a$$602.length;
    }
    return b$$569;
  }
  function v1641(a$$599, b$$565, c$$461) {
    function j$$98(a$$601, b$$568, c$$464, d$$351) {
      var v3674;
      if (h$$138(a$$601)) {
        v3674 = d$$351[b$$568];
      } else {
        v3674 = c$$464[b$$568];
      }
      return v3674;
    }
    function i$$192(a$$600, b$$567, c$$463) {
      var d$$350 = "" + b$$567;
      if (h$$138(a$$600)) {
        var v3675 = d$$350.length < c$$463;
        for (;v3675;) {
          d$$350 = "0" + d$$350;
          v3675 = d$$350.length < c$$463;
        }
      }
      return d$$350;
    }
    function h$$138(b$$566) {
      var v3677 = m$$45 + 1 < a$$599.length;
      if (v3677) {
        v3677 = JAM.call(a$$599.charAt, a$$599, [m$$45 + 1], JAM.policy.p3) == b$$566;
      }
      var c$$462 = v3677;
      if (c$$462) {
        m$$45++;
      }
      return c$$462;
    }
    if (!b$$565) {
      return "";
    }
    var v10377;
    if (c$$461) {
      v10377 = c$$461.dayNamesShort;
    } else {
      v10377 = null;
    }
    var v3679 = v10377;
    if (!v3679) {
      v3679 = this._defaults.dayNamesShort;
    }
    var d$$349 = v3679;
    var v10380;
    if (c$$461) {
      v10380 = c$$461.dayNames;
    } else {
      v10380 = null;
    }
    var v3680 = v10380;
    if (!v3680) {
      v3680 = this._defaults.dayNames;
    }
    var e$$303 = v3680;
    var v10383;
    if (c$$461) {
      v10383 = c$$461.monthNamesShort;
    } else {
      v10383 = null;
    }
    var v3681 = v10383;
    if (!v3681) {
      v3681 = this._defaults.monthNamesShort;
    }
    var f$$148 = v3681;
    var v10386;
    if (c$$461) {
      v10386 = c$$461.monthNames;
    } else {
      v10386 = null;
    }
    var v3682 = v10386;
    if (!v3682) {
      v3682 = this._defaults.monthNames;
    }
    var g$$168 = v3682;
    var k$$67 = "";
    var l$$74 = !1;
    if (b$$565) {
      var m$$45 = 0;
      var v3686 = m$$45 < a$$599.length;
      for (;v3686;) {
        if (l$$74) {
          var v3683;
          var v16041 = JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3) == "'";
          if (v16041) {
            v16041 = !h$$138("'");
          }
          if (v16041) {
            v3683 = l$$74 = !1;
          } else {
            v3683 = k$$67 = k$$67 + JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3);
          }
          v3683;
        } else {
          switch(JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3)) {
            case "d":
              k$$67 = k$$67 + i$$192("d", JAM.call(b$$565.getDate, b$$565, [], JAM.policy.p3), 2);
              break;
            case "D":
              k$$67 = k$$67 + j$$98("D", JAM.call(b$$565.getDay, b$$565, [], JAM.policy.p3), d$$349, e$$303);
              break;
            case "o":
              var v10395 = k$$67;
              var v27962 = new Date(JAM.call(b$$565.getFullYear, b$$565, [], JAM.policy.p3), JAM.call(b$$565.getMonth, b$$565, [], JAM.policy.p3), JAM.call(b$$565.getDate, b$$565, [], JAM.policy.p3));
              var v26569 = JAM.call(v27962.getTime, v27962, [], JAM.policy.p3);
              var v27963 = new Date(JAM.call(b$$565.getFullYear, b$$565, [], JAM.policy.p3), 0, 0);
              k$$67 = v10395 + i$$192("o", JAM.call(Math.round, Math, [(v26569 - JAM.call(v27963.getTime, v27963, [], JAM.policy.p3)) / 864E5], JAM.policy.p3), 3);
              break;
            case "m":
              k$$67 = k$$67 + i$$192("m", JAM.call(b$$565.getMonth, b$$565, [], JAM.policy.p3) + 1, 2);
              break;
            case "M":
              k$$67 = k$$67 + j$$98("M", JAM.call(b$$565.getMonth, b$$565, [], JAM.policy.p3), f$$148, g$$168);
              break;
            case "y":
              var v10401 = k$$67;
              var v16049;
              if (h$$138("y")) {
                v16049 = JAM.call(b$$565.getFullYear, b$$565, [], JAM.policy.p3);
              } else {
                var v24603;
                if (JAM.call(b$$565.getYear, b$$565, [], JAM.policy.p3) % 100 < 10) {
                  v24603 = "0";
                } else {
                  v24603 = "";
                }
                v16049 = v24603 + JAM.call(b$$565.getYear, b$$565, [], JAM.policy.p3) % 100;
              }
              k$$67 = v10401 + v16049;
              break;
            case "@":
              k$$67 = k$$67 + JAM.call(b$$565.getTime, b$$565, [], JAM.policy.p3);
              break;
            case "!":
              k$$67 = k$$67 + (JAM.call(b$$565.getTime, b$$565, [], JAM.policy.p3) * 1E4 + this._ticksTo1970);
              break;
            case "'":
              var v3684;
              if (h$$138("'")) {
                v3684 = k$$67 = k$$67 + "'";
              } else {
                v3684 = l$$74 = !0;
              }
              v3684;
              break;
            default:
              k$$67 = k$$67 + JAM.call(a$$599.charAt, a$$599, [m$$45], JAM.policy.p3);
          }
        }
        m$$45++;
        v3686 = m$$45 < a$$599.length;
      }
    }
    return k$$67;
  }
  function v1640(a$$593, b$$561, c$$456) {
    function q$$17() {
      if (JAM.call(b$$561.charAt, b$$561, [r$$18], JAM.policy.p3) != JAM.call(a$$593.charAt, a$$593, [s$$27], JAM.policy.p3)) {
        throw "Unexpected literal at position " + r$$18;
      }
      r$$18++;
      return;
    }
    function p$$46(a$$595, c$$459, d$$347) {
      function v1639(a$$598, c$$460) {
        var d$$348 = c$$460[1];
        var v16052 = JAM.call(b$$561.substr, b$$561, [r$$18, d$$348.length], JAM.policy.p3);
        if (JAM.call(v16052.toLowerCase, v16052, [], JAM.policy.p3) == JAM.call(d$$348.toLowerCase, d$$348, [], JAM.policy.p3)) {
          f$$147 = c$$460[0];
          r$$18 = r$$18 + d$$348.length;
          return !1;
        }
        return;
      }
      function v1638(a$$597, b$$564) {
        return -(a$$597[1].length - b$$564[1].length);
      }
      function v1637(a$$596, b$$563) {
        return [[b$$563, a$$596]];
      }
      var v16055;
      if (n$$91(a$$595)) {
        v16055 = d$$347;
      } else {
        v16055 = c$$459;
      }
      var v3691 = JAM.call($$$3.map, $$$3, [v16055, v1637], JAM.policy.p3);
      var e$$302 = JAM.call(v3691.sort, v3691, [v1638], JAM.policy.p3);
      var f$$147 = -1;
      JAM.call($$$3.each, $$$3, [e$$302, v1639], JAM.policy.p3);
      if (f$$147 != -1) {
        return f$$147 + 1;
      }
      throw "Unknown name at position " + r$$18;
    }
    function o$$21(a$$594) {
      var c$$458 = n$$91(a$$594);
      var v3693;
      if (a$$594 == "@") {
        v3693 = 14;
      } else {
        var v10418;
        if (a$$594 == "!") {
          v10418 = 20;
        } else {
          var v16056;
          var v24605 = a$$594 == "y";
          if (v24605) {
            v24605 = c$$458;
          }
          if (v24605) {
            v16056 = 4;
          } else {
            var v21732;
            if (a$$594 == "o") {
              v21732 = 3;
            } else {
              v21732 = 2;
            }
            v16056 = v21732;
          }
          v10418 = v16056;
        }
        v3693 = v10418;
      }
      var d$$346 = v3693;
      var e$$301 = new RegExp("^\\d{1," + d$$346 + "}");
      var v3695 = JAM.call(b$$561.substring, b$$561, [r$$18], JAM.policy.p3);
      var f$$146 = JAM.call(v3695.match, v3695, [e$$301], JAM.policy.p3);
      if (!f$$146) {
        throw "Missing number at position " + r$$18;
      }
      r$$18 = r$$18 + f$$146[0].length;
      return parseInt(f$$146[0], 10);
    }
    function n$$91(b$$562) {
      var v3697 = s$$27 + 1 < a$$593.length;
      if (v3697) {
        v3697 = JAM.call(a$$593.charAt, a$$593, [s$$27 + 1], JAM.policy.p3) == b$$562;
      }
      var c$$457 = v3697;
      if (c$$457) {
        s$$27++;
      }
      return c$$457;
    }
    var v10425 = a$$593 == null;
    if (!v10425) {
      v10425 = b$$561 == null;
    }
    if (v10425) {
      throw "Invalid arguments";
    }
    var v3699;
    if (typeof b$$561 == "object") {
      v3699 = JAM.call(b$$561.toString, b$$561, [], JAM.policy.p3);
    } else {
      v3699 = b$$561 + "";
    }
    b$$561 = v3699;
    if (b$$561 == "") {
      return null;
    }
    var v10427;
    if (c$$456) {
      v10427 = c$$456.shortYearCutoff;
    } else {
      v10427 = null;
    }
    var v3701 = v10427;
    if (!v3701) {
      v3701 = this._defaults.shortYearCutoff;
    }
    var d$$345 = v3701;
    var v3702;
    if (typeof d$$345 != "string") {
      v3702 = d$$345;
    } else {
      var v21735 = new Date;
      v3702 = JAM.call(v21735.getFullYear, v21735, [], JAM.policy.p3) % 100 + parseInt(d$$345, 10);
    }
    d$$345 = v3702;
    var v10433;
    if (c$$456) {
      v10433 = c$$456.dayNamesShort;
    } else {
      v10433 = null;
    }
    var v3703 = v10433;
    if (!v3703) {
      v3703 = this._defaults.dayNamesShort;
    }
    var e$$300 = v3703;
    var v10436;
    if (c$$456) {
      v10436 = c$$456.dayNames;
    } else {
      v10436 = null;
    }
    var v3704 = v10436;
    if (!v3704) {
      v3704 = this._defaults.dayNames;
    }
    var f$$145 = v3704;
    var v10439;
    if (c$$456) {
      v10439 = c$$456.monthNamesShort;
    } else {
      v10439 = null;
    }
    var v3705 = v10439;
    if (!v3705) {
      v3705 = this._defaults.monthNamesShort;
    }
    var g$$167 = v3705;
    var v10442;
    if (c$$456) {
      v10442 = c$$456.monthNames;
    } else {
      v10442 = null;
    }
    var v3706 = v10442;
    if (!v3706) {
      v3706 = this._defaults.monthNames;
    }
    var h$$137 = v3706;
    var i$$191 = -1;
    var j$$97 = -1;
    var k$$66 = -1;
    var l$$73 = -1;
    var m$$44 = !1;
    var r$$18 = 0;
    var s$$27 = 0;
    var v3712 = s$$27 < a$$593.length;
    for (;v3712;) {
      if (m$$44) {
        var v3707;
        var v16064 = JAM.call(a$$593.charAt, a$$593, [s$$27], JAM.policy.p3) == "'";
        if (v16064) {
          v16064 = !n$$91("'");
        }
        if (v16064) {
          v3707 = m$$44 = !1;
        } else {
          v3707 = q$$17();
        }
        v3707;
      } else {
        switch(JAM.call(a$$593.charAt, a$$593, [s$$27], JAM.policy.p3)) {
          case "d":
            k$$66 = o$$21("d");
            break;
          case "D":
            p$$46("D", e$$300, f$$145);
            break;
          case "o":
            l$$73 = o$$21("o");
            break;
          case "m":
            j$$97 = o$$21("m");
            break;
          case "M":
            j$$97 = p$$46("M", g$$167, h$$137);
            break;
          case "y":
            i$$191 = o$$21("y");
            break;
          case "@":
            var t$$12 = new Date(o$$21("@"));
            i$$191 = JAM.call(t$$12.getFullYear, t$$12, [], JAM.policy.p3);
            j$$97 = JAM.call(t$$12.getMonth, t$$12, [], JAM.policy.p3) + 1;
            k$$66 = JAM.call(t$$12.getDate, t$$12, [], JAM.policy.p3);
            break;
          case "!":
            t$$12 = new Date((o$$21("!") - this._ticksTo1970) / 1E4);
            i$$191 = JAM.call(t$$12.getFullYear, t$$12, [], JAM.policy.p3);
            j$$97 = JAM.call(t$$12.getMonth, t$$12, [], JAM.policy.p3) + 1;
            k$$66 = JAM.call(t$$12.getDate, t$$12, [], JAM.policy.p3);
            break;
          case "'":
            var v3710;
            if (n$$91("'")) {
              v3710 = q$$17();
            } else {
              v3710 = m$$44 = !0;
            }
            v3710;
            break;
          default:
            q$$17();
        }
      }
      s$$27++;
      v3712 = s$$27 < a$$593.length;
    }
    if (r$$18 < b$$561.length) {
      throw "Extra/unparsed characters found in date: " + JAM.call(b$$561.substring, b$$561, [r$$18], JAM.policy.p3);
    }
    var v3715;
    if (i$$191 == -1) {
      var v10451 = new Date;
      v3715 = i$$191 = JAM.call(v10451.getFullYear, v10451, [], JAM.policy.p3);
    } else {
      var v10452 = i$$191 < 100;
      if (v10452) {
        var v21738 = i$$191;
        var v27965 = new Date;
        var v26572 = JAM.call(v27965.getFullYear, v27965, [], JAM.policy.p3);
        var v28871 = new Date;
        var v24607 = v26572 - JAM.call(v28871.getFullYear, v28871, [], JAM.policy.p3) % 100;
        var v26574;
        if (i$$191 <= d$$345) {
          v26574 = 0;
        } else {
          v26574 = -100;
        }
        v10452 = i$$191 = v21738 + (v24607 + v26574);
      }
      v3715 = v10452;
    }
    v3715;
    if (l$$73 > -1) {
      j$$97 = 1;
      k$$66 = l$$73;
      var v3718 = !0;
      do {
        var u$$10 = JAM.call(this._getDaysInMonth, this, [i$$191, j$$97 - 1], JAM.policy.p3);
        if (k$$66 <= u$$10) {
          break;
        }
        j$$97++;
        k$$66 = k$$66 - u$$10;
        v3718 = !0;
      } while (v3718);
    }
    t$$12 = JAM.call(this._daylightSavingAdjust, this, [new Date(i$$191, j$$97 - 1, k$$66)], JAM.policy.p3);
    var v16069 = JAM.call(t$$12.getFullYear, t$$12, [], JAM.policy.p3) != i$$191;
    if (!v16069) {
      v16069 = JAM.call(t$$12.getMonth, t$$12, [], JAM.policy.p3) + 1 != j$$97;
    }
    var v10455 = v16069;
    if (!v10455) {
      v10455 = JAM.call(t$$12.getDate, t$$12, [], JAM.policy.p3) != k$$66;
    }
    if (v10455) {
      throw "Invalid date";
    }
    return t$$12;
  }
  function v1636(a$$592) {
    var b$$560 = new Date(JAM.call(a$$592.getTime, a$$592, [], JAM.policy.p3));
    var v10456 = JAM.call(b$$560.getDate, b$$560, [], JAM.policy.p3) + 4;
    var v16073 = JAM.call(b$$560.getDay, b$$560, [], JAM.policy.p3);
    if (!v16073) {
      v16073 = 7;
    }
    JAM.call(b$$560.setDate, b$$560, [v10456 - v16073], JAM.policy.p3);
    var c$$455 = JAM.call(b$$560.getTime, b$$560, [], JAM.policy.p3);
    JAM.call(b$$560.setMonth, b$$560, [0], JAM.policy.p3);
    JAM.call(b$$560.setDate, b$$560, [1], JAM.policy.p3);
    return JAM.call(Math.floor, Math, [JAM.call(Math.round, Math, [(c$$455 - b$$560) / 864E5], JAM.policy.p3) / 7], JAM.policy.p3) + 1;
  }
  function v1635(a$$591) {
    var b$$559 = JAM.call(a$$591.getDay, a$$591, [], JAM.policy.p3);
    var v10459 = b$$559 > 0;
    if (v10459) {
      v10459 = b$$559 < 6;
    }
    return [v10459, ""];
  }
  function v1634(a$$590) {
    function v1633() {
      var v3725 = JAM.call($$$3, null, [this], JAM.policy.p3);
      JAM.call(v3725.val, v3725, [e$$299], JAM.policy.p3);
      return;
    }
    var b$$558 = JAM.call(this._get, this, [a$$590, "altField"], JAM.policy.p3);
    if (b$$558) {
      var v3726 = JAM.call(this._get, this, [a$$590, "altFormat"], JAM.policy.p3);
      if (!v3726) {
        v3726 = JAM.call(this._get, this, [a$$590, "dateFormat"], JAM.policy.p3);
      }
      var c$$454 = v3726;
      var d$$344 = JAM.call(this._getDate, this, [a$$590], JAM.policy.p3);
      var e$$299 = JAM.call(this.formatDate, this, [c$$454, d$$344, JAM.call(this._getFormatConfig, this, [a$$590], JAM.policy.p3)], JAM.policy.p3);
      var v3728 = JAM.call($$$3, null, [b$$558], JAM.policy.p3);
      JAM.call(v3728.each, v3728, [v1633], JAM.policy.p3);
    }
    return;
  }
  function v1632(a$$589, b$$557) {
    var c$$453 = JAM.call($$$3, null, [a$$589], JAM.policy.p3);
    var d$$343 = JAM.call(this._getInst, this, [c$$453[0]], JAM.policy.p3);
    var v16075;
    if (b$$557 != null) {
      v16075 = b$$557;
    } else {
      v16075 = JAM.call(this._formatDate, this, [d$$343], JAM.policy.p3);
    }
    b$$557 = v16075;
    var v16076 = d$$343.input;
    if (v16076) {
      var v21746 = d$$343.input;
      JAM.call(v21746.val, v21746, [b$$557], JAM.policy.p3);
    }
    JAM.call(this._updateAlternate, this, [d$$343], JAM.policy.p3);
    var e$$298 = JAM.call(this._get, this, [d$$343, "onSelect"], JAM.policy.p3);
    var v10461;
    if (e$$298) {
      var v21747;
      if (d$$343.input) {
        v21747 = d$$343.input[0];
      } else {
        v21747 = null;
      }
      v10461 = JAM.call(e$$298.apply, e$$298, [v21747, [b$$557, d$$343]], JAM.policy.p3);
    } else {
      var v16079 = d$$343.input;
      if (v16079) {
        var v21748 = d$$343.input;
        v16079 = JAM.call(v21748.trigger, v21748, ["change"], JAM.policy.p3);
      }
      v10461 = v16079;
    }
    v10461;
    var v10462;
    if (d$$343.inline) {
      v10462 = JAM.call(this._updateDatepicker, this, [d$$343], JAM.policy.p3);
    } else {
      JAM.call(this._hideDatepicker, this, [], JAM.policy.p3);
      this._lastInput = d$$343.input[0];
      var v24613 = typeof d$$343.input[0] != "object";
      if (v24613) {
        var v26578 = d$$343.input;
        JAM.call(v26578.focus, v26578, [], JAM.policy.p3);
      }
      v10462 = this._lastInput = null;
    }
    v10462;
    return;
  }
  function v1631(a$$588) {
    var b$$556 = JAM.call($$$3, null, [a$$588], JAM.policy.p3);
    var c$$452 = JAM.call(this._getInst, this, [b$$556[0]], JAM.policy.p3);
    JAM.call(this._selectDate, this, [b$$556, ""], JAM.policy.p3);
    return;
  }
  function v1630(a$$587, b$$555, c$$451, d$$342) {
    var e$$297 = JAM.call($$$3, null, [a$$587], JAM.policy.p3);
    var v16081 = JAM.call($$$3, null, [d$$342], JAM.policy.p3);
    var v10463 = JAM.call(v16081.hasClass, v16081, [this._unselectableClass], JAM.policy.p3);
    if (!v10463) {
      v10463 = JAM.call(this._isDisabledDatepicker, this, [e$$297[0]], JAM.policy.p3);
    }
    if (v10463) {
      return;
    }
    var f$$144 = JAM.call(this._getInst, this, [e$$297[0]], JAM.policy.p3);
    var v21749 = JAM.call($$$3, null, ["a", d$$342], JAM.policy.p3);
    var v31008 = JAM.call(v21749.html, v21749, [], JAM.policy.p3);
    f$$144.selectedDay = f$$144.currentDay = v31008;
    f$$144.selectedMonth = f$$144.currentMonth = b$$555;
    f$$144.selectedYear = f$$144.currentYear = c$$451;
    JAM.call(this._selectDate, this, [a$$587, JAM.call(this._formatDate, this, [f$$144, f$$144.currentDay, f$$144.currentMonth, f$$144.currentYear], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1629(a$$586, b$$554, c$$450) {
    var d$$341 = JAM.call($$$3, null, [a$$586], JAM.policy.p3);
    var e$$296 = JAM.call(this._getInst, this, [d$$341[0]], JAM.policy.p3);
    var v24614;
    if (c$$450 == "M") {
      v24614 = "Month";
    } else {
      v24614 = "Year";
    }
    var v16088 = "selected" + v24614;
    var v26580;
    if (c$$450 == "M") {
      v26580 = "Month";
    } else {
      v26580 = "Year";
    }
    var v21751 = "draw" + v26580;
    var v31009 = parseInt(b$$554.options[b$$554.selectedIndex].value, 10);
    introspect(JAM.policy.p2) {
      e$$296[v16088] = e$$296[v21751] = v31009;
    }
    JAM.call(this._notifyChange, this, [e$$296], JAM.policy.p3);
    JAM.call(this._adjustDate, this, [d$$341], JAM.policy.p3);
    return;
  }
  function v1628(a$$585) {
    var b$$553 = JAM.call($$$3, null, [a$$585], JAM.policy.p3);
    var c$$449 = JAM.call(this._getInst, this, [b$$553[0]], JAM.policy.p3);
    var v10465 = JAM.call(this._get, this, [c$$449, "gotoCurrent"], JAM.policy.p3);
    if (v10465) {
      v10465 = c$$449.currentDay;
    }
    if (v10465) {
      c$$449.selectedDay = c$$449.currentDay;
      c$$449.drawMonth = c$$449.selectedMonth = c$$449.currentMonth;
      c$$449.drawYear = c$$449.selectedYear = c$$449.currentYear;
    } else {
      var d$$340 = new Date;
      var v31010 = JAM.call(d$$340.getDate, d$$340, [], JAM.policy.p3);
      c$$449.selectedDay = v31010;
      var v31011 = JAM.call(d$$340.getMonth, d$$340, [], JAM.policy.p3);
      c$$449.drawMonth = c$$449.selectedMonth = v31011;
      var v31012 = JAM.call(d$$340.getFullYear, d$$340, [], JAM.policy.p3);
      c$$449.drawYear = c$$449.selectedYear = v31012;
    }
    JAM.call(this._notifyChange, this, [c$$449], JAM.policy.p3);
    JAM.call(this._adjustDate, this, [b$$553], JAM.policy.p3);
    return;
  }
  function v1627(a$$584, b$$552, c$$448) {
    var d$$339 = JAM.call($$$3, null, [a$$584], JAM.policy.p3);
    var e$$295 = JAM.call(this._getInst, this, [d$$339[0]], JAM.policy.p3);
    if (JAM.call(this._isDisabledDatepicker, this, [d$$339[0]], JAM.policy.p3)) {
      return;
    }
    var v21752;
    if (c$$448 == "M") {
      v21752 = JAM.call(this._get, this, [e$$295, "showCurrentAtPos"], JAM.policy.p3);
    } else {
      v21752 = 0;
    }
    JAM.call(this._adjustInstDate, this, [e$$295, b$$552 + v21752, c$$448], JAM.policy.p3);
    JAM.call(this._updateDatepicker, this, [e$$295], JAM.policy.p3);
    return;
  }
  function v1626(a$$583) {
    if (!$$$3.datepicker._curInst) {
      return;
    }
    var b$$551 = JAM.call($$$3, null, [a$$583.target], JAM.policy.p3);
    var v3740 = $$$3.datepicker;
    var c$$447 = JAM.call(v3740._getInst, v3740, [b$$551[0]], JAM.policy.p3);
    var v27972 = b$$551[0].id != $$$3.datepicker._mainDivId;
    if (v27972) {
      v27972 = JAM.call(b$$551.parents, b$$551, ["#" + $$$3.datepicker._mainDivId], JAM.policy.p3).length == 0;
    }
    var v26582 = v27972;
    if (v26582) {
      v26582 = !JAM.call(b$$551.hasClass, b$$551, [$$$3.datepicker.markerClassName], JAM.policy.p3);
    }
    var v24618 = v26582;
    if (v24618) {
      v24618 = !JAM.call(b$$551.closest, b$$551, ["." + $$$3.datepicker._triggerClass], JAM.policy.p3).length;
    }
    var v21753 = v24618;
    if (v21753) {
      v21753 = $$$3.datepicker._datepickerShowing;
    }
    var v16091 = v21753;
    if (v16091) {
      var v21754 = !$$$3.datepicker._inDialog;
      if (!v21754) {
        v21754 = !$$$3.blockUI;
      }
      v16091 = v21754;
    }
    var v10469 = v16091;
    if (!v10469) {
      var v16092 = JAM.call(b$$551.hasClass, b$$551, [$$$3.datepicker.markerClassName], JAM.policy.p3);
      if (v16092) {
        v16092 = $$$3.datepicker._curInst != c$$447;
      }
      v10469 = v16092;
    }
    var v3742 = v10469;
    if (v3742) {
      var v10470 = $$$3.datepicker;
      JAM.call(v10470._hideDatepicker, v10470, [], JAM.policy.p3);
    }
    return;
  }
  function v1625(a$$582) {
    var v10471 = a$$582.dpDiv;
    var v3743 = JAM.call(v10471.removeClass, v10471, [this._dialogClass], JAM.policy.p3);
    JAM.call(v3743.unbind, v3743, [".ui-datepicker-calendar"], JAM.policy.p3);
    return;
  }
  function v1624(a$$581) {
    function v1623() {
      var v3744 = $$$3.datepicker;
      JAM.call(v3744._tidyDialog, v3744, [b$$550], JAM.policy.p3);
      return;
    }
    var b$$550 = this._curInst;
    var v10473 = !b$$550;
    if (!v10473) {
      var v16094 = a$$581;
      if (v16094) {
        v16094 = b$$550 != JAM.call($$$3.data, $$$3, [a$$581, PROP_NAME], JAM.policy.p3);
      }
      v10473 = v16094;
    }
    if (v10473) {
      return;
    }
    if (this._datepickerShowing) {
      var c$$446 = JAM.call(this._get, this, [b$$550, "showAnim"], JAM.policy.p3);
      var d$$338 = JAM.call(this._get, this, [b$$550, "duration"], JAM.policy.p3);
      var e$$294 = v1623;
      var v16096;
      var v24625 = $$$3.effects;
      if (v24625) {
        v24625 = $$$3.effects[c$$446];
      }
      if (v24625) {
        var v21759 = b$$550.dpDiv;
        var v24626 = $$$3.datepicker;
        v16096 = JAM.call(v21759.hide, v21759, [c$$446, JAM.call(v24626._get, v24626, [b$$550, "showOptions"], JAM.policy.p3), d$$338, e$$294], JAM.policy.p3);
      } else {
        var v21761 = b$$550.dpDiv;
        var v24627;
        if (c$$446 == "slideDown") {
          v24627 = "slideUp";
        } else {
          var v26586;
          if (c$$446 == "fadeIn") {
            v26586 = "fadeOut";
          } else {
            v26586 = "hide";
          }
          v24627 = v26586;
        }
        var v21762 = v24627;
        var v24628;
        if (c$$446) {
          v24628 = d$$338;
        } else {
          v24628 = null;
        }
        v16096 = JAM.call(v21761[v21762], v21761, [v24628, e$$294], JAM.policy.p3);
      }
      v16096;
      if (!c$$446) {
        JAM.call(e$$294, null, [], JAM.policy.p3);
      }
      this._datepickerShowing = !1;
      var f$$143 = JAM.call(this._get, this, [b$$550, "onClose"], JAM.policy.p3);
      if (f$$143) {
        var v26588;
        if (b$$550.input) {
          v26588 = b$$550.input[0];
        } else {
          v26588 = null;
        }
        var v24629 = v26588;
        var v27978;
        if (b$$550.input) {
          var v28878 = b$$550.input;
          v27978 = JAM.call(v28878.val, v28878, [], JAM.policy.p3);
        } else {
          v27978 = "";
        }
        JAM.call(f$$143.apply, f$$143, [v24629, [v27978, b$$550]], JAM.policy.p3);
      }
      this._lastInput = null;
      var v16097 = this._inDialog;
      if (v16097) {
        var v24631 = this._dialogInput;
        JAM.call(v24631.css, v24631, [{position:"absolute", left:"0", top:"-100px"}], JAM.policy.p3);
        var v24633 = $$$3.blockUI;
        if (v24633) {
          JAM.call($$$3.unblockUI, $$$3, [], JAM.policy.p3);
          var v27979 = JAM.call($$$3, null, ["body"], JAM.policy.p3);
          JAM.call(v27979.append, v27979, [this.dpDiv], JAM.policy.p3);
        }
      }
      this._inDialog = !1;
    }
    return;
  }
  function v1622(a$$580) {
    var b$$549 = JAM.call(this._getInst, this, [a$$580], JAM.policy.p3);
    var c$$445 = JAM.call(this._get, this, [b$$549, "isRTL"], JAM.policy.p3);
    var v10474 = a$$580;
    if (v10474) {
      var v21766 = a$$580.type == "hidden";
      if (!v21766) {
        v21766 = a$$580.nodeType != 1;
      }
      var v16098 = v21766;
      if (!v16098) {
        var v21767 = $$$3.expr.filters;
        v16098 = JAM.call(v21767.hidden, v21767, [a$$580], JAM.policy.p3);
      }
      v10474 = v16098;
    }
    var v3748 = v10474;
    for (;v3748;) {
      var v10475;
      if (c$$445) {
        v10475 = "previousSibling";
      } else {
        v10475 = "nextSibling";
      }
      a$$580 = a$$580[v10475];
      var v10476 = a$$580;
      if (v10476) {
        var v21769 = a$$580.type == "hidden";
        if (!v21769) {
          v21769 = a$$580.nodeType != 1;
        }
        var v16099 = v21769;
        if (!v16099) {
          var v21770 = $$$3.expr.filters;
          v16099 = JAM.call(v21770.hidden, v21770, [a$$580], JAM.policy.p3);
        }
        v10476 = v16099;
      }
      v3748 = v10476;
    }
    var v3749 = JAM.call($$$3, null, [a$$580], JAM.policy.p3);
    var d$$337 = JAM.call(v3749.offset, v3749, [], JAM.policy.p3);
    return [d$$337.left, d$$337.top];
  }
  function v1621(a$$579, b$$548, c$$444) {
    var v3752 = a$$579.dpDiv;
    var d$$336 = JAM.call(v3752.outerWidth, v3752, [], JAM.policy.p3);
    var v3753 = a$$579.dpDiv;
    var e$$293 = JAM.call(v3753.outerHeight, v3753, [], JAM.policy.p3);
    var v3754;
    if (a$$579.input) {
      var v10477 = a$$579.input;
      v3754 = JAM.call(v10477.outerWidth, v10477, [], JAM.policy.p3);
    } else {
      v3754 = 0;
    }
    var f$$142 = v3754;
    var v3755;
    if (a$$579.input) {
      var v10479 = a$$579.input;
      v3755 = JAM.call(v10479.outerHeight, v10479, [], JAM.policy.p3);
    } else {
      v3755 = 0;
    }
    var g$$166 = v3755;
    var v3756 = document.documentElement.clientWidth;
    var v10482;
    if (c$$444) {
      v10482 = 0;
    } else {
      var v16100 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v10482 = JAM.call(v16100.scrollLeft, v16100, [], JAM.policy.p3);
    }
    var h$$136 = v3756 + v10482;
    var v3758 = document.documentElement.clientHeight;
    var v10484;
    if (c$$444) {
      v10484 = 0;
    } else {
      var v16101 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v10484 = JAM.call(v16101.scrollTop, v16101, [], JAM.policy.p3);
    }
    var i$$190 = v3758 + v10484;
    var v27981 = b$$548.left;
    var v28880;
    if (JAM.call(this._get, this, [a$$579, "isRTL"], JAM.policy.p3)) {
      v28880 = d$$336 - f$$142;
    } else {
      v28880 = 0;
    }
    b$$548.left = v27981 - v28880;
    var v27983 = b$$548.left;
    var v28881;
    var v29837 = c$$444;
    if (v29837) {
      var v30099 = b$$548.left;
      var v30454 = a$$579.input;
      v29837 = v30099 == JAM.call(v30454.offset, v30454, [], JAM.policy.p3).left;
    }
    if (v29837) {
      var v29479 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v28881 = JAM.call(v29479.scrollLeft, v29479, [], JAM.policy.p3);
    } else {
      v28881 = 0;
    }
    b$$548.left = v27983 - v28881;
    var v26590 = b$$548.top;
    var v27985;
    var v29481 = c$$444;
    if (v29481) {
      var v29838 = b$$548.top;
      var v30455 = a$$579.input;
      v29481 = v29838 == JAM.call(v30455.offset, v30455, [], JAM.policy.p3).top + g$$166;
    }
    if (v29481) {
      var v28882 = JAM.call($$$3, null, [document], JAM.policy.p3);
      v27985 = JAM.call(v28882.scrollTop, v28882, [], JAM.policy.p3);
    } else {
      v27985 = 0;
    }
    b$$548.top = v26590 - v27985;
    var v24642 = b$$548.left;
    var v26592 = b$$548.left;
    var v27986;
    var v29482 = b$$548.left + d$$336 > h$$136;
    if (v29482) {
      v29482 = h$$136 > d$$336;
    }
    if (v29482) {
      v27986 = JAM.call(Math.abs, Math, [b$$548.left + d$$336 - h$$136], JAM.policy.p3);
    } else {
      v27986 = 0;
    }
    b$$548.left = v24642 - JAM.call(Math.min, Math, [v26592, v27986], JAM.policy.p3);
    var v21772 = b$$548.top;
    var v24644 = b$$548.top;
    var v26594;
    var v28886 = b$$548.top + e$$293 > i$$190;
    if (v28886) {
      v28886 = i$$190 > e$$293;
    }
    if (v28886) {
      v26594 = JAM.call(Math.abs, Math, [e$$293 + g$$166], JAM.policy.p3);
    } else {
      v26594 = 0;
    }
    b$$548.top = v21772 - JAM.call(Math.min, Math, [v24644, v26594], JAM.policy.p3);
    return b$$548;
  }
  function v1620(a$$577) {
    function b$$547(a$$578) {
      var v3760 = {thin:1, medium:2, thick:3}[a$$578];
      if (!v3760) {
        v3760 = a$$578;
      }
      return v3760;
    }
    return [parseFloat(b$$547(JAM.call(a$$577.css, a$$577, ["border-left-width"], JAM.policy.p3))), parseFloat(b$$547(JAM.call(a$$577.css, a$$577, ["border-top-width"], JAM.policy.p3)))];
  }
  function v1619(a$$576) {
    function v1618() {
      var v16104 = h$$135 === a$$576.yearshtml;
      if (v16104) {
        v16104 = a$$576.yearshtml;
      }
      var v10489 = v16104;
      if (v10489) {
        var v21775 = a$$576.dpDiv;
        var v16105 = JAM.call(v21775.find, v21775, ["select.ui-datepicker-year:first"], JAM.policy.p3);
        JAM.call(v16105.replaceWith, v16105, [a$$576.yearshtml], JAM.policy.p3);
      }
      h$$135 = a$$576.yearshtml = null;
      return;
    }
    var b$$546 = this;
    b$$546.maxRows = 4;
    var v3763 = $$$3.datepicker;
    var c$$443 = JAM.call(v3763._getBorders, v3763, [a$$576.dpDiv], JAM.policy.p3);
    instActive = a$$576;
    var v21776 = a$$576.dpDiv;
    var v16107 = JAM.call(v21776.empty, v21776, [], JAM.policy.p3);
    JAM.call(v16107.append, v16107, [JAM.call(this._generateHTML, this, [a$$576], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(this._attachHandlers, this, [a$$576], JAM.policy.p3);
    var v3765 = a$$576.dpDiv;
    var d$$335 = JAM.call(v3765.find, v3765, ["iframe.ui-datepicker-cover"], JAM.policy.p3);
    var v10490 = !d$$335.length;
    if (!v10490) {
      var v21777 = -c$$443[0];
      var v21778 = -c$$443[1];
      var v24648 = a$$576.dpDiv;
      var v21779 = JAM.call(v24648.outerWidth, v24648, [], JAM.policy.p3);
      var v24649 = a$$576.dpDiv;
      JAM.call(d$$335.css, d$$335, [{left:v21777, top:v21778, width:v21779, height:JAM.call(v24649.outerHeight, v24649, [], JAM.policy.p3)}], JAM.policy.p3);
    }
    var v16112 = a$$576.dpDiv;
    var v10491 = JAM.call(v16112.find, v16112, ["." + this._dayOverClass + " a"], JAM.policy.p3);
    JAM.call(v10491.mouseover, v10491, [], JAM.policy.p3);
    var e$$292 = JAM.call(this._getNumberOfMonths, this, [a$$576], JAM.policy.p3);
    var f$$141 = e$$292[1];
    var g$$165 = 17;
    var v26595 = a$$576.dpDiv;
    var v24651 = JAM.call(v26595.removeClass, v26595, ["ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4"], JAM.policy.p3);
    JAM.call(v24651.width, v24651, [""], JAM.policy.p3);
    var v24652 = f$$141 > 1;
    if (v24652) {
      var v27989 = a$$576.dpDiv;
      var v26596 = JAM.call(v27989.addClass, v27989, ["ui-datepicker-multi-" + f$$141], JAM.policy.p3);
      JAM.call(v26596.css, v26596, ["width", g$$165 * f$$141 + "em"], JAM.policy.p3);
    }
    var v21782 = a$$576.dpDiv;
    var v26598;
    var v28887 = e$$292[0] != 1;
    if (!v28887) {
      v28887 = e$$292[1] != 1;
    }
    if (v28887) {
      v26598 = "add";
    } else {
      v26598 = "remove";
    }
    JAM.call(v21782[v26598 + "Class"], v21782, ["ui-datepicker-multi"], JAM.policy.p3);
    var v16114 = a$$576.dpDiv;
    var v24654;
    if (JAM.call(this._get, this, [a$$576, "isRTL"], JAM.policy.p3)) {
      v24654 = "add";
    } else {
      v24654 = "remove";
    }
    JAM.call(v16114[v24654 + "Class"], v16114, ["ui-datepicker-rtl"], JAM.policy.p3);
    var v27993 = a$$576 == $$$3.datepicker._curInst;
    if (v27993) {
      v27993 = $$$3.datepicker._datepickerShowing;
    }
    var v26600 = v27993;
    if (v26600) {
      v26600 = a$$576.input;
    }
    var v24655 = v26600;
    if (v24655) {
      var v26601 = a$$576.input;
      v24655 = JAM.call(v26601.is, v26601, [":visible"], JAM.policy.p3);
    }
    var v21785 = v24655;
    if (v21785) {
      var v26602 = a$$576.input;
      v21785 = !JAM.call(v26602.is, v26602, [":disabled"], JAM.policy.p3);
    }
    var v16116 = v21785;
    if (v16116) {
      v16116 = a$$576.input[0] != document.activeElement;
    }
    var v10492 = v16116;
    if (v10492) {
      var v16117 = a$$576.input;
      JAM.call(v16117.focus, v16117, [], JAM.policy.p3);
    }
    if (a$$576.yearshtml) {
      var h$$135 = a$$576.yearshtml;
      JAM.call(setTimeout, null, [v1618, 0]);
    }
    return;
  }
  function v1617(a$$574) {
    function v1616() {
      var v3767 = b$$545.dpDiv;
      var a$$575 = JAM.call(v3767.find, v3767, ["iframe.ui-datepicker-cover"], JAM.policy.p3);
      if (!!a$$575.length) {
        var v3768 = $$$3.datepicker;
        var c$$442 = JAM.call(v3768._getBorders, v3768, [b$$545.dpDiv], JAM.policy.p3);
        var v10494 = -c$$442[0];
        var v10495 = -c$$442[1];
        var v16121 = b$$545.dpDiv;
        var v10496 = JAM.call(v16121.outerWidth, v16121, [], JAM.policy.p3);
        var v16122 = b$$545.dpDiv;
        JAM.call(a$$575.css, a$$575, [{left:v10494, top:v10495, width:v10496, height:JAM.call(v16122.outerHeight, v16122, [], JAM.policy.p3)}], JAM.policy.p3);
      }
      return;
    }
    function v1615() {
      var v16123 = e$$291;
      var v24658 = JAM.call($$$3, null, [this], JAM.policy.p3);
      e$$291 = v16123 | JAM.call(v24658.css, v24658, ["position"], JAM.policy.p3) == "fixed";
      return !e$$291;
    }
    var v10498 = a$$574.target;
    if (!v10498) {
      v10498 = a$$574;
    }
    a$$574 = v10498;
    var v21789 = a$$574.nodeName;
    var v10499 = JAM.call(v21789.toLowerCase, v21789, [], JAM.policy.p3) != "input";
    if (v10499) {
      a$$574 = JAM.call($$$3, null, ["input", a$$574.parentNode], JAM.policy.p3)[0];
    }
    var v16128 = $$$3.datepicker;
    var v10500 = JAM.call(v16128._isDisabledDatepicker, v16128, [a$$574], JAM.policy.p3);
    if (!v10500) {
      v10500 = $$$3.datepicker._lastInput == a$$574;
    }
    if (v10500) {
      return;
    }
    var v3773 = $$$3.datepicker;
    var b$$545 = JAM.call(v3773._getInst, v3773, [a$$574], JAM.policy.p3);
    var v10501 = $$$3.datepicker._curInst;
    if (v10501) {
      v10501 = $$$3.datepicker._curInst != b$$545;
    }
    var v3774 = v10501;
    if (v3774) {
      var v16133 = $$$3.datepicker._curInst.dpDiv;
      JAM.call(v16133.stop, v16133, [!0, !0], JAM.policy.p3);
      var v21794 = b$$545;
      if (v21794) {
        v21794 = $$$3.datepicker._datepickerShowing;
      }
      var v16136 = v21794;
      if (v16136) {
        var v21795 = $$$3.datepicker;
        JAM.call(v21795._hideDatepicker, v21795, [$$$3.datepicker._curInst.input[0]], JAM.policy.p3);
      }
    }
    var v3775 = $$$3.datepicker;
    var c$$441 = JAM.call(v3775._get, v3775, [b$$545, "beforeShow"], JAM.policy.p3);
    var v3776;
    if (c$$441) {
      v3776 = JAM.call(c$$441.apply, c$$441, [a$$574, [a$$574, b$$545]], JAM.policy.p3);
    } else {
      v3776 = {};
    }
    var d$$334 = v3776;
    if (d$$334 === !1) {
      return;
    }
    extendRemove(b$$545.settings, d$$334);
    b$$545.lastVal = null;
    $$$3.datepicker._lastInput = a$$574;
    var v21797 = $$$3.datepicker;
    JAM.call(v21797._setDateFromField, v21797, [b$$545], JAM.policy.p3);
    var v16137 = $$$3.datepicker._inDialog;
    if (v16137) {
      a$$574.value = "";
    }
    var v10504 = $$$3.datepicker._pos;
    if (!v10504) {
      var v21799 = $$$3.datepicker;
      var v24663 = $$$3.datepicker;
      var v31013 = JAM.call(v24663._findPos, v24663, [a$$574], JAM.policy.p3);
      v21799._pos = v31013;
      var v21800 = $$$3.datepicker._pos;
      v21800[1] = v21800[1] + a$$574.offsetHeight;
    }
    var e$$291 = !1;
    var v16140 = JAM.call($$$3, null, [a$$574], JAM.policy.p3);
    var v10505 = JAM.call(v16140.parents, v16140, [], JAM.policy.p3);
    JAM.call(v10505.each, v10505, [v1615], JAM.policy.p3);
    var v16141 = e$$291;
    if (v16141) {
      v16141 = $$$3.browser.opera;
    }
    var v10506 = v16141;
    if (v10506) {
      var v21802 = $$$3.datepicker._pos;
      v21802[0] = v21802[0] - document.documentElement.scrollLeft;
      var v21803 = $$$3.datepicker._pos;
      v21803[1] = v21803[1] - document.documentElement.scrollTop;
    }
    var f$$140 = {left:$$$3.datepicker._pos[0], top:$$$3.datepicker._pos[1]};
    $$$3.datepicker._pos = null;
    var v26612 = b$$545.dpDiv;
    JAM.call(v26612.empty, v26612, [], JAM.policy.p3);
    var v24667 = b$$545.dpDiv;
    JAM.call(v24667.css, v24667, [{position:"absolute", display:"block", top:"-1000px"}], JAM.policy.p3);
    var v21804 = $$$3.datepicker;
    JAM.call(v21804._updateDatepicker, v21804, [b$$545], JAM.policy.p3);
    var v16144 = $$$3.datepicker;
    f$$140 = JAM.call(v16144._checkOffset, v16144, [b$$545, f$$140, e$$291], JAM.policy.p3);
    var v10509 = b$$545.dpDiv;
    var v21805;
    var v26613 = $$$3.datepicker._inDialog;
    if (v26613) {
      v26613 = $$$3.blockUI;
    }
    if (v26613) {
      v21805 = "static";
    } else {
      var v24669;
      if (e$$291) {
        v24669 = "fixed";
      } else {
        v24669 = "absolute";
      }
      v21805 = v24669;
    }
    JAM.call(v10509.css, v10509, [{position:v21805, display:"none", left:f$$140.left + "px", top:f$$140.top + "px"}], JAM.policy.p3);
    if (!b$$545.inline) {
      var v3780 = $$$3.datepicker;
      var g$$164 = JAM.call(v3780._get, v3780, [b$$545, "showAnim"], JAM.policy.p3);
      var v3781 = $$$3.datepicker;
      var h$$134 = JAM.call(v3781._get, v3781, [b$$545, "duration"], JAM.policy.p3);
      var i$$189 = v1616;
      var v26614 = b$$545.dpDiv;
      var v28890 = JAM.call($$$3, null, [a$$574], JAM.policy.p3);
      JAM.call(v26614.zIndex, v26614, [JAM.call(v28890.zIndex, v28890, [], JAM.policy.p3) + 1], JAM.policy.p3);
      $$$3.datepicker._datepickerShowing = !0;
      var v24671;
      var v27999 = $$$3.effects;
      if (v27999) {
        v27999 = $$$3.effects[g$$164];
      }
      if (v27999) {
        var v26617 = b$$545.dpDiv;
        var v28000 = $$$3.datepicker;
        v24671 = JAM.call(v26617.show, v26617, [g$$164, JAM.call(v28000._get, v28000, [b$$545, "showOptions"], JAM.policy.p3), h$$134, i$$189], JAM.policy.p3);
      } else {
        var v26619 = b$$545.dpDiv;
        var v26620 = g$$164 || "show";
        var v28001;
        if (g$$164) {
          v28001 = h$$134;
        } else {
          v28001 = null;
        }
        v24671 = JAM.call(v26619[v26620], v26619, [v28001, i$$189], JAM.policy.p3);
      }
      v24671;
      var v24672 = !g$$164;
      if (!v24672) {
        v24672 = !h$$134;
      }
      var v21808 = v24672;
      if (v21808) {
        JAM.call(i$$189, null, [], JAM.policy.p3);
      }
      var v24673 = b$$545.input;
      var v21809 = JAM.call(v24673.is, v24673, [":visible"], JAM.policy.p3);
      if (v21809) {
        var v26624 = b$$545.input;
        v21809 = !JAM.call(v26624.is, v26624, [":disabled"], JAM.policy.p3);
      }
      var v16148 = v21809;
      if (v16148) {
        var v21810 = b$$545.input;
        JAM.call(v21810.focus, v21810, [], JAM.policy.p3);
      }
      $$$3.datepicker._curInst = b$$545;
    }
    return;
  }
  function v1614(a$$573) {
    var v3783 = $$$3.datepicker;
    var b$$544 = JAM.call(v3783._getInst, v3783, [a$$573.target], JAM.policy.p3);
    var v16149 = b$$544.input;
    if (JAM.call(v16149.val, v16149, [], JAM.policy.p3) != b$$544.lastVal) {
      try {
        var v3785 = $$$3.datepicker;
        var v10515 = $$$3.datepicker;
        var v3786 = JAM.call(v10515._get, v10515, [b$$544, "dateFormat"], JAM.policy.p3);
        var v10516;
        if (b$$544.input) {
          var v16150 = b$$544.input;
          v10516 = JAM.call(v16150.val, v16150, [], JAM.policy.p3);
        } else {
          v10516 = null;
        }
        var v3787 = v10516;
        var v10517 = $$$3.datepicker;
        var c$$440 = JAM.call(v3785.parseDate, v3785, [v3786, v3787, JAM.call(v10517._getFormatConfig, v10517, [b$$544], JAM.policy.p3)], JAM.policy.p3);
        if (c$$440) {
          var v21811 = $$$3.datepicker;
          JAM.call(v21811._setDateFromField, v21811, [b$$544], JAM.policy.p3);
          var v21812 = $$$3.datepicker;
          JAM.call(v21812._updateAlternate, v21812, [b$$544], JAM.policy.p3);
          var v16152 = $$$3.datepicker;
          JAM.call(v16152._updateDatepicker, v16152, [b$$544], JAM.policy.p3);
        }
      } catch (d$$333) {
        var v3789 = $$$3.datepicker;
        JAM.call(v3789.log, v3789, [d$$333], JAM.policy.p3);
      }
    }
    return !0;
  }
  function v1613(a$$572) {
    var v3791 = $$$3.datepicker;
    var b$$543 = JAM.call(v3791._getInst, v3791, [a$$572.target], JAM.policy.p3);
    var v10518 = $$$3.datepicker;
    if (JAM.call(v10518._get, v10518, [b$$543, "constrainInput"], JAM.policy.p3)) {
      var v3793 = $$$3.datepicker;
      var v10519 = $$$3.datepicker;
      var c$$439 = JAM.call(v3793._possibleChars, v3793, [JAM.call(v10519._get, v10519, [b$$543, "dateFormat"], JAM.policy.p3)], JAM.policy.p3);
      var v10520;
      if (a$$572.charCode == undefined$$1) {
        v10520 = a$$572.keyCode;
      } else {
        v10520 = a$$572.charCode;
      }
      var d$$332 = JAM.call(String.fromCharCode, String, [v10520], JAM.policy.p3);
      var v21814 = a$$572.ctrlKey;
      if (!v21814) {
        v21814 = a$$572.metaKey;
      }
      var v16154 = v21814;
      if (!v16154) {
        v16154 = d$$332 < " ";
      }
      var v10521 = v16154;
      if (!v10521) {
        v10521 = !c$$439;
      }
      var v3796 = v10521;
      if (!v3796) {
        v3796 = JAM.call(c$$439.indexOf, c$$439, [d$$332], JAM.policy.p3) > -1;
      }
      return v3796;
    }
    return;
  }
  function v1612(a$$571) {
    var v3798 = $$$3.datepicker;
    var b$$542 = JAM.call(v3798._getInst, v3798, [a$$571.target], JAM.policy.p3);
    var c$$438 = !0;
    var v3800 = b$$542.dpDiv;
    var d$$331 = JAM.call(v3800.is, v3800, [".ui-datepicker-rtl"], JAM.policy.p3);
    b$$542._keyEvent = !0;
    if ($$$3.datepicker._datepickerShowing) {
      switch(a$$571.keyCode) {
        case 9:
          var v10525 = $$$3.datepicker;
          JAM.call(v10525._hideDatepicker, v10525, [], JAM.policy.p3);
          c$$438 = !1;
          break;
        case 13:
          var e$$290 = JAM.call($$$3, null, ["td." + $$$3.datepicker._dayOverClass + ":not(." + $$$3.datepicker._currentClass + ")", b$$542.dpDiv], JAM.policy.p3);
          var v3803 = e$$290[0];
          if (v3803) {
            var v10527 = $$$3.datepicker;
            JAM.call(v10527._selectDay, v10527, [a$$571.target, b$$542.selectedMonth, b$$542.selectedYear, e$$290[0]], JAM.policy.p3);
          }
          var v3804 = $$$3.datepicker;
          var f$$139 = JAM.call(v3804._get, v3804, [b$$542, "onSelect"], JAM.policy.p3);
          if (f$$139) {
            var v3805 = $$$3.datepicker;
            var g$$163 = JAM.call(v3805._formatDate, v3805, [b$$542], JAM.policy.p3);
            var v10532;
            if (b$$542.input) {
              v10532 = b$$542.input[0];
            } else {
              v10532 = null;
            }
            JAM.call(f$$139.apply, f$$139, [v10532, [g$$163, b$$542]], JAM.policy.p3);
          } else {
            var v3808 = $$$3.datepicker;
            JAM.call(v3808._hideDatepicker, v3808, [], JAM.policy.p3);
          }
          return !1;
        case 27:
          var v3809 = $$$3.datepicker;
          JAM.call(v3809._hideDatepicker, v3809, [], JAM.policy.p3);
          break;
        case 33:
          var v3810 = $$$3.datepicker;
          var v3811 = a$$571.target;
          var v10533;
          if (a$$571.ctrlKey) {
            var v21818 = $$$3.datepicker;
            v10533 = -JAM.call(v21818._get, v21818, [b$$542, "stepBigMonths"], JAM.policy.p3);
          } else {
            var v21819 = $$$3.datepicker;
            v10533 = -JAM.call(v21819._get, v21819, [b$$542, "stepMonths"], JAM.policy.p3);
          }
          JAM.call(v3810._adjustDate, v3810, [v3811, v10533, "M"], JAM.policy.p3);
          break;
        case 34:
          var v3813 = $$$3.datepicker;
          var v3814 = a$$571.target;
          var v10534;
          if (a$$571.ctrlKey) {
            var v21820 = $$$3.datepicker;
            v10534 = +JAM.call(v21820._get, v21820, [b$$542, "stepBigMonths"], JAM.policy.p3);
          } else {
            var v21821 = $$$3.datepicker;
            v10534 = +JAM.call(v21821._get, v21821, [b$$542, "stepMonths"], JAM.policy.p3);
          }
          JAM.call(v3813._adjustDate, v3813, [v3814, v10534, "M"], JAM.policy.p3);
          break;
        case 35:
          var v16166 = a$$571.ctrlKey;
          if (!v16166) {
            v16166 = a$$571.metaKey;
          }
          var v10535 = v16166;
          if (v10535) {
            var v16167 = $$$3.datepicker;
            JAM.call(v16167._clearDate, v16167, [a$$571.target], JAM.policy.p3);
          }
          var v10536 = a$$571.ctrlKey;
          if (!v10536) {
            v10536 = a$$571.metaKey;
          }
          c$$438 = v10536;
          break;
        case 36:
          var v16170 = a$$571.ctrlKey;
          if (!v16170) {
            v16170 = a$$571.metaKey;
          }
          var v10537 = v16170;
          if (v10537) {
            var v16171 = $$$3.datepicker;
            JAM.call(v16171._gotoToday, v16171, [a$$571.target], JAM.policy.p3);
          }
          var v10538 = a$$571.ctrlKey;
          if (!v10538) {
            v10538 = a$$571.metaKey;
          }
          c$$438 = v10538;
          break;
        case 37:
          var v21824 = a$$571.ctrlKey;
          if (!v21824) {
            v21824 = a$$571.metaKey;
          }
          var v16174 = v21824;
          if (v16174) {
            var v21825 = $$$3.datepicker;
            var v21826 = a$$571.target;
            var v24678;
            if (d$$331) {
              v24678 = 1;
            } else {
              v24678 = -1;
            }
            JAM.call(v21825._adjustDate, v21825, [v21826, v24678, "D"], JAM.policy.p3);
          }
          var v16175 = a$$571.ctrlKey;
          if (!v16175) {
            v16175 = a$$571.metaKey;
          }
          c$$438 = v16175;
          var v10539 = a$$571.originalEvent.altKey;
          if (v10539) {
            var v16177 = $$$3.datepicker;
            var v16178 = a$$571.target;
            var v21829;
            if (a$$571.ctrlKey) {
              var v26626 = $$$3.datepicker;
              v21829 = -JAM.call(v26626._get, v26626, [b$$542, "stepBigMonths"], JAM.policy.p3);
            } else {
              var v26627 = $$$3.datepicker;
              v21829 = -JAM.call(v26627._get, v26627, [b$$542, "stepMonths"], JAM.policy.p3);
            }
            JAM.call(v16177._adjustDate, v16177, [v16178, v21829, "M"], JAM.policy.p3);
          }
          break;
        case 38:
          var v16180 = a$$571.ctrlKey;
          if (!v16180) {
            v16180 = a$$571.metaKey;
          }
          var v10540 = v16180;
          if (v10540) {
            var v16181 = $$$3.datepicker;
            JAM.call(v16181._adjustDate, v16181, [a$$571.target, -7, "D"], JAM.policy.p3);
          }
          var v10541 = a$$571.ctrlKey;
          if (!v10541) {
            v10541 = a$$571.metaKey;
          }
          c$$438 = v10541;
          break;
        case 39:
          var v21831 = a$$571.ctrlKey;
          if (!v21831) {
            v21831 = a$$571.metaKey;
          }
          var v16184 = v21831;
          if (v16184) {
            var v21832 = $$$3.datepicker;
            var v21833 = a$$571.target;
            var v24683;
            if (d$$331) {
              v24683 = -1;
            } else {
              v24683 = 1;
            }
            JAM.call(v21832._adjustDate, v21832, [v21833, v24683, "D"], JAM.policy.p3);
          }
          var v16185 = a$$571.ctrlKey;
          if (!v16185) {
            v16185 = a$$571.metaKey;
          }
          c$$438 = v16185;
          var v10542 = a$$571.originalEvent.altKey;
          if (v10542) {
            var v16187 = $$$3.datepicker;
            var v16188 = a$$571.target;
            var v21836;
            if (a$$571.ctrlKey) {
              var v26628 = $$$3.datepicker;
              v21836 = +JAM.call(v26628._get, v26628, [b$$542, "stepBigMonths"], JAM.policy.p3);
            } else {
              var v26629 = $$$3.datepicker;
              v21836 = +JAM.call(v26629._get, v26629, [b$$542, "stepMonths"], JAM.policy.p3);
            }
            JAM.call(v16187._adjustDate, v16187, [v16188, v21836, "M"], JAM.policy.p3);
          }
          break;
        case 40:
          var v16190 = a$$571.ctrlKey;
          if (!v16190) {
            v16190 = a$$571.metaKey;
          }
          var v10543 = v16190;
          if (v10543) {
            var v16191 = $$$3.datepicker;
            JAM.call(v16191._adjustDate, v16191, [a$$571.target, 7, "D"], JAM.policy.p3);
          }
          var v10544 = a$$571.ctrlKey;
          if (!v10544) {
            v10544 = a$$571.metaKey;
          }
          c$$438 = v10544;
          break;
        default:
          c$$438 = !1;
      }
    } else {
      var v3817;
      var v16194 = a$$571.keyCode == 36;
      if (v16194) {
        v16194 = a$$571.ctrlKey;
      }
      if (v16194) {
        var v10545 = $$$3.datepicker;
        v3817 = JAM.call(v10545._showDatepicker, v10545, [this], JAM.policy.p3);
      } else {
        v3817 = c$$438 = !1;
      }
      v3817;
    }
    if (c$$438) {
      JAM.call(a$$571.preventDefault, a$$571, [], JAM.policy.p3);
      JAM.call(a$$571.stopPropagation, a$$571, [], JAM.policy.p3);
    }
    return;
  }
  function v1611(a$$570, b$$541) {
    var c$$437 = JAM.call(this._getInst, this, [a$$570], JAM.policy.p3);
    var v16195 = c$$437;
    if (v16195) {
      v16195 = !c$$437.inline;
    }
    var v10547 = v16195;
    if (v10547) {
      JAM.call(this._setDateFromField, this, [c$$437, b$$541], JAM.policy.p3);
    }
    var v10548;
    if (c$$437) {
      v10548 = JAM.call(this._getDate, this, [c$$437], JAM.policy.p3);
    } else {
      v10548 = null;
    }
    return v10548;
  }
  function v1610(a$$569, b$$540) {
    var c$$436 = JAM.call(this._getInst, this, [a$$569], JAM.policy.p3);
    if (c$$436) {
      JAM.call(this._setDate, this, [c$$436, b$$540], JAM.policy.p3);
      JAM.call(this._updateDatepicker, this, [c$$436], JAM.policy.p3);
      JAM.call(this._updateAlternate, this, [c$$436], JAM.policy.p3);
    }
    return;
  }
  function v1609(a$$568) {
    var b$$539 = JAM.call(this._getInst, this, [a$$568], JAM.policy.p3);
    if (b$$539) {
      JAM.call(this._updateDatepicker, this, [b$$539], JAM.policy.p3);
    }
    return;
  }
  function v1608(a$$567, b$$538, c$$435) {
    JAM.call(this._optionDatepicker, this, [a$$567, b$$538, c$$435], JAM.policy.p3);
    return;
  }
  function v1607(a$$566, b$$537, c$$434) {
    var d$$330 = JAM.call(this._getInst, this, [a$$566], JAM.policy.p3);
    var v10549 = arguments.length == 2;
    if (v10549) {
      v10549 = typeof b$$537 == "string";
    }
    if (v10549) {
      var v3819;
      if (b$$537 == "defaults") {
        v3819 = JAM.call($$$3.extend, $$$3, [{}, $$$3.datepicker._defaults], JAM.policy.p3);
      } else {
        var v10551;
        if (d$$330) {
          var v16199;
          if (b$$537 == "all") {
            v16199 = JAM.call($$$3.extend, $$$3, [{}, d$$330.settings], JAM.policy.p3);
          } else {
            v16199 = JAM.call(this._get, this, [d$$330, b$$537], JAM.policy.p3);
          }
          v10551 = v16199;
        } else {
          v10551 = null;
        }
        v3819 = v10551;
      }
      return v3819;
    }
    var e$$289 = b$$537 || {};
    var v3821 = typeof b$$537 == "string";
    if (v3821) {
      e$$289 = {};
      introspect(JAM.policy.p2) {
        e$$289[b$$537] = c$$434;
      }
    }
    if (d$$330) {
      var v3822 = this._curInst == d$$330;
      if (v3822) {
        JAM.call(this._hideDatepicker, this, [], JAM.policy.p3);
      }
      var f$$138 = JAM.call(this._getDateDatepicker, this, [a$$566, !0], JAM.policy.p3);
      var g$$162 = JAM.call(this._getMinMaxDate, this, [d$$330, "min"], JAM.policy.p3);
      var h$$133 = JAM.call(this._getMinMaxDate, this, [d$$330, "max"], JAM.policy.p3);
      extendRemove(d$$330.settings, e$$289);
      var v29843 = g$$162 !== null;
      if (v29843) {
        v29843 = e$$289.dateFormat !== undefined$$1;
      }
      var v29489 = v29843;
      if (v29489) {
        v29489 = e$$289.minDate === undefined$$1;
      }
      var v28893 = v29489;
      if (v28893) {
        var v29490 = d$$330.settings;
        var v31014 = JAM.call(this._formatDate, this, [d$$330, g$$162], JAM.policy.p3);
        v29490.minDate = v31014;
      }
      var v29491 = h$$133 !== null;
      if (v29491) {
        v29491 = e$$289.dateFormat !== undefined$$1;
      }
      var v28894 = v29491;
      if (v28894) {
        v28894 = e$$289.maxDate === undefined$$1;
      }
      var v28002 = v28894;
      if (v28002) {
        var v28895 = d$$330.settings;
        var v31015 = JAM.call(this._formatDate, this, [d$$330, h$$133], JAM.policy.p3);
        v28895.maxDate = v31015;
      }
      JAM.call(this._attachments, this, [JAM.call($$$3, null, [a$$566], JAM.policy.p3), d$$330], JAM.policy.p3);
      JAM.call(this._autoSize, this, [d$$330], JAM.policy.p3);
      JAM.call(this._setDate, this, [d$$330, f$$138], JAM.policy.p3);
      JAM.call(this._updateAlternate, this, [d$$330], JAM.policy.p3);
      JAM.call(this._updateDatepicker, this, [d$$330], JAM.policy.p3);
    }
    return;
  }
  function v1606(a$$565) {
    try {
      return JAM.call($$$3.data, $$$3, [a$$565, PROP_NAME], JAM.policy.p3);
    } catch (b$$536) {
      throw "Missing instance data for this datepicker";
    }
    return;
  }
  function v1605(a$$564) {
    if (!a$$564) {
      return !1;
    }
    var b$$535 = 0;
    var v3826 = b$$535 < this._disabledInputs.length;
    for (;v3826;) {
      if (this._disabledInputs[b$$535] == a$$564) {
        return !0;
      }
      b$$535++;
      v3826 = b$$535 < this._disabledInputs.length;
    }
    return !1;
  }
  function v1604(a$$563) {
    function v1603(b$$534) {
      var v3827;
      if (b$$534 == a$$563) {
        v3827 = null;
      } else {
        v3827 = b$$534;
      }
      return v3827;
    }
    function v1602() {
      this.disabled = !0;
      return;
    }
    var b$$533 = JAM.call($$$3, null, [a$$563], JAM.policy.p3);
    var c$$433 = JAM.call($$$3.data, $$$3, [a$$563, PROP_NAME], JAM.policy.p3);
    if (!JAM.call(b$$533.hasClass, b$$533, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v3829 = a$$563.nodeName;
    var d$$329 = JAM.call(v3829.toLowerCase, v3829, [], JAM.policy.p3);
    if (d$$329 == "input") {
      a$$563.disabled = !0;
      var v26631 = c$$433.trigger;
      var v24687 = JAM.call(v26631.filter, v26631, ["button"], JAM.policy.p3);
      var v21842 = JAM.call(v24687.each, v24687, [v1602], JAM.policy.p3);
      var v16204 = JAM.call(v21842.end, v21842, [], JAM.policy.p3);
      var v10560 = JAM.call(v16204.filter, v16204, ["img"], JAM.policy.p3);
      JAM.call(v10560.css, v10560, [{opacity:"0.5", cursor:"default"}], JAM.policy.p3);
    } else {
      var v10562 = d$$329 == "div";
      if (!v10562) {
        v10562 = d$$329 == "span";
      }
      if (v10562) {
        var e$$288 = JAM.call(b$$533.children, b$$533, ["." + this._inlineClass], JAM.policy.p3);
        var v10564 = JAM.call(e$$288.children, e$$288, [], JAM.policy.p3);
        JAM.call(v10564.addClass, v10564, ["ui-state-disabled"], JAM.policy.p3);
        var v10565 = JAM.call(e$$288.find, e$$288, ["select.ui-datepicker-month, select.ui-datepicker-year"], JAM.policy.p3);
        JAM.call(v10565.attr, v10565, ["disabled", "disabled"], JAM.policy.p3);
      }
    }
    var v31016 = JAM.call($$$3.map, $$$3, [this._disabledInputs, v1603], JAM.policy.p3);
    this._disabledInputs = v31016;
    var v10567 = this._disabledInputs;
    var v10568 = this._disabledInputs.length;
    introspect(JAM.policy.p2) {
      v10567[v10568] = a$$563;
    }
    return;
  }
  function v1601(a$$562) {
    function v1600(b$$532) {
      var v3833;
      if (b$$532 == a$$562) {
        v3833 = null;
      } else {
        v3833 = b$$532;
      }
      return v3833;
    }
    function v1599() {
      this.disabled = !1;
      return;
    }
    var b$$531 = JAM.call($$$3, null, [a$$562], JAM.policy.p3);
    var c$$432 = JAM.call($$$3.data, $$$3, [a$$562, PROP_NAME], JAM.policy.p3);
    if (!JAM.call(b$$531.hasClass, b$$531, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v3835 = a$$562.nodeName;
    var d$$328 = JAM.call(v3835.toLowerCase, v3835, [], JAM.policy.p3);
    if (d$$328 == "input") {
      a$$562.disabled = !1;
      var v26632 = c$$432.trigger;
      var v24688 = JAM.call(v26632.filter, v26632, ["button"], JAM.policy.p3);
      var v21843 = JAM.call(v24688.each, v24688, [v1599], JAM.policy.p3);
      var v16208 = JAM.call(v21843.end, v21843, [], JAM.policy.p3);
      var v10571 = JAM.call(v16208.filter, v16208, ["img"], JAM.policy.p3);
      JAM.call(v10571.css, v10571, [{opacity:"1.0", cursor:""}], JAM.policy.p3);
    } else {
      var v10573 = d$$328 == "div";
      if (!v10573) {
        v10573 = d$$328 == "span";
      }
      if (v10573) {
        var e$$287 = JAM.call(b$$531.children, b$$531, ["." + this._inlineClass], JAM.policy.p3);
        var v10575 = JAM.call(e$$287.children, e$$287, [], JAM.policy.p3);
        JAM.call(v10575.removeClass, v10575, ["ui-state-disabled"], JAM.policy.p3);
        var v10576 = JAM.call(e$$287.find, e$$287, ["select.ui-datepicker-month, select.ui-datepicker-year"], JAM.policy.p3);
        JAM.call(v10576.removeAttr, v10576, ["disabled"], JAM.policy.p3);
      }
    }
    var v31017 = JAM.call($$$3.map, $$$3, [this._disabledInputs, v1600], JAM.policy.p3);
    this._disabledInputs = v31017;
    return;
  }
  function v1598(a$$561) {
    var b$$530 = JAM.call($$$3, null, [a$$561], JAM.policy.p3);
    var c$$431 = JAM.call($$$3.data, $$$3, [a$$561, PROP_NAME], JAM.policy.p3);
    if (!JAM.call(b$$530.hasClass, b$$530, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v3841 = a$$561.nodeName;
    var d$$327 = JAM.call(v3841.toLowerCase, v3841, [], JAM.policy.p3);
    JAM.call($$$3.removeData, $$$3, [a$$561, PROP_NAME], JAM.policy.p3);
    var v10578;
    if (d$$327 == "input") {
      var v24689 = c$$431.append;
      JAM.call(v24689.remove, v24689, [], JAM.policy.p3);
      var v24690 = c$$431.trigger;
      JAM.call(v24690.remove, v24690, [], JAM.policy.p3);
      var v28003 = JAM.call(b$$530.removeClass, b$$530, [this.markerClassName], JAM.policy.p3);
      var v26633 = JAM.call(v28003.unbind, v28003, ["focus", this._showDatepicker], JAM.policy.p3);
      var v24691 = JAM.call(v26633.unbind, v26633, ["keydown", this._doKeyDown], JAM.policy.p3);
      var v21844 = JAM.call(v24691.unbind, v24691, ["keypress", this._doKeyPress], JAM.policy.p3);
      v10578 = JAM.call(v21844.unbind, v21844, ["keyup", this._doKeyUp], JAM.policy.p3);
    } else {
      var v21846 = d$$327 == "div";
      if (!v21846) {
        v21846 = d$$327 == "span";
      }
      var v16211 = v21846;
      if (v16211) {
        var v21847 = JAM.call(b$$530.removeClass, b$$530, [this.markerClassName], JAM.policy.p3);
        v16211 = JAM.call(v21847.empty, v21847, [], JAM.policy.p3);
      }
      v10578 = v16211;
    }
    v10578;
    return;
  }
  function v1597(a$$560, b$$529, c$$430, d$$326, e$$286) {
    var f$$137 = this._dialogInst;
    if (!f$$137) {
      this.uuid = this.uuid + 1;
      var g$$161 = "dp" + this.uuid;
      var v31018 = JAM.call($$$3, null, ['<input type="text" id="' + g$$161 + '" style="position: absolute; top: -100px; width: 0px;"/>'], JAM.policy.p3);
      this._dialogInput = v31018;
      var v26636 = this._dialogInput;
      JAM.call(v26636.keydown, v26636, [this._doKeyDown], JAM.policy.p3);
      var v24695 = JAM.call($$$3, null, ["body"], JAM.policy.p3);
      JAM.call(v24695.append, v24695, [this._dialogInput], JAM.policy.p3);
      var v31019 = JAM.call(this._newInst, this, [this._dialogInput, !1], JAM.policy.p3);
      f$$137 = this._dialogInst = v31019;
      f$$137.settings = {};
      JAM.call($$$3.data, $$$3, [this._dialogInput[0], PROP_NAME, f$$137], JAM.policy.p3);
    }
    extendRemove(f$$137.settings, d$$326 || {});
    var v21852;
    var v26638 = b$$529;
    if (v26638) {
      v26638 = b$$529.constructor == Date;
    }
    if (v26638) {
      v21852 = JAM.call(this._formatDate, this, [f$$137, b$$529], JAM.policy.p3);
    } else {
      v21852 = b$$529;
    }
    b$$529 = v21852;
    var v16214 = this._dialogInput;
    JAM.call(v16214.val, v16214, [b$$529], JAM.policy.p3);
    var v10581;
    if (e$$286) {
      var v16215;
      if (e$$286.length) {
        v16215 = e$$286;
      } else {
        v16215 = [e$$286.pageX, e$$286.pageY];
      }
      v10581 = v16215;
    } else {
      v10581 = null;
    }
    this._pos = v10581;
    if (!this._pos) {
      var h$$132 = document.documentElement.clientWidth;
      var i$$188 = document.documentElement.clientHeight;
      var v3846 = document.documentElement.scrollLeft;
      if (!v3846) {
        v3846 = document.body.scrollLeft;
      }
      var j$$96 = v3846;
      var v3847 = document.documentElement.scrollTop;
      if (!v3847) {
        v3847 = document.body.scrollTop;
      }
      var k$$65 = v3847;
      this._pos = [h$$132 / 2 - 100 + j$$96, i$$188 / 2 - 150 + k$$65];
    }
    var v29493 = this._dialogInput;
    var v28897 = JAM.call(v29493.css, v29493, ["left", this._pos[0] + 20 + "px"], JAM.policy.p3);
    JAM.call(v28897.css, v28897, ["top", this._pos[1] + "px"], JAM.policy.p3);
    f$$137.settings.onSelect = c$$430;
    this._inDialog = !0;
    var v26639 = this.dpDiv;
    JAM.call(v26639.addClass, v26639, [this._dialogClass], JAM.policy.p3);
    JAM.call(this._showDatepicker, this, [this._dialogInput[0]], JAM.policy.p3);
    var v21856 = $$$3.blockUI;
    if (v21856) {
      JAM.call($$$3.blockUI, $$$3, [this.dpDiv], JAM.policy.p3);
    }
    JAM.call($$$3.data, $$$3, [this._dialogInput[0], PROP_NAME, f$$137], JAM.policy.p3);
    return this;
  }
  function v1596(a$$557, b$$528) {
    function v1595(a$$559, c$$429) {
      return JAM.call(this._get, this, [b$$528, c$$429], JAM.policy.p3);
    }
    function v1594(a$$558, c$$428, d$$325) {
      var v3851 = b$$528.settings;
      introspect(JAM.policy.p2) {
        v3851[c$$428] = d$$325;
      }
      return;
    }
    var c$$427 = JAM.call($$$3, null, [a$$557], JAM.policy.p3);
    if (JAM.call(c$$427.hasClass, c$$427, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    var v29496 = JAM.call(c$$427.addClass, c$$427, [this.markerClassName], JAM.policy.p3);
    var v28900 = JAM.call(v29496.append, v29496, [b$$528.dpDiv], JAM.policy.p3);
    var v28007 = JAM.call(v28900.bind, v28900, ["setData.datepicker", v1594], JAM.policy.p3);
    JAM.call(v28007.bind, v28007, ["getData.datepicker", v1595], JAM.policy.p3);
    JAM.call($$$3.data, $$$3, [a$$557, PROP_NAME, b$$528], JAM.policy.p3);
    JAM.call(this._setDate, this, [b$$528, JAM.call(this._getDefaultDate, this, [b$$528], JAM.policy.p3), !0], JAM.policy.p3);
    JAM.call(this._updateDatepicker, this, [b$$528], JAM.policy.p3);
    JAM.call(this._updateAlternate, this, [b$$528], JAM.policy.p3);
    var v16219 = b$$528.settings.disabled;
    if (v16219) {
      JAM.call(this._disableDatepicker, this, [a$$557], JAM.policy.p3);
    }
    var v10592 = b$$528.dpDiv;
    JAM.call(v10592.css, v10592, ["display", "block"], JAM.policy.p3);
    return;
  }
  function v1593(a$$555) {
    function v1592(a$$556) {
      var b$$527 = 0;
      var c$$426 = 0;
      var d$$324 = 0;
      var v3854 = d$$324 < a$$556.length;
      for (;v3854;) {
        var v3853 = a$$556[d$$324].length > b$$527;
        if (v3853) {
          b$$527 = a$$556[d$$324].length;
          c$$426 = d$$324;
        }
        d$$324++;
        v3854 = d$$324 < a$$556.length;
      }
      return c$$426;
    }
    var v10596 = JAM.call(this._get, this, [a$$555, "autoSize"], JAM.policy.p3);
    if (v10596) {
      v10596 = !a$$555.inline;
    }
    if (v10596) {
      var b$$526 = new Date(2009, 11, 20);
      var c$$425 = JAM.call(this._get, this, [a$$555, "dateFormat"], JAM.policy.p3);
      if (JAM.call(c$$425.match, c$$425, [/[DM]/], JAM.policy.p3)) {
        var d$$323 = v1592;
        var v24700;
        if (JAM.call(c$$425.match, c$$425, [/MM/], JAM.policy.p3)) {
          v24700 = "monthNames";
        } else {
          v24700 = "monthNamesShort";
        }
        JAM.call(b$$526.setMonth, b$$526, [JAM.call(d$$323, null, [JAM.call(this._get, this, [a$$555, v24700], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
        var v28008;
        if (JAM.call(c$$425.match, c$$425, [/DD/], JAM.policy.p3)) {
          v28008 = "dayNames";
        } else {
          v28008 = "dayNamesShort";
        }
        JAM.call(b$$526.setDate, b$$526, [JAM.call(d$$323, null, [JAM.call(this._get, this, [a$$555, v28008], JAM.policy.p3)], JAM.policy.p3) + 20 - JAM.call(b$$526.getDay, b$$526, [], JAM.policy.p3)], JAM.policy.p3);
      }
      var v3856 = a$$555.input;
      JAM.call(v3856.attr, v3856, ["size", JAM.call(this._formatDate, this, [a$$555, b$$526], JAM.policy.p3).length], JAM.policy.p3);
    }
    return;
  }
  function v1591(a$$554, b$$525) {
    function v1590() {
      var v10600;
      var v21861 = $$$3.datepicker._datepickerShowing;
      if (v21861) {
        v21861 = $$$3.datepicker._lastInput == a$$554[0];
      }
      if (v21861) {
        var v16226 = $$$3.datepicker;
        v10600 = JAM.call(v16226._hideDatepicker, v16226, [], JAM.policy.p3);
      } else {
        var v16227;
        var v24705 = $$$3.datepicker._datepickerShowing;
        if (v24705) {
          v24705 = $$$3.datepicker._lastInput != a$$554[0];
        }
        if (v24705) {
          var v24706 = $$$3.datepicker;
          JAM.call(v24706._hideDatepicker, v24706, [], JAM.policy.p3);
          var v24707 = $$$3.datepicker;
          v16227 = JAM.call(v24707._showDatepicker, v24707, [a$$554[0]], JAM.policy.p3);
        } else {
          var v21862 = $$$3.datepicker;
          v16227 = JAM.call(v21862._showDatepicker, v21862, [a$$554[0]], JAM.policy.p3);
        }
        v10600 = v16227;
      }
      v10600;
      return !1;
    }
    var c$$424 = JAM.call(this._get, this, [b$$525, "appendText"], JAM.policy.p3);
    var d$$322 = JAM.call(this._get, this, [b$$525, "isRTL"], JAM.policy.p3);
    var v21865 = b$$525.append;
    if (v21865) {
      var v24709 = b$$525.append;
      JAM.call(v24709.remove, v24709, [], JAM.policy.p3);
    }
    if (c$$424) {
      var v26650 = b$$525;
      var v31020 = JAM.call($$$3, null, ['<span class="' + this._appendClass + '">' + c$$424 + "</span>"], JAM.policy.p3);
      v26650.append = v31020;
      var v28011;
      if (d$$322) {
        v28011 = "before";
      } else {
        v28011 = "after";
      }
      JAM.call(a$$554[v28011], a$$554, [b$$525.append], JAM.policy.p3);
    }
    JAM.call(a$$554.unbind, a$$554, ["focus", this._showDatepicker], JAM.policy.p3);
    var v10601 = b$$525.trigger;
    if (v10601) {
      var v16230 = b$$525.trigger;
      JAM.call(v16230.remove, v16230, [], JAM.policy.p3);
    }
    var e$$285 = JAM.call(this._get, this, [b$$525, "showOn"], JAM.policy.p3);
    var v10602 = e$$285 == "focus";
    if (!v10602) {
      v10602 = e$$285 == "both";
    }
    var v3859 = v10602;
    if (v3859) {
      JAM.call(a$$554.focus, a$$554, [this._showDatepicker], JAM.policy.p3);
    }
    var v10604 = e$$285 == "button";
    if (!v10604) {
      v10604 = e$$285 == "both";
    }
    if (v10604) {
      var f$$136 = JAM.call(this._get, this, [b$$525, "buttonText"], JAM.policy.p3);
      var g$$160 = JAM.call(this._get, this, [b$$525, "buttonImage"], JAM.policy.p3);
      var v16233 = b$$525;
      var v24710;
      if (JAM.call(this._get, this, [b$$525, "buttonImageOnly"], JAM.policy.p3)) {
        var v28012 = JAM.call($$$3, null, ["<img/>"], JAM.policy.p3);
        var v26653 = JAM.call(v28012.addClass, v28012, [this._triggerClass], JAM.policy.p3);
        v24710 = JAM.call(v26653.attr, v26653, [{src:g$$160, alt:f$$136, title:f$$136}], JAM.policy.p3);
      } else {
        var v28014 = JAM.call($$$3, null, ['<button type="button"></button>'], JAM.policy.p3);
        var v26655 = JAM.call(v28014.addClass, v28014, [this._triggerClass], JAM.policy.p3);
        var v28016;
        if (g$$160 == "") {
          v28016 = f$$136;
        } else {
          var v28903 = JAM.call($$$3, null, ["<img/>"], JAM.policy.p3);
          v28016 = JAM.call(v28903.attr, v28903, [{src:g$$160, alt:f$$136, title:f$$136}], JAM.policy.p3);
        }
        v24710 = JAM.call(v26655.html, v26655, [v28016], JAM.policy.p3);
      }
      var v31021 = JAM.call($$$3, null, [v24710], JAM.policy.p3);
      v16233.trigger = v31021;
      var v21867;
      if (d$$322) {
        v21867 = "before";
      } else {
        v21867 = "after";
      }
      JAM.call(a$$554[v21867], a$$554, [b$$525.trigger], JAM.policy.p3);
      var v10605 = b$$525.trigger;
      JAM.call(v10605.click, v10605, [v1590], JAM.policy.p3);
    }
    return;
  }
  function v1589(a$$551, b$$524) {
    function v1588(a$$553, c$$423) {
      return JAM.call(this._get, this, [b$$524, c$$423], JAM.policy.p3);
    }
    function v1587(a$$552, c$$422, d$$321) {
      var v3861 = b$$524.settings;
      introspect(JAM.policy.p2) {
        v3861[c$$422] = d$$321;
      }
      return;
    }
    var c$$421 = JAM.call($$$3, null, [a$$551], JAM.policy.p3);
    var v10606 = b$$524;
    var v31022 = JAM.call($$$3, null, [[]], JAM.policy.p3);
    v10606.append = v31022;
    var v10607 = b$$524;
    var v31023 = JAM.call($$$3, null, [[]], JAM.policy.p3);
    v10607.trigger = v31023;
    if (JAM.call(c$$421.hasClass, c$$421, [this.markerClassName], JAM.policy.p3)) {
      return;
    }
    JAM.call(this._attachments, this, [c$$421, b$$524], JAM.policy.p3);
    var v29499 = JAM.call(c$$421.addClass, c$$421, [this.markerClassName], JAM.policy.p3);
    var v28906 = JAM.call(v29499.keydown, v29499, [this._doKeyDown], JAM.policy.p3);
    var v28017 = JAM.call(v28906.keypress, v28906, [this._doKeyPress], JAM.policy.p3);
    var v26658 = JAM.call(v28017.keyup, v28017, [this._doKeyUp], JAM.policy.p3);
    var v24711 = JAM.call(v26658.bind, v26658, ["setData.datepicker", v1587], JAM.policy.p3);
    JAM.call(v24711.bind, v24711, ["getData.datepicker", v1588], JAM.policy.p3);
    JAM.call(this._autoSize, this, [b$$524], JAM.policy.p3);
    JAM.call($$$3.data, $$$3, [a$$551, PROP_NAME, b$$524], JAM.policy.p3);
    var v10609 = b$$524.settings.disabled;
    if (v10609) {
      JAM.call(this._disableDatepicker, this, [a$$551], JAM.policy.p3);
    }
    return;
  }
  function v1586(a$$550, b$$523) {
    var v3863 = a$$550[0].id;
    var c$$420 = JAM.call(v3863.replace, v3863, [/([^A-Za-z0-9_-])/g, "\\\\$1"], JAM.policy.p3);
    var v10611;
    if (b$$523) {
      v10611 = bindHover(JAM.call($$$3, null, ['<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'], JAM.policy.p3));
    } else {
      v10611 = this.dpDiv;
    }
    return {id:c$$420, input:a$$550, selectedDay:0, selectedMonth:0, selectedYear:0, drawMonth:0, drawYear:0, inline:b$$523, dpDiv:v10611};
  }
  function v1585(target$$27, settings) {
    var inlineSettings = null;
    var attrName;
    for (attrName in this._defaults) {
      var attrValue = JAM.call(target$$27.getAttribute, target$$27, ["date:" + attrName], JAM.policy.p3);
      if (attrValue) {
        inlineSettings = inlineSettings || {};
        try {
          if (JAM.isEval(eval)) {
            var v31024 = eval("introspect(JAM.policy.pFull) { " + attrValue + " }")
          } else {
            var v31024 = JAM.call(eval, null, [attrValue])
          }
          introspect(JAM.policy.p2) {
            inlineSettings[attrName] = v31024;
          }
        } catch (err) {
          introspect(JAM.policy.p2) {
            inlineSettings[attrName] = attrValue;
          }
        }
      }
    }
    var v3867 = target$$27.nodeName;
    var nodeName = JAM.call(v3867.toLowerCase, v3867, [], JAM.policy.p3);
    var v3868 = nodeName == "div";
    if (!v3868) {
      v3868 = nodeName == "span";
    }
    var inline = v3868;
    var v3869 = target$$27.id;
    if (!v3869) {
      this.uuid = this.uuid + 1;
      target$$27.id = "dp" + this.uuid;
    }
    var inst = JAM.call(this._newInst, this, [JAM.call($$$3, null, [target$$27], JAM.policy.p3), inline], JAM.policy.p3);
    var v31025 = JAM.call($$$3.extend, $$$3, [{}, settings || {}, inlineSettings || {}], JAM.policy.p3);
    inst.settings = v31025;
    var v10616;
    if (nodeName == "input") {
      v10616 = JAM.call(this._connectDatepicker, this, [target$$27, inst], JAM.policy.p3);
    } else {
      var v16239 = inline;
      if (v16239) {
        v16239 = JAM.call(this._inlineDatepicker, this, [target$$27, inst], JAM.policy.p3);
      }
      v10616 = v16239;
    }
    v10616;
    return;
  }
  function v1584(a$$549) {
    extendRemove(this._defaults, a$$549 || {});
    return this;
  }
  function v1583() {
    return this.dpDiv;
  }
  function v1582() {
    var v3871 = this.debug;
    if (v3871) {
      var v10619 = console.log;
      JAM.call(v10619.apply, v10619, ["", arguments], JAM.policy.p3);
    }
    return;
  }
  function Datepicker() {
    this.debug = !1;
    this._curInst = null;
    this._keyEvent = !1;
    this._disabledInputs = [];
    this._datepickerShowing = !1;
    this._inDialog = !1;
    this._mainDivId = "ui-datepicker-div";
    this._inlineClass = "ui-datepicker-inline";
    this._appendClass = "ui-datepicker-append";
    this._triggerClass = "ui-datepicker-trigger";
    this._dialogClass = "ui-datepicker-dialog";
    this._disableClass = "ui-datepicker-disabled";
    this._unselectableClass = "ui-datepicker-unselectable";
    this._currentClass = "ui-datepicker-current-day";
    this._dayOverClass = "ui-datepicker-days-cell-over";
    this.regional = [];
    this.regional[""] = {closeText:"Done", prevText:"Prev", nextText:"Next", currentText:"Today", monthNames:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthNamesShort:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayNames:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayNamesShort:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayNamesMin:["Su", 
    "Mo", "Tu", "We", "Th", "Fr", "Sa"], weekHeader:"Wk", dateFormat:"mm/dd/yy", firstDay:0, isRTL:!1, showMonthAfterYear:!1, yearSuffix:""};
    this._defaults = {showOn:"focus", showAnim:"fadeIn", showOptions:{}, defaultDate:null, appendText:"", buttonText:"...", buttonImage:"", buttonImageOnly:!1, hideIfNoPrevNext:!1, navigationAsDateFormat:!1, gotoCurrent:!1, changeMonth:!1, changeYear:!1, yearRange:"c-10:c+10", showOtherMonths:!1, selectOtherMonths:!1, showWeek:!1, calculateWeek:this.iso8601Week, shortYearCutoff:"+10", minDate:null, maxDate:null, duration:"fast", beforeShowDay:null, beforeShow:null, onSelect:null, onChangeMonthYear:null, 
    onClose:null, numberOfMonths:1, showCurrentAtPos:0, stepMonths:1, stepBigMonths:12, altField:"", altFormat:"", constrainInput:!0, showButtonPanel:!1, autoSize:!1, disabled:!1};
    JAM.call($$$3.extend, $$$3, [this._defaults, this.regional[""]], JAM.policy.p3);
    var v31026 = bindHover(JAM.call($$$3, null, ['<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'], JAM.policy.p3));
    this.dpDiv = v31026;
    return;
  }
  function bindHover(a$$545) {
    function v1581(c$$418) {
      var v3872 = JAM.call($$$3, null, [c$$418.target], JAM.policy.p3);
      var d$$320 = JAM.call(v3872.closest, v3872, [b$$521], JAM.policy.p3);
      var v16244 = $$$3.datepicker;
      var v21886;
      if (instActive.inline) {
        v21886 = JAM.call(a$$545.parent, a$$545, [], JAM.policy.p3)[0];
      } else {
        v21886 = instActive.input[0];
      }
      var v10622 = JAM.call(v16244._isDisabledDatepicker, v16244, [v21886], JAM.policy.p3);
      if (!v10622) {
        v10622 = !d$$320.length;
      }
      if (v10622) {
        return;
      }
      var v24718 = JAM.call(d$$320.parents, d$$320, [".ui-datepicker-calendar"], JAM.policy.p3);
      var v21887 = JAM.call(v24718.find, v24718, ["a"], JAM.policy.p3);
      JAM.call(v21887.removeClass, v21887, ["ui-state-hover"], JAM.policy.p3);
      JAM.call(d$$320.addClass, d$$320, ["ui-state-hover"], JAM.policy.p3);
      var v16248 = JAM.call(d$$320.hasClass, d$$320, ["ui-datepicker-prev"], JAM.policy.p3);
      if (v16248) {
        JAM.call(d$$320.addClass, d$$320, ["ui-datepicker-prev-hover"], JAM.policy.p3);
      }
      var v10623 = JAM.call(d$$320.hasClass, d$$320, ["ui-datepicker-next"], JAM.policy.p3);
      if (v10623) {
        JAM.call(d$$320.addClass, d$$320, ["ui-datepicker-next-hover"], JAM.policy.p3);
      }
      return;
    }
    function v1580(a$$546) {
      var v3874 = JAM.call($$$3, null, [a$$546.target], JAM.policy.p3);
      var c$$417 = JAM.call(v3874.closest, v3874, [b$$521], JAM.policy.p3);
      if (!c$$417.length) {
        return;
      }
      JAM.call(c$$417.removeClass, c$$417, ["ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover"], JAM.policy.p3);
      return;
    }
    var b$$521 = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
    var v3876 = JAM.call(a$$545.bind, a$$545, ["mouseout", v1580], JAM.policy.p3);
    return JAM.call(v3876.bind, v3876, ["mouseover", v1581], JAM.policy.p3);
  }
  function extendRemove(a$$547, b$$522) {
    JAM.call($$$3.extend, $$$3, [a$$547, b$$522], JAM.policy.p3);
    var c$$419;
    for (c$$419 in b$$522) {
      var v10626 = b$$522[c$$419] == null;
      if (!v10626) {
        v10626 = b$$522[c$$419] == undefined$$1;
      }
      if (v10626) {
        introspect(JAM.policy.p2) {
          a$$547[c$$419] = b$$522[c$$419];
        }
      }
    }
    return;
  }
  JAM.call($$$3.extend, $$$3, [$$$3.ui, {datepicker:{version:"1.8.24"}}], JAM.policy.p3);
  var PROP_NAME = "datepicker";
  var v3880 = new Date;
  var dpuuid = JAM.call(v3880.getTime, v3880, [], JAM.policy.p3);
  var instActive;
  JAM.call($$$3.extend, $$$3, [Datepicker.prototype, {markerClassName:"hasDatepicker", maxRows:4, log:v1582, _widgetDatepicker:v1583, setDefaults:v1584, _attachDatepicker:v1585, _newInst:v1586, _connectDatepicker:v1589, _attachments:v1591, _autoSize:v1593, _inlineDatepicker:v1596, _dialogDatepicker:v1597, _destroyDatepicker:v1598, _enableDatepicker:v1601, _disableDatepicker:v1604, _isDisabledDatepicker:v1605, _getInst:v1606, _optionDatepicker:v1607, _changeDatepicker:v1608, _refreshDatepicker:v1609, 
  _setDateDatepicker:v1610, _getDateDatepicker:v1611, _doKeyDown:v1612, _doKeyPress:v1613, _doKeyUp:v1614, _showDatepicker:v1617, _updateDatepicker:v1619, _getBorders:v1620, _checkOffset:v1621, _findPos:v1622, _hideDatepicker:v1624, _tidyDialog:v1625, _checkExternalClick:v1626, _adjustDate:v1627, _gotoToday:v1628, _selectMonthYear:v1629, _selectDay:v1630, _clearDate:v1631, _selectDate:v1632, _updateAlternate:v1634, noWeekends:v1635, iso8601Week:v1636, parseDate:v1640, ATOM:"yy-mm-dd", COOKIE:"D, dd M yy", 
  ISO_8601:"yy-mm-dd", RFC_822:"D, d M y", RFC_850:"DD, dd-M-y", RFC_1036:"D, d M y", RFC_1123:"D, d M yy", RFC_2822:"D, d M yy", RSS:"D, d M y", TICKS:"!", TIMESTAMP:"@", W3C:"yy-mm-dd", _ticksTo1970:(718685 + JAM.call(Math.floor, Math, [492.5], JAM.policy.p3) - JAM.call(Math.floor, Math, [19.7], JAM.policy.p3) + JAM.call(Math.floor, Math, [4.925], JAM.policy.p3)) * 24 * 60 * 60 * 1E7, formatDate:v1641, _possibleChars:v1642, _get:v1643, _setDateFromField:v1644, _getDefaultDate:v1645, _determineDate:v1646, 
  _daylightSavingAdjust:v1647, _setDate:v1648, _getDate:v1649, _attachHandlers:v1658, _generateHTML:v1659, _generateMonthYearHeader:v1661, _adjustInstDate:v1662, _restrictMinMax:v1663, _notifyChange:v1664, _getNumberOfMonths:v1665, _getMinMaxDate:v1666, _getDaysInMonth:v1667, _getFirstDayOfMonth:v1668, _canAdjustMonth:v1669, _isInRange:v1670, _getFormatConfig:v1671, _formatDate:v1672}], JAM.policy.p3);
  $$$3.fn.datepicker = v1674;
  var v26667 = $$$3;
  var v31027 = new Datepicker;
  v26667.datepicker = v31027;
  $$$3.datepicker.initialized = !1;
  var v21888 = $$$3.datepicker;
  var v24720 = new Date;
  var v31028 = JAM.call(v24720.getTime, v24720, [], JAM.policy.p3);
  v21888.uuid = v31028;
  $$$3.datepicker.version = "1.8.24";
  var v10628 = "DP_jQuery_" + dpuuid;
  introspect(JAM.policy.p2) {
    window[v10628] = $$$3;
  }
  return;
}
function v1579(a$$540, b$$509) {
  function v1578() {
    function v1577() {
      var v10629 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      return JAM.call(v10629.button, v10629, ["widget"], JAM.policy.p3)[0];
    }
    var v16253 = this.element;
    JAM.call(v16253.removeClass, v16253, ["ui-buttonset"], JAM.policy.p3);
    var v26668 = this.buttons;
    var v24721 = JAM.call(v26668.map, v26668, [v1577], JAM.policy.p3);
    var v21889 = JAM.call(v24721.removeClass, v24721, ["ui-corner-left ui-corner-right"], JAM.policy.p3);
    var v16254 = JAM.call(v21889.end, v21889, [], JAM.policy.p3);
    JAM.call(v16254.button, v16254, ["destroy"], JAM.policy.p3);
    var v10630 = a$$540.Widget.prototype.destroy;
    JAM.call(v10630.call, v10630, [this], JAM.policy.p3);
    return;
  }
  function v1576() {
    function v1575() {
      var v10631 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      return JAM.call(v10631.button, v10631, ["widget"], JAM.policy.p3)[0];
    }
    var v10632 = this.element;
    var b$$520 = JAM.call(v10632.css, v10632, ["direction"], JAM.policy.p3) === "rtl";
    var v30725 = this.element;
    var v30671 = JAM.call(v30725.find, v30725, [this.options.items], JAM.policy.p3);
    var v30592 = JAM.call(v30671.filter, v30671, [":ui-button"], JAM.policy.p3);
    var v30458 = JAM.call(v30592.button, v30592, ["refresh"], JAM.policy.p3);
    var v30318 = JAM.call(v30458.end, v30458, [], JAM.policy.p3);
    var v30107 = JAM.call(v30318.not, v30318, [":ui-button"], JAM.policy.p3);
    var v29852 = JAM.call(v30107.button, v30107, [], JAM.policy.p3);
    var v29502 = JAM.call(v29852.end, v29852, [], JAM.policy.p3);
    var v28909 = JAM.call(v29502.map, v29502, [v1575], JAM.policy.p3);
    var v28022 = JAM.call(v28909.removeClass, v28909, ["ui-corner-all ui-corner-left ui-corner-right"], JAM.policy.p3);
    var v26669 = JAM.call(v28022.filter, v28022, [":first"], JAM.policy.p3);
    var v28023;
    if (b$$520) {
      v28023 = "ui-corner-right";
    } else {
      v28023 = "ui-corner-left";
    }
    var v24722 = JAM.call(v26669.addClass, v26669, [v28023], JAM.policy.p3);
    var v21891 = JAM.call(v24722.end, v24722, [], JAM.policy.p3);
    var v16256 = JAM.call(v21891.filter, v21891, [":last"], JAM.policy.p3);
    var v21892;
    if (b$$520) {
      v21892 = "ui-corner-left";
    } else {
      v21892 = "ui-corner-right";
    }
    var v10633 = JAM.call(v16256.addClass, v16256, [v21892], JAM.policy.p3);
    var v3884 = JAM.call(v10633.end, v10633, [], JAM.policy.p3);
    var v31029 = JAM.call(v3884.end, v3884, [], JAM.policy.p3);
    this.buttons = v31029;
    return;
  }
  function v1574(b$$519, c$$416) {
    var v10634 = b$$519 === "disabled";
    if (v10634) {
      var v16258 = this.buttons;
      JAM.call(v16258.button, v16258, ["option", b$$519, c$$416], JAM.policy.p3);
    }
    var v10635 = a$$540.Widget.prototype._setOption;
    JAM.call(v10635.apply, v10635, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1573() {
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    return;
  }
  function v1572() {
    var v3885 = this.element;
    JAM.call(v3885.addClass, v3885, ["ui-buttonset"], JAM.policy.p3);
    return;
  }
  function v1571() {
    if (this.type === "input") {
      var v3886 = this.options.label;
      if (v3886) {
        var v10638 = this.element;
        JAM.call(v10638.val, v10638, [this.options.label], JAM.policy.p3);
      }
      return;
    }
    var v3888 = this.buttonElement;
    var b$$518 = JAM.call(v3888.removeClass, v3888, [i$$186], JAM.policy.p3);
    var v21894 = JAM.call(a$$540, null, ["<span></span>", this.element[0].ownerDocument], JAM.policy.p3);
    var v16261 = JAM.call(v21894.addClass, v21894, ["ui-button-text"], JAM.policy.p3);
    var v10640 = JAM.call(v16261.html, v16261, [this.options.label], JAM.policy.p3);
    var v3889 = JAM.call(v10640.appendTo, v10640, [JAM.call(b$$518.empty, b$$518, [], JAM.policy.p3)], JAM.policy.p3);
    var c$$415 = JAM.call(v3889.text, v3889, [], JAM.policy.p3);
    var d$$319 = this.options.icons;
    var v3891 = d$$319.primary;
    if (v3891) {
      v3891 = d$$319.secondary;
    }
    var e$$284 = v3891;
    var f$$135 = [];
    var v10642;
    var v21896 = d$$319.primary;
    if (!v21896) {
      v21896 = d$$319.secondary;
    }
    if (v21896) {
      var v26672 = this.options.text;
      if (v26672) {
        var v29503;
        if (e$$284) {
          v29503 = "s";
        } else {
          var v29853;
          if (d$$319.primary) {
            v29853 = "-primary";
          } else {
            v29853 = "-secondary";
          }
          v29503 = v29853;
        }
        JAM.call(f$$135.push, f$$135, ["ui-button-text-icon" + v29503], JAM.policy.p3);
      }
      var v26673 = d$$319.primary;
      if (v26673) {
        JAM.call(b$$518.prepend, b$$518, ["<span class='ui-button-icon-primary ui-icon " + d$$319.primary + "'></span>"], JAM.policy.p3);
      }
      var v24725 = d$$319.secondary;
      if (v24725) {
        JAM.call(b$$518.append, b$$518, ["<span class='ui-button-icon-secondary ui-icon " + d$$319.secondary + "'></span>"], JAM.policy.p3);
      }
      var v21897 = this.options.text;
      if (!v21897) {
        var v28029;
        if (e$$284) {
          v28029 = "ui-button-icons-only";
        } else {
          v28029 = "ui-button-icon-only";
        }
        JAM.call(f$$135.push, f$$135, [v28029], JAM.policy.p3);
        var v26676 = this.hasTitle;
        if (!v26676) {
          v26676 = JAM.call(b$$518.attr, b$$518, ["title", c$$415], JAM.policy.p3);
        }
        v21897 = v26676;
      }
      v10642 = v21897;
    } else {
      v10642 = JAM.call(f$$135.push, f$$135, ["ui-button-text-only"], JAM.policy.p3);
    }
    v10642;
    JAM.call(b$$518.addClass, b$$518, [JAM.call(f$$135.join, f$$135, [" "], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1570() {
    function v1569() {
      var v3892;
      var v16264 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      if (JAM.call(v16264.is, v16264, [":checked"], JAM.policy.p3)) {
        var v21898 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        var v16265 = JAM.call(v21898.button, v21898, ["widget"], JAM.policy.p3);
        var v10644 = JAM.call(v16265.addClass, v16265, ["ui-state-active"], JAM.policy.p3);
        v3892 = JAM.call(v10644.attr, v10644, ["aria-pressed", "true"], JAM.policy.p3);
      } else {
        var v21899 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        var v16266 = JAM.call(v21899.button, v21899, ["widget"], JAM.policy.p3);
        var v10645 = JAM.call(v16266.removeClass, v16266, ["ui-state-active"], JAM.policy.p3);
        v3892 = JAM.call(v10645.attr, v10645, ["aria-pressed", "false"], JAM.policy.p3);
      }
      v3892;
      return;
    }
    var v3893 = this.element;
    var b$$517 = JAM.call(v3893.is, v3893, [":disabled"], JAM.policy.p3);
    var v10647 = b$$517 !== this.options.disabled;
    if (v10647) {
      JAM.call(this._setOption, this, ["disabled", b$$517], JAM.policy.p3);
    }
    var v10648;
    if (this.type === "radio") {
      var v16268 = k$$64(this.element[0]);
      v10648 = JAM.call(v16268.each, v16268, [v1569], JAM.policy.p3);
    } else {
      var v16269 = this.type === "checkbox";
      if (v16269) {
        var v21904;
        var v26677 = this.element;
        if (JAM.call(v26677.is, v26677, [":checked"], JAM.policy.p3)) {
          var v26678 = this.buttonElement;
          var v24729 = JAM.call(v26678.addClass, v26678, ["ui-state-active"], JAM.policy.p3);
          v21904 = JAM.call(v24729.attr, v24729, ["aria-pressed", "true"], JAM.policy.p3);
        } else {
          var v26679 = this.buttonElement;
          var v24730 = JAM.call(v26679.removeClass, v26679, ["ui-state-active"], JAM.policy.p3);
          v21904 = JAM.call(v24730.attr, v24730, ["aria-pressed", "false"], JAM.policy.p3);
        }
        v16269 = v21904;
      }
      v10648 = v16269;
    }
    v10648;
    return;
  }
  function v1568(b$$516, c$$414) {
    var v3894 = a$$540.Widget.prototype._setOption;
    JAM.call(v3894.apply, v3894, [this, arguments], JAM.policy.p3);
    if (b$$516 === "disabled") {
      var v3895;
      if (c$$414) {
        var v10650 = this.element;
        v3895 = JAM.call(v10650.propAttr, v10650, ["disabled", !0], JAM.policy.p3);
      } else {
        var v10652 = this.element;
        v3895 = JAM.call(v10652.propAttr, v10652, ["disabled", !1], JAM.policy.p3);
      }
      v3895;
      return;
    }
    JAM.call(this._resetButton, this, [], JAM.policy.p3);
    return;
  }
  function v1567() {
    var v21905 = this.element;
    JAM.call(v21905.removeClass, v21905, ["ui-helper-hidden-accessible"], JAM.policy.p3);
    var v28031 = this.buttonElement;
    var v26680 = JAM.call(v28031.removeClass, v28031, [g$$159 + " " + h$$130 + " " + i$$186], JAM.policy.p3);
    var v24732 = JAM.call(v26680.removeAttr, v26680, ["role"], JAM.policy.p3);
    var v21906 = JAM.call(v24732.removeAttr, v24732, ["aria-pressed"], JAM.policy.p3);
    var v26681 = this.buttonElement;
    var v24733 = JAM.call(v26681.find, v26681, [".ui-button-text"], JAM.policy.p3);
    JAM.call(v21906.html, v21906, [JAM.call(v24733.html, v24733, [], JAM.policy.p3)], JAM.policy.p3);
    var v16272 = this.hasTitle;
    if (!v16272) {
      var v21908 = this.buttonElement;
      JAM.call(v21908.removeAttr, v21908, ["title"], JAM.policy.p3);
    }
    var v10654 = a$$540.Widget.prototype.destroy;
    JAM.call(v10654.call, v10654, [this], JAM.policy.p3);
    return;
  }
  function v1566() {
    return this.buttonElement;
  }
  function v1565() {
    var v3897;
    var v16274 = this.element;
    if (JAM.call(v16274.is, v16274, [":checkbox"], JAM.policy.p3)) {
      v3897 = this.type = "checkbox";
    } else {
      var v10655;
      var v21911 = this.element;
      if (JAM.call(v21911.is, v21911, [":radio"], JAM.policy.p3)) {
        v10655 = this.type = "radio";
      } else {
        var v16275;
        var v24734 = this.element;
        if (JAM.call(v24734.is, v24734, ["input"], JAM.policy.p3)) {
          v16275 = this.type = "input";
        } else {
          v16275 = this.type = "button";
        }
        v10655 = v16275;
      }
      v3897 = v10655;
    }
    v3897;
    var v10657 = this.type === "checkbox";
    if (!v10657) {
      v10657 = this.type === "radio";
    }
    if (v10657) {
      var v10658 = this.element;
      var v3898 = JAM.call(v10658.parents, v10658, [], JAM.policy.p3);
      var a$$544 = JAM.call(v3898.filter, v3898, [":last"], JAM.policy.p3);
      var v16280 = this.element;
      var b$$515 = "label[for='" + JAM.call(v16280.attr, v16280, ["id"], JAM.policy.p3) + "']";
      var v31030 = JAM.call(a$$544.find, a$$544, [b$$515], JAM.policy.p3);
      this.buttonElement = v31030;
      var v16281 = this.buttonElement.length;
      if (!v16281) {
        var v26682;
        if (a$$544.length) {
          v26682 = JAM.call(a$$544.siblings, a$$544, [], JAM.policy.p3);
        } else {
          var v28033 = this.element;
          v26682 = JAM.call(v28033.siblings, v28033, [], JAM.policy.p3);
        }
        a$$544 = v26682;
        var v31031 = JAM.call(a$$544.filter, a$$544, [b$$515], JAM.policy.p3);
        this.buttonElement = v31031;
        var v24735 = this.buttonElement.length;
        if (!v24735) {
          var v31032 = JAM.call(a$$544.find, a$$544, [b$$515], JAM.policy.p3);
          this.buttonElement = v31032;
        }
      }
      var v10660 = this.element;
      JAM.call(v10660.addClass, v10660, ["ui-helper-hidden-accessible"], JAM.policy.p3);
      var v3900 = this.element;
      var c$$413 = JAM.call(v3900.is, v3900, [":checked"], JAM.policy.p3);
      if (c$$413) {
        var v16282 = this.buttonElement;
        JAM.call(v16282.addClass, v16282, ["ui-state-active"], JAM.policy.p3);
      }
      var v10661 = this.buttonElement;
      JAM.call(v10661.attr, v10661, ["aria-pressed", c$$413], JAM.policy.p3);
    } else {
      this.buttonElement = this.element;
    }
    return;
  }
  function v1564() {
    function v1563(b$$514) {
      var v3902 = b$$514.keyCode === a$$540.ui.keyCode.SPACE;
      if (v3902) {
        var v10664 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        JAM.call(v10664.click, v10664, [], JAM.policy.p3);
      }
      return;
    }
    function v1562() {
      var v3903 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v3903.removeClass, v3903, ["ui-state-active"], JAM.policy.p3);
      return;
    }
    function v1561(b$$513) {
      if (h$$131.disabled) {
        return !1;
      }
      var v10665 = b$$513.keyCode == a$$540.ui.keyCode.SPACE;
      if (!v10665) {
        v10665 = b$$513.keyCode == a$$540.ui.keyCode.ENTER;
      }
      var v3905 = v10665;
      if (v3905) {
        var v10666 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        JAM.call(v10666.addClass, v10666, ["ui-state-active"], JAM.policy.p3);
      }
      return;
    }
    function v1560() {
      if (h$$131.disabled) {
        return !1;
      }
      var v3907 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v3907.removeClass, v3907, ["ui-state-active"], JAM.policy.p3);
      return;
    }
    function v1559() {
      function v1558() {
        c$$410 = null;
        return;
      }
      if (h$$131.disabled) {
        return !1;
      }
      var v16289 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v16289.addClass, v16289, ["ui-state-active"], JAM.policy.p3);
      c$$410 = this;
      var v10667 = JAM.call(a$$540, null, [document], JAM.policy.p3);
      JAM.call(v10667.one, v10667, ["mouseup", v1558], JAM.policy.p3);
      return;
    }
    function v1557() {
      function v1556() {
        var v10668 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        return JAM.call(v10668.button, v10668, ["widget"], JAM.policy.p3)[0];
      }
      var v10669 = h$$131.disabled;
      if (!v10669) {
        v10669 = f$$134;
      }
      if (v10669) {
        return !1;
      }
      var v10670 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v10670.addClass, v10670, ["ui-state-active"], JAM.policy.p3);
      var v10671 = b$$512.buttonElement;
      JAM.call(v10671.attr, v10671, ["aria-pressed", "true"], JAM.policy.p3);
      var c$$412 = b$$512.element[0];
      var v21918 = k$$64(c$$412);
      var v16291 = JAM.call(v21918.not, v21918, [c$$412], JAM.policy.p3);
      var v10672 = JAM.call(v16291.map, v16291, [v1556], JAM.policy.p3);
      var v3912 = JAM.call(v10672.removeClass, v10672, ["ui-state-active"], JAM.policy.p3);
      JAM.call(v3912.attr, v3912, ["aria-pressed", "false"], JAM.policy.p3);
      return;
    }
    function v1555() {
      var v10673 = h$$131.disabled;
      if (!v10673) {
        v10673 = f$$134;
      }
      if (v10673) {
        return !1;
      }
      var v10674 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v10674.toggleClass, v10674, ["ui-state-active"], JAM.policy.p3);
      var v10675 = b$$512.buttonElement;
      JAM.call(v10675.attr, v10675, ["aria-pressed", b$$512.element[0].checked], JAM.policy.p3);
      return;
    }
    function v1554(a$$543) {
      if (h$$131.disabled) {
        return;
      }
      var v10677 = d$$317 !== a$$543.pageX;
      if (!v10677) {
        v10677 = e$$282 !== a$$543.pageY;
      }
      if (v10677) {
        f$$134 = !0;
      }
      return;
    }
    function v1553(a$$542) {
      if (h$$131.disabled) {
        return;
      }
      f$$134 = !1;
      d$$317 = a$$542.pageX;
      e$$282 = a$$542.pageY;
      return;
    }
    function v1552() {
      if (f$$134) {
        return;
      }
      JAM.call(b$$512.refresh, b$$512, [], JAM.policy.p3);
      return;
    }
    function v1551() {
      var v3917 = b$$512.buttonElement;
      JAM.call(v3917.removeClass, v3917, [m$$43], JAM.policy.p3);
      return;
    }
    function v1550() {
      var v3918 = b$$512.buttonElement;
      JAM.call(v3918.addClass, v3918, [m$$43], JAM.policy.p3);
      return;
    }
    function v1549(a$$541) {
      var v3919 = h$$131.disabled;
      if (v3919) {
        JAM.call(a$$541.preventDefault, a$$541, [], JAM.policy.p3);
        JAM.call(a$$541.stopImmediatePropagation, a$$541, [], JAM.policy.p3);
      }
      return;
    }
    function v1548() {
      if (h$$131.disabled) {
        return;
      }
      var v3921 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v3921.removeClass, v3921, [l$$72], JAM.policy.p3);
      return;
    }
    function v1547() {
      if (h$$131.disabled) {
        return;
      }
      var v10678 = JAM.call(a$$540, null, [this], JAM.policy.p3);
      JAM.call(v10678.addClass, v10678, ["ui-state-hover"], JAM.policy.p3);
      var v10679 = this === c$$410;
      if (v10679) {
        var v16297 = JAM.call(a$$540, null, [this], JAM.policy.p3);
        JAM.call(v16297.addClass, v16297, ["ui-state-active"], JAM.policy.p3);
      }
      return;
    }
    var v26685 = this.element;
    var v24738 = JAM.call(v26685.closest, v26685, ["form"], JAM.policy.p3);
    var v21920 = JAM.call(v24738.unbind, v24738, ["reset.button"], JAM.policy.p3);
    JAM.call(v21920.bind, v21920, ["reset.button", j$$95], JAM.policy.p3);
    var v21921;
    if (typeof this.options.disabled != "boolean") {
      var v24739 = this.options;
      var v28915 = this.element;
      v21921 = v24739.disabled = !!JAM.call(v28915.propAttr, v28915, ["disabled"], JAM.policy.p3);
    } else {
      var v24740 = this.element;
      v21921 = JAM.call(v24740.propAttr, v24740, ["disabled", this.options.disabled], JAM.policy.p3);
    }
    v21921;
    JAM.call(this._determineButtonType, this, [], JAM.policy.p3);
    var v21922 = this.buttonElement;
    this.hasTitle = !!JAM.call(v21922.attr, v21922, ["title"], JAM.policy.p3);
    var b$$512 = this;
    var h$$131 = this.options;
    var v3923 = this.type === "checkbox";
    if (!v3923) {
      v3923 = this.type === "radio";
    }
    var i$$187 = v3923;
    var v10684;
    if (i$$187) {
      v10684 = "";
    } else {
      v10684 = " ui-state-active";
    }
    var l$$72 = "ui-state-hover" + v10684;
    var m$$43 = "ui-state-focus";
    var v28037 = h$$131.label === null;
    if (v28037) {
      var v28917 = h$$131;
      var v29506 = this.buttonElement;
      var v31033 = JAM.call(v29506.html, v29506, [], JAM.policy.p3);
      v28917.label = v31033;
    }
    var v30109 = this.buttonElement;
    var v29855 = JAM.call(v30109.addClass, v30109, [g$$159], JAM.policy.p3);
    var v29507 = JAM.call(v29855.attr, v29855, ["role", "button"], JAM.policy.p3);
    var v28918 = JAM.call(v29507.bind, v29507, ["mouseenter.button", v1547], JAM.policy.p3);
    var v28038 = JAM.call(v28918.bind, v28918, ["mouseleave.button", v1548], JAM.policy.p3);
    JAM.call(v28038.bind, v28038, ["click.button", v1549], JAM.policy.p3);
    var v28039 = this.element;
    var v26689 = JAM.call(v28039.bind, v28039, ["focus.button", v1550], JAM.policy.p3);
    JAM.call(v26689.bind, v26689, ["blur.button", v1551], JAM.policy.p3);
    if (i$$187) {
      var v28040 = this.element;
      JAM.call(v28040.bind, v28040, ["change.button", v1552], JAM.policy.p3);
      var v28919 = this.buttonElement;
      var v28041 = JAM.call(v28919.bind, v28919, ["mousedown.button", v1553], JAM.policy.p3);
      JAM.call(v28041.bind, v28041, ["mouseup.button", v1554], JAM.policy.p3);
    }
    var v21923;
    if (this.type === "checkbox") {
      var v24743 = this.buttonElement;
      v21923 = JAM.call(v24743.bind, v24743, ["click.button", v1555], JAM.policy.p3);
    } else {
      var v24744;
      if (this.type === "radio") {
        var v26691 = this.buttonElement;
        v24744 = JAM.call(v26691.bind, v26691, ["click.button", v1557], JAM.policy.p3);
      } else {
        var v29856 = this.buttonElement;
        var v29508 = JAM.call(v29856.bind, v29856, ["mousedown.button", v1559], JAM.policy.p3);
        var v28920 = JAM.call(v29508.bind, v29508, ["mouseup.button", v1560], JAM.policy.p3);
        var v28043 = JAM.call(v28920.bind, v28920, ["keydown.button", v1561], JAM.policy.p3);
        JAM.call(v28043.bind, v28043, ["keyup.button", v1562], JAM.policy.p3);
        var v28921 = this.buttonElement;
        var v28044 = JAM.call(v28921.is, v28921, ["a"], JAM.policy.p3);
        if (v28044) {
          var v28922 = this.buttonElement;
          v28044 = JAM.call(v28922.keyup, v28922, [v1563], JAM.policy.p3);
        }
        v24744 = v28044;
      }
      v21923 = v24744;
    }
    v21923;
    JAM.call(this._setOption, this, ["disabled", h$$131.disabled], JAM.policy.p3);
    JAM.call(this._resetButton, this, [], JAM.policy.p3);
    return;
  }
  function k$$64(b$$511) {
    function v1545() {
      return !this.form;
    }
    var c$$411 = b$$511.name;
    var d$$318 = b$$511.form;
    var e$$283 = JAM.call(a$$540, null, [[]], JAM.policy.p3);
    if (c$$411) {
      var v16300;
      if (d$$318) {
        var v21924 = JAM.call(a$$540, null, [d$$318], JAM.policy.p3);
        v16300 = e$$283 = JAM.call(v21924.find, v21924, ["[name='" + c$$411 + "']"], JAM.policy.p3);
      } else {
        var v21926 = JAM.call(a$$540, null, ["[name='" + c$$411 + "']", b$$511.ownerDocument], JAM.policy.p3);
        v16300 = e$$283 = JAM.call(v21926.filter, v21926, [v1545], JAM.policy.p3);
      }
      v16300;
    }
    return e$$283;
  }
  function j$$95() {
    function v1546() {
      JAM.call(b$$510.button, b$$510, ["refresh"], JAM.policy.p3);
      return;
    }
    var v3926 = JAM.call(a$$540, null, [this], JAM.policy.p3);
    var b$$510 = JAM.call(v3926.find, v3926, [":ui-button"], JAM.policy.p3);
    JAM.call(setTimeout, null, [v1546, 1]);
    return;
  }
  var c$$410;
  var d$$317;
  var e$$282;
  var f$$134;
  var g$$159 = "ui-button ui-widget ui-state-default ui-corner-all";
  var h$$130 = "ui-state-hover ui-state-active ";
  var i$$186 = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only";
  JAM.call(a$$540.widget, a$$540, ["ui.button", {options:{disabled:null, text:!0, label:null, icons:{primary:null, secondary:null}}, _create:v1564, _determineButtonType:v1565, widget:v1566, destroy:v1567, _setOption:v1568, refresh:v1570, _resetButton:v1571}], JAM.policy.p3);
  JAM.call(a$$540.widget, a$$540, ["ui.buttonset", {options:{items:":button, :submit, :reset, :checkbox, :radio, a, :data(button)"}, _create:v1572, _init:v1573, _setOption:v1574, refresh:v1576, destroy:v1578}], JAM.policy.p3);
  return;
}
function v1544(a$$534) {
  function v1543(a$$539) {
    JAM.call(this._trigger, this, ["selected", a$$539, {item:this.active}], JAM.policy.p3);
    return;
  }
  function v1542() {
    var v10688 = this.element;
    var v3928 = JAM.call(v10688.height, v10688, [], JAM.policy.p3);
    var v10689 = this.element;
    var v16303;
    if (a$$534.fn.prop) {
      v16303 = "prop";
    } else {
      v16303 = "attr";
    }
    return v3928 < JAM.call(v10689[v16303], v10689, ["scrollHeight"], JAM.policy.p3);
  }
  function v1541(b$$507) {
    function v1540() {
      var v24750 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var v3930 = JAM.call(v24750.offset, v24750, [], JAM.policy.p3).top - c$$409 + d$$316;
      var v10692 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var b$$508 = v3930 - JAM.call(v10692.height, v10692, [], JAM.policy.p3);
      var v3932 = b$$508 < 10;
      if (v3932) {
        v3932 = b$$508 > -10;
      }
      return v3932;
    }
    if (JAM.call(this.hasScroll, this, [], JAM.policy.p3)) {
      var v10693 = !this.active;
      if (!v10693) {
        v10693 = JAM.call(this.first, this, [], JAM.policy.p3);
      }
      if (v10693) {
        var v10694 = this.element;
        JAM.call(this.activate, this, [b$$507, JAM.call(v10694.children, v10694, [".ui-menu-item:last"], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      var v10695 = this.active;
      var c$$409 = JAM.call(v10695.offset, v10695, [], JAM.policy.p3).top;
      var v3936 = this.element;
      var d$$316 = JAM.call(v3936.height, v3936, [], JAM.policy.p3);
      var v10696 = this.element;
      var v3937 = JAM.call(v10696.children, v10696, [".ui-menu-item"], JAM.policy.p3);
      var e$$281 = JAM.call(v3937.filter, v3937, [v1540], JAM.policy.p3);
      var v10697 = e$$281.length;
      if (!v10697) {
        var v16307 = this.element;
        e$$281 = JAM.call(v16307.children, v16307, [".ui-menu-item:first"], JAM.policy.p3);
      }
      JAM.call(this.activate, this, [b$$507, e$$281], JAM.policy.p3);
    } else {
      var v16309 = this.element;
      var v10698 = JAM.call(v16309.children, v16309, [".ui-menu-item"], JAM.policy.p3);
      var v16310;
      var v24751 = !this.active;
      if (!v24751) {
        v24751 = JAM.call(this.first, this, [], JAM.policy.p3);
      }
      if (v24751) {
        v16310 = ":last";
      } else {
        v16310 = ":first";
      }
      JAM.call(this.activate, this, [b$$507, JAM.call(v10698.filter, v10698, [v16310], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1539(b$$505) {
    function v1538() {
      var v24752 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var v3940 = JAM.call(v24752.offset, v24752, [], JAM.policy.p3).top - c$$408 - d$$315;
      var v10701 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      var b$$506 = v3940 + JAM.call(v10701.height, v10701, [], JAM.policy.p3);
      var v3942 = b$$506 < 10;
      if (v3942) {
        v3942 = b$$506 > -10;
      }
      return v3942;
    }
    if (JAM.call(this.hasScroll, this, [], JAM.policy.p3)) {
      var v10702 = !this.active;
      if (!v10702) {
        v10702 = JAM.call(this.last, this, [], JAM.policy.p3);
      }
      if (v10702) {
        var v10703 = this.element;
        JAM.call(this.activate, this, [b$$505, JAM.call(v10703.children, v10703, [".ui-menu-item:first"], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      var v10704 = this.active;
      var c$$408 = JAM.call(v10704.offset, v10704, [], JAM.policy.p3).top;
      var v3946 = this.element;
      var d$$315 = JAM.call(v3946.height, v3946, [], JAM.policy.p3);
      var v10705 = this.element;
      var v3947 = JAM.call(v10705.children, v10705, [".ui-menu-item"], JAM.policy.p3);
      var e$$280 = JAM.call(v3947.filter, v3947, [v1538], JAM.policy.p3);
      var v10706 = e$$280.length;
      if (!v10706) {
        var v16314 = this.element;
        e$$280 = JAM.call(v16314.children, v16314, [".ui-menu-item:last"], JAM.policy.p3);
      }
      JAM.call(this.activate, this, [b$$505, e$$280], JAM.policy.p3);
    } else {
      var v16316 = this.element;
      var v10707 = JAM.call(v16316.children, v16316, [".ui-menu-item"], JAM.policy.p3);
      var v16317;
      var v24753 = !this.active;
      if (!v24753) {
        v24753 = JAM.call(this.last, this, [], JAM.policy.p3);
      }
      if (v24753) {
        v16317 = ":first";
      } else {
        v16317 = ":last";
      }
      JAM.call(this.activate, this, [b$$505, JAM.call(v10707.filter, v10707, [v16317], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1537(a$$538, b$$504, c$$407) {
    if (!this.active) {
      var v10710 = this.element;
      JAM.call(this.activate, this, [c$$407, JAM.call(v10710.children, v10710, [b$$504], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var v10711 = this.active;
    var v3952 = JAM.call(v10711[a$$538 + "All"], v10711, [".ui-menu-item"], JAM.policy.p3);
    var d$$314 = JAM.call(v3952.eq, v3952, [0], JAM.policy.p3);
    var v3953;
    if (d$$314.length) {
      v3953 = JAM.call(this.activate, this, [c$$407, d$$314], JAM.policy.p3);
    } else {
      var v16318 = this.element;
      v3953 = JAM.call(this.activate, this, [c$$407, JAM.call(v16318.children, v16318, [b$$504], JAM.policy.p3)], JAM.policy.p3);
    }
    v3953;
    return;
  }
  function v1536() {
    var v3954 = this.active;
    if (v3954) {
      var v21934 = this.active;
      v3954 = !JAM.call(v21934.nextAll, v21934, [".ui-menu-item"], JAM.policy.p3).length;
    }
    return v3954;
  }
  function v1535() {
    var v3955 = this.active;
    if (v3955) {
      var v21935 = this.active;
      v3955 = !JAM.call(v21935.prevAll, v21935, [".ui-menu-item"], JAM.policy.p3).length;
    }
    return v3955;
  }
  function v1534(a$$537) {
    JAM.call(this.move, this, ["prev", ".ui-menu-item:last", a$$537], JAM.policy.p3);
    return;
  }
  function v1533(a$$536) {
    JAM.call(this.move, this, ["next", ".ui-menu-item:first", a$$536], JAM.policy.p3);
    return;
  }
  function v1532() {
    if (!this.active) {
      return;
    }
    var v24754 = this.active;
    var v21936 = JAM.call(v24754.children, v24754, ["a"], JAM.policy.p3);
    var v16321 = JAM.call(v21936.removeClass, v21936, ["ui-state-hover"], JAM.policy.p3);
    JAM.call(v16321.removeAttr, v16321, ["id"], JAM.policy.p3);
    JAM.call(this._trigger, this, ["blur"], JAM.policy.p3);
    this.active = null;
    return;
  }
  function v1531(a$$535, b$$503) {
    JAM.call(this.deactivate, this, [], JAM.policy.p3);
    if (JAM.call(this.hasScroll, this, [], JAM.policy.p3)) {
      var v3957 = JAM.call(b$$503.offset, b$$503, [], JAM.policy.p3).top;
      var v16322 = this.element;
      var c$$406 = v3957 - JAM.call(v16322.offset, v16322, [], JAM.policy.p3).top;
      var v3959 = this.element;
      var d$$313 = JAM.call(v3959.scrollTop, v3959, [], JAM.policy.p3);
      var v3960 = this.element;
      var e$$279 = JAM.call(v3960.height, v3960, [], JAM.policy.p3);
      var v3961;
      if (c$$406 < 0) {
        var v10720 = this.element;
        v3961 = JAM.call(v10720.scrollTop, v10720, [d$$313 + c$$406], JAM.policy.p3);
      } else {
        var v10722 = c$$406 >= e$$279;
        if (v10722) {
          var v16323 = this.element;
          v10722 = JAM.call(v16323.scrollTop, v16323, [d$$313 + c$$406 - e$$279 + JAM.call(b$$503.height, b$$503, [], JAM.policy.p3)], JAM.policy.p3);
        }
        v3961 = v10722;
      }
      v3961;
    }
    var v24756 = JAM.call(b$$503.eq, b$$503, [0], JAM.policy.p3);
    var v21939 = JAM.call(v24756.children, v24756, ["a"], JAM.policy.p3);
    var v16325 = JAM.call(v21939.addClass, v21939, ["ui-state-hover"], JAM.policy.p3);
    var v10724 = JAM.call(v16325.attr, v16325, ["id", "ui-active-menuitem"], JAM.policy.p3);
    var v31034 = JAM.call(v10724.end, v10724, [], JAM.policy.p3);
    this.active = v31034;
    JAM.call(this._trigger, this, ["focus", a$$535, {item:b$$503}], JAM.policy.p3);
    return;
  }
  function v1530() {
    function v1529() {
      JAM.call(b$$502.deactivate, b$$502, [], JAM.policy.p3);
      return;
    }
    function v1528(c$$405) {
      var v10726 = JAM.call(a$$534, null, [this], JAM.policy.p3);
      JAM.call(b$$502.activate, b$$502, [c$$405, JAM.call(v10726.parent, v10726, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var b$$502 = this;
    var v16326 = this.element;
    var v10727 = JAM.call(v16326.children, v16326, ["li:not(.ui-menu-item):has(a)"], JAM.policy.p3);
    var v3964 = JAM.call(v10727.addClass, v10727, ["ui-menu-item"], JAM.policy.p3);
    var c$$404 = JAM.call(v3964.attr, v3964, ["role", "menuitem"], JAM.policy.p3);
    var v21940 = JAM.call(c$$404.children, c$$404, ["a"], JAM.policy.p3);
    var v16327 = JAM.call(v21940.addClass, v21940, ["ui-corner-all"], JAM.policy.p3);
    var v10728 = JAM.call(v16327.attr, v16327, ["tabindex", -1], JAM.policy.p3);
    var v3965 = JAM.call(v10728.mouseenter, v10728, [v1528], JAM.policy.p3);
    JAM.call(v3965.mouseleave, v3965, [v1529], JAM.policy.p3);
    return;
  }
  function v1527() {
    function v1526(c$$403) {
      var v21941 = JAM.call(a$$534, null, [c$$403.target], JAM.policy.p3);
      if (!JAM.call(v21941.closest, v21941, [".ui-menu-item a"], JAM.policy.p3).length) {
        return;
      }
      JAM.call(c$$403.preventDefault, c$$403, [], JAM.policy.p3);
      JAM.call(b$$501.select, b$$501, [c$$403], JAM.policy.p3);
      return;
    }
    var b$$501 = this;
    var v21942 = this.element;
    var v16329 = JAM.call(v21942.addClass, v21942, ["ui-menu ui-widget ui-widget-content ui-corner-all"], JAM.policy.p3);
    var v10730 = JAM.call(v16329.attr, v16329, [{role:"listbox", "aria-activedescendant":"ui-active-menuitem"}], JAM.policy.p3);
    JAM.call(v10730.click, v10730, [v1526], JAM.policy.p3);
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    return;
  }
  JAM.call(a$$534.widget, a$$534, ["ui.menu", {_create:v1527, refresh:v1530, activate:v1531, deactivate:v1532, next:v1533, previous:v1534, first:v1535, last:v1536, move:v1537, nextPage:v1539, previousPage:v1541, hasScroll:v1542, select:v1543}], JAM.policy.p3);
  return;
}
function v1525(a$$515, b$$485) {
  function v1524(b$$500, c$$402) {
    function v1523(a$$533) {
      var v16331 = a$$533.label;
      if (!v16331) {
        v16331 = a$$533.value;
      }
      var v10731 = v16331;
      if (!v10731) {
        v10731 = a$$533;
      }
      return JAM.call(d$$312.test, d$$312, [v10731], JAM.policy.p3);
    }
    var v10732 = a$$515.ui.autocomplete;
    var d$$312 = new RegExp(JAM.call(v10732.escapeRegex, v10732, [c$$402], JAM.policy.p3), "i");
    return JAM.call(a$$515.grep, a$$515, [b$$500, v1523], JAM.policy.p3);
  }
  function v1522(a$$532) {
    return JAM.call(a$$532.replace, a$$532, [/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"], JAM.policy.p3);
  }
  function v1521(a$$531, b$$499) {
    var v10733 = !this.isMultiLine;
    if (!v10733) {
      var v16335 = this.menu.element;
      v10733 = JAM.call(v16335.is, v16335, [":visible"], JAM.policy.p3);
    }
    if (v10733) {
      JAM.call(this._move, this, [a$$531, b$$499], JAM.policy.p3);
      JAM.call(b$$499.preventDefault, b$$499, [], JAM.policy.p3);
    }
    return;
  }
  function v1520() {
    return this.menu.element;
  }
  function v1519(a$$530, b$$498) {
    var v16337 = this.menu.element;
    if (!JAM.call(v16337.is, v16337, [":visible"], JAM.policy.p3)) {
      JAM.call(this.search, this, [null, b$$498], JAM.policy.p3);
      return;
    }
    var v21946 = this.menu;
    var v16338 = JAM.call(v21946.first, v21946, [], JAM.policy.p3);
    if (v16338) {
      v16338 = JAM.call(/^previous/.test, /^previous/, [a$$530], JAM.policy.p3);
    }
    var v10735 = v16338;
    if (!v10735) {
      var v21947 = this.menu;
      var v16339 = JAM.call(v21947.last, v21947, [], JAM.policy.p3);
      if (v16339) {
        v16339 = JAM.call(/^next/.test, /^next/, [a$$530], JAM.policy.p3);
      }
      v10735 = v16339;
    }
    if (v10735) {
      var v10736 = this.element;
      JAM.call(v10736.val, v10736, [this.term], JAM.policy.p3);
      var v10738 = this.menu;
      JAM.call(v10738.deactivate, v10738, [], JAM.policy.p3);
      return;
    }
    var v3974 = this.menu;
    JAM.call(v3974[a$$530], v3974, [b$$498], JAM.policy.p3);
    return;
  }
  function v1518(b$$497, c$$401) {
    var v16341 = JAM.call(a$$515, null, ["<li></li>"], JAM.policy.p3);
    var v10739 = JAM.call(v16341.data, v16341, ["item.autocomplete", c$$401], JAM.policy.p3);
    var v16342 = JAM.call(a$$515, null, ["<a></a>"], JAM.policy.p3);
    var v3975 = JAM.call(v10739.append, v10739, [JAM.call(v16342.text, v16342, [c$$401.label], JAM.policy.p3)], JAM.policy.p3);
    return JAM.call(v3975.appendTo, v3975, [b$$497], JAM.policy.p3);
  }
  function v1517(b$$496, c$$399) {
    function v1516(a$$529, c$$400) {
      JAM.call(d$$311._renderItem, d$$311, [b$$496, c$$400], JAM.policy.p3);
      return;
    }
    var d$$311 = this;
    JAM.call(a$$515.each, a$$515, [c$$399, v1516], JAM.policy.p3);
    return;
  }
  function v1515() {
    var a$$528 = this.menu.element;
    var v21948 = JAM.call(a$$528.width, a$$528, [""], JAM.policy.p3);
    var v10741 = JAM.call(v21948.outerWidth, v21948, [], JAM.policy.p3) + 1;
    var v16345 = this.element;
    JAM.call(a$$528.outerWidth, a$$528, [JAM.call(Math.max, Math, [v10741, JAM.call(v16345.outerWidth, v16345, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1514(b$$495) {
    var v10743 = this.menu.element;
    var v3978 = JAM.call(v10743.empty, v10743, [], JAM.policy.p3);
    var v16347 = this.element;
    var c$$398 = JAM.call(v3978.zIndex, v3978, [JAM.call(v16347.zIndex, v16347, [], JAM.policy.p3) + 1], JAM.policy.p3);
    JAM.call(this._renderMenu, this, [c$$398, b$$495], JAM.policy.p3);
    var v28045 = this.menu;
    JAM.call(v28045.deactivate, v28045, [], JAM.policy.p3);
    var v26698 = this.menu;
    JAM.call(v26698.refresh, v26698, [], JAM.policy.p3);
    JAM.call(c$$398.show, c$$398, [], JAM.policy.p3);
    JAM.call(this._resizeMenu, this, [], JAM.policy.p3);
    JAM.call(c$$398.position, c$$398, [JAM.call(a$$515.extend, a$$515, [{of:this.element}, this.options.position], JAM.policy.p3)], JAM.policy.p3);
    var v10745 = this.options.autoFocus;
    if (v10745) {
      var v16350 = this.menu;
      JAM.call(v16350.next, v16350, [JAM.new(a$$515.Event, ["mouseover"])], JAM.policy.p3);
    }
    return;
  }
  function v1513(b$$493) {
    function v1512(b$$494) {
      var v3980;
      if (typeof b$$494 == "string") {
        v3980 = {label:b$$494, value:b$$494};
      } else {
        var v21952 = b$$494.label;
        if (!v21952) {
          v21952 = b$$494.value;
        }
        var v16353 = v21952;
        var v21953 = b$$494.value;
        if (!v21953) {
          v21953 = b$$494.label;
        }
        v3980 = JAM.call(a$$515.extend, a$$515, [{label:v16353, value:v21953}, b$$494], JAM.policy.p3);
      }
      return v3980;
    }
    var v3981;
    var v21954 = b$$493.length;
    if (v21954) {
      v21954 = b$$493[0].label;
    }
    var v16355 = v21954;
    if (v16355) {
      v16355 = b$$493[0].value;
    }
    if (v16355) {
      v3981 = b$$493;
    } else {
      v3981 = JAM.call(a$$515.map, a$$515, [b$$493, v1512], JAM.policy.p3);
    }
    return v3981;
  }
  function v1511(a$$527) {
    var v10749 = this.previous;
    var v16356 = this.element;
    var v3982 = v10749 !== JAM.call(v16356.val, v16356, [], JAM.policy.p3);
    if (v3982) {
      JAM.call(this._trigger, this, ["change", a$$527, {item:this.selectedItem}], JAM.policy.p3);
    }
    return;
  }
  function v1510(a$$526) {
    clearTimeout(this.closing);
    var v16358 = this.menu.element;
    var v10753 = JAM.call(v16358.is, v16358, [":visible"], JAM.policy.p3);
    if (v10753) {
      var v24763 = this.menu.element;
      JAM.call(v24763.hide, v24763, [], JAM.policy.p3);
      var v24764 = this.menu;
      JAM.call(v24764.deactivate, v24764, [], JAM.policy.p3);
      JAM.call(this._trigger, this, ["close", a$$526], JAM.policy.p3);
    }
    return;
  }
  function v1509(a$$525) {
    var v3983;
    var v21957 = !this.options.disabled;
    if (v21957) {
      v21957 = a$$525;
    }
    var v16359 = v21957;
    if (v16359) {
      v16359 = a$$525.length;
    }
    if (v16359) {
      a$$525 = JAM.call(this._normalize, this, [a$$525], JAM.policy.p3);
      JAM.call(this._suggest, this, [a$$525], JAM.policy.p3);
      v3983 = JAM.call(this._trigger, this, ["open"], JAM.policy.p3);
    } else {
      v3983 = JAM.call(this.close, this, [], JAM.policy.p3);
    }
    v3983;
    return;
  }
  function v1508() {
    function v1507(d$$310) {
      var v16360 = b$$492 === c$$388;
      if (v16360) {
        JAM.call(a$$524.__response, a$$524, [d$$310], JAM.policy.p3);
      }
      a$$524.pending--;
      var v10755 = a$$524.pending;
      if (!v10755) {
        var v16361 = a$$524.element;
        JAM.call(v16361.removeClass, v16361, ["ui-autocomplete-loading"], JAM.policy.p3);
      }
      return;
    }
    var a$$524 = this;
    var b$$492 = c$$388 = c$$388 + 1;
    return v1507;
  }
  function v1506(a$$523) {
    this.pending++;
    var v16363 = this.element;
    JAM.call(v16363.addClass, v16363, ["ui-autocomplete-loading"], JAM.policy.p3);
    JAM.call(this.source, this, [{term:a$$523}, JAM.call(this._response, this, [], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1505(a$$522, b$$491) {
    var v10758;
    if (a$$522 != null) {
      v10758 = a$$522;
    } else {
      var v16364 = this.element;
      v10758 = JAM.call(v16364.val, v16364, [], JAM.policy.p3);
    }
    a$$522 = v10758;
    var v10759 = this.element;
    var v31035 = JAM.call(v10759.val, v10759, [], JAM.policy.p3);
    this.term = v31035;
    if (a$$522.length < this.options.minLength) {
      return JAM.call(this.close, this, [b$$491], JAM.policy.p3);
    }
    clearTimeout(this.closing);
    if (JAM.call(this._trigger, this, ["search", b$$491], JAM.policy.p3) === !1) {
      return;
    }
    return JAM.call(this._search, this, [a$$522], JAM.policy.p3);
  }
  function v1504() {
    function v1503(c$$397, e$$278) {
      function v1502() {
        JAM.call(e$$278, null, [[]], JAM.policy.p3);
        return;
      }
      function v1501(a$$521, b$$490) {
        JAM.call(e$$278, null, [a$$521], JAM.policy.p3);
        return;
      }
      var v10764 = b$$488.xhr;
      if (v10764) {
        var v16367 = b$$488.xhr;
        JAM.call(v16367.abort, v16367, [], JAM.policy.p3);
      }
      var v10765 = b$$488;
      var v31036 = JAM.call(a$$515.ajax, a$$515, [{url:d$$308, data:c$$397, dataType:"json", success:v1501, error:v1502}], JAM.policy.p3);
      v10765.xhr = v31036;
      return;
    }
    function v1500(b$$489, d$$309) {
      var v10766 = a$$515.ui.autocomplete;
      JAM.call(d$$309, null, [JAM.call(v10766.filter, v10766, [c$$396, b$$489.term], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var b$$488 = this;
    var c$$396;
    var d$$308;
    var v3988;
    if (JAM.call(a$$515.isArray, a$$515, [this.options.source], JAM.policy.p3)) {
      c$$396 = this.options.source;
      v3988 = this.source = v1500;
    } else {
      var v10768;
      if (typeof this.options.source == "string") {
        d$$308 = this.options.source;
        v10768 = this.source = v1503;
      } else {
        v10768 = this.source = this.options.source;
      }
      v3988 = v10768;
    }
    v3988;
    return;
  }
  function v1499(b$$487, c$$395) {
    var v21961 = a$$515.Widget.prototype._setOption;
    JAM.call(v21961.apply, v21961, [this, arguments], JAM.policy.p3);
    var v21962 = b$$487 === "source";
    if (v21962) {
      JAM.call(this._initSource, this, [], JAM.policy.p3);
    }
    var v16374 = b$$487 === "appendTo";
    if (v16374) {
      var v21963 = this.menu.element;
      JAM.call(v21963.appendTo, v21963, [JAM.call(a$$515, null, [c$$395 || "body", this.element[0].ownerDocument], JAM.policy.p3)[0]], JAM.policy.p3);
    }
    var v21965 = b$$487 === "disabled";
    if (v21965) {
      v21965 = c$$395;
    }
    var v16375 = v21965;
    if (v16375) {
      v16375 = this.xhr;
    }
    var v10770 = v16375;
    if (v10770) {
      var v16376 = this.xhr;
      JAM.call(v16376.abort, v16376, [], JAM.policy.p3);
    }
    return;
  }
  function v1498() {
    var v28924 = this.element;
    var v28047 = JAM.call(v28924.removeClass, v28924, ["ui-autocomplete-input"], JAM.policy.p3);
    var v26705 = JAM.call(v28047.removeAttr, v28047, ["autocomplete"], JAM.policy.p3);
    var v24770 = JAM.call(v26705.removeAttr, v26705, ["role"], JAM.policy.p3);
    var v21966 = JAM.call(v24770.removeAttr, v24770, ["aria-autocomplete"], JAM.policy.p3);
    JAM.call(v21966.removeAttr, v21966, ["aria-haspopup"], JAM.policy.p3);
    var v21967 = this.menu.element;
    JAM.call(v21967.remove, v21967, [], JAM.policy.p3);
    var v16377 = JAM.call(a$$515, null, [window], JAM.policy.p3);
    JAM.call(v16377.unbind, v16377, ["beforeunload", this.beforeunloadHandler], JAM.policy.p3);
    var v10771 = a$$515.Widget.prototype.destroy;
    JAM.call(v10771.call, v10771, [this], JAM.policy.p3);
    return;
  }
  function v1497() {
    function v1496() {
      var v3989 = b$$486.element;
      JAM.call(v3989.removeAttr, v3989, ["autocomplete"], JAM.policy.p3);
      return;
    }
    function v1495(a$$520, c$$394) {
      var v16380 = b$$486.menu.element;
      var v10772 = JAM.call(v16380.is, v16380, [":visible"], JAM.policy.p3);
      if (v10772) {
        var v21970 = b$$486.element;
        v10772 = JAM.call(v21970.val, v21970, [], JAM.policy.p3) !== b$$486.term;
      }
      var v3990 = v10772;
      if (v3990) {
        var v10773 = b$$486.element;
        JAM.call(v10773.val, v10773, [b$$486.term], JAM.policy.p3);
      }
      return;
    }
    function v1494(a$$519, d$$307) {
      function v1493() {
        b$$486.previous = f$$133;
        b$$486.selectedItem = e$$277;
        return;
      }
      var v3991 = d$$307.item;
      var e$$277 = JAM.call(v3991.data, v3991, ["item.autocomplete"], JAM.policy.p3);
      var f$$133 = b$$486.previous;
      var v24772 = b$$486.element[0] !== c$$389.activeElement;
      if (v24772) {
        var v28925 = b$$486.element;
        JAM.call(v28925.focus, v28925, [], JAM.policy.p3);
        b$$486.previous = f$$133;
        JAM.call(setTimeout, null, [v1493, 1]);
      }
      var v24773 = !1 !== JAM.call(b$$486._trigger, b$$486, ["select", a$$519, {item:e$$277}], JAM.policy.p3);
      if (v24773) {
        var v26710 = b$$486.element;
        JAM.call(v26710.val, v26710, [e$$277.value], JAM.policy.p3);
      }
      var v21971 = b$$486;
      var v24774 = b$$486.element;
      var v31037 = JAM.call(v24774.val, v24774, [], JAM.policy.p3);
      v21971.term = v31037;
      JAM.call(b$$486.close, b$$486, [a$$519], JAM.policy.p3);
      b$$486.selectedItem = e$$277;
      return;
    }
    function v1492(a$$518, c$$393) {
      var v3992 = c$$393.item;
      var d$$306 = JAM.call(v3992.data, v3992, ["item.autocomplete"], JAM.policy.p3);
      var v10775 = !1 !== JAM.call(b$$486._trigger, b$$486, ["focus", a$$518, {item:d$$306}], JAM.policy.p3);
      if (v10775) {
        v10775 = JAM.call(/^key/.test, /^key/, [a$$518.originalEvent.type], JAM.policy.p3);
      }
      var v3993 = v10775;
      if (v3993) {
        var v10776 = b$$486.element;
        JAM.call(v10776.val, v10776, [d$$306.value], JAM.policy.p3);
      }
      return;
    }
    function v1491(c$$391) {
      function v1490() {
        clearTimeout(b$$486.closing);
        return;
      }
      function v1489() {
        function v1488(c$$392) {
          var v16386 = c$$392.target !== b$$486.element[0];
          if (v16386) {
            v16386 = c$$392.target !== d$$305;
          }
          var v10778 = v16386;
          if (v10778) {
            var v21977 = a$$515.ui;
            v10778 = !JAM.call(v21977.contains, v21977, [d$$305, c$$392.target], JAM.policy.p3);
          }
          var v3995 = v10778;
          if (v3995) {
            JAM.call(b$$486.close, b$$486, [], JAM.policy.p3);
          }
          return;
        }
        var v3996 = JAM.call(a$$515, null, [document], JAM.policy.p3);
        JAM.call(v3996.one, v3996, ["mousedown", v1488], JAM.policy.p3);
        return;
      }
      var d$$305 = b$$486.menu.element[0];
      var v21979 = JAM.call(a$$515, null, [c$$391.target], JAM.policy.p3);
      var v10780 = JAM.call(v21979.closest, v21979, [".ui-menu-item"], JAM.policy.p3).length;
      if (!v10780) {
        JAM.call(setTimeout, null, [v1489, 1]);
      }
      JAM.call(setTimeout, null, [v1490, 13]);
      return;
    }
    function v1487(a$$517) {
      function v1486() {
        JAM.call(b$$486.close, b$$486, [a$$517], JAM.policy.p3);
        JAM.call(b$$486._change, b$$486, [a$$517], JAM.policy.p3);
        return;
      }
      if (b$$486.options.disabled) {
        return;
      }
      clearTimeout(b$$486.searching);
      var v10783 = b$$486;
      var v31038 = JAM.call(setTimeout, null, [v1486, 150]);
      v10783.closing = v31038;
      return;
    }
    function v1485() {
      if (b$$486.options.disabled) {
        return;
      }
      b$$486.selectedItem = null;
      var v10785 = b$$486;
      var v16390 = b$$486.element;
      var v31039 = JAM.call(v16390.val, v16390, [], JAM.policy.p3);
      v10785.previous = v31039;
      return;
    }
    function v1484(a$$516) {
      if (d$$304) {
        d$$304 = !1;
        JAM.call(a$$516.preventDefault, a$$516, [], JAM.policy.p3);
      }
      return;
    }
    function v1483(c$$390) {
      function v1482() {
        var v10786 = b$$486.term;
        var v16391 = b$$486.element;
        var v4000 = v10786 != JAM.call(v16391.val, v16391, [], JAM.policy.p3);
        if (v4000) {
          b$$486.selectedItem = null;
          JAM.call(b$$486.search, b$$486, [null, c$$390], JAM.policy.p3);
        }
        return;
      }
      var v10788 = b$$486.options.disabled;
      if (!v10788) {
        var v16393 = b$$486.element;
        v10788 = JAM.call(v16393.propAttr, v16393, ["readOnly"], JAM.policy.p3);
      }
      if (v10788) {
        return;
      }
      d$$304 = !1;
      var e$$276 = a$$515.ui.keyCode;
      switch(c$$390.keyCode) {
        case e$$276.PAGE_UP:
          JAM.call(b$$486._move, b$$486, ["previousPage", c$$390], JAM.policy.p3);
          break;
        case e$$276.PAGE_DOWN:
          JAM.call(b$$486._move, b$$486, ["nextPage", c$$390], JAM.policy.p3);
          break;
        case e$$276.UP:
          JAM.call(b$$486._keyEvent, b$$486, ["previous", c$$390], JAM.policy.p3);
          break;
        case e$$276.DOWN:
          JAM.call(b$$486._keyEvent, b$$486, ["next", c$$390], JAM.policy.p3);
          break;
        case e$$276.ENTER:
        ;
        case e$$276.NUMPAD_ENTER:
          var v4003 = b$$486.menu.active;
          if (v4003) {
            d$$304 = !0;
            JAM.call(c$$390.preventDefault, c$$390, [], JAM.policy.p3);
          }
        ;
        case e$$276.TAB:
          if (!b$$486.menu.active) {
            return;
          }
          var v4005 = b$$486.menu;
          JAM.call(v4005.select, v4005, [c$$390], JAM.policy.p3);
          break;
        case e$$276.ESCAPE:
          var v10791 = b$$486.element;
          JAM.call(v10791.val, v10791, [b$$486.term], JAM.policy.p3);
          JAM.call(b$$486.close, b$$486, [c$$390], JAM.policy.p3);
          break;
        default:
          clearTimeout(b$$486.searching);
          var v10794 = b$$486;
          var v31040 = JAM.call(setTimeout, null, [v1482, b$$486.options.delay]);
          v10794.searching = v31040;
      }
      return;
    }
    var b$$486 = this;
    var c$$389 = this.element[0].ownerDocument;
    var d$$304;
    var v28050 = this.element;
    var v31041 = JAM.call(v28050.is, v28050, ["textarea"], JAM.policy.p3);
    this.isMultiLine = v31041;
    var v30459 = this.element;
    var v30319 = JAM.call(v30459.addClass, v30459, ["ui-autocomplete-input"], JAM.policy.p3);
    var v30110 = JAM.call(v30319.attr, v30319, ["autocomplete", "off"], JAM.policy.p3);
    var v29857 = JAM.call(v30110.attr, v30110, [{role:"textbox", "aria-autocomplete":"list", "aria-haspopup":"true"}], JAM.policy.p3);
    var v29509 = JAM.call(v29857.bind, v29857, ["keydown.autocomplete", v1483], JAM.policy.p3);
    var v28926 = JAM.call(v29509.bind, v29509, ["keypress.autocomplete", v1484], JAM.policy.p3);
    var v28051 = JAM.call(v28926.bind, v28926, ["focus.autocomplete", v1485], JAM.policy.p3);
    JAM.call(v28051.bind, v28051, ["blur.autocomplete", v1487], JAM.policy.p3);
    JAM.call(this._initSource, this, [], JAM.policy.p3);
    var v30320 = JAM.call(a$$515, null, ["<ul></ul>"], JAM.policy.p3);
    var v30112 = JAM.call(v30320.addClass, v30320, ["ui-autocomplete"], JAM.policy.p3);
    var v30593 = this.options.appendTo;
    if (!v30593) {
      v30593 = "body";
    }
    var v29858 = JAM.call(v30112.appendTo, v30112, [JAM.call(a$$515, null, [v30593, c$$389], JAM.policy.p3)[0]], JAM.policy.p3);
    var v29510 = JAM.call(v29858.mousedown, v29858, [v1491], JAM.policy.p3);
    var v28927 = JAM.call(v29510.menu, v29510, [{focus:v1492, selected:v1494, blur:v1495}], JAM.policy.p3);
    var v29859 = this.element;
    var v28052 = JAM.call(v28927.zIndex, v28927, [JAM.call(v29859.zIndex, v29859, [], JAM.policy.p3) + 1], JAM.policy.p3);
    var v26712 = JAM.call(v28052.css, v28052, [{top:0, left:0}], JAM.policy.p3);
    var v24777 = JAM.call(v26712.hide, v26712, [], JAM.policy.p3);
    var v31042 = JAM.call(v24777.data, v24777, ["menu"], JAM.policy.p3);
    this.menu = v31042;
    var v21981 = a$$515.fn.bgiframe;
    if (v21981) {
      var v24779 = this.menu.element;
      JAM.call(v24779.bgiframe, v24779, [], JAM.policy.p3);
    }
    b$$486.beforeunloadHandler = v1496;
    var v10796 = JAM.call(a$$515, null, [window], JAM.policy.p3);
    JAM.call(v10796.bind, v10796, ["beforeunload", b$$486.beforeunloadHandler], JAM.policy.p3);
    return;
  }
  var c$$388 = 0;
  JAM.call(a$$515.widget, a$$515, ["ui.autocomplete", {options:{appendTo:"body", autoFocus:!1, delay:300, minLength:1, position:{my:"left top", at:"left bottom", collision:"none"}, source:null}, pending:0, _create:v1497, destroy:v1498, _setOption:v1499, _initSource:v1504, search:v1505, _search:v1506, _response:v1508, __response:v1509, close:v1510, _change:v1511, _normalize:v1513, _suggest:v1514, _resizeMenu:v1515, _renderMenu:v1517, _renderItem:v1518, _move:v1519, widget:v1520, _keyEvent:v1521}], 
  JAM.policy.p3);
  JAM.call(a$$515.extend, a$$515, [a$$515.ui.autocomplete, {escapeRegex:v1522, filter:v1524}], JAM.policy.p3);
  return;
}
function v1481(a$$507, b$$473) {
  function v1480(a$$514) {
    var v16399;
    if (a$$514.down) {
      v16399 = "easeOutBounce";
    } else {
      v16399 = "swing";
    }
    var v10801 = v16399;
    var v16400;
    if (a$$514.down) {
      v16400 = 1E3;
    } else {
      v16400 = 200;
    }
    JAM.call(this.slide, this, [a$$514, {easing:v10801, duration:v16400}], JAM.policy.p3);
    return;
  }
  function v1479(b$$484, c$$385) {
    function v1478() {
      var v16401 = b$$484.autoHeight;
      if (!v16401) {
        var v21986 = b$$484.toShow;
        JAM.call(v21986.css, v21986, ["height", ""], JAM.policy.p3);
      }
      var v16402 = b$$484.toShow;
      JAM.call(v16402.css, v16402, [{width:i$$185, overflow:d$$302}], JAM.policy.p3);
      JAM.call(b$$484.complete, b$$484, [], JAM.policy.p3);
      return;
    }
    function v1477(a$$513, c$$387) {
      var v10803 = c$$387.prop == "height";
      if (v10803) {
        var v16405;
        if (c$$387.end - c$$387.start === 0) {
          v16405 = 0;
        } else {
          v16405 = (c$$387.now - c$$387.start) / (c$$387.end - c$$387.start);
        }
        e$$274 = v16405;
      }
      var v10804 = b$$484.toShow[0].style;
      var v10805 = c$$387.prop;
      var v16407 = e$$274 * f$$132[c$$387.prop].value;
      var v16408 = f$$132[c$$387.prop].unit;
      introspect(JAM.policy.p2) {
        v10804[v10805] = v16407 + v16408;
      }
      return;
    }
    function v1476(c$$386, d$$303) {
      introspect(JAM.policy.p2) {
        g$$158[d$$303] = "hide";
      }
      var v4009 = "" + JAM.call(a$$507.css, a$$507, [b$$484.toShow[0], d$$303], JAM.policy.p3);
      var e$$275 = JAM.call(v4009.match, v4009, [/^([\d+-.]+)(.*)$/], JAM.policy.p3);
      var v4010 = e$$275[1];
      var v10807 = e$$275[2];
      if (!v10807) {
        v10807 = "px";
      }
      var v4011 = v10807;
      introspect(JAM.policy.p2) {
        f$$132[d$$303] = {value:v4010, unit:v4011};
      }
      return;
    }
    b$$484 = JAM.call(a$$507.extend, a$$507, [{easing:"swing", duration:300}, b$$484, c$$385], JAM.policy.p3);
    var v16411 = b$$484.toHide;
    if (!JAM.call(v16411.size, v16411, [], JAM.policy.p3)) {
      var v4013 = b$$484.toShow;
      JAM.call(v4013.animate, v4013, [{height:"show", paddingTop:"show", paddingBottom:"show"}, b$$484], JAM.policy.p3);
      return;
    }
    var v16412 = b$$484.toShow;
    if (!JAM.call(v16412.size, v16412, [], JAM.policy.p3)) {
      var v4016 = b$$484.toHide;
      JAM.call(v4016.animate, v4016, [{height:"hide", paddingTop:"hide", paddingBottom:"hide"}, b$$484], JAM.policy.p3);
      return;
    }
    var v4019 = b$$484.toShow;
    var d$$302 = JAM.call(v4019.css, v4019, ["overflow"], JAM.policy.p3);
    var e$$274 = 0;
    var f$$132 = {};
    var g$$158 = {};
    var h$$129 = ["height", "paddingTop", "paddingBottom"];
    var i$$185;
    var j$$94 = b$$484.toShow;
    i$$185 = j$$94[0].style.width;
    var v29860 = JAM.call(j$$94.parent, j$$94, [], JAM.policy.p3);
    var v28054 = JAM.call(v29860.width, v29860, [], JAM.policy.p3) - parseFloat(JAM.call(j$$94.css, j$$94, ["paddingLeft"], JAM.policy.p3)) - parseFloat(JAM.call(j$$94.css, j$$94, ["paddingRight"], JAM.policy.p3));
    var v28931 = parseFloat(JAM.call(j$$94.css, j$$94, ["borderLeftWidth"], JAM.policy.p3));
    if (!v28931) {
      v28931 = 0;
    }
    var v26718 = v28054 - v28931;
    var v28056 = parseFloat(JAM.call(j$$94.css, j$$94, ["borderRightWidth"], JAM.policy.p3));
    if (!v28056) {
      v28056 = 0;
    }
    JAM.call(j$$94.width, j$$94, [v26718 - v28056], JAM.policy.p3);
    JAM.call(a$$507.each, a$$507, [h$$129, v1476], JAM.policy.p3);
    var v21995 = b$$484.toShow;
    var v16413 = JAM.call(v21995.css, v21995, [{height:0, overflow:"hidden"}], JAM.policy.p3);
    JAM.call(v16413.show, v16413, [], JAM.policy.p3);
    var v26720 = b$$484.toHide;
    var v24789 = JAM.call(v26720.filter, v26720, [":hidden"], JAM.policy.p3);
    var v21997 = JAM.call(v24789.each, v24789, [b$$484.complete], JAM.policy.p3);
    var v16414 = JAM.call(v21997.end, v21997, [], JAM.policy.p3);
    var v10810 = JAM.call(v16414.filter, v16414, [":visible"], JAM.policy.p3);
    JAM.call(v10810.animate, v10810, [g$$158, {step:v1477, duration:b$$484.duration, easing:b$$484.easing, complete:v1478}], JAM.policy.p3);
    return;
  }
  function v1475(a$$512) {
    var v4020;
    if (a$$512) {
      v4020 = 0;
    } else {
      v4020 = this.running = this.running - 1;
    }
    this.running = v4020;
    if (this.running) {
      return;
    }
    var v21998 = this.options.clearStyle;
    if (v21998) {
      var v26721 = this.toShow;
      var v24792 = JAM.call(v26721.add, v26721, [this.toHide], JAM.policy.p3);
      JAM.call(v24792.css, v24792, [{height:"", overflow:""}], JAM.policy.p3);
    }
    var v21999 = this.toHide;
    JAM.call(v21999.removeClass, v21999, ["ui-accordion-content-active"], JAM.policy.p3);
    var v16418 = this.toHide.length;
    if (v16418) {
      var v26723 = this.toHide;
      var v22001 = JAM.call(v26723.parent, v26723, [], JAM.policy.p3)[0];
      var v28057 = this.toHide;
      v22001.className = JAM.call(v28057.parent, v28057, [], JAM.policy.p3)[0].className;
    }
    JAM.call(this._trigger, this, ["change", null, this.data], JAM.policy.p3);
    return;
  }
  function v1474(b$$483, c$$384, d$$301, e$$273, f$$131) {
    function v1473(a$$511) {
      JAM.call(this.slide, this, [a$$511, {easing:m$$42, duration:l$$71 || 700}], JAM.policy.p3);
      return;
    }
    function i$$184() {
      if (!g$$157) {
        return;
      }
      var v4024 = g$$157._completed;
      return JAM.call(v4024.apply, v4024, [g$$157, arguments], JAM.policy.p3);
    }
    var g$$157 = this;
    var h$$128 = g$$157.options;
    g$$157.toShow = b$$483;
    g$$157.toHide = c$$384;
    g$$157.data = d$$301;
    JAM.call(g$$157._trigger, g$$157, ["changestart", null, g$$157.data], JAM.policy.p3);
    var v10815 = g$$157;
    var v16419;
    if (JAM.call(c$$384.size, c$$384, [], JAM.policy.p3) === 0) {
      v16419 = JAM.call(b$$483.size, b$$483, [], JAM.policy.p3);
    } else {
      v16419 = JAM.call(c$$384.size, c$$384, [], JAM.policy.p3);
    }
    v10815.running = v16419;
    if (h$$128.animated) {
      var j$$93 = {};
      var v24797;
      var v28058 = h$$128.collapsible;
      if (v28058) {
        v28058 = e$$273;
      }
      if (v28058) {
        var v26725 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
        var v28059 = h$$128.autoHeight;
        if (!v28059) {
          v28059 = h$$128.fillSpace;
        }
        v24797 = j$$93 = {toShow:v26725, toHide:c$$384, complete:i$$184, down:f$$131, autoHeight:v28059};
      } else {
        var v28060 = h$$128.autoHeight;
        if (!v28060) {
          v28060 = h$$128.fillSpace;
        }
        v24797 = j$$93 = {toShow:b$$483, toHide:c$$384, complete:i$$184, down:f$$131, autoHeight:v28060};
      }
      v24797;
      var v24798 = h$$128.proxied;
      if (!v24798) {
        h$$128.proxied = h$$128.animated;
      }
      var v22003 = h$$128.proxiedDuration;
      if (!v22003) {
        h$$128.proxiedDuration = h$$128.duration;
      }
      var v16420 = h$$128;
      var v22004;
      if (JAM.call(a$$507.isFunction, a$$507, [h$$128.proxied], JAM.policy.p3)) {
        v22004 = JAM.call(h$$128.proxied, h$$128, [j$$93], JAM.policy.p3);
      } else {
        v22004 = h$$128.proxied;
      }
      v16420.animated = v22004;
      var v10816 = h$$128;
      var v16421;
      if (JAM.call(a$$507.isFunction, a$$507, [h$$128.proxiedDuration], JAM.policy.p3)) {
        v16421 = JAM.call(h$$128.proxiedDuration, h$$128, [j$$93], JAM.policy.p3);
      } else {
        v16421 = h$$128.proxiedDuration;
      }
      v10816.duration = v16421;
      var k$$63 = a$$507.ui.accordion.animations;
      var l$$71 = h$$128.duration;
      var m$$42 = h$$128.animated;
      var v24802 = m$$42;
      if (v24802) {
        v24802 = !k$$63[m$$42];
      }
      var v22006 = v24802;
      if (v22006) {
        v22006 = !a$$507.easing[m$$42];
      }
      var v16422 = v22006;
      if (v16422) {
        m$$42 = "slide";
      }
      var v16423 = k$$63[m$$42];
      if (!v16423) {
        introspect(JAM.policy.p2) {
          k$$63[m$$42] = v1473;
        }
      }
      JAM.call(k$$63[m$$42], k$$63, [j$$93], JAM.policy.p3);
    } else {
      var v10818;
      var v22008 = h$$128.collapsible;
      if (v22008) {
        v22008 = e$$273;
      }
      if (v22008) {
        v10818 = JAM.call(b$$483.toggle, b$$483, [], JAM.policy.p3);
      } else {
        JAM.call(c$$384.hide, c$$384, [], JAM.policy.p3);
        v10818 = JAM.call(b$$483.show, b$$483, [], JAM.policy.p3);
      }
      v10818;
      i$$184(!0);
    }
    var v16425 = JAM.call(c$$384.prev, c$$384, [], JAM.policy.p3);
    var v10820 = JAM.call(v16425.attr, v16425, [{"aria-expanded":"false", "aria-selected":"false", tabIndex:-1}], JAM.policy.p3);
    JAM.call(v10820.blur, v10820, [], JAM.policy.p3);
    var v16427 = JAM.call(b$$483.prev, b$$483, [], JAM.policy.p3);
    var v10821 = JAM.call(v16427.attr, v16427, [{"aria-expanded":"true", "aria-selected":"true", tabIndex:0}], JAM.policy.p3);
    JAM.call(v10821.focus, v10821, [], JAM.policy.p3);
    return;
  }
  function v1472(b$$482, c$$383) {
    var d$$300 = this.options;
    if (d$$300.disabled) {
      return;
    }
    if (!b$$482.target) {
      if (!d$$300.collapsible) {
        return;
      }
      var v26733 = this.active;
      var v24804 = JAM.call(v26733.removeClass, v26733, ["ui-state-active ui-corner-top"], JAM.policy.p3);
      var v22009 = JAM.call(v24804.addClass, v24804, ["ui-state-default ui-corner-all"], JAM.policy.p3);
      var v16429 = JAM.call(v22009.children, v22009, [".ui-icon"], JAM.policy.p3);
      var v10824 = JAM.call(v16429.removeClass, v16429, [d$$300.icons.headerSelected], JAM.policy.p3);
      JAM.call(v10824.addClass, v10824, [d$$300.icons.header], JAM.policy.p3);
      var v16432 = this.active;
      var v10826 = JAM.call(v16432.next, v16432, [], JAM.policy.p3);
      JAM.call(v10826.addClass, v10826, ["ui-accordion-content-active"], JAM.policy.p3);
      var v4029 = this.active;
      var e$$272 = JAM.call(v4029.next, v4029, [], JAM.policy.p3);
      var f$$130 = {options:d$$300, newHeader:JAM.call(a$$507, null, [[]], JAM.policy.p3), oldHeader:d$$300.active, newContent:JAM.call(a$$507, null, [[]], JAM.policy.p3), oldContent:e$$272};
      var v31043 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
      var g$$156 = this.active = v31043;
      JAM.call(this._toggle, this, [g$$156, e$$272, f$$130], JAM.policy.p3);
      return;
    }
    var v10827 = b$$482.currentTarget;
    if (!v10827) {
      v10827 = c$$383;
    }
    var h$$127 = JAM.call(a$$507, null, [v10827], JAM.policy.p3);
    var i$$183 = h$$127[0] === this.active[0];
    var v4037;
    var v16434 = d$$300.collapsible;
    if (v16434) {
      v16434 = i$$183;
    }
    if (v16434) {
      v4037 = !1;
    } else {
      var v10829 = this.headers;
      v4037 = JAM.call(v10829.index, v10829, [h$$127], JAM.policy.p3);
    }
    d$$300.active = v4037;
    var v10831 = this.running;
    if (!v10831) {
      var v16435 = !d$$300.collapsible;
      if (v16435) {
        v16435 = i$$183;
      }
      v10831 = v16435;
    }
    if (v10831) {
      return;
    }
    var j$$92 = this.active;
    g$$156 = JAM.call(h$$127.next, h$$127, [], JAM.policy.p3);
    var v4039 = this.active;
    e$$272 = JAM.call(v4039.next, v4039, [], JAM.policy.p3);
    var v10832;
    var v22012 = i$$183;
    if (v22012) {
      v22012 = d$$300.collapsible;
    }
    if (v22012) {
      v10832 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
    } else {
      v10832 = h$$127;
    }
    var v4040 = v10832;
    var v4041 = this.active;
    var v10833;
    var v22013 = i$$183;
    if (v22013) {
      v22013 = d$$300.collapsible;
    }
    if (v22013) {
      v10833 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
    } else {
      v10833 = g$$156;
    }
    f$$130 = {options:d$$300, newHeader:v4040, oldHeader:v4041, newContent:v10833, oldContent:e$$272};
    var v10834 = this.headers;
    var v4043 = JAM.call(v10834.index, v10834, [this.active[0]], JAM.policy.p3);
    var v10836 = this.headers;
    var k$$62 = v4043 > JAM.call(v10836.index, v10836, [h$$127[0]], JAM.policy.p3);
    var v22014;
    if (i$$183) {
      v22014 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
    } else {
      v22014 = h$$127;
    }
    this.active = v22014;
    JAM.call(this._toggle, this, [g$$156, e$$272, f$$130, i$$183, k$$62], JAM.policy.p3);
    var v26734 = JAM.call(j$$92.removeClass, j$$92, ["ui-state-active ui-corner-top"], JAM.policy.p3);
    var v24805 = JAM.call(v26734.addClass, v26734, ["ui-state-default ui-corner-all"], JAM.policy.p3);
    var v22015 = JAM.call(v24805.children, v24805, [".ui-icon"], JAM.policy.p3);
    var v16440 = JAM.call(v22015.removeClass, v22015, [d$$300.icons.headerSelected], JAM.policy.p3);
    JAM.call(v16440.addClass, v16440, [d$$300.icons.header], JAM.policy.p3);
    if (!i$$183) {
      var v28061 = JAM.call(h$$127.removeClass, h$$127, ["ui-state-default ui-corner-all"], JAM.policy.p3);
      var v26735 = JAM.call(v28061.addClass, v28061, ["ui-state-active ui-corner-top"], JAM.policy.p3);
      var v24807 = JAM.call(v26735.children, v26735, [".ui-icon"], JAM.policy.p3);
      var v22018 = JAM.call(v24807.removeClass, v24807, [d$$300.icons.header], JAM.policy.p3);
      JAM.call(v22018.addClass, v22018, [d$$300.icons.headerSelected], JAM.policy.p3);
      var v22020 = JAM.call(h$$127.next, h$$127, [], JAM.policy.p3);
      JAM.call(v22020.addClass, v22020, ["ui-accordion-content-active"], JAM.policy.p3);
    }
    return;
  }
  function v1471(b$$481) {
    var v4045;
    if (b$$481) {
      var v10838;
      if (typeof b$$481 == "number") {
        var v16443 = this.headers;
        v10838 = JAM.call(v16443.filter, v16443, [":eq(" + b$$481 + ")"], JAM.policy.p3);
      } else {
        var v16445 = this.headers;
        var v22023 = this.headers;
        v10838 = JAM.call(v16445.not, v16445, [JAM.call(v22023.not, v22023, [b$$481], JAM.policy.p3)], JAM.policy.p3);
      }
      v4045 = v10838;
    } else {
      var v10839;
      if (b$$481 === !1) {
        v10839 = JAM.call(a$$507, null, [[]], JAM.policy.p3);
      } else {
        var v16448 = this.headers;
        v10839 = JAM.call(v16448.filter, v16448, [":eq(0)"], JAM.policy.p3);
      }
      v4045 = v10839;
    }
    return v4045;
  }
  function v1470(a$$510) {
    this.options.active = a$$510;
    var b$$480 = JAM.call(this._findActive, this, [a$$510], JAM.policy.p3)[0];
    JAM.call(this._clickHandler, this, [{target:b$$480}, b$$480], JAM.policy.p3);
    return this;
  }
  function v1469() {
    function v1468() {
      var v16450 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      var v10841 = JAM.call(v16450.height, v16450, [""], JAM.policy.p3);
      c$$382 = JAM.call(Math.max, Math, [c$$382, JAM.call(v10841.height, v10841, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1467() {
      var v4049 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      var v22025 = c$$382;
      var v24810 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      var v16451 = v22025 - JAM.call(v24810.innerHeight, v24810, [], JAM.policy.p3);
      var v22027 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4049.height, v4049, [JAM.call(Math.max, Math, [0, v16451 + JAM.call(v22027.height, v22027, [], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1466() {
      var v10843 = c$$382;
      var v16453 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      c$$382 = v10843 - JAM.call(v16453.outerHeight, v16453, [!0], JAM.policy.p3);
      return;
    }
    var b$$479 = this.options;
    var c$$382;
    if (b$$479.fillSpace) {
      if (a$$507.browser.msie) {
        var v10846 = this.element;
        var v4051 = JAM.call(v10846.parent, v10846, [], JAM.policy.p3);
        var d$$299 = JAM.call(v4051.css, v4051, ["overflow"], JAM.policy.p3);
        var v10847 = this.element;
        var v4052 = JAM.call(v10847.parent, v10847, [], JAM.policy.p3);
        JAM.call(v4052.css, v4052, ["overflow", "hidden"], JAM.policy.p3);
      }
      var v24811 = this.element;
      var v22028 = JAM.call(v24811.parent, v24811, [], JAM.policy.p3);
      c$$382 = JAM.call(v22028.height, v22028, [], JAM.policy.p3);
      var v22029 = a$$507.browser.msie;
      if (v22029) {
        var v26737 = this.element;
        var v24813 = JAM.call(v26737.parent, v26737, [], JAM.policy.p3);
        JAM.call(v24813.css, v24813, ["overflow", d$$299], JAM.policy.p3);
      }
      var v16455 = this.headers;
      JAM.call(v16455.each, v16455, [v1466], JAM.policy.p3);
      var v22030 = this.headers;
      var v16456 = JAM.call(v22030.next, v22030, [], JAM.policy.p3);
      var v10848 = JAM.call(v16456.each, v16456, [v1467], JAM.policy.p3);
      JAM.call(v10848.css, v10848, ["overflow", "auto"], JAM.policy.p3);
    } else {
      var v4054 = b$$479.autoHeight;
      if (v4054) {
        c$$382 = 0;
        var v24814 = this.headers;
        var v22031 = JAM.call(v24814.next, v24814, [], JAM.policy.p3);
        var v16457 = JAM.call(v22031.each, v22031, [v1468], JAM.policy.p3);
        JAM.call(v16457.height, v16457, [c$$382], JAM.policy.p3);
      }
    }
    return this;
  }
  function v1465(b$$478) {
    var v16458 = this.options.disabled;
    if (!v16458) {
      v16458 = b$$478.altKey;
    }
    var v10849 = v16458;
    if (!v10849) {
      v10849 = b$$478.ctrlKey;
    }
    if (v10849) {
      return;
    }
    var c$$381 = a$$507.ui.keyCode;
    var d$$298 = this.headers.length;
    var v4059 = this.headers;
    var e$$271 = JAM.call(v4059.index, v4059, [b$$478.target], JAM.policy.p3);
    var f$$129 = !1;
    switch(b$$478.keyCode) {
      case c$$381.RIGHT:
      ;
      case c$$381.DOWN:
        f$$129 = this.headers[(e$$271 + 1) % d$$298];
        break;
      case c$$381.LEFT:
      ;
      case c$$381.UP:
        f$$129 = this.headers[(e$$271 - 1 + d$$298) % d$$298];
        break;
      case c$$381.SPACE:
      ;
      case c$$381.ENTER:
        JAM.call(this._clickHandler, this, [{target:b$$478.target}, b$$478.target], JAM.policy.p3);
        JAM.call(b$$478.preventDefault, b$$478, [], JAM.policy.p3);
    }
    var v4066;
    if (f$$129) {
      var v24815 = JAM.call(a$$507, null, [b$$478.target], JAM.policy.p3);
      JAM.call(v24815.attr, v24815, ["tabIndex", -1], JAM.policy.p3);
      var v24816 = JAM.call(a$$507, null, [f$$129], JAM.policy.p3);
      JAM.call(v24816.attr, v24816, ["tabIndex", 0], JAM.policy.p3);
      JAM.call(f$$129.focus, f$$129, [], JAM.policy.p3);
      v4066 = !1;
    } else {
      v4066 = !0;
    }
    return v4066;
  }
  function v1464(b$$477, c$$380) {
    var v22034 = a$$507.Widget.prototype._setOption;
    JAM.call(v22034.apply, v22034, [this, arguments], JAM.policy.p3);
    var v22035 = b$$477 == "active";
    if (v22035) {
      JAM.call(this.activate, this, [c$$380], JAM.policy.p3);
    }
    var v16462 = b$$477 == "icons";
    if (v16462) {
      JAM.call(this._destroyIcons, this, [], JAM.policy.p3);
      if (c$$380) {
        JAM.call(this._createIcons, this, [], JAM.policy.p3);
      }
    }
    var v10854 = b$$477 == "disabled";
    if (v10854) {
      var v22036 = this.headers;
      var v24818 = this.headers;
      var v16463 = JAM.call(v22036.add, v22036, [JAM.call(v24818.next, v24818, [], JAM.policy.p3)], JAM.policy.p3);
      var v22038;
      if (c$$380) {
        v22038 = "addClass";
      } else {
        v22038 = "removeClass";
      }
      JAM.call(v16463[v22038], v16463, ["ui-accordion-disabled ui-state-disabled"], JAM.policy.p3);
    }
    return;
  }
  function v1463() {
    var b$$476 = this.options;
    var v24819 = this.element;
    var v22039 = JAM.call(v24819.removeClass, v24819, ["ui-accordion ui-widget ui-helper-reset"], JAM.policy.p3);
    JAM.call(v22039.removeAttr, v22039, ["role"], JAM.policy.p3);
    var v29518 = this.headers;
    var v28936 = JAM.call(v29518.unbind, v29518, [".accordion"], JAM.policy.p3);
    var v28062 = JAM.call(v28936.removeClass, v28936, ["ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top"], JAM.policy.p3);
    var v26740 = JAM.call(v28062.removeAttr, v28062, ["role"], JAM.policy.p3);
    var v24820 = JAM.call(v26740.removeAttr, v26740, ["aria-expanded"], JAM.policy.p3);
    var v22040 = JAM.call(v24820.removeAttr, v24820, ["aria-selected"], JAM.policy.p3);
    JAM.call(v22040.removeAttr, v22040, ["tabIndex"], JAM.policy.p3);
    var v22041 = this.headers;
    var v16465 = JAM.call(v22041.find, v22041, ["a"], JAM.policy.p3);
    JAM.call(v16465.removeAttr, v16465, ["tabIndex"], JAM.policy.p3);
    JAM.call(this._destroyIcons, this, [], JAM.policy.p3);
    var v22042 = this.headers;
    var v16466 = JAM.call(v22042.next, v22042, [], JAM.policy.p3);
    var v10855 = JAM.call(v16466.css, v16466, ["display", ""], JAM.policy.p3);
    var v4067 = JAM.call(v10855.removeAttr, v10855, ["role"], JAM.policy.p3);
    var c$$379 = JAM.call(v4067.removeClass, v4067, ["ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled"], JAM.policy.p3);
    var v16467 = b$$476.autoHeight;
    if (!v16467) {
      v16467 = b$$476.fillHeight;
    }
    var v10856 = v16467;
    if (v10856) {
      JAM.call(c$$379.css, c$$379, ["height", ""], JAM.policy.p3);
    }
    var v10857 = a$$507.Widget.prototype.destroy;
    return JAM.call(v10857.call, v10857, [this], JAM.policy.p3);
  }
  function v1462() {
    var v16469 = this.headers;
    var v10858 = JAM.call(v16469.children, v16469, [".ui-icon"], JAM.policy.p3);
    JAM.call(v10858.remove, v10858, [], JAM.policy.p3);
    var v10859 = this.element;
    JAM.call(v10859.removeClass, v10859, ["ui-accordion-icons"], JAM.policy.p3);
    return;
  }
  function v1461() {
    var b$$475 = this.options;
    var v4068 = b$$475.icons;
    if (v4068) {
      var v24821 = JAM.call(a$$507, null, ["<span></span>"], JAM.policy.p3);
      var v22045 = JAM.call(v24821.addClass, v24821, ["ui-icon " + b$$475.icons.header], JAM.policy.p3);
      JAM.call(v22045.prependTo, v22045, [this.headers], JAM.policy.p3);
      var v26742 = this.active;
      var v24823 = JAM.call(v26742.children, v26742, [".ui-icon"], JAM.policy.p3);
      var v22047 = JAM.call(v24823.toggleClass, v24823, [b$$475.icons.header], JAM.policy.p3);
      JAM.call(v22047.toggleClass, v22047, [b$$475.icons.headerSelected], JAM.policy.p3);
      var v16470 = this.element;
      JAM.call(v16470.addClass, v16470, ["ui-accordion-icons"], JAM.policy.p3);
    }
    return;
  }
  function v1460() {
    function v1459(a$$509) {
      var v10860 = b$$474._clickHandler;
      JAM.call(v10860.call, v10860, [b$$474, a$$509, this], JAM.policy.p3);
      JAM.call(a$$509.preventDefault, a$$509, [], JAM.policy.p3);
      return;
    }
    function v1458(a$$508) {
      return JAM.call(b$$474._keydown, b$$474, [a$$508], JAM.policy.p3);
    }
    function v1457() {
      if (c$$378.disabled) {
        return;
      }
      var v4070 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4070.removeClass, v4070, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1456() {
      if (c$$378.disabled) {
        return;
      }
      var v4072 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4072.addClass, v4072, ["ui-state-focus"], JAM.policy.p3);
      return;
    }
    function v1455() {
      if (c$$378.disabled) {
        return;
      }
      var v4074 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4074.removeClass, v4074, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    function v1454() {
      if (c$$378.disabled) {
        return;
      }
      var v4076 = JAM.call(a$$507, null, [this], JAM.policy.p3);
      JAM.call(v4076.addClass, v4076, ["ui-state-hover"], JAM.policy.p3);
      return;
    }
    var b$$474 = this;
    var c$$378 = b$$474.options;
    b$$474.running = 0;
    var v26744 = b$$474.element;
    var v24826 = JAM.call(v26744.addClass, v26744, ["ui-accordion ui-widget ui-helper-reset"], JAM.policy.p3);
    var v22049 = JAM.call(v24826.children, v24826, ["li"], JAM.policy.p3);
    JAM.call(v22049.addClass, v22049, ["ui-accordion-li-fix"], JAM.policy.p3);
    var v16471 = b$$474;
    var v29519 = b$$474.element;
    var v28937 = JAM.call(v29519.find, v29519, [c$$378.header], JAM.policy.p3);
    var v28064 = JAM.call(v28937.addClass, v28937, ["ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"], JAM.policy.p3);
    var v26745 = JAM.call(v28064.bind, v28064, ["mouseenter.accordion", v1454], JAM.policy.p3);
    var v24827 = JAM.call(v26745.bind, v26745, ["mouseleave.accordion", v1455], JAM.policy.p3);
    var v22050 = JAM.call(v24827.bind, v24827, ["focus.accordion", v1456], JAM.policy.p3);
    var v31044 = JAM.call(v22050.bind, v22050, ["blur.accordion", v1457], JAM.policy.p3);
    v16471.headers = v31044;
    var v16472 = b$$474.headers;
    var v10861 = JAM.call(v16472.next, v16472, [], JAM.policy.p3);
    JAM.call(v10861.addClass, v10861, ["ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"], JAM.policy.p3);
    if (c$$378.navigation) {
      var v16473 = b$$474.element;
      var v10862 = JAM.call(v16473.find, v16473, ["a"], JAM.policy.p3);
      var v4077 = JAM.call(v10862.filter, v10862, [c$$378.navigationFilter], JAM.policy.p3);
      var d$$297 = JAM.call(v4077.eq, v4077, [0], JAM.policy.p3);
      if (d$$297.length) {
        var e$$270 = JAM.call(d$$297.closest, d$$297, [".ui-accordion-header"], JAM.policy.p3);
        var v4078;
        if (e$$270.length) {
          v4078 = b$$474.active = e$$270;
        } else {
          var v10864 = b$$474;
          var v16474 = JAM.call(d$$297.closest, d$$297, [".ui-accordion-content"], JAM.policy.p3);
          var v31045 = JAM.call(v16474.prev, v16474, [], JAM.policy.p3);
          v4078 = v10864.active = v31045;
        }
        v4078;
      }
    }
    var v29862 = b$$474;
    var v30674 = b$$474.active;
    if (!v30674) {
      v30674 = c$$378.active;
    }
    var v30461 = JAM.call(b$$474._findActive, b$$474, [v30674], JAM.policy.p3);
    var v30322 = JAM.call(v30461.addClass, v30461, ["ui-state-default ui-state-active"], JAM.policy.p3);
    var v30114 = JAM.call(v30322.toggleClass, v30322, ["ui-corner-all"], JAM.policy.p3);
    var v31046 = JAM.call(v30114.toggleClass, v30114, ["ui-corner-top"], JAM.policy.p3);
    v29862.active = v31046;
    var v30115 = b$$474.active;
    var v29863 = JAM.call(v30115.next, v30115, [], JAM.policy.p3);
    JAM.call(v29863.addClass, v29863, ["ui-accordion-content-active"], JAM.policy.p3);
    JAM.call(b$$474._createIcons, b$$474, [], JAM.policy.p3);
    JAM.call(b$$474.resize, b$$474, [], JAM.policy.p3);
    var v28065 = b$$474.element;
    JAM.call(v28065.attr, v28065, ["role", "tablist"], JAM.policy.p3);
    var v29521 = b$$474.headers;
    var v28938 = JAM.call(v29521.attr, v29521, ["role", "tab"], JAM.policy.p3);
    var v28066 = JAM.call(v28938.bind, v28938, ["keydown.accordion", v1458], JAM.policy.p3);
    var v26746 = JAM.call(v28066.next, v28066, [], JAM.policy.p3);
    JAM.call(v26746.attr, v26746, ["role", "tabpanel"], JAM.policy.p3);
    var v28939 = b$$474.headers;
    var v29522 = b$$474.active;
    if (!v29522) {
      v29522 = "";
    }
    var v28067 = JAM.call(v28939.not, v28939, [v29522], JAM.policy.p3);
    var v26747 = JAM.call(v28067.attr, v28067, [{"aria-expanded":"false", "aria-selected":"false", tabIndex:-1}], JAM.policy.p3);
    var v24828 = JAM.call(v26747.next, v26747, [], JAM.policy.p3);
    JAM.call(v24828.hide, v24828, [], JAM.policy.p3);
    var v22051;
    if (b$$474.active.length) {
      var v24829 = b$$474.active;
      v22051 = JAM.call(v24829.attr, v24829, [{"aria-expanded":"true", "aria-selected":"true", tabIndex:0}], JAM.policy.p3);
    } else {
      var v26749 = b$$474.headers;
      var v24831 = JAM.call(v26749.eq, v26749, [0], JAM.policy.p3);
      v22051 = JAM.call(v24831.attr, v24831, ["tabIndex", 0], JAM.policy.p3);
    }
    v22051;
    var v16475 = a$$507.browser.safari;
    if (!v16475) {
      var v24833 = b$$474.headers;
      var v22053 = JAM.call(v24833.find, v24833, ["a"], JAM.policy.p3);
      JAM.call(v22053.attr, v22053, ["tabIndex", -1], JAM.policy.p3);
    }
    var v10866 = c$$378.event;
    if (v10866) {
      var v16476 = b$$474.headers;
      var v26750 = c$$378.event;
      var v24834 = JAM.call(v26750.split, v26750, [" "], JAM.policy.p3);
      JAM.call(v16476.bind, v16476, [JAM.call(v24834.join, v24834, [".accordion "], JAM.policy.p3) + ".accordion", v1459], JAM.policy.p3);
    }
    return;
  }
  function v1453() {
    var v10867 = this.href;
    var v4081 = JAM.call(v10867.toLowerCase, v10867, [], JAM.policy.p3);
    var v10868 = location.href;
    return v4081 === JAM.call(v10868.toLowerCase, v10868, [], JAM.policy.p3);
  }
  JAM.call(a$$507.widget, a$$507, ["ui.accordion", {options:{active:0, animated:"slide", autoHeight:!0, clearStyle:!1, collapsible:!1, event:"click", fillSpace:!1, header:"> li > :first-child,> :not(li):even", icons:{header:"ui-icon-triangle-1-e", headerSelected:"ui-icon-triangle-1-s"}, navigation:!1, navigationFilter:v1453}, _create:v1460, _createIcons:v1461, _destroyIcons:v1462, destroy:v1463, _setOption:v1464, _keydown:v1465, resize:v1469, activate:v1470, _findActive:v1471, _clickHandler:v1472, 
  _toggle:v1474, _completed:v1475}], JAM.policy.p3);
  JAM.call(a$$507.extend, a$$507, [a$$507.ui.accordion, {version:"1.8.24", animations:{slide:v1479, bounceslide:v1480}}], JAM.policy.p3);
  return;
}
function v1452(a$$506, b$$471) {
  function v1451(b$$472) {
    function v1450() {
      function v1449() {
        JAM.call(h$$126.remove, h$$126, [], JAM.policy.p3);
        var v16481 = b$$472.callback;
        if (v16481) {
          var v22062 = b$$472.callback;
          JAM.call(v22062.apply, v22062, [c$$377[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$377.dequeue, c$$377, [], JAM.policy.p3);
        return;
      }
      var c$$377 = JAM.call(a$$506, null, [this], JAM.policy.p3);
      var d$$296 = JAM.call(a$$506, null, [b$$472.options.to], JAM.policy.p3);
      var e$$269 = JAM.call(d$$296.offset, d$$296, [], JAM.policy.p3);
      var f$$128 = {top:e$$269.top, left:e$$269.left, height:JAM.call(d$$296.innerHeight, d$$296, [], JAM.policy.p3), width:JAM.call(d$$296.innerWidth, d$$296, [], JAM.policy.p3)};
      var g$$155 = JAM.call(c$$377.offset, c$$377, [], JAM.policy.p3);
      var v22064 = JAM.call(a$$506, null, ['<div class="ui-effects-transfer"></div>'], JAM.policy.p3);
      var v16482 = JAM.call(v22064.appendTo, v22064, [document.body], JAM.policy.p3);
      var v10873 = JAM.call(v16482.addClass, v16482, [b$$472.options.className], JAM.policy.p3);
      var v4088 = JAM.call(v10873.css, v10873, [{top:g$$155.top, left:g$$155.left, height:JAM.call(c$$377.innerHeight, c$$377, [], JAM.policy.p3), width:JAM.call(c$$377.innerWidth, c$$377, [], JAM.policy.p3), position:"absolute"}], JAM.policy.p3);
      var h$$126 = JAM.call(v4088.animate, v4088, [f$$128, b$$472.duration, b$$472.options.easing, v1449], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1450], JAM.policy.p3);
  }
  a$$506.effects.transfer = v1451;
  return;
}
function v1448(a$$505, b$$469) {
  function v1447(b$$470) {
    function v1446() {
      function v1445() {
        var v24835 = e$$268 == "hide";
        if (v24835) {
          JAM.call(c$$376.hide, c$$376, [], JAM.policy.p3);
        }
        var v24836 = a$$505.effects;
        JAM.call(v24836.restore, v24836, [c$$376, d$$295], JAM.policy.p3);
        var v22067 = a$$505.effects;
        JAM.call(v22067.removeWrapper, v22067, [c$$376], JAM.policy.p3);
        var v16488 = b$$470.callback;
        if (v16488) {
          var v22068 = b$$470.callback;
          JAM.call(v22068.apply, v22068, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$376.dequeue, c$$376, [], JAM.policy.p3);
        return;
      }
      var c$$376 = JAM.call(a$$505, null, [this], JAM.policy.p3);
      var d$$295 = ["position", "top", "bottom", "left", "right"];
      var v4092 = a$$505.effects;
      var v10876 = b$$470.options.mode;
      if (!v10876) {
        v10876 = "show";
      }
      var e$$268 = JAM.call(v4092.setMode, v4092, [c$$376, v10876], JAM.policy.p3);
      var v4094 = b$$470.options.direction;
      if (!v4094) {
        v4094 = "left";
      }
      var f$$127 = v4094;
      var v16491 = a$$505.effects;
      JAM.call(v16491.save, v16491, [c$$376, d$$295], JAM.policy.p3);
      JAM.call(c$$376.show, c$$376, [], JAM.policy.p3);
      var v16492 = a$$505.effects;
      var v10879 = JAM.call(v16492.createWrapper, v16492, [c$$376], JAM.policy.p3);
      JAM.call(v10879.css, v10879, [{overflow:"hidden"}], JAM.policy.p3);
      var v4095;
      var v16493 = f$$127 == "up";
      if (!v16493) {
        v16493 = f$$127 == "down";
      }
      if (v16493) {
        v4095 = "top";
      } else {
        v4095 = "left";
      }
      var g$$154 = v4095;
      var v4096;
      var v16494 = f$$127 == "up";
      if (!v16494) {
        v16494 = f$$127 == "left";
      }
      if (v16494) {
        v4096 = "pos";
      } else {
        v4096 = "neg";
      }
      var h$$125 = v4096;
      var v4097 = b$$470.options.distance;
      if (!v4097) {
        var v10884;
        if (g$$154 == "top") {
          v10884 = JAM.call(c$$376.outerHeight, c$$376, [!0], JAM.policy.p3);
        } else {
          v10884 = JAM.call(c$$376.outerWidth, c$$376, [!0], JAM.policy.p3);
        }
        v4097 = v10884;
      }
      var i$$182 = v4097;
      var v4098 = e$$268 == "show";
      if (v4098) {
        var v16498;
        if (h$$125 == "pos") {
          var v22071;
          if (isNaN(i$$182)) {
            v22071 = "-" + i$$182;
          } else {
            v22071 = -i$$182;
          }
          v16498 = v22071;
        } else {
          v16498 = i$$182;
        }
        JAM.call(c$$376.css, c$$376, [g$$154, v16498], JAM.policy.p3);
      }
      var j$$91 = {};
      var v16499;
      if (e$$268 == "show") {
        var v22073;
        if (h$$125 == "pos") {
          v22073 = "+=";
        } else {
          v22073 = "-=";
        }
        v16499 = v22073;
      } else {
        var v22074;
        if (h$$125 == "pos") {
          v22074 = "-=";
        } else {
          v22074 = "+=";
        }
        v16499 = v22074;
      }
      var v10887 = v16499;
      introspect(JAM.policy.p2) {
        j$$91[g$$154] = v10887 + i$$182;
      }
      JAM.call(c$$376.animate, c$$376, [j$$91, {queue:!1, duration:b$$470.duration, easing:b$$470.options.easing, complete:v1445}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1446], JAM.policy.p3);
  }
  a$$505.effects.slide = v1447;
  return;
}
function v1444(a$$504, b$$467) {
  function v1443(b$$468) {
    function v1442() {
      function v1441() {
        JAM.call(c$$375.dequeue, c$$375, [], JAM.policy.p3);
        return;
      }
      function v1440() {
        var v16503 = a$$504.effects;
        JAM.call(v16503.restore, v16503, [c$$375, d$$294], JAM.policy.p3);
        var v16504 = a$$504.effects;
        JAM.call(v16504.removeWrapper, v16504, [c$$375], JAM.policy.p3);
        var v10889 = b$$468.callback;
        if (v10889) {
          var v16505 = b$$468.callback;
          JAM.call(v16505.apply, v16505, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      var c$$375 = JAM.call(a$$504, null, [this], JAM.policy.p3);
      var d$$294 = ["position", "top", "bottom", "left", "right"];
      var v4100 = a$$504.effects;
      var v10890 = b$$468.options.mode;
      if (!v10890) {
        v10890 = "effect";
      }
      var e$$267 = JAM.call(v4100.setMode, v4100, [c$$375, v10890], JAM.policy.p3);
      var v4102 = b$$468.options.direction;
      if (!v4102) {
        v4102 = "left";
      }
      var f$$126 = v4102;
      var v4103 = b$$468.options.distance;
      if (!v4103) {
        v4103 = 20;
      }
      var g$$153 = v4103;
      var v4104 = b$$468.options.times;
      if (!v4104) {
        v4104 = 3;
      }
      var h$$124 = v4104;
      var v10897 = b$$468.duration;
      if (!v10897) {
        v10897 = b$$468.options.duration;
      }
      var v4105 = v10897;
      if (!v4105) {
        v4105 = 140;
      }
      var i$$181 = v4105;
      var v16510 = a$$504.effects;
      JAM.call(v16510.save, v16510, [c$$375, d$$294], JAM.policy.p3);
      JAM.call(c$$375.show, c$$375, [], JAM.policy.p3);
      var v10899 = a$$504.effects;
      JAM.call(v10899.createWrapper, v10899, [c$$375], JAM.policy.p3);
      var v4106;
      var v16511 = f$$126 == "up";
      if (!v16511) {
        v16511 = f$$126 == "down";
      }
      if (v16511) {
        v4106 = "top";
      } else {
        v4106 = "left";
      }
      var j$$90 = v4106;
      var v4107;
      var v16512 = f$$126 == "up";
      if (!v16512) {
        v16512 = f$$126 == "left";
      }
      if (v16512) {
        v4107 = "pos";
      } else {
        v4107 = "neg";
      }
      var k$$61 = v4107;
      var l$$70 = {};
      var m$$41 = {};
      var n$$90 = {};
      var v24840;
      if (k$$61 == "pos") {
        v24840 = "-=";
      } else {
        v24840 = "+=";
      }
      var v22079 = v24840;
      introspect(JAM.policy.p2) {
        l$$70[j$$90] = v22079 + g$$153;
      }
      var v24841;
      if (k$$61 == "pos") {
        v24841 = "+=";
      } else {
        v24841 = "-=";
      }
      var v22080 = v24841;
      var v22081 = g$$153 * 2;
      introspect(JAM.policy.p2) {
        m$$41[j$$90] = v22080 + v22081;
      }
      var v22082;
      if (k$$61 == "pos") {
        v22082 = "-=";
      } else {
        v22082 = "+=";
      }
      var v16513 = v22082;
      var v16514 = g$$153 * 2;
      introspect(JAM.policy.p2) {
        n$$90[j$$90] = v16513 + v16514;
      }
      JAM.call(c$$375.animate, c$$375, [l$$70, i$$181, b$$468.options.easing], JAM.policy.p3);
      var p$$45 = 1;
      var v4110 = p$$45 < h$$124;
      for (;v4110;) {
        var v4108 = JAM.call(c$$375.animate, c$$375, [m$$41, i$$181, b$$468.options.easing], JAM.policy.p3);
        JAM.call(v4108.animate, v4108, [n$$90, i$$181, b$$468.options.easing], JAM.policy.p3);
        p$$45++;
        v4110 = p$$45 < h$$124;
      }
      var v16517 = JAM.call(c$$375.animate, c$$375, [m$$41, i$$181, b$$468.options.easing], JAM.policy.p3);
      JAM.call(v16517.animate, v16517, [l$$70, i$$181 / 2, b$$468.options.easing, v1440], JAM.policy.p3);
      JAM.call(c$$375.queue, c$$375, ["fx", v1441], JAM.policy.p3);
      JAM.call(c$$375.dequeue, c$$375, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1442], JAM.policy.p3);
  }
  a$$504.effects.shake = v1443;
  return;
}
function v1439(a$$503, b$$463) {
  function v1438(b$$466) {
    function v1437() {
      function v1436() {
        var v26753 = c$$373.to.opacity === 0;
        if (v26753) {
          JAM.call(c$$373.css, c$$373, ["opacity", c$$373.from.opacity], JAM.policy.p3);
        }
        var v26754 = j$$89 == "hide";
        if (v26754) {
          JAM.call(c$$373.hide, c$$373, [], JAM.policy.p3);
        }
        var v24844 = a$$503.effects;
        var v26755;
        if (k$$60) {
          v26755 = d$$292;
        } else {
          v26755 = e$$266;
        }
        JAM.call(v24844.restore, v24844, [c$$373, v26755], JAM.policy.p3);
        var v22085 = a$$503.effects;
        JAM.call(v22085.removeWrapper, v22085, [c$$373], JAM.policy.p3);
        var v16520 = b$$466.callback;
        if (v16520) {
          var v22086 = b$$466.callback;
          JAM.call(v22086.apply, v22086, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$373.dequeue, c$$373, [], JAM.policy.p3);
        return;
      }
      function v1435() {
        function v1434() {
          if (k$$60) {
            var v10905 = a$$503.effects;
            JAM.call(v10905.restore, v10905, [c$$374, f$$125], JAM.policy.p3);
          }
          return;
        }
        var c$$374 = JAM.call(a$$503, null, [this], JAM.policy.p3);
        if (k$$60) {
          var v10906 = a$$503.effects;
          JAM.call(v10906.save, v10906, [c$$374, f$$125], JAM.policy.p3);
        }
        var JSCompiler_object_inline_height_96 = JAM.call(c$$374.height, c$$374, [], JAM.policy.p3);
        var JSCompiler_object_inline_width_97 = JAM.call(c$$374.width, c$$374, [], JAM.policy.p3);
        c$$374.from = {height:JSCompiler_object_inline_height_96 * JSCompiler_object_inline_y_100, width:JSCompiler_object_inline_width_97 * JSCompiler_object_inline_x_101};
        c$$374.to = {height:JSCompiler_object_inline_height_96 * JSCompiler_object_inline_y_102, width:JSCompiler_object_inline_width_97 * JSCompiler_object_inline_x_103};
        var v24846 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
        if (v24846) {
          var v28071 = c$$374;
          var v28943 = a$$503.effects;
          var v31047 = JAM.call(v28943.setTransition, v28943, [c$$374, h$$123, JSCompiler_object_inline_y_100, c$$374.from], JAM.policy.p3);
          v28071.from = v31047;
          var v28072 = c$$374;
          var v28945 = a$$503.effects;
          var v31048 = JAM.call(v28945.setTransition, v28945, [c$$374, h$$123, JSCompiler_object_inline_y_102, c$$374.to], JAM.policy.p3);
          v28072.to = v31048;
        }
        var v22087 = JSCompiler_object_inline_x_101 != JSCompiler_object_inline_x_103;
        if (v22087) {
          var v26760 = c$$374;
          var v28073 = a$$503.effects;
          var v31049 = JAM.call(v28073.setTransition, v28073, [c$$374, i$$180, JSCompiler_object_inline_x_101, c$$374.from], JAM.policy.p3);
          v26760.from = v31049;
          var v26761 = c$$374;
          var v28075 = a$$503.effects;
          var v31050 = JAM.call(v28075.setTransition, v28075, [c$$374, i$$180, JSCompiler_object_inline_x_103, c$$374.to], JAM.policy.p3);
          v26761.to = v31050;
        }
        JAM.call(c$$374.css, c$$374, [c$$374.from], JAM.policy.p3);
        JAM.call(c$$374.animate, c$$374, [c$$374.to, b$$466.duration, b$$466.options.easing, v1434], JAM.policy.p3);
        return;
      }
      var c$$373 = JAM.call(a$$503, null, [this], JAM.policy.p3);
      var d$$292 = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"];
      var e$$266 = ["position", "top", "bottom", "left", "right", "overflow", "opacity"];
      var f$$125 = ["width", "height", "overflow"];
      var g$$152 = ["fontSize"];
      var h$$123 = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"];
      var i$$180 = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"];
      var v4112 = a$$503.effects;
      var v10910 = b$$466.options.mode;
      if (!v10910) {
        v10910 = "effect";
      }
      var j$$89 = JAM.call(v4112.setMode, v4112, [c$$373, v10910], JAM.policy.p3);
      var v4114 = b$$466.options.restore;
      if (!v4114) {
        v4114 = !1;
      }
      var k$$60 = v4114;
      var v4115 = b$$466.options.scale;
      if (!v4115) {
        v4115 = "both";
      }
      var l$$69 = v4115;
      var m$$40 = b$$466.options.origin;
      var n$$89 = {height:JAM.call(c$$373.height, c$$373, [], JAM.policy.p3), width:JAM.call(c$$373.width, c$$373, [], JAM.policy.p3)};
      var v10915 = b$$466.options.from;
      if (!v10915) {
        v10915 = n$$89;
      }
      c$$373.from = v10915;
      var v10916 = b$$466.options.to;
      if (!v10916) {
        v10916 = n$$89;
      }
      c$$373.to = v10916;
      if (m$$40) {
        var v4119 = a$$503.effects;
        var p$$44 = JAM.call(v4119.getBaseline, v4119, [m$$40, n$$89], JAM.policy.p3);
        c$$373.from.top = (n$$89.height - c$$373.from.height) * p$$44.y;
        c$$373.from.left = (n$$89.width - c$$373.from.width) * p$$44.x;
        c$$373.to.top = (n$$89.height - c$$373.to.height) * p$$44.y;
        c$$373.to.left = (n$$89.width - c$$373.to.width) * p$$44.x;
      }
      var JSCompiler_object_inline_y_100 = c$$373.from.height / n$$89.height;
      var JSCompiler_object_inline_x_101 = c$$373.from.width / n$$89.width;
      var JSCompiler_object_inline_y_102 = c$$373.to.height / n$$89.height;
      var JSCompiler_object_inline_x_103 = c$$373.to.width / n$$89.width;
      var v10922 = l$$69 == "box";
      if (!v10922) {
        v10922 = l$$69 == "both";
      }
      if (v10922) {
        var v10923 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
        if (v10923) {
          d$$292 = JAM.call(d$$292.concat, d$$292, [h$$123], JAM.policy.p3);
          var v24854 = c$$373;
          var v26767 = a$$503.effects;
          var v31051 = JAM.call(v26767.setTransition, v26767, [c$$373, h$$123, JSCompiler_object_inline_y_100, c$$373.from], JAM.policy.p3);
          v24854.from = v31051;
          var v22094 = c$$373;
          var v24855 = a$$503.effects;
          var v31052 = JAM.call(v24855.setTransition, v24855, [c$$373, h$$123, JSCompiler_object_inline_y_102, c$$373.to], JAM.policy.p3);
          v22094.to = v31052;
        }
        var v10924 = JSCompiler_object_inline_x_101 != JSCompiler_object_inline_x_103;
        if (v10924) {
          d$$292 = JAM.call(d$$292.concat, d$$292, [i$$180], JAM.policy.p3);
          var v24857 = c$$373;
          var v26769 = a$$503.effects;
          var v31053 = JAM.call(v26769.setTransition, v26769, [c$$373, i$$180, JSCompiler_object_inline_x_101, c$$373.from], JAM.policy.p3);
          v24857.from = v31053;
          var v22095 = c$$373;
          var v24858 = a$$503.effects;
          var v31054 = JAM.call(v24858.setTransition, v24858, [c$$373, i$$180, JSCompiler_object_inline_x_103, c$$373.to], JAM.policy.p3);
          v22095.to = v31054;
        }
      }
      var v28079 = l$$69 == "content";
      if (!v28079) {
        v28079 = l$$69 == "both";
      }
      var v26771 = v28079;
      if (v26771) {
        v26771 = JSCompiler_object_inline_y_100 != JSCompiler_object_inline_y_102;
      }
      var v24860 = v26771;
      if (v24860) {
        d$$292 = JAM.call(d$$292.concat, d$$292, [g$$152], JAM.policy.p3);
        var v28948 = c$$373;
        var v29523 = a$$503.effects;
        var v31055 = JAM.call(v29523.setTransition, v29523, [c$$373, g$$152, JSCompiler_object_inline_y_100, c$$373.from], JAM.policy.p3);
        v28948.from = v31055;
        var v28080 = c$$373;
        var v28949 = a$$503.effects;
        var v31056 = JAM.call(v28949.setTransition, v28949, [c$$373, g$$152, JSCompiler_object_inline_y_102, c$$373.to], JAM.policy.p3);
        v28080.to = v31056;
      }
      var v24861 = a$$503.effects;
      var v26772;
      if (k$$60) {
        v26772 = d$$292;
      } else {
        v26772 = e$$266;
      }
      JAM.call(v24861.save, v24861, [c$$373, v26772], JAM.policy.p3);
      JAM.call(c$$373.show, c$$373, [], JAM.policy.p3);
      var v16533 = a$$503.effects;
      JAM.call(v16533.createWrapper, v16533, [c$$373], JAM.policy.p3);
      var v10925 = JAM.call(c$$373.css, c$$373, ["overflow", "hidden"], JAM.policy.p3);
      JAM.call(v10925.css, v10925, [c$$373.from], JAM.policy.p3);
      var v10927 = l$$69 == "content";
      if (!v10927) {
        v10927 = l$$69 == "both";
      }
      if (v10927) {
        var v22096 = JAM.call(h$$123.concat, h$$123, [["marginTop", "marginBottom"]], JAM.policy.p3);
        h$$123 = JAM.call(v22096.concat, v22096, [g$$152], JAM.policy.p3);
        i$$180 = JAM.call(i$$180.concat, i$$180, [["marginLeft", "marginRight"]], JAM.policy.p3);
        var v16535 = JAM.call(d$$292.concat, d$$292, [h$$123], JAM.policy.p3);
        f$$125 = JAM.call(v16535.concat, v16535, [i$$180], JAM.policy.p3);
        var v10928 = JAM.call(c$$373.find, c$$373, ["*[width]"], JAM.policy.p3);
        JAM.call(v10928.each, v10928, [v1435], JAM.policy.p3);
      }
      JAM.call(c$$373.animate, c$$373, [c$$373.to, {queue:!1, duration:b$$466.duration, easing:b$$466.options.easing, complete:v1436}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1437], JAM.policy.p3);
  }
  function v1433(b$$465) {
    function v1432() {
      var c$$372 = JAM.call(a$$503, null, [this], JAM.policy.p3);
      var d$$291 = JAM.call(a$$503.extend, a$$503, [!0, {}, b$$465.options], JAM.policy.p3);
      var v4134 = a$$503.effects;
      var v10932 = b$$465.options.mode;
      if (!v10932) {
        v10932 = "effect";
      }
      var e$$265 = JAM.call(v4134.setMode, v4134, [c$$372, v10932], JAM.policy.p3);
      var v4136 = parseInt(b$$465.options.percent, 10);
      if (!v4136) {
        var v10934;
        if (parseInt(b$$465.options.percent, 10) == 0) {
          v10934 = 0;
        } else {
          var v16540;
          if (e$$265 == "hide") {
            v16540 = 0;
          } else {
            v16540 = 100;
          }
          v10934 = v16540;
        }
        v4136 = v10934;
      }
      var f$$124 = v4136;
      var v4137 = b$$465.options.direction;
      if (!v4137) {
        v4137 = "both";
      }
      var g$$151 = v4137;
      var h$$122 = b$$465.options.origin;
      var v4139 = e$$265 != "effect";
      if (v4139) {
        var v16542 = h$$122;
        if (!v16542) {
          v16542 = ["middle", "center"];
        }
        d$$291.origin = v16542;
        d$$291.restore = !0;
      }
      var i$$179 = {height:JAM.call(c$$372.height, c$$372, [], JAM.policy.p3), width:JAM.call(c$$372.width, c$$372, [], JAM.policy.p3)};
      var v4142 = b$$465.options.from;
      if (!v4142) {
        var v10939;
        if (e$$265 == "show") {
          v10939 = {height:0, width:0};
        } else {
          v10939 = i$$179;
        }
        v4142 = v10939;
      }
      c$$372.from = v4142;
      var v4143;
      if (g$$151 != "horizontal") {
        v4143 = f$$124 / 100;
      } else {
        v4143 = 1;
      }
      var JSCompiler_object_inline_y_94 = v4143;
      var v4144;
      if (g$$151 != "vertical") {
        v4144 = f$$124 / 100;
      } else {
        v4144 = 1;
      }
      var JSCompiler_object_inline_x_95 = v4144;
      c$$372.to = {height:i$$179.height * JSCompiler_object_inline_y_94, width:i$$179.width * JSCompiler_object_inline_x_95};
      var v28083 = b$$465.options.fade;
      if (v28083) {
        var v29525 = e$$265 == "show";
        if (v29525) {
          c$$372.from.opacity = 0;
          c$$372.to.opacity = 1;
        }
        var v29526 = e$$265 == "hide";
        if (v29526) {
          c$$372.from.opacity = 1;
          c$$372.to.opacity = 0;
        }
      }
      d$$291.from = c$$372.from;
      d$$291.to = c$$372.to;
      d$$291.mode = e$$265;
      JAM.call(c$$372.effect, c$$372, ["size", d$$291, b$$465.duration, b$$465.callback], JAM.policy.p3);
      JAM.call(c$$372.dequeue, c$$372, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1432], JAM.policy.p3);
  }
  function v1431(b$$464) {
    function v1430() {
      var c$$371 = JAM.call(a$$503, null, [this], JAM.policy.p3);
      var v4145 = a$$503.effects;
      var v10943 = b$$464.options.mode;
      if (!v10943) {
        v10943 = "hide";
      }
      var d$$290 = JAM.call(v4145.setMode, v4145, [c$$371, v10943], JAM.policy.p3);
      var v4147 = parseInt(b$$464.options.percent, 10);
      if (!v4147) {
        v4147 = 150;
      }
      var e$$264 = v4147;
      var f$$123 = e$$264 / 100;
      var g$$150 = {height:JAM.call(c$$371.height, c$$371, [], JAM.policy.p3), width:JAM.call(c$$371.width, c$$371, [], JAM.policy.p3)};
      var v16549 = b$$464.options;
      var v22101 = !0;
      var v24865;
      if (d$$290 == "hide") {
        v24865 = e$$264;
      } else {
        v24865 = 100;
      }
      var v22102 = v24865;
      var v24866;
      if (d$$290 == "hide") {
        v24866 = g$$150;
      } else {
        v24866 = {height:g$$150.height * f$$123, width:g$$150.width * f$$123};
      }
      JAM.call(a$$503.extend, a$$503, [v16549, {fade:v22101, mode:d$$290, percent:v22102, from:v24866}], JAM.policy.p3);
      JAM.call(c$$371.effect, c$$371, ["scale", b$$464.options, b$$464.duration, b$$464.callback], JAM.policy.p3);
      JAM.call(c$$371.dequeue, c$$371, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1430], JAM.policy.p3);
  }
  a$$503.effects.puff = v1431;
  a$$503.effects.scale = v1433;
  a$$503.effects.size = v1438;
  return;
}
function v1429(a$$502, b$$461) {
  function v1428(b$$462) {
    function v1427() {
      function v1426() {
        JAM.call(c$$370.dequeue, c$$370, [], JAM.policy.p3);
        return;
      }
      function v1425() {
        var v10947 = h$$121 == 0;
        if (v10947) {
          JAM.call(c$$370.hide, c$$370, [], JAM.policy.p3);
        }
        var v10948 = b$$462.callback;
        if (v10948) {
          var v16556 = b$$462.callback;
          JAM.call(v16556.apply, v16556, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      var c$$370 = JAM.call(a$$502, null, [this], JAM.policy.p3);
      var v4150 = a$$502.effects;
      var v10949 = b$$462.options.mode;
      if (!v10949) {
        v10949 = "show";
      }
      var d$$289 = JAM.call(v4150.setMode, v4150, [c$$370, v10949], JAM.policy.p3);
      var v16559 = b$$462.options.times;
      if (!v16559) {
        v16559 = 5;
      }
      var e$$263 = v16559 * 2 - 1;
      var v4153;
      if (b$$462.duration) {
        v4153 = b$$462.duration / 2;
      } else {
        v4153 = a$$502.fx.speeds._default / 2;
      }
      var f$$122 = v4153;
      var g$$149 = JAM.call(c$$370.is, c$$370, [":visible"], JAM.policy.p3);
      var h$$121 = 0;
      if (!g$$149) {
        var v22107 = JAM.call(c$$370.css, c$$370, ["opacity", 0], JAM.policy.p3);
        JAM.call(v22107.show, v22107, [], JAM.policy.p3);
        h$$121 = 1;
      }
      var v22108 = d$$289 == "hide";
      if (v22108) {
        v22108 = g$$149;
      }
      var v16562 = v22108;
      if (!v16562) {
        var v22109 = d$$289 == "show";
        if (v22109) {
          v22109 = !g$$149;
        }
        v16562 = v22109;
      }
      var v10954 = v16562;
      if (v10954) {
        e$$263--;
      }
      var i$$178 = 0;
      var v4154 = i$$178 < e$$263;
      for (;v4154;) {
        JAM.call(c$$370.animate, c$$370, [{opacity:h$$121}, f$$122, b$$462.options.easing], JAM.policy.p3);
        h$$121 = (h$$121 + 1) % 2;
        i$$178++;
        v4154 = i$$178 < e$$263;
      }
      JAM.call(c$$370.animate, c$$370, [{opacity:h$$121}, f$$122, b$$462.options.easing, v1425], JAM.policy.p3);
      var v10960 = JAM.call(c$$370.queue, c$$370, ["fx", v1426], JAM.policy.p3);
      JAM.call(v10960.dequeue, v10960, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1427], JAM.policy.p3);
  }
  a$$502.effects.pulsate = v1428;
  return;
}
function v1424(a$$501, b$$459) {
  function v1423(b$$460) {
    function v1422() {
      function v1421() {
        var v24867 = e$$262 == "hide";
        if (v24867) {
          JAM.call(c$$369.hide, c$$369, [], JAM.policy.p3);
        }
        var v24868 = a$$501.effects;
        JAM.call(v24868.restore, v24868, [c$$369, d$$288], JAM.policy.p3);
        var v24869 = e$$262 == "show";
        if (v24869) {
          v24869 = !a$$501.support.opacity;
        }
        var v22111 = v24869;
        if (v22111) {
          var v24870 = this.style;
          JAM.call(v24870.removeAttribute, v24870, ["filter"], JAM.policy.p3);
        }
        var v16565 = b$$460.callback;
        if (v16565) {
          var v22112 = b$$460.callback;
          JAM.call(v22112.apply, v22112, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$369.dequeue, c$$369, [], JAM.policy.p3);
        return;
      }
      var c$$369 = JAM.call(a$$501, null, [this], JAM.policy.p3);
      var d$$288 = ["backgroundImage", "backgroundColor", "opacity"];
      var v4156 = a$$501.effects;
      var v10961 = b$$460.options.mode;
      if (!v10961) {
        v10961 = "show";
      }
      var e$$262 = JAM.call(v4156.setMode, v4156, [c$$369, v10961], JAM.policy.p3);
      var f$$121 = {backgroundColor:JAM.call(c$$369.css, c$$369, ["backgroundColor"], JAM.policy.p3)};
      var v16568 = e$$262 == "hide";
      if (v16568) {
        f$$121.opacity = 0;
      }
      var v16569 = a$$501.effects;
      JAM.call(v16569.save, v16569, [c$$369, d$$288], JAM.policy.p3);
      var v16570 = JAM.call(c$$369.show, c$$369, [], JAM.policy.p3);
      var v24871 = b$$460.options.color;
      if (!v24871) {
        v24871 = "#ffff99";
      }
      var v10962 = JAM.call(v16570.css, v16570, [{backgroundImage:"none", backgroundColor:v24871}], JAM.policy.p3);
      JAM.call(v10962.animate, v10962, [f$$121, {queue:!1, duration:b$$460.duration, easing:b$$460.options.easing, complete:v1421}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1422], JAM.policy.p3);
  }
  a$$501.effects.highlight = v1423;
  return;
}
function v1420(a$$500, b$$457) {
  function v1419(b$$458) {
    function v1418() {
      function v1417() {
        var v24872 = e$$261 == "hide";
        if (v24872) {
          JAM.call(c$$368.hide, c$$368, [], JAM.policy.p3);
        }
        var v24873 = a$$500.effects;
        JAM.call(v24873.restore, v24873, [c$$368, d$$287], JAM.policy.p3);
        var v22115 = a$$500.effects;
        JAM.call(v22115.removeWrapper, v22115, [c$$368], JAM.policy.p3);
        var v16575 = b$$458.callback;
        if (v16575) {
          var v22116 = b$$458.callback;
          JAM.call(v22116.apply, v22116, [c$$368[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$368.dequeue, c$$368, [], JAM.policy.p3);
        return;
      }
      var c$$368 = JAM.call(a$$500, null, [this], JAM.policy.p3);
      var d$$287 = ["position", "top", "bottom", "left", "right"];
      var v4160 = a$$500.effects;
      var v10964 = b$$458.options.mode;
      if (!v10964) {
        v10964 = "hide";
      }
      var e$$261 = JAM.call(v4160.setMode, v4160, [c$$368, v10964], JAM.policy.p3);
      var v4162 = b$$458.options.size;
      if (!v4162) {
        v4162 = 15;
      }
      var f$$120 = v4162;
      var g$$148 = !!b$$458.options.horizFirst;
      var v4164;
      if (b$$458.duration) {
        v4164 = b$$458.duration / 2;
      } else {
        v4164 = a$$500.fx.speeds._default / 2;
      }
      var h$$120 = v4164;
      var v10971 = a$$500.effects;
      JAM.call(v10971.save, v10971, [c$$368, d$$287], JAM.policy.p3);
      JAM.call(c$$368.show, c$$368, [], JAM.policy.p3);
      var v10972 = a$$500.effects;
      var v4165 = JAM.call(v10972.createWrapper, v10972, [c$$368], JAM.policy.p3);
      var i$$177 = JAM.call(v4165.css, v4165, [{overflow:"hidden"}], JAM.policy.p3);
      var j$$87 = e$$261 == "show" != g$$148;
      var v4168;
      if (j$$87) {
        v4168 = ["width", "height"];
      } else {
        v4168 = ["height", "width"];
      }
      var k$$59 = v4168;
      var v4169;
      if (j$$87) {
        v4169 = [JAM.call(i$$177.width, i$$177, [], JAM.policy.p3), JAM.call(i$$177.height, i$$177, [], JAM.policy.p3)];
      } else {
        v4169 = [JAM.call(i$$177.height, i$$177, [], JAM.policy.p3), JAM.call(i$$177.width, i$$177, [], JAM.policy.p3)];
      }
      var l$$68 = v4169;
      var m$$39 = JAM.call(/([0-9]+)%/.exec, /([0-9]+)%/, [f$$120], JAM.policy.p3);
      if (m$$39) {
        var v16580 = parseInt(m$$39[1], 10) / 100;
        var v24875;
        if (e$$261 == "hide") {
          v24875 = 0;
        } else {
          v24875 = 1;
        }
        f$$120 = v16580 * l$$68[v24875];
      }
      var v10977 = e$$261 == "show";
      if (v10977) {
        var v22121;
        if (g$$148) {
          v22121 = {height:0, width:f$$120};
        } else {
          v22121 = {height:f$$120, width:0};
        }
        JAM.call(i$$177.css, i$$177, [v22121], JAM.policy.p3);
      }
      var n$$88 = {};
      var p$$43 = {};
      var v16583 = k$$59[0];
      var v22122;
      if (e$$261 == "show") {
        v22122 = l$$68[0];
      } else {
        v22122 = f$$120;
      }
      introspect(JAM.policy.p2) {
        n$$88[v16583] = v22122;
      }
      var v16584 = k$$59[1];
      var v22123;
      if (e$$261 == "show") {
        v22123 = l$$68[1];
      } else {
        v22123 = 0;
      }
      introspect(JAM.policy.p2) {
        p$$43[v16584] = v22123;
      }
      var v10978 = JAM.call(i$$177.animate, i$$177, [n$$88, h$$120, b$$458.options.easing], JAM.policy.p3);
      JAM.call(v10978.animate, v10978, [p$$43, h$$120, b$$458.options.easing, v1417], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1418], JAM.policy.p3);
  }
  a$$500.effects.fold = v1419;
  return;
}
function v1416(a$$499, b$$455) {
  function v1415(b$$456) {
    function v1414() {
      function v1413() {
        var v10980 = b$$456.callback;
        if (v10980) {
          var v16587 = b$$456.callback;
          JAM.call(v16587.apply, v16587, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$367.dequeue, c$$367, [], JAM.policy.p3);
        return;
      }
      var c$$367 = JAM.call(a$$499, null, [this], JAM.policy.p3);
      var v4171 = a$$499.effects;
      var v10981 = b$$456.options.mode;
      if (!v10981) {
        v10981 = "hide";
      }
      var d$$286 = JAM.call(v4171.setMode, v4171, [c$$367, v10981], JAM.policy.p3);
      JAM.call(c$$367.animate, c$$367, [{opacity:d$$286}, {queue:!1, duration:b$$456.duration, easing:b$$456.options.easing, complete:v1413}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1414], JAM.policy.p3);
  }
  a$$499.effects.fade = v1415;
  return;
}
function v1412(a$$498, b$$453) {
  function v1411(b$$454) {
    function v1410() {
      function v1409() {
        var v22125;
        if (b$$454.options.mode == "show") {
          v22125 = JAM.call(e$$260.css, e$$260, [{visibility:"visible"}], JAM.policy.p3);
        } else {
          var v24879 = JAM.call(e$$260.css, e$$260, [{visibility:"visible"}], JAM.policy.p3);
          v22125 = JAM.call(v24879.hide, v24879, [], JAM.policy.p3);
        }
        v22125;
        var v22126 = b$$454.callback;
        if (v22126) {
          var v24881 = b$$454.callback;
          JAM.call(v24881.apply, v24881, [e$$260[0]], JAM.policy.p3);
        }
        JAM.call(e$$260.dequeue, e$$260, [], JAM.policy.p3);
        var v10985 = JAM.call(a$$498, null, ["div.ui-effects-explode"], JAM.policy.p3);
        JAM.call(v10985.remove, v10985, [], JAM.policy.p3);
        return;
      }
      var v4176;
      if (b$$454.options.pieces) {
        v4176 = JAM.call(Math.round, Math, [JAM.call(Math.sqrt, Math, [b$$454.options.pieces], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v4176 = 3;
      }
      var c$$366 = v4176;
      var v4177;
      if (b$$454.options.pieces) {
        v4177 = JAM.call(Math.round, Math, [JAM.call(Math.sqrt, Math, [b$$454.options.pieces], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v4177 = 3;
      }
      var d$$285 = v4177;
      var v4178 = b$$454.options;
      var v10990;
      if (b$$454.options.mode == "toggle") {
        var v16595;
        var v24884 = JAM.call(a$$498, null, [this], JAM.policy.p3);
        if (JAM.call(v24884.is, v24884, [":visible"], JAM.policy.p3)) {
          v16595 = "hide";
        } else {
          v16595 = "show";
        }
        v10990 = v16595;
      } else {
        v10990 = b$$454.options.mode;
      }
      v4178.mode = v10990;
      var v10991 = JAM.call(a$$498, null, [this], JAM.policy.p3);
      var v4179 = JAM.call(v10991.show, v10991, [], JAM.policy.p3);
      var e$$260 = JAM.call(v4179.css, v4179, ["visibility", "hidden"], JAM.policy.p3);
      var f$$119 = JAM.call(e$$260.offset, e$$260, [], JAM.policy.p3);
      var v10992 = f$$119;
      var v22131 = v10992.top;
      var v24885 = parseInt(JAM.call(e$$260.css, e$$260, ["marginTop"], JAM.policy.p3), 10);
      if (!v24885) {
        v24885 = 0;
      }
      v10992.top = v22131 - v24885;
      var v10993 = f$$119;
      var v22133 = v10993.left;
      var v24886 = parseInt(JAM.call(e$$260.css, e$$260, ["marginLeft"], JAM.policy.p3), 10);
      if (!v24886) {
        v24886 = 0;
      }
      v10993.left = v22133 - v24886;
      var g$$147 = JAM.call(e$$260.outerWidth, e$$260, [!0], JAM.policy.p3);
      var h$$119 = JAM.call(e$$260.outerHeight, e$$260, [!0], JAM.policy.p3);
      var i$$176 = 0;
      var v4186 = i$$176 < c$$366;
      for (;v4186;) {
        var j$$86 = 0;
        var v4185 = j$$86 < d$$285;
        for (;v4185;) {
          var v28088 = JAM.call(e$$260.clone, e$$260, [], JAM.policy.p3);
          var v26788 = JAM.call(v28088.appendTo, v28088, ["body"], JAM.policy.p3);
          var v24887 = JAM.call(v26788.wrap, v26788, ["<div></div>"], JAM.policy.p3);
          var v22135 = JAM.call(v24887.css, v24887, [{position:"absolute", visibility:"visible", left:-j$$86 * (g$$147 / d$$285), top:-i$$176 * (h$$119 / c$$366)}], JAM.policy.p3);
          var v16598 = JAM.call(v22135.parent, v22135, [], JAM.policy.p3);
          var v10994 = JAM.call(v16598.addClass, v16598, ["ui-effects-explode"], JAM.policy.p3);
          var v16599 = g$$147 / d$$285;
          var v16600 = h$$119 / c$$366;
          var v22136 = f$$119.left + j$$86 * (g$$147 / d$$285);
          var v24891;
          if (b$$454.options.mode == "show") {
            v24891 = (j$$86 - JAM.call(Math.floor, Math, [d$$285 / 2], JAM.policy.p3)) * (g$$147 / d$$285);
          } else {
            v24891 = 0;
          }
          var v16601 = v22136 + v24891;
          var v22138 = f$$119.top + i$$176 * (h$$119 / c$$366);
          var v24894;
          if (b$$454.options.mode == "show") {
            v24894 = (i$$176 - JAM.call(Math.floor, Math, [c$$366 / 2], JAM.policy.p3)) * (h$$119 / c$$366);
          } else {
            v24894 = 0;
          }
          var v16602 = v22138 + v24894;
          var v22140;
          if (b$$454.options.mode == "show") {
            v22140 = 0;
          } else {
            v22140 = 1;
          }
          var v4182 = JAM.call(v10994.css, v10994, [{position:"absolute", overflow:"hidden", width:v16599, height:v16600, left:v16601, top:v16602, opacity:v22140}], JAM.policy.p3);
          var v16604 = f$$119.left + j$$86 * (g$$147 / d$$285);
          var v22143;
          if (b$$454.options.mode == "show") {
            v22143 = 0;
          } else {
            v22143 = (j$$86 - JAM.call(Math.floor, Math, [d$$285 / 2], JAM.policy.p3)) * (g$$147 / d$$285);
          }
          var v10996 = v16604 + v22143;
          var v16606 = f$$119.top + i$$176 * (h$$119 / c$$366);
          var v22146;
          if (b$$454.options.mode == "show") {
            v22146 = 0;
          } else {
            v22146 = (i$$176 - JAM.call(Math.floor, Math, [c$$366 / 2], JAM.policy.p3)) * (h$$119 / c$$366);
          }
          var v10997 = v16606 + v22146;
          var v16608;
          if (b$$454.options.mode == "show") {
            v16608 = 1;
          } else {
            v16608 = 0;
          }
          var v4183 = {left:v10996, top:v10997, opacity:v16608};
          var v10999 = b$$454.duration;
          if (!v10999) {
            v10999 = 500;
          }
          JAM.call(v4182.animate, v4182, [v4183, v10999], JAM.policy.p3);
          j$$86++;
          v4185 = j$$86 < d$$285;
        }
        i$$176++;
        v4186 = i$$176 < c$$366;
      }
      var v11000 = b$$454.duration;
      if (!v11000) {
        v11000 = 500;
      }
      JAM.call(setTimeout, null, [v1409, v11000]);
      return;
    }
    return JAM.call(this.queue, this, [v1410], JAM.policy.p3);
  }
  a$$498.effects.explode = v1411;
  return;
}
function v1408(a$$497, b$$451) {
  function v1407(b$$452) {
    function v1406() {
      function v1405() {
        var v24905 = e$$259 == "hide";
        if (v24905) {
          JAM.call(c$$365.hide, c$$365, [], JAM.policy.p3);
        }
        var v24906 = a$$497.effects;
        JAM.call(v24906.restore, v24906, [c$$365, d$$284], JAM.policy.p3);
        var v22148 = a$$497.effects;
        JAM.call(v22148.removeWrapper, v22148, [c$$365], JAM.policy.p3);
        var v16611 = b$$452.callback;
        if (v16611) {
          var v22149 = b$$452.callback;
          JAM.call(v22149.apply, v22149, [this, arguments], JAM.policy.p3);
        }
        JAM.call(c$$365.dequeue, c$$365, [], JAM.policy.p3);
        return;
      }
      var c$$365 = JAM.call(a$$497, null, [this], JAM.policy.p3);
      var d$$284 = ["position", "top", "bottom", "left", "right", "opacity"];
      var v4189 = a$$497.effects;
      var v11001 = b$$452.options.mode;
      if (!v11001) {
        v11001 = "hide";
      }
      var e$$259 = JAM.call(v4189.setMode, v4189, [c$$365, v11001], JAM.policy.p3);
      var v4191 = b$$452.options.direction;
      if (!v4191) {
        v4191 = "left";
      }
      var f$$118 = v4191;
      var v16614 = a$$497.effects;
      JAM.call(v16614.save, v16614, [c$$365, d$$284], JAM.policy.p3);
      JAM.call(c$$365.show, c$$365, [], JAM.policy.p3);
      var v11004 = a$$497.effects;
      JAM.call(v11004.createWrapper, v11004, [c$$365], JAM.policy.p3);
      var v4192;
      var v16615 = f$$118 == "up";
      if (!v16615) {
        v16615 = f$$118 == "down";
      }
      if (v16615) {
        v4192 = "top";
      } else {
        v4192 = "left";
      }
      var g$$146 = v4192;
      var v4193;
      var v16616 = f$$118 == "up";
      if (!v16616) {
        v16616 = f$$118 == "left";
      }
      if (v16616) {
        v4193 = "pos";
      } else {
        v4193 = "neg";
      }
      var h$$118 = v4193;
      var v4194 = b$$452.options.distance;
      if (!v4194) {
        var v11008;
        if (g$$146 == "top") {
          v11008 = JAM.call(c$$365.outerHeight, c$$365, [!0], JAM.policy.p3) / 2;
        } else {
          v11008 = JAM.call(c$$365.outerWidth, c$$365, [!0], JAM.policy.p3) / 2;
        }
        v4194 = v11008;
      }
      var i$$175 = v4194;
      var v4195 = e$$259 == "show";
      if (v4195) {
        var v11010 = JAM.call(c$$365.css, c$$365, ["opacity", 0], JAM.policy.p3);
        var v16620;
        if (h$$118 == "pos") {
          v16620 = -i$$175;
        } else {
          v16620 = i$$175;
        }
        JAM.call(v11010.css, v11010, [g$$146, v16620], JAM.policy.p3);
      }
      var v11012;
      if (e$$259 == "show") {
        v11012 = 1;
      } else {
        v11012 = 0;
      }
      var j$$85 = {opacity:v11012};
      var v16622;
      if (e$$259 == "show") {
        var v22155;
        if (h$$118 == "pos") {
          v22155 = "+=";
        } else {
          v22155 = "-=";
        }
        v16622 = v22155;
      } else {
        var v22156;
        if (h$$118 == "pos") {
          v22156 = "-=";
        } else {
          v22156 = "+=";
        }
        v16622 = v22156;
      }
      var v11013 = v16622;
      introspect(JAM.policy.p2) {
        j$$85[g$$146] = v11013 + i$$175;
      }
      JAM.call(c$$365.animate, c$$365, [j$$85, {queue:!1, duration:b$$452.duration, easing:b$$452.options.easing, complete:v1405}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1406], JAM.policy.p3);
  }
  a$$497.effects.drop = v1407;
  return;
}
function v1404(a$$496, b$$449) {
  function v1403(b$$450) {
    function v1402() {
      function v1401() {
        var v24909 = e$$258 == "hide";
        if (v24909) {
          JAM.call(c$$364.hide, c$$364, [], JAM.policy.p3);
        }
        var v24910 = a$$496.effects;
        JAM.call(v24910.restore, v24910, [c$$364, d$$283], JAM.policy.p3);
        var v22159 = a$$496.effects;
        JAM.call(v22159.removeWrapper, v22159, [c$$364], JAM.policy.p3);
        var v16626 = b$$450.callback;
        if (v16626) {
          var v22160 = b$$450.callback;
          JAM.call(v22160.apply, v22160, [c$$364[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$364.dequeue, c$$364, [], JAM.policy.p3);
        return;
      }
      var c$$364 = JAM.call(a$$496, null, [this], JAM.policy.p3);
      var d$$283 = ["position", "top", "bottom", "left", "right", "height", "width"];
      var v4198 = a$$496.effects;
      var v11015 = b$$450.options.mode;
      if (!v11015) {
        v11015 = "hide";
      }
      var e$$258 = JAM.call(v4198.setMode, v4198, [c$$364, v11015], JAM.policy.p3);
      var v4200 = b$$450.options.direction;
      if (!v4200) {
        v4200 = "vertical";
      }
      var f$$117 = v4200;
      var v11018 = a$$496.effects;
      JAM.call(v11018.save, v11018, [c$$364, d$$283], JAM.policy.p3);
      JAM.call(c$$364.show, c$$364, [], JAM.policy.p3);
      var v11019 = a$$496.effects;
      var v4201 = JAM.call(v11019.createWrapper, v11019, [c$$364], JAM.policy.p3);
      var g$$145 = JAM.call(v4201.css, v4201, [{overflow:"hidden"}], JAM.policy.p3);
      var v4203;
      if (c$$364[0].tagName == "IMG") {
        v4203 = g$$145;
      } else {
        v4203 = c$$364;
      }
      var h$$117 = v4203;
      var v4204;
      if (f$$117 == "vertical") {
        v4204 = "height";
      } else {
        v4204 = "width";
      }
      var JSCompiler_object_inline_size_92 = v4204;
      var v4205;
      if (f$$117 == "vertical") {
        v4205 = "top";
      } else {
        v4205 = "left";
      }
      var JSCompiler_object_inline_position_93 = v4205;
      var v4206;
      if (f$$117 == "vertical") {
        v4206 = JAM.call(h$$117.height, h$$117, [], JAM.policy.p3);
      } else {
        v4206 = JAM.call(h$$117.width, h$$117, [], JAM.policy.p3);
      }
      var j$$84 = v4206;
      var v4207 = e$$258 == "show";
      if (v4207) {
        JAM.call(h$$117.css, h$$117, [JSCompiler_object_inline_size_92, 0], JAM.policy.p3);
        JAM.call(h$$117.css, h$$117, [JSCompiler_object_inline_position_93, j$$84 / 2], JAM.policy.p3);
      }
      var k$$58 = {};
      var v16631;
      if (e$$258 == "show") {
        v16631 = j$$84;
      } else {
        v16631 = 0;
      }
      introspect(JAM.policy.p2) {
        k$$58[JSCompiler_object_inline_size_92] = v16631;
      }
      var v16632;
      if (e$$258 == "show") {
        v16632 = 0;
      } else {
        v16632 = j$$84 / 2;
      }
      introspect(JAM.policy.p2) {
        k$$58[JSCompiler_object_inline_position_93] = v16632;
      }
      JAM.call(h$$117.animate, h$$117, [k$$58, {queue:!1, duration:b$$450.duration, easing:b$$450.options.easing, complete:v1401}], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1402], JAM.policy.p3);
  }
  a$$496.effects.clip = v1403;
  return;
}
function v1400(a$$495, b$$447) {
  function v1399(b$$448) {
    function v1398() {
      function v1397() {
        JAM.call(c$$363.dequeue, c$$363, [], JAM.policy.p3);
        return;
      }
      function v1396() {
        var v16636 = a$$495.effects;
        JAM.call(v16636.restore, v16636, [c$$363, d$$282], JAM.policy.p3);
        var v16637 = a$$495.effects;
        JAM.call(v16637.removeWrapper, v16637, [c$$363], JAM.policy.p3);
        var v11025 = b$$448.callback;
        if (v11025) {
          var v16638 = b$$448.callback;
          JAM.call(v16638.apply, v16638, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      function v1395() {
        JAM.call(c$$363.hide, c$$363, [], JAM.policy.p3);
        var v22166 = a$$495.effects;
        JAM.call(v22166.restore, v22166, [c$$363, d$$282], JAM.policy.p3);
        var v16639 = a$$495.effects;
        JAM.call(v16639.removeWrapper, v16639, [c$$363], JAM.policy.p3);
        var v11026 = b$$448.callback;
        if (v11026) {
          var v16640 = b$$448.callback;
          JAM.call(v16640.apply, v16640, [this, arguments], JAM.policy.p3);
        }
        return;
      }
      var c$$363 = JAM.call(a$$495, null, [this], JAM.policy.p3);
      var d$$282 = ["position", "top", "bottom", "left", "right"];
      var v4209 = a$$495.effects;
      var v11027 = b$$448.options.mode;
      if (!v11027) {
        v11027 = "effect";
      }
      var e$$257 = JAM.call(v4209.setMode, v4209, [c$$363, v11027], JAM.policy.p3);
      var v4211 = b$$448.options.direction;
      if (!v4211) {
        v4211 = "up";
      }
      var f$$116 = v4211;
      var v4212 = b$$448.options.distance;
      if (!v4212) {
        v4212 = 20;
      }
      var g$$144 = v4212;
      var v4213 = b$$448.options.times;
      if (!v4213) {
        v4213 = 5;
      }
      var h$$116 = v4213;
      var v4214 = b$$448.duration;
      if (!v4214) {
        v4214 = 250;
      }
      var i$$173 = v4214;
      var v22167 = JAM.call(/show|hide/.test, /show|hide/, [e$$257], JAM.policy.p3);
      if (v22167) {
        JAM.call(d$$282.push, d$$282, ["opacity"], JAM.policy.p3);
      }
      var v22168 = a$$495.effects;
      JAM.call(v22168.save, v22168, [c$$363, d$$282], JAM.policy.p3);
      JAM.call(c$$363.show, c$$363, [], JAM.policy.p3);
      var v11035 = a$$495.effects;
      JAM.call(v11035.createWrapper, v11035, [c$$363], JAM.policy.p3);
      var v4215;
      var v16643 = f$$116 == "up";
      if (!v16643) {
        v16643 = f$$116 == "down";
      }
      if (v16643) {
        v4215 = "top";
      } else {
        v4215 = "left";
      }
      var j$$83 = v4215;
      var v4216;
      var v16644 = f$$116 == "up";
      if (!v16644) {
        v16644 = f$$116 == "left";
      }
      if (v16644) {
        v4216 = "pos";
      } else {
        v4216 = "neg";
      }
      var k$$57 = v4216;
      var v4217 = b$$448.options.distance;
      if (!v4217) {
        var v11039;
        if (j$$83 == "top") {
          v11039 = JAM.call(c$$363.outerHeight, c$$363, [!0], JAM.policy.p3) / 3;
        } else {
          v11039 = JAM.call(c$$363.outerWidth, c$$363, [!0], JAM.policy.p3) / 3;
        }
        v4217 = v11039;
      }
      g$$144 = v4217;
      var v16648 = e$$257 == "show";
      if (v16648) {
        var v22173 = JAM.call(c$$363.css, c$$363, ["opacity", 0], JAM.policy.p3);
        var v24911;
        if (k$$57 == "pos") {
          v24911 = -g$$144;
        } else {
          v24911 = g$$144;
        }
        JAM.call(v22173.css, v22173, [j$$83, v24911], JAM.policy.p3);
      }
      var v16649 = e$$257 == "hide";
      if (v16649) {
        g$$144 = g$$144 / (h$$116 * 2);
      }
      var v11041 = e$$257 != "hide";
      if (v11041) {
        h$$116--;
      }
      if (e$$257 == "show") {
        var l$$67 = {opacity:1};
        var v24912;
        if (k$$57 == "pos") {
          v24912 = "+=";
        } else {
          v24912 = "-=";
        }
        var v22176 = v24912;
        introspect(JAM.policy.p2) {
          l$$67[j$$83] = v22176 + g$$144;
        }
        JAM.call(c$$363.animate, c$$363, [l$$67, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        g$$144 = g$$144 / 2;
        h$$116--;
      }
      var m$$38 = 0;
      var v4219 = m$$38 < h$$116;
      for (;v4219;) {
        var n$$87 = {};
        var p$$42 = {};
        var v24914;
        if (k$$57 == "pos") {
          v24914 = "-=";
        } else {
          v24914 = "+=";
        }
        var v22179 = v24914;
        introspect(JAM.policy.p2) {
          n$$87[j$$83] = v22179 + g$$144;
        }
        var v24915;
        if (k$$57 == "pos") {
          v24915 = "+=";
        } else {
          v24915 = "-=";
        }
        var v22180 = v24915;
        introspect(JAM.policy.p2) {
          p$$42[j$$83] = v22180 + g$$144;
        }
        var v16650 = JAM.call(c$$363.animate, c$$363, [n$$87, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        JAM.call(v16650.animate, v16650, [p$$42, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        var v11042;
        if (e$$257 == "hide") {
          v11042 = g$$144 * 2;
        } else {
          v11042 = g$$144 / 2;
        }
        g$$144 = v11042;
        m$$38++;
        v4219 = m$$38 < h$$116;
      }
      if (e$$257 == "hide") {
        l$$67 = {opacity:0};
        var v16654;
        if (k$$57 == "pos") {
          v16654 = "-=";
        } else {
          v16654 = "+=";
        }
        var v11043 = v16654;
        introspect(JAM.policy.p2) {
          l$$67[j$$83] = v11043 + g$$144;
        }
        JAM.call(c$$363.animate, c$$363, [l$$67, i$$173 / 2, b$$448.options.easing, v1395], JAM.policy.p3);
      } else {
        n$$87 = {};
        p$$42 = {};
        var v22185;
        if (k$$57 == "pos") {
          v22185 = "-=";
        } else {
          v22185 = "+=";
        }
        var v16656 = v22185;
        introspect(JAM.policy.p2) {
          n$$87[j$$83] = v16656 + g$$144;
        }
        var v22186;
        if (k$$57 == "pos") {
          v22186 = "+=";
        } else {
          v22186 = "-=";
        }
        var v16657 = v22186;
        introspect(JAM.policy.p2) {
          p$$42[j$$83] = v16657 + g$$144;
        }
        var v11046 = JAM.call(c$$363.animate, c$$363, [n$$87, i$$173 / 2, b$$448.options.easing], JAM.policy.p3);
        JAM.call(v11046.animate, v11046, [p$$42, i$$173 / 2, b$$448.options.easing, v1396], JAM.policy.p3);
      }
      JAM.call(c$$363.queue, c$$363, ["fx", v1397], JAM.policy.p3);
      JAM.call(c$$363.dequeue, c$$363, [], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1398], JAM.policy.p3);
  }
  a$$495.effects.bounce = v1399;
  return;
}
function v1394(a$$494, b$$445) {
  function v1393(b$$446) {
    function v1392() {
      function v1391() {
        var v24919 = e$$256 == "hide";
        if (v24919) {
          JAM.call(c$$362.hide, c$$362, [], JAM.policy.p3);
        }
        var v24920 = a$$494.effects;
        JAM.call(v24920.restore, v24920, [c$$362, d$$281], JAM.policy.p3);
        var v22188 = a$$494.effects;
        JAM.call(v22188.removeWrapper, v22188, [c$$362], JAM.policy.p3);
        var v16661 = b$$446.callback;
        if (v16661) {
          var v22189 = b$$446.callback;
          JAM.call(v22189.apply, v22189, [c$$362[0], arguments], JAM.policy.p3);
        }
        JAM.call(c$$362.dequeue, c$$362, [], JAM.policy.p3);
        return;
      }
      var c$$362 = JAM.call(a$$494, null, [this], JAM.policy.p3);
      var d$$281 = ["position", "top", "bottom", "left", "right"];
      var v4222 = a$$494.effects;
      var v11049 = b$$446.options.mode;
      if (!v11049) {
        v11049 = "hide";
      }
      var e$$256 = JAM.call(v4222.setMode, v4222, [c$$362, v11049], JAM.policy.p3);
      var v4224 = b$$446.options.direction;
      if (!v4224) {
        v4224 = "vertical";
      }
      var f$$115 = v4224;
      var v11052 = a$$494.effects;
      JAM.call(v11052.save, v11052, [c$$362, d$$281], JAM.policy.p3);
      JAM.call(c$$362.show, c$$362, [], JAM.policy.p3);
      var v11053 = a$$494.effects;
      var v4225 = JAM.call(v11053.createWrapper, v11053, [c$$362], JAM.policy.p3);
      var g$$143 = JAM.call(v4225.css, v4225, [{overflow:"hidden"}], JAM.policy.p3);
      var v4227;
      if (f$$115 == "vertical") {
        v4227 = "height";
      } else {
        v4227 = "width";
      }
      var h$$115 = v4227;
      var v4228;
      if (f$$115 == "vertical") {
        v4228 = JAM.call(g$$143.height, g$$143, [], JAM.policy.p3);
      } else {
        v4228 = JAM.call(g$$143.width, g$$143, [], JAM.policy.p3);
      }
      var i$$172 = v4228;
      var v4229 = e$$256 == "show";
      if (v4229) {
        JAM.call(g$$143.css, g$$143, [h$$115, 0], JAM.policy.p3);
      }
      var j$$82 = {};
      var v11056;
      if (e$$256 == "show") {
        v11056 = i$$172;
      } else {
        v11056 = 0;
      }
      introspect(JAM.policy.p2) {
        j$$82[h$$115] = v11056;
      }
      JAM.call(g$$143.animate, g$$143, [j$$82, b$$446.duration, b$$446.options.easing, v1391], JAM.policy.p3);
      return;
    }
    return JAM.call(this.queue, this, [v1392], JAM.policy.p3);
  }
  a$$494.effects.blind = v1393;
  return;
}
function v1390(a$$470, b$$414) {
  function v1389(b$$444, c$$361) {
    function v1388(a$$493) {
      var v4231;
      if (a$$493 < .5) {
        v4231 = JAM.call(c$$361, null, [a$$493 * 2], JAM.policy.p3) / 2;
      } else {
        v4231 = JAM.call(c$$361, null, [a$$493 * -2 + 2], JAM.policy.p3) / -2 + 1;
      }
      return v4231;
    }
    function v1387(a$$492) {
      return 1 - JAM.call(c$$361, null, [1 - a$$492], JAM.policy.p3);
    }
    var v16668 = a$$470.easing;
    var v16669 = "easeIn" + b$$444;
    introspect(JAM.policy.p2) {
      v16668[v16669] = c$$361;
    }
    var v16670 = a$$470.easing;
    var v16671 = "easeOut" + b$$444;
    introspect(JAM.policy.p2) {
      v16670[v16671] = v1387;
    }
    var v11063 = a$$470.easing;
    var v11064 = "easeInOut" + b$$444;
    introspect(JAM.policy.p2) {
      v11063[v11064] = v1388;
    }
    return;
  }
  function v1386(a$$491) {
    var b$$443;
    var c$$360 = 4;
    var v4233 = a$$491 < ((b$$443 = JAM.call(Math.pow, Math, [2, c$$360 = c$$360 - 1], JAM.policy.p3)) - 1) / 11;
    for (;v4233;) {
      v4233 = a$$491 < ((b$$443 = JAM.call(Math.pow, Math, [2, c$$360 = c$$360 - 1], JAM.policy.p3)) - 1) / 11;
    }
    return 1 / JAM.call(Math.pow, Math, [4, 3 - c$$360], JAM.policy.p3) - 7.5625 * JAM.call(Math.pow, Math, [(b$$443 * 3 - 2) / 22 - a$$491, 2], JAM.policy.p3);
  }
  function v1385(a$$490) {
    return a$$490 * a$$490 * (3 * a$$490 - 2);
  }
  function v1384(a$$489) {
    var v4238;
    var v16676 = a$$489 === 0;
    if (!v16676) {
      v16676 = a$$489 === 1;
    }
    if (v16676) {
      v4238 = a$$489;
    } else {
      v4238 = -JAM.call(Math.pow, Math, [2, 8 * (a$$489 - 1)], JAM.policy.p3) * JAM.call(Math.sin, Math, [((a$$489 - 1) * 80 - 7.5) * Math.PI / 15], JAM.policy.p3);
    }
    return v4238;
  }
  function v1383(a$$488) {
    return 1 - JAM.call(Math.sqrt, Math, [1 - a$$488 * a$$488], JAM.policy.p3);
  }
  function v1382(a$$487) {
    return 1 - JAM.call(Math.cos, Math, [a$$487 * Math.PI / 2], JAM.policy.p3);
  }
  function v1381(a$$486, b$$441) {
    function v1380(b$$442) {
      return JAM.call(Math.pow, Math, [b$$442, a$$486 + 2], JAM.policy.p3);
    }
    introspect(JAM.policy.p2) {
      m$$36[b$$441] = v1380;
    }
    return;
  }
  function v1379(b$$439) {
    function v1378(a$$485, b$$440) {
      var v4242 = JAM.call(c$$359.indexOf, c$$359, [b$$440], JAM.policy.p3) > 0;
      if (v4242) {
        d$$280 = [parseFloat(c$$359), b$$440];
      }
      return;
    }
    var c$$359 = JAM.call(this.css, this, [b$$439], JAM.policy.p3);
    var d$$280 = [];
    JAM.call(a$$470.each, a$$470, [["em", "px", "%", "pt"], v1378], JAM.policy.p3);
    return d$$280;
  }
  function v1377(b$$438) {
    var v16681 = l$$65(b$$438);
    if (!v16681) {
      v16681 = typeof b$$438 == "boolean";
    }
    var v11078 = v16681;
    if (!v11078) {
      v11078 = JAM.call(a$$470.isFunction, a$$470, [b$$438], JAM.policy.p3);
    }
    if (v11078) {
      var v4243 = this.__toggle;
      return JAM.call(v4243.apply, v4243, [this, arguments], JAM.policy.p3);
    }
    var c$$358 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    c$$358[1].mode = "toggle";
    var v11080 = this.effect;
    return JAM.call(v11080.apply, v11080, [this, c$$358], JAM.policy.p3);
  }
  function v1376(a$$484) {
    if (l$$65(a$$484)) {
      var v4245 = this._hide;
      return JAM.call(v4245.apply, v4245, [this, arguments], JAM.policy.p3);
    }
    var b$$437 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    b$$437[1].mode = "hide";
    var v11082 = this.effect;
    return JAM.call(v11082.apply, v11082, [this, b$$437], JAM.policy.p3);
  }
  function v1375(a$$483) {
    if (l$$65(a$$483)) {
      var v4247 = this._show;
      return JAM.call(v4247.apply, v4247, [this, arguments], JAM.policy.p3);
    }
    var b$$436 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    b$$436[1].mode = "show";
    var v11084 = this.effect;
    return JAM.call(v11084.apply, v11084, [this, b$$436], JAM.policy.p3);
  }
  function v1374(b$$435, c$$357, d$$279, e$$255) {
    function v1373() {
      var v4249 = g$$142.callback;
      if (v4249) {
        var v11085 = g$$142.callback;
        JAM.call(v11085.call, v11085, [this], JAM.policy.p3);
      }
      return;
    }
    var f$$114 = JAM.call(k$$55.apply, k$$55, [this, arguments], JAM.policy.p3);
    var g$$142 = {options:f$$114[1], duration:f$$114[2], callback:f$$114[3]};
    var h$$114 = g$$142.options.mode;
    var i$$171 = a$$470.effects[b$$435];
    var v4255;
    var v16683 = a$$470.fx.off;
    if (!v16683) {
      v16683 = !i$$171;
    }
    if (v16683) {
      var v11086;
      if (h$$114) {
        v11086 = JAM.call(this[h$$114], this, [g$$142.duration, g$$142.callback], JAM.policy.p3);
      } else {
        v11086 = JAM.call(this.each, this, [v1373], JAM.policy.p3);
      }
      v4255 = v11086;
    } else {
      v4255 = JAM.call(i$$171.call, i$$171, [this, g$$142], JAM.policy.p3);
    }
    return v4255;
  }
  function v1372(b$$434, c$$355, d$$278, e$$254) {
    function v1371(a$$482, c$$356) {
      var f$$113 = JAM.call(b$$434.cssUnit, b$$434, [c$$356], JAM.policy.p3);
      var v4256 = f$$113[0] > 0;
      if (v4256) {
        var v11089 = f$$113[0] * d$$278;
        var v11090 = f$$113[1];
        introspect(JAM.policy.p2) {
          e$$254[c$$356] = v11089 + v11090;
        }
      }
      return;
    }
    e$$254 = e$$254 || {};
    JAM.call(a$$470.each, a$$470, [c$$355, v1371], JAM.policy.p3);
    return e$$254;
  }
  function v1370(b$$433) {
    var c$$354;
    var d$$277 = document.activeElement;
    var v4257;
    var v16687 = JAM.call(b$$433.parent, b$$433, [], JAM.policy.p3);
    if (JAM.call(v16687.is, v16687, [".ui-effects-wrapper"], JAM.policy.p3)) {
      var v22203 = JAM.call(b$$433.parent, b$$433, [], JAM.policy.p3);
      c$$354 = JAM.call(v22203.replaceWith, v22203, [b$$433], JAM.policy.p3);
      var v24928 = b$$433[0] === d$$277;
      if (!v24928) {
        v24928 = JAM.call(a$$470.contains, a$$470, [b$$433[0], d$$277], JAM.policy.p3);
      }
      var v22204 = v24928;
      if (v22204) {
        var v24929 = JAM.call(a$$470, null, [d$$277], JAM.policy.p3);
        JAM.call(v24929.focus, v24929, [], JAM.policy.p3);
      }
      v4257 = c$$354;
    } else {
      v4257 = b$$433;
    }
    return v4257;
  }
  function v1369(b$$432) {
    function v1368(a$$481, d$$276) {
      var v11092 = c$$353;
      var v31057 = JAM.call(b$$432.css, b$$432, [d$$276], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v11092[d$$276] = v31057;
      }
      var v11093 = isNaN(parseInt(c$$353[d$$276], 10));
      if (v11093) {
        introspect(JAM.policy.p2) {
          c$$353[d$$276] = "auto";
        }
      }
      return;
    }
    var v11094 = JAM.call(b$$432.parent, b$$432, [], JAM.policy.p3);
    if (JAM.call(v11094.is, v11094, [".ui-effects-wrapper"], JAM.policy.p3)) {
      return JAM.call(b$$432.parent, b$$432, [], JAM.policy.p3);
    }
    var c$$353 = {width:JAM.call(b$$432.outerWidth, b$$432, [!0], JAM.policy.p3), height:JAM.call(b$$432.outerHeight, b$$432, [!0], JAM.policy.p3), "float":JAM.call(b$$432.css, b$$432, ["float"], JAM.policy.p3)};
    var v11097 = JAM.call(a$$470, null, ["<div></div>"], JAM.policy.p3);
    var v4262 = JAM.call(v11097.addClass, v11097, ["ui-effects-wrapper"], JAM.policy.p3);
    var d$$275 = JAM.call(v4262.css, v4262, [{fontSize:"100%", background:"transparent", border:"none", margin:0, padding:0}], JAM.policy.p3);
    var e$$253 = document.activeElement;
    try {
    } catch (f$$112) {
      e$$253 = document.body;
    }
    JAM.call(b$$432.wrap, b$$432, [d$$275], JAM.policy.p3);
    var v26816 = b$$432[0] === e$$253;
    if (!v26816) {
      v26816 = JAM.call(a$$470.contains, a$$470, [b$$432[0], e$$253], JAM.policy.p3);
    }
    var v24930 = v26816;
    if (v24930) {
      var v26817 = JAM.call(a$$470, null, [e$$253], JAM.policy.p3);
      JAM.call(v26817.focus, v26817, [], JAM.policy.p3);
    }
    d$$275 = JAM.call(b$$432.parent, b$$432, [], JAM.policy.p3);
    var v16689;
    if (JAM.call(b$$432.css, b$$432, ["position"], JAM.policy.p3) == "static") {
      JAM.call(d$$275.css, d$$275, [{position:"relative"}], JAM.policy.p3);
      v16689 = JAM.call(b$$432.css, b$$432, [{position:"relative"}], JAM.policy.p3);
    } else {
      JAM.call(a$$470.extend, a$$470, [c$$353, {position:JAM.call(b$$432.css, b$$432, ["position"], JAM.policy.p3), zIndex:JAM.call(b$$432.css, b$$432, ["z-index"], JAM.policy.p3)}], JAM.policy.p3);
      JAM.call(a$$470.each, a$$470, [["top", "left", "bottom", "right"], v1368], JAM.policy.p3);
      v16689 = JAM.call(b$$432.css, b$$432, [{position:"relative", top:0, left:0, right:"auto", bottom:"auto"}], JAM.policy.p3);
    }
    v16689;
    var v11098 = JAM.call(d$$275.css, d$$275, [c$$353], JAM.policy.p3);
    return JAM.call(v11098.show, v11098, [], JAM.policy.p3);
  }
  function v1367(a$$480, b$$431) {
    var c$$352;
    var d$$274;
    switch(a$$480[0]) {
      case "top":
        c$$352 = 0;
        break;
      case "middle":
        c$$352 = .5;
        break;
      case "bottom":
        c$$352 = 1;
        break;
      default:
        c$$352 = a$$480[0] / b$$431.height;
    }
    switch(a$$480[1]) {
      case "left":
        d$$274 = 0;
        break;
      case "center":
        d$$274 = .5;
        break;
      case "right":
        d$$274 = 1;
        break;
      default:
        d$$274 = a$$480[1] / b$$431.width;
    }
    return {x:d$$274, y:c$$352};
  }
  function v1366(a$$479, b$$430) {
    var v11099 = b$$430 == "toggle";
    if (v11099) {
      var v16690;
      if (JAM.call(a$$479.is, a$$479, [":hidden"], JAM.policy.p3)) {
        v16690 = "show";
      } else {
        v16690 = "hide";
      }
      b$$430 = v16690;
    }
    return b$$430;
  }
  function v1365(a$$478, b$$429) {
    var c$$351 = 0;
    var v4271 = c$$351 < b$$429.length;
    for (;v4271;) {
      var v4270 = b$$429[c$$351] !== null;
      if (v4270) {
        JAM.call(a$$478.css, a$$478, [b$$429[c$$351], JAM.call(a$$478.data, a$$478, ["ec.storage." + b$$429[c$$351]], JAM.policy.p3)], JAM.policy.p3);
      }
      c$$351++;
      v4271 = c$$351 < b$$429.length;
    }
    return;
  }
  function v1364(a$$477, b$$428) {
    var c$$350 = 0;
    var v4273 = c$$350 < b$$428.length;
    for (;v4273;) {
      var v4272 = b$$428[c$$350] !== null;
      if (v4272) {
        JAM.call(a$$477.data, a$$477, ["ec.storage." + b$$428[c$$350], a$$477[0].style[b$$428[c$$350]]], JAM.policy.p3);
      }
      c$$350++;
      v4273 = c$$350 < b$$428.length;
    }
    return;
  }
  function v1363(b$$427, c$$349, d$$273, e$$252, f$$111) {
    var v4274 = a$$470.effects.animateClass;
    return JAM.call(v4274.apply, v4274, [this, [{add:c$$349, remove:b$$427}, d$$273, e$$252, f$$111]], JAM.policy.p3);
  }
  function v1362(c$$348, d$$272, e$$251, f$$110, g$$141) {
    var v4276;
    var v16695 = typeof d$$272 == "boolean";
    if (!v16695) {
      v16695 = d$$272 === b$$414;
    }
    if (v16695) {
      var v11112;
      if (e$$251) {
        var v16696 = a$$470.effects.animateClass;
        var v24935;
        if (d$$272) {
          v24935 = {add:c$$348};
        } else {
          v24935 = {remove:c$$348};
        }
        v11112 = JAM.call(v16696.apply, v16696, [this, [v24935, e$$251, f$$110, g$$141]], JAM.policy.p3);
      } else {
        v11112 = JAM.call(this._toggleClass, this, [c$$348, d$$272], JAM.policy.p3);
      }
      v4276 = v11112;
    } else {
      var v11113 = a$$470.effects.animateClass;
      v4276 = JAM.call(v11113.apply, v11113, [this, [{toggle:c$$348}, d$$272, e$$251, f$$110]], JAM.policy.p3);
    }
    return v4276;
  }
  function v1361(b$$426, c$$347, d$$271, e$$250) {
    var v4277;
    if (c$$347) {
      var v11116 = a$$470.effects.animateClass;
      v4277 = JAM.call(v11116.apply, v11116, [this, [{remove:b$$426}, c$$347, d$$271, e$$250]], JAM.policy.p3);
    } else {
      v4277 = JAM.call(this._removeClass, this, [b$$426], JAM.policy.p3);
    }
    return v4277;
  }
  function v1360(b$$425, c$$346, d$$270, e$$249) {
    var v4278;
    if (c$$346) {
      var v11118 = a$$470.effects.animateClass;
      v4278 = JAM.call(v11118.apply, v11118, [this, [{add:b$$425}, c$$346, d$$270, e$$249]], JAM.policy.p3);
    } else {
      v4278 = JAM.call(this._addClass, this, [b$$425], JAM.policy.p3);
    }
    return v4278;
  }
  function v1359(b$$424, c$$343, d$$269, e$$248) {
    function v1358() {
      function v1357() {
        function v1356(a$$476, c$$345) {
          var v4279 = b$$424[c$$345];
          if (v4279) {
            JAM.call(g$$140[c$$345 + "Class"], g$$140, [b$$424[c$$345]], JAM.policy.p3);
          }
          return;
        }
        JAM.call(a$$470.each, a$$470, [f$$109, v1356], JAM.policy.p3);
        var v22214;
        if (typeof JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3) == "object") {
          JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3).cssText = "";
          v22214 = JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3).cssText = k$$56;
        } else {
          v22214 = JAM.call(g$$140.attr, g$$140, ["style", k$$56], JAM.policy.p3);
        }
        v22214;
        if (e$$248) {
          JAM.call(e$$248.apply, e$$248, [this, arguments], JAM.policy.p3);
        }
        JAM.call(a$$470.dequeue, a$$470, [this], JAM.policy.p3);
        return;
      }
      function v1355(a$$475, c$$344) {
        var v4280 = b$$424[c$$344];
        if (v4280) {
          JAM.call(g$$140[c$$344 + "Class"], g$$140, [b$$424[c$$344]], JAM.policy.p3);
        }
        return;
      }
      var g$$140 = JAM.call(a$$470, null, [this], JAM.policy.p3);
      var v4281 = JAM.call(g$$140.attr, g$$140, ["style"], JAM.policy.p3);
      if (!v4281) {
        v4281 = " ";
      }
      var k$$56 = v4281;
      var l$$66 = i$$170(JAM.call(h$$113.call, h$$113, [this], JAM.policy.p3));
      var m$$37;
      var v4283 = JAM.call(g$$140.attr, g$$140, ["class"], JAM.policy.p3);
      if (!v4283) {
        v4283 = "";
      }
      var n$$86 = v4283;
      JAM.call(a$$470.each, a$$470, [f$$109, v1355], JAM.policy.p3);
      m$$37 = i$$170(JAM.call(h$$113.call, h$$113, [this], JAM.policy.p3));
      JAM.call(g$$140.attr, g$$140, ["class", n$$86], JAM.policy.p3);
      JAM.call(g$$140.animate, g$$140, [j$$81(l$$66, m$$37), {queue:!1, duration:c$$343, easing:d$$269, complete:v1357}], JAM.policy.p3);
      return;
    }
    var v11128 = JAM.call(a$$470.isFunction, a$$470, [d$$269], JAM.policy.p3);
    if (v11128) {
      e$$248 = d$$269;
      d$$269 = null;
    }
    return JAM.call(this.queue, this, [v1358], JAM.policy.p3);
  }
  function v1354(b$$423, e$$247) {
    function v1353(a$$474) {
      var JSCompiler_temp$$11;
      if (JSCompiler_temp$$11 = a$$474.colorInit) {
      } else {
        var JSCompiler_inline_result$$12;
        var b$$inline_70 = a$$474.elem;
        var d$$inline_71 = e$$247;
        var e$$inline_72;
        var v4286 = b$$inline_70 = b$$inline_70.parentNode;
        do {
          var v11129 = a$$470.curCSS;
          if (!v11129) {
            v11129 = a$$470.css;
          }
          e$$inline_72 = JAM.call(v11129, null, [b$$inline_70, d$$inline_71], JAM.policy.p3);
          var v16706 = e$$inline_72 != "";
          if (v16706) {
            v16706 = e$$inline_72 != "transparent";
          }
          var v11130 = v16706;
          if (!v11130) {
            v11130 = JAM.call(a$$470.nodeName, a$$470, [b$$inline_70, "body"], JAM.policy.p3);
          }
          if (v11130) {
            break;
          }
          d$$inline_71 = "backgroundColor";
          v4286 = b$$inline_70 = b$$inline_70.parentNode;
        } while (v4286);
        JSCompiler_inline_result$$12 = c$$337(e$$inline_72);
        a$$474.start = JSCompiler_inline_result$$12;
        var v31058 = c$$337(a$$474.end);
        a$$474.end = v31058;
        JSCompiler_temp$$11 = a$$474.colorInit = !0;
      }
      JSCompiler_temp$$11;
      var v11131 = a$$474.elem.style;
      var v11132 = e$$247;
      var v16710 = "rgb(" + JAM.call(Math.max, Math, [JAM.call(Math.min, Math, [parseInt(a$$474.pos * (a$$474.end[0] - a$$474.start[0]) + a$$474.start[0], 10), 255], JAM.policy.p3), 0], JAM.policy.p3) + "," + JAM.call(Math.max, Math, [JAM.call(Math.min, Math, [parseInt(a$$474.pos * (a$$474.end[1] - a$$474.start[1]) + a$$474.start[1], 10), 255], JAM.policy.p3), 0], JAM.policy.p3) + "," + JAM.call(Math.max, Math, [JAM.call(Math.min, Math, [parseInt(a$$474.pos * (a$$474.end[2] - a$$474.start[2]) + a$$474.start[2], 
      10), 255], JAM.policy.p3), 0], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v11131[v11132] = v16710 + ")";
      }
      return;
    }
    var v4288 = a$$470.fx.step;
    introspect(JAM.policy.p2) {
      v4288[e$$247] = v1353;
    }
    return;
  }
  function c$$337(b$$415) {
    var c$$338;
    var v4289;
    var v22218 = b$$415;
    if (v22218) {
      v22218 = b$$415.constructor == Array;
    }
    var v16711 = v22218;
    if (v16711) {
      v16711 = b$$415.length == 3;
    }
    if (v16711) {
      v4289 = b$$415;
    } else {
      var v11134;
      if (c$$338 = JAM.call(/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec, /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/, [b$$415], JAM.policy.p3)) {
        v11134 = [parseInt(c$$338[1], 10), parseInt(c$$338[2], 10), parseInt(c$$338[3], 10)];
      } else {
        var v16715;
        if (c$$338 = JAM.call(/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec, /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/, [b$$415], JAM.policy.p3)) {
          v16715 = [parseFloat(c$$338[1]) * 2.55, parseFloat(c$$338[2]) * 2.55, parseFloat(c$$338[3]) * 2.55];
        } else {
          var v22226;
          if (c$$338 = JAM.call(/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec, /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/, [b$$415], JAM.policy.p3)) {
            v22226 = [parseInt(c$$338[1], 16), parseInt(c$$338[2], 16), parseInt(c$$338[3], 16)];
          } else {
            var v24946;
            if (c$$338 = JAM.call(/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec, /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/, [b$$415], JAM.policy.p3)) {
              v24946 = [parseInt(c$$338[1] + c$$338[1], 16), parseInt(c$$338[2] + c$$338[2], 16), parseInt(c$$338[3] + c$$338[3], 16)];
            } else {
              var v26835;
              if (c$$338 = JAM.call(/rgba\(0, 0, 0, 0\)/.exec, /rgba\(0, 0, 0, 0\)/, [b$$415], JAM.policy.p3)) {
                v26835 = e$$243.transparent;
              } else {
                var v28117 = e$$243;
                var v28968 = JAM.call(a$$470.trim, a$$470, [b$$415], JAM.policy.p3);
                v26835 = v28117[JAM.call(v28968.toLowerCase, v28968, [], JAM.policy.p3)];
              }
              v24946 = v26835;
            }
            v22226 = v24946;
          }
          v16715 = v22226;
        }
        v11134 = v16715;
      }
      v4289 = v11134;
    }
    return v4289;
  }
  function h$$113() {
    function v1352(a$$472, b$$418) {
      return JAM.call(b$$418.toUpperCase, b$$418, [], JAM.policy.p3);
    }
    var v4290;
    if (document.defaultView) {
      var v11136 = document.defaultView;
      v4290 = JAM.call(v11136.getComputedStyle, v11136, [this, null], JAM.policy.p3);
    } else {
      v4290 = this.currentStyle;
    }
    var a$$471 = v4290;
    var b$$417 = {};
    var c$$339;
    var d$$265;
    var v22228 = a$$471;
    if (v22228) {
      v22228 = a$$471.length;
    }
    var v16717 = v22228;
    if (v16717) {
      v16717 = a$$471[0];
    }
    var v11138 = v16717;
    if (v11138) {
      v11138 = a$$471[a$$471[0]];
    }
    if (v11138) {
      var e$$245 = a$$471.length;
      var v4291 = e$$245;
      e$$245 = e$$245 - 1;
      for (;v4291;) {
        c$$339 = a$$471[e$$245];
        var v11139 = typeof a$$471[c$$339] == "string";
        if (v11139) {
          d$$265 = JAM.call(c$$339.replace, c$$339, [/\-(\w)/g, v1352], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            b$$417[d$$265] = a$$471[c$$339];
          }
        }
        v4291 = e$$245;
        e$$245 = e$$245 - 1;
      }
    } else {
      for (c$$339 in a$$471) {
        var v4292 = typeof a$$471[c$$339] == "string";
        if (v4292) {
          introspect(JAM.policy.p2) {
            b$$417[c$$339] = a$$471[c$$339];
          }
        }
      }
    }
    return b$$417;
  }
  function i$$170(b$$419) {
    var c$$340;
    var d$$266;
    for (c$$340 in b$$419) {
      d$$266 = b$$419[c$$340];
      var v26837 = d$$266 == null;
      if (!v26837) {
        v26837 = JAM.call(a$$470.isFunction, a$$470, [d$$266], JAM.policy.p3);
      }
      var v24948 = v26837;
      if (!v24948) {
        v24948 = c$$340 in g$$139;
      }
      var v22230 = v24948;
      if (!v22230) {
        v22230 = JAM.call(/scrollbar/.test, /scrollbar/, [c$$340], JAM.policy.p3);
      }
      var v16721 = v22230;
      if (!v16721) {
        var v22231 = !JAM.call(/color/i.test, /color/i, [c$$340], JAM.policy.p3);
        if (v22231) {
          v22231 = isNaN(parseFloat(d$$266));
        }
        v16721 = v22231;
      }
      var v11141 = v16721;
      if (v11141) {
        delete b$$419[c$$340];
      }
    }
    return b$$419;
  }
  function j$$81(a$$473, b$$420) {
    var c$$341 = {_:0};
    var d$$267;
    for (d$$267 in b$$420) {
      var v4294 = a$$473[d$$267] != b$$420[d$$267];
      if (v4294) {
        introspect(JAM.policy.p2) {
          c$$341[d$$267] = b$$420[d$$267];
        }
      }
    }
    return c$$341;
  }
  function k$$55(b$$421, c$$342, d$$268, e$$246) {
    var v11144 = typeof b$$421 == "object";
    if (v11144) {
      e$$246 = c$$342;
      d$$268 = null;
      c$$342 = b$$421;
      b$$421 = c$$342.effect;
    }
    var v11145 = JAM.call(a$$470.isFunction, a$$470, [c$$342], JAM.policy.p3);
    if (v11145) {
      e$$246 = c$$342;
      d$$268 = null;
      c$$342 = {};
    }
    var v11146 = typeof c$$342 == "number";
    if (!v11146) {
      v11146 = a$$470.fx.speeds[c$$342];
    }
    if (v11146) {
      e$$246 = d$$268;
      d$$268 = c$$342;
      c$$342 = {};
    }
    var v26839 = JAM.call(a$$470.isFunction, a$$470, [d$$268], JAM.policy.p3);
    if (v26839) {
      e$$246 = d$$268;
      d$$268 = null;
    }
    c$$342 = c$$342 || {};
    var v24952 = d$$268;
    if (!v24952) {
      v24952 = c$$342.duration;
    }
    d$$268 = v24952;
    var v22234;
    if (a$$470.fx.off) {
      v22234 = 0;
    } else {
      var v24953;
      if (typeof d$$268 == "number") {
        v24953 = d$$268;
      } else {
        var v26842;
        if (d$$268 in a$$470.fx.speeds) {
          v26842 = a$$470.fx.speeds[d$$268];
        } else {
          v26842 = a$$470.fx.speeds._default;
        }
        v24953 = v26842;
      }
      v22234 = v24953;
    }
    d$$268 = v22234;
    var v16726 = e$$246;
    if (!v16726) {
      v16726 = c$$342.complete;
    }
    e$$246 = v16726;
    return [b$$421, c$$342, d$$268, e$$246];
  }
  function l$$65(b$$422) {
    var v4296;
    var v22236 = !b$$422;
    if (!v22236) {
      v22236 = typeof b$$422 == "number";
    }
    var v16727 = v22236;
    if (!v16727) {
      v16727 = a$$470.fx.speeds[b$$422];
    }
    if (v16727) {
      v4296 = !0;
    } else {
      var v11147;
      var v22239 = typeof b$$422 == "string";
      if (v22239) {
        v22239 = !a$$470.effects[b$$422];
      }
      if (v22239) {
        v11147 = !0;
      } else {
        v11147 = !1;
      }
      v4296 = v11147;
    }
    return v4296;
  }
  a$$470.effects = {};
  JAM.call(a$$470.each, a$$470, [["backgroundColor", "borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor", "borderColor", "color", "outlineColor"], v1354], JAM.policy.p3);
  var e$$243 = {aqua:[0, 255, 255], azure:[240, 255, 255], beige:[245, 245, 220], black:[0, 0, 0], blue:[0, 0, 255], brown:[165, 42, 42], cyan:[0, 255, 255], darkblue:[0, 0, 139], darkcyan:[0, 139, 139], darkgrey:[169, 169, 169], darkgreen:[0, 100, 0], darkkhaki:[189, 183, 107], darkmagenta:[139, 0, 139], darkolivegreen:[85, 107, 47], darkorange:[255, 140, 0], darkorchid:[153, 50, 204], darkred:[139, 0, 0], darksalmon:[233, 150, 122], darkviolet:[148, 0, 211], fuchsia:[255, 0, 255], gold:[255, 215, 
  0], green:[0, 128, 0], indigo:[75, 0, 130], khaki:[240, 230, 140], lightblue:[173, 216, 230], lightcyan:[224, 255, 255], lightgreen:[144, 238, 144], lightgrey:[211, 211, 211], lightpink:[255, 182, 193], lightyellow:[255, 255, 224], lime:[0, 255, 0], magenta:[255, 0, 255], maroon:[128, 0, 0], navy:[0, 0, 128], olive:[128, 128, 0], orange:[255, 165, 0], pink:[255, 192, 203], purple:[128, 0, 128], violet:[128, 0, 128], red:[255, 0, 0], silver:[192, 192, 192], white:[255, 255, 255], yellow:[255, 255, 
  0], transparent:[255, 255, 255]};
  var f$$109 = ["add", "remove", "toggle"];
  var g$$139 = {border:1, borderBottom:1, borderColor:1, borderLeft:1, borderRight:1, borderTop:1, borderWidth:1, margin:1, padding:1};
  a$$470.effects.animateClass = v1359;
  var v22241 = a$$470.fn;
  JAM.call(v22241.extend, v22241, [{_addClass:a$$470.fn.addClass, addClass:v1360, _removeClass:a$$470.fn.removeClass, removeClass:v1361, _toggleClass:a$$470.fn.toggleClass, toggleClass:v1362, switchClass:v1363}], JAM.policy.p3);
  JAM.call(a$$470.extend, a$$470, [a$$470.effects, {version:"1.8.24", save:v1364, restore:v1365, setMode:v1366, getBaseline:v1367, createWrapper:v1369, removeWrapper:v1370, setTransition:v1372}], JAM.policy.p3);
  var v11150 = a$$470.fn;
  JAM.call(v11150.extend, v11150, [{effect:v1374, _show:a$$470.fn.show, show:v1375, _hide:a$$470.fn.hide, hide:v1376, __toggle:a$$470.fn.toggle, toggle:v1377, cssUnit:v1379}], JAM.policy.p3);
  var m$$36 = {};
  JAM.call(a$$470.each, a$$470, [["Quad", "Cubic", "Quart", "Quint", "Expo"], v1381], JAM.policy.p3);
  JAM.call(a$$470.extend, a$$470, [m$$36, {Sine:v1382, Circ:v1383, Elastic:v1384, Back:v1385, Bounce:v1386}], JAM.policy.p3);
  JAM.call(a$$470.each, a$$470, [m$$36, v1389], JAM.policy.p3);
  return;
}
function v1351(a$$452, b$$380) {
  function v1350(b$$413) {
    var c$$336 = b$$413 || this;
    var v4341 = c$$336.helper;
    var v11152 = c$$336.placeholder;
    if (!v11152) {
      v11152 = JAM.call(a$$452, null, [[]], JAM.policy.p3);
    }
    var v4342 = v11152;
    var v4343 = c$$336.position;
    var v4344 = c$$336.originalPosition;
    var v4345 = c$$336.positionAbs;
    var v4346 = c$$336.currentItem;
    var v11153;
    if (b$$413) {
      v11153 = b$$413.element;
    } else {
      v11153 = null;
    }
    return {helper:v4341, placeholder:v4342, position:v4343, originalPosition:v4344, offset:v4345, item:v4346, sender:v11153};
  }
  function v1349() {
    var v16737 = a$$452.Widget.prototype._trigger;
    var v4348 = JAM.call(v16737.apply, v16737, [this, arguments], JAM.policy.p3) === !1;
    if (v4348) {
      JAM.call(this.cancel, this, [], JAM.policy.p3);
    }
    return;
  }
  function v1348(b$$408, c$$335) {
    function v1347(a$$469) {
      function v1346(b$$412) {
        JAM.call(a$$469._trigger, a$$469, ["out", b$$412, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1346;
    }
    function v1345(a$$468) {
      function v1344(b$$411) {
        JAM.call(a$$468._trigger, a$$468, ["deactivate", b$$411, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1344;
    }
    function v1343(a$$467) {
      function v1342(b$$410) {
        JAM.call(a$$467._trigger, a$$467, ["update", b$$410, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1342;
    }
    function v1341(a$$466) {
      function v1340(b$$409) {
        JAM.call(a$$466._trigger, a$$466, ["receive", b$$409, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        return;
      }
      return v1340;
    }
    function v1339(a$$465) {
      JAM.call(this._trigger, this, ["remove", a$$465, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1338(a$$464) {
      JAM.call(this._trigger, this, ["update", a$$464, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v1337(a$$463) {
      JAM.call(this._trigger, this, ["receive", a$$463, JAM.call(this._uiHash, this, [this.fromOutside], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    this.reverting = !1;
    var d$$262 = [];
    var e$$242 = this;
    var v16738 = !this._noFinalSort;
    if (v16738) {
      var v24964 = this.currentItem;
      v16738 = JAM.call(v24964.parent, v24964, [], JAM.policy.p3).length;
    }
    var v11157 = v16738;
    if (v11157) {
      var v16739 = this.placeholder;
      JAM.call(v16739.before, v16739, [this.currentItem], JAM.policy.p3);
    }
    this._noFinalSort = null;
    if (this.helper[0] == this.currentItem[0]) {
      var f$$108;
      for (f$$108 in this._storedCSS) {
        var v11160 = this._storedCSS[f$$108] == "auto";
        if (!v11160) {
          v11160 = this._storedCSS[f$$108] == "static";
        }
        if (v11160) {
          var v4356 = this._storedCSS;
          introspect(JAM.policy.p2) {
            v4356[f$$108] = "";
          }
        }
      }
      var v11161 = this.currentItem;
      var v4359 = JAM.call(v11161.css, v11161, [this._storedCSS], JAM.policy.p3);
      JAM.call(v4359.removeClass, v4359, ["ui-sortable-helper"], JAM.policy.p3);
    } else {
      var v4360 = this.currentItem;
      JAM.call(v4360.show, v4360, [], JAM.policy.p3);
    }
    var v22251 = this.fromOutside;
    if (v22251) {
      v22251 = !c$$335;
    }
    var v16746 = v22251;
    if (v16746) {
      JAM.call(d$$262.push, d$$262, [v1337], JAM.policy.p3);
    }
    var v26848 = this.fromOutside;
    if (!v26848) {
      var v28125 = this.domPosition.prev;
      var v29870 = this.currentItem;
      var v29533 = JAM.call(v29870.prev, v29870, [], JAM.policy.p3);
      v26848 = v28125 != JAM.call(v29533.not, v29533, [".ui-sortable-helper"], JAM.policy.p3)[0];
    }
    var v24965 = v26848;
    if (!v24965) {
      var v26849 = this.domPosition.parent;
      var v28974 = this.currentItem;
      v24965 = v26849 != JAM.call(v28974.parent, v28974, [], JAM.policy.p3)[0];
    }
    var v22252 = v24965;
    if (v22252) {
      v22252 = !c$$335;
    }
    var v16747 = v22252;
    if (v16747) {
      JAM.call(d$$262.push, d$$262, [v1338], JAM.policy.p3);
    }
    var v11163 = this !== this.currentContainer;
    if (v11163) {
      if (!c$$335) {
        JAM.call(d$$262.push, d$$262, [v1339], JAM.policy.p3);
        JAM.call(d$$262.push, d$$262, [JAM.call(v1341.call, v1341, [this, this.currentContainer], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(d$$262.push, d$$262, [JAM.call(v1343.call, v1343, [this, this.currentContainer], JAM.policy.p3)], JAM.policy.p3);
      }
    }
    f$$108 = this.containers.length - 1;
    var v4363 = f$$108 >= 0;
    for (;v4363;) {
      if (!c$$335) {
        JAM.call(d$$262.push, d$$262, [JAM.call(v1345.call, v1345, [this, this.containers[f$$108]], JAM.policy.p3)], JAM.policy.p3);
      }
      var v11165 = this.containers[f$$108].containerCache.over;
      if (v11165) {
        JAM.call(d$$262.push, d$$262, [JAM.call(v1347.call, v1347, [this, this.containers[f$$108]], JAM.policy.p3)], JAM.policy.p3);
        this.containers[f$$108].containerCache.over = 0;
      }
      f$$108--;
      v4363 = f$$108 >= 0;
    }
    var v22258 = this._storedCursor;
    if (v22258) {
      var v24971 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
      JAM.call(v24971.css, v24971, ["cursor", this._storedCursor], JAM.policy.p3);
    }
    var v22259 = this._storedOpacity;
    if (v22259) {
      var v24973 = this.helper;
      JAM.call(v24973.css, v24973, ["opacity", this._storedOpacity], JAM.policy.p3);
    }
    var v16752 = this._storedZIndex;
    if (v16752) {
      var v22260 = this.helper;
      var v24975;
      if (this._storedZIndex == "auto") {
        v24975 = "";
      } else {
        v24975 = this._storedZIndex;
      }
      JAM.call(v22260.css, v22260, ["zIndex", v24975], JAM.policy.p3);
    }
    this.dragging = !1;
    if (this.cancelHelperRemoval) {
      if (!c$$335) {
        JAM.call(this._trigger, this, ["beforeStop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
        f$$108 = 0;
        var v4366 = f$$108 < d$$262.length;
        for (;v4366;) {
          var v4365 = d$$262[f$$108];
          JAM.call(v4365.call, v4365, [this, b$$408], JAM.policy.p3);
          f$$108++;
          v4366 = f$$108 < d$$262.length;
        }
        JAM.call(this._trigger, this, ["stop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
      }
      this.fromOutside = !1;
      return !1;
    }
    if (!c$$335) {
      JAM.call(this._trigger, this, ["beforeStop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    var v22262 = this.placeholder[0].parentNode;
    JAM.call(v22262.removeChild, v22262, [this.placeholder[0]], JAM.policy.p3);
    var v16753 = this.helper[0] != this.currentItem[0];
    if (v16753) {
      var v22266 = this.helper;
      JAM.call(v22266.remove, v22266, [], JAM.policy.p3);
    }
    this.helper = null;
    if (!c$$335) {
      f$$108 = 0;
      var v4371 = f$$108 < d$$262.length;
      for (;v4371;) {
        var v4370 = d$$262[f$$108];
        JAM.call(v4370.call, v4370, [this, b$$408], JAM.policy.p3);
        f$$108++;
        v4371 = f$$108 < d$$262.length;
      }
      JAM.call(this._trigger, this, ["stop", b$$408, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    this.fromOutside = !1;
    return !0;
  }
  function v1336(a$$462, b$$407, c$$334, d$$261) {
    function v1335() {
      var v4374 = f$$107 == e$$241.counter;
      if (v4374) {
        JAM.call(e$$241.refreshPositions, e$$241, [!d$$261], JAM.policy.p3);
      }
      return;
    }
    var v11172;
    if (c$$334) {
      var v16754 = c$$334[0];
      v11172 = JAM.call(v16754.appendChild, v16754, [this.placeholder[0]], JAM.policy.p3);
    } else {
      var v16756 = b$$407.item[0].parentNode;
      var v16757 = this.placeholder[0];
      var v22270;
      if (this.direction == "down") {
        v22270 = b$$407.item[0];
      } else {
        v22270 = b$$407.item[0].nextSibling;
      }
      v11172 = JAM.call(v16756.insertBefore, v16756, [v16757, v22270], JAM.policy.p3);
    }
    v11172;
    var v11173;
    if (this.counter) {
      v11173 = this.counter = this.counter + 1;
    } else {
      v11173 = 1;
    }
    this.counter = v11173;
    var e$$241 = this;
    var f$$107 = this.counter;
    JAM.call(window.setTimeout, window, [v1335, 0], JAM.policy.p3);
    return;
  }
  function v1334(b$$406) {
    var c$$333 = this.options;
    var v4375;
    var v16760 = this.cssPosition == "absolute";
    if (v16760) {
      var v22273 = this.scrollParent[0] == document;
      if (!v22273) {
        var v26861 = a$$452.ui;
        v22273 = !JAM.call(v26861.contains, v26861, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v16760 = v22273;
    }
    if (v16760) {
      v4375 = this.offsetParent;
    } else {
      v4375 = this.scrollParent;
    }
    var d$$260 = v4375;
    var e$$240 = JAM.call(/(html|body)/i.test, /(html|body)/i, [d$$260[0].tagName], JAM.policy.p3);
    var v11176 = this.cssPosition == "relative";
    if (v11176) {
      var v16762 = this.scrollParent[0] == document;
      if (!v16762) {
        v16762 = this.scrollParent[0] == this.offsetParent[0];
      }
      v11176 = v16762;
    }
    var v4377 = v11176;
    if (v4377) {
      var v11177 = this.offset;
      var v31059 = JAM.call(this._getRelativeOffset, this, [], JAM.policy.p3);
      v11177.relative = v31059;
    }
    var f$$106 = b$$406.pageX;
    var g$$138 = b$$406.pageY;
    if (this.originalPosition) {
      var v4378 = this.containment;
      if (v4378) {
        var v24992 = b$$406.pageX - this.offset.click.left < this.containment[0];
        if (v24992) {
          f$$106 = this.containment[0] + this.offset.click.left;
        }
        var v24993 = b$$406.pageY - this.offset.click.top < this.containment[1];
        if (v24993) {
          g$$138 = this.containment[1] + this.offset.click.top;
        }
        var v22278 = b$$406.pageX - this.offset.click.left > this.containment[2];
        if (v22278) {
          f$$106 = this.containment[2] + this.offset.click.left;
        }
        var v16763 = b$$406.pageY - this.offset.click.top > this.containment[3];
        if (v16763) {
          g$$138 = this.containment[3] + this.offset.click.top;
        }
      }
      if (c$$333.grid) {
        var h$$112 = this.originalPageY + JAM.call(Math.round, Math, [(g$$138 - this.originalPageY) / c$$333.grid[1]], JAM.policy.p3) * c$$333.grid[1];
        var v4381;
        if (this.containment) {
          var v11180;
          var v22285 = h$$112 - this.offset.click.top < this.containment[1];
          if (!v22285) {
            v22285 = h$$112 - this.offset.click.top > this.containment[3];
          }
          if (v22285) {
            var v16766;
            if (h$$112 - this.offset.click.top < this.containment[1]) {
              v16766 = h$$112 + c$$333.grid[1];
            } else {
              v16766 = h$$112 - c$$333.grid[1];
            }
            v11180 = v16766;
          } else {
            v11180 = h$$112;
          }
          v4381 = v11180;
        } else {
          v4381 = h$$112;
        }
        g$$138 = v4381;
        var i$$169 = this.originalPageX + JAM.call(Math.round, Math, [(f$$106 - this.originalPageX) / c$$333.grid[0]], JAM.policy.p3) * c$$333.grid[0];
        var v4384;
        if (this.containment) {
          var v11184;
          var v22291 = i$$169 - this.offset.click.left < this.containment[0];
          if (!v22291) {
            v22291 = i$$169 - this.offset.click.left > this.containment[2];
          }
          if (v22291) {
            var v16770;
            if (i$$169 - this.offset.click.left < this.containment[0]) {
              v16770 = i$$169 + c$$333.grid[0];
            } else {
              v16770 = i$$169 - c$$333.grid[0];
            }
            v11184 = v16770;
          } else {
            v11184 = i$$169;
          }
          v4384 = v11184;
        } else {
          v4384 = i$$169;
        }
        f$$106 = v4384;
      }
    }
    var v11186 = g$$138 - this.offset.click.top - this.offset.relative.top - this.offset.parent.top;
    var v16774;
    var v25028 = a$$452.browser.safari;
    if (v25028) {
      v25028 = this.cssPosition == "fixed";
    }
    if (v25028) {
      v16774 = 0;
    } else {
      var v22298;
      if (this.cssPosition == "fixed") {
        var v26896 = this.scrollParent;
        v22298 = -JAM.call(v26896.scrollTop, v26896, [], JAM.policy.p3);
      } else {
        var v25030;
        if (e$$240) {
          v25030 = 0;
        } else {
          v25030 = JAM.call(d$$260.scrollTop, d$$260, [], JAM.policy.p3);
        }
        v22298 = v25030;
      }
      v16774 = v22298;
    }
    var v4387 = v11186 + v16774;
    var v11188 = f$$106 - this.offset.click.left - this.offset.relative.left - this.offset.parent.left;
    var v16777;
    var v25035 = a$$452.browser.safari;
    if (v25035) {
      v25035 = this.cssPosition == "fixed";
    }
    if (v25035) {
      v16777 = 0;
    } else {
      var v22303;
      if (this.cssPosition == "fixed") {
        var v26902 = this.scrollParent;
        v22303 = -JAM.call(v26902.scrollLeft, v26902, [], JAM.policy.p3);
      } else {
        var v25037;
        if (e$$240) {
          v25037 = 0;
        } else {
          v25037 = JAM.call(d$$260.scrollLeft, d$$260, [], JAM.policy.p3);
        }
        v22303 = v25037;
      }
      v16777 = v22303;
    }
    return {top:v4387, left:v11188 + v16777};
  }
  function v1333(b$$405, c$$332) {
    if (!c$$332) {
      c$$332 = this.position;
    }
    var v4389;
    if (b$$405 == "absolute") {
      v4389 = 1;
    } else {
      v4389 = -1;
    }
    var d$$259 = v4389;
    var e$$239 = this.options;
    var v4390;
    var v16778 = this.cssPosition == "absolute";
    if (v16778) {
      var v22306 = this.scrollParent[0] == document;
      if (!v22306) {
        var v26904 = a$$452.ui;
        v22306 = !JAM.call(v26904.contains, v26904, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v16778 = v22306;
    }
    if (v16778) {
      v4390 = this.offsetParent;
    } else {
      v4390 = this.scrollParent;
    }
    var f$$105 = v4390;
    var g$$137 = JAM.call(/(html|body)/i.test, /(html|body)/i, [f$$105[0].tagName], JAM.policy.p3);
    var v11194 = c$$332.top + this.offset.relative.top * d$$259 + this.offset.parent.top * d$$259;
    var v16781;
    var v25044 = a$$452.browser.safari;
    if (v25044) {
      v25044 = this.cssPosition == "fixed";
    }
    if (v25044) {
      v16781 = 0;
    } else {
      var v25045;
      if (this.cssPosition == "fixed") {
        var v28159 = this.scrollParent;
        v25045 = -JAM.call(v28159.scrollTop, v28159, [], JAM.policy.p3);
      } else {
        var v26912;
        if (g$$137) {
          v26912 = 0;
        } else {
          v26912 = JAM.call(f$$105.scrollTop, f$$105, [], JAM.policy.p3);
        }
        v25045 = v26912;
      }
      v16781 = v25045 * d$$259;
    }
    var v4392 = v11194 - v16781;
    var v11196 = c$$332.left + this.offset.relative.left * d$$259 + this.offset.parent.left * d$$259;
    var v16784;
    var v25048 = a$$452.browser.safari;
    if (v25048) {
      v25048 = this.cssPosition == "fixed";
    }
    if (v25048) {
      v16784 = 0;
    } else {
      var v25049;
      if (this.cssPosition == "fixed") {
        var v28162 = this.scrollParent;
        v25049 = -JAM.call(v28162.scrollLeft, v28162, [], JAM.policy.p3);
      } else {
        var v26919;
        if (g$$137) {
          v26919 = 0;
        } else {
          v26919 = JAM.call(f$$105.scrollLeft, f$$105, [], JAM.policy.p3);
        }
        v25049 = v26919;
      }
      v16784 = v25049 * d$$259;
    }
    return {top:v4392, left:v11196 - v16784};
  }
  function v1332() {
    var b$$404 = this.options;
    var v4394 = b$$404.containment == "parent";
    if (v4394) {
      b$$404.containment = this.helper[0].parentNode;
    }
    var v11200 = b$$404.containment == "document";
    if (!v11200) {
      v11200 = b$$404.containment == "window";
    }
    if (v11200) {
      var v4395 = 0 - this.offset.relative.left - this.offset.parent.left;
      var v4396 = 0 - this.offset.relative.top - this.offset.parent.top;
      var v26921;
      if (b$$404.containment == "document") {
        v26921 = document;
      } else {
        v26921 = window;
      }
      var v22321 = JAM.call(a$$452, null, [v26921], JAM.policy.p3);
      var v4397 = JAM.call(v22321.width, v22321, [], JAM.policy.p3) - this.helperProportions.width - this.margins.left;
      var v28164;
      if (b$$404.containment == "document") {
        v28164 = document;
      } else {
        v28164 = window;
      }
      var v25053 = JAM.call(a$$452, null, [v28164], JAM.policy.p3);
      var v22323 = JAM.call(v25053.height, v25053, [], JAM.policy.p3);
      if (!v22323) {
        v22323 = document.body.parentNode.scrollHeight;
      }
      this.containment = [v4395, v4396, v4397, v22323 - this.helperProportions.height - this.margins.top];
    }
    if (!JAM.call(/^(document|window|parent)$/.test, /^(document|window|parent)$/, [b$$404.containment], JAM.policy.p3)) {
      var c$$331 = JAM.call(a$$452, null, [b$$404.containment], JAM.policy.p3)[0];
      var v4401 = JAM.call(a$$452, null, [b$$404.containment], JAM.policy.p3);
      var d$$258 = JAM.call(v4401.offset, v4401, [], JAM.policy.p3);
      var v11212 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var e$$238 = JAM.call(v11212.css, v11212, ["overflow"], JAM.policy.p3) != "hidden";
      var v22325 = d$$258.left;
      var v28165 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25056 = parseInt(JAM.call(v28165.css, v28165, ["borderLeftWidth"], JAM.policy.p3), 10);
      if (!v25056) {
        v25056 = 0;
      }
      var v16800 = v22325 + v25056;
      var v26926 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v22327 = parseInt(JAM.call(v26926.css, v26926, ["paddingLeft"], JAM.policy.p3), 10);
      if (!v22327) {
        v22327 = 0;
      }
      var v4403 = v16800 + v22327 - this.margins.left;
      var v22328 = d$$258.top;
      var v28166 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25059 = parseInt(JAM.call(v28166.css, v28166, ["borderTopWidth"], JAM.policy.p3), 10);
      if (!v25059) {
        v25059 = 0;
      }
      var v16803 = v22328 + v25059;
      var v26929 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v22330 = parseInt(JAM.call(v26929.css, v26929, ["paddingTop"], JAM.policy.p3), 10);
      if (!v22330) {
        v22330 = 0;
      }
      var v4404 = v16803 + v22330 - this.margins.top;
      var v26930 = d$$258.left;
      var v28167;
      if (e$$238) {
        v28167 = JAM.call(Math.max, Math, [c$$331.scrollWidth, c$$331.offsetWidth], JAM.policy.p3);
      } else {
        v28167 = c$$331.offsetWidth;
      }
      var v25062 = v26930 + v28167;
      var v28990 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v26932 = parseInt(JAM.call(v28990.css, v28990, ["borderLeftWidth"], JAM.policy.p3), 10);
      if (!v26932) {
        v26932 = 0;
      }
      var v22331 = v25062 - v26932;
      var v28170 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25064 = parseInt(JAM.call(v28170.css, v28170, ["paddingRight"], JAM.policy.p3), 10);
      if (!v25064) {
        v25064 = 0;
      }
      var v4405 = v22331 - v25064 - this.helperProportions.width - this.margins.left;
      var v26935 = d$$258.top;
      var v28171;
      if (e$$238) {
        v28171 = JAM.call(Math.max, Math, [c$$331.scrollHeight, c$$331.offsetHeight], JAM.policy.p3);
      } else {
        v28171 = c$$331.offsetHeight;
      }
      var v25065 = v26935 + v28171;
      var v28993 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v26937 = parseInt(JAM.call(v28993.css, v28993, ["borderTopWidth"], JAM.policy.p3), 10);
      if (!v26937) {
        v26937 = 0;
      }
      var v22334 = v25065 - v26937;
      var v28174 = JAM.call(a$$452, null, [c$$331], JAM.policy.p3);
      var v25067 = parseInt(JAM.call(v28174.css, v28174, ["paddingBottom"], JAM.policy.p3), 10);
      if (!v25067) {
        v25067 = 0;
      }
      this.containment = [v4403, v4404, v4405, v22334 - v25067 - this.helperProportions.height - this.margins.top];
    }
    return;
  }
  function v1331() {
    var v11221 = this.helper;
    var v4408 = JAM.call(v11221.outerWidth, v11221, [], JAM.policy.p3);
    var v11222 = this.helper;
    this.helperProportions = {width:v4408, height:JAM.call(v11222.outerHeight, v11222, [], JAM.policy.p3)};
    return;
  }
  function v1330() {
    var v22337 = this.currentItem;
    var v11223 = parseInt(JAM.call(v22337.css, v22337, ["marginLeft"], JAM.policy.p3), 10);
    if (!v11223) {
      v11223 = 0;
    }
    var v4410 = v11223;
    var v22338 = this.currentItem;
    var v11224 = parseInt(JAM.call(v22338.css, v22338, ["marginTop"], JAM.policy.p3), 10);
    if (!v11224) {
      v11224 = 0;
    }
    this.margins = {left:v4410, top:v11224};
    return;
  }
  function v1329() {
    if (this.cssPosition == "relative") {
      var v4412 = this.currentItem;
      var a$$461 = JAM.call(v4412.position, v4412, [], JAM.policy.p3);
      var v16816 = a$$461.top;
      var v26940 = this.helper;
      var v22339 = parseInt(JAM.call(v26940.css, v26940, ["top"], JAM.policy.p3), 10);
      if (!v22339) {
        v22339 = 0;
      }
      var v11226 = v16816 - v22339;
      var v16818 = this.scrollParent;
      var v4413 = v11226 + JAM.call(v16818.scrollTop, v16818, [], JAM.policy.p3);
      var v16819 = a$$461.left;
      var v26941 = this.helper;
      var v22340 = parseInt(JAM.call(v26941.css, v26941, ["left"], JAM.policy.p3), 10);
      if (!v22340) {
        v22340 = 0;
      }
      var v11228 = v16819 - v22340;
      var v16821 = this.scrollParent;
      return {top:v4413, left:v11228 + JAM.call(v16821.scrollLeft, v16821, [], JAM.policy.p3)};
    }
    return {top:0, left:0};
  }
  function v1328() {
    var v4416 = this.helper;
    var v31060 = JAM.call(v4416.offsetParent, v4416, [], JAM.policy.p3);
    this.offsetParent = v31060;
    var v4417 = this.offsetParent;
    var b$$403 = JAM.call(v4417.offset, v4417, [], JAM.policy.p3);
    var v16822 = this.cssPosition == "absolute";
    if (v16822) {
      v16822 = this.scrollParent[0] != document;
    }
    var v11230 = v16822;
    if (v11230) {
      var v16823 = a$$452.ui;
      v11230 = JAM.call(v16823.contains, v16823, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
    }
    var v4418 = v11230;
    if (v4418) {
      var v22345 = b$$403.left;
      var v25073 = this.scrollParent;
      b$$403.left = v22345 + JAM.call(v25073.scrollLeft, v25073, [], JAM.policy.p3);
      var v22347 = b$$403.top;
      var v25074 = this.scrollParent;
      b$$403.top = v22347 + JAM.call(v25074.scrollTop, v25074, [], JAM.policy.p3);
    }
    var v11231 = this.offsetParent[0] == document.body;
    if (!v11231) {
      var v22350 = this.offsetParent[0].tagName;
      if (v22350) {
        var v26943 = this.offsetParent[0].tagName;
        v22350 = JAM.call(v26943.toLowerCase, v26943, [], JAM.policy.p3) == "html";
      }
      var v16828 = v22350;
      if (v16828) {
        v16828 = a$$452.browser.msie;
      }
      v11231 = v16828;
    }
    if (v11231) {
      b$$403 = {top:0, left:0};
    }
    var v11232 = b$$403.top;
    var v25077 = this.offsetParent;
    var v16830 = parseInt(JAM.call(v25077.css, v25077, ["borderTopWidth"], JAM.policy.p3), 10);
    if (!v16830) {
      v16830 = 0;
    }
    var v4420 = v11232 + v16830;
    var v11234 = b$$403.left;
    var v25078 = this.offsetParent;
    var v16831 = parseInt(JAM.call(v25078.css, v25078, ["borderLeftWidth"], JAM.policy.p3), 10);
    if (!v16831) {
      v16831 = 0;
    }
    return {top:v4420, left:v11234 + v16831};
  }
  function v1327(b$$402) {
    var v26944 = typeof b$$402 == "string";
    if (v26944) {
      b$$402 = JAM.call(b$$402.split, b$$402, [" "], JAM.policy.p3);
    }
    var v26945 = JAM.call(a$$452.isArray, a$$452, [b$$402], JAM.policy.p3);
    if (v26945) {
      var v28177 = +b$$402[0];
      var v28996 = +b$$402[1];
      if (!v28996) {
        v28996 = 0;
      }
      b$$402 = {left:v28177, top:v28996};
    }
    var v25079 = "left" in b$$402;
    if (v25079) {
      this.offset.click.left = b$$402.left + this.margins.left;
    }
    var v22356 = "right" in b$$402;
    if (v22356) {
      this.offset.click.left = this.helperProportions.width - b$$402.right + this.margins.left;
    }
    var v16832 = "top" in b$$402;
    if (v16832) {
      this.offset.click.top = b$$402.top + this.margins.top;
    }
    var v11236 = "bottom" in b$$402;
    if (v11236) {
      this.offset.click.top = this.helperProportions.height - b$$402.bottom + this.margins.top;
    }
    return;
  }
  function v1326(b$$401) {
    var c$$330 = this.options;
    var v4422;
    if (JAM.call(a$$452.isFunction, a$$452, [c$$330.helper], JAM.policy.p3)) {
      var v16835 = c$$330.helper;
      v4422 = JAM.call(a$$452, null, [JAM.call(v16835.apply, v16835, [this.element[0], [b$$401, this.currentItem]], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var v11238;
      if (c$$330.helper == "clone") {
        var v16838 = this.currentItem;
        v11238 = JAM.call(v16838.clone, v16838, [], JAM.policy.p3);
      } else {
        v11238 = this.currentItem;
      }
      v4422 = v11238;
    }
    var d$$257 = v4422;
    var v25087 = JAM.call(d$$257.parents, d$$257, ["body"], JAM.policy.p3).length;
    if (!v25087) {
      var v29539;
      if (c$$330.appendTo != "parent") {
        v29539 = c$$330.appendTo;
      } else {
        v29539 = this.currentItem[0].parentNode;
      }
      var v26953 = JAM.call(a$$452, null, [v29539], JAM.policy.p3)[0];
      JAM.call(v26953.appendChild, v26953, [d$$257[0]], JAM.policy.p3);
    }
    var v25088 = d$$257[0] == this.currentItem[0];
    if (v25088) {
      var v26958 = this.currentItem[0].style.width;
      var v26959 = this.currentItem[0].style.height;
      var v28189 = this.currentItem;
      var v26960 = JAM.call(v28189.css, v28189, ["position"], JAM.policy.p3);
      var v28190 = this.currentItem;
      var v26961 = JAM.call(v28190.css, v28190, ["top"], JAM.policy.p3);
      var v28191 = this.currentItem;
      this._storedCSS = {width:v26958, height:v26959, position:v26960, top:v26961, left:JAM.call(v28191.css, v28191, ["left"], JAM.policy.p3)};
    }
    var v25089 = d$$257[0].style.width == "";
    if (!v25089) {
      v25089 = c$$330.forceHelperSize;
    }
    var v22364 = v25089;
    if (v22364) {
      var v26965 = this.currentItem;
      JAM.call(d$$257.width, d$$257, [JAM.call(v26965.width, v26965, [], JAM.policy.p3)], JAM.policy.p3);
    }
    var v22365 = d$$257[0].style.height == "";
    if (!v22365) {
      v22365 = c$$330.forceHelperSize;
    }
    var v16840 = v22365;
    if (v16840) {
      var v25093 = this.currentItem;
      JAM.call(d$$257.height, d$$257, [JAM.call(v25093.height, v25093, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return d$$257;
  }
  function v1325(b$$400) {
    var c$$329 = null;
    var d$$256 = null;
    var e$$237 = this.containers.length - 1;
    var v4428 = e$$237 >= 0;
    for (;v4428;) {
      var v11241 = a$$452.ui;
      if (JAM.call(v11241.contains, v11241, [this.currentItem[0], this.containers[e$$237].element[0]], JAM.policy.p3)) {
        e$$237--;
        v4428 = e$$237 >= 0;
        continue;
      }
      if (JAM.call(this._intersectsWith, this, [this.containers[e$$237].containerCache], JAM.policy.p3)) {
        var v11245 = c$$329;
        if (v11245) {
          var v16844 = a$$452.ui;
          v11245 = JAM.call(v16844.contains, v16844, [this.containers[e$$237].element[0], c$$329.element[0]], JAM.policy.p3);
        }
        if (v11245) {
          e$$237--;
          v4428 = e$$237 >= 0;
          continue;
        }
        c$$329 = this.containers[e$$237];
        d$$256 = e$$237;
      } else {
        var v4426 = this.containers[e$$237].containerCache.over;
        if (v4426) {
          var v16848 = this.containers[e$$237];
          JAM.call(v16848._trigger, v16848, ["out", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
          this.containers[e$$237].containerCache.over = 0;
        }
      }
      e$$237--;
      v4428 = e$$237 >= 0;
    }
    if (!c$$329) {
      return;
    }
    if (this.containers.length === 1) {
      var v11249 = this.containers[d$$256];
      JAM.call(v11249._trigger, v11249, ["over", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
      this.containers[d$$256].containerCache.over = 1;
    } else {
      if (this.currentContainer != this.containers[d$$256]) {
        var f$$104 = 1E4;
        var g$$136 = null;
        var v4430 = this.positionAbs;
        var v11254;
        if (this.containers[d$$256].floating) {
          v11254 = "left";
        } else {
          v11254 = "top";
        }
        var h$$111 = v4430[v11254];
        var i$$168 = this.items.length - 1;
        var v4436 = i$$168 >= 0;
        for (;v4436;) {
          var v16856 = a$$452.ui;
          if (!JAM.call(v16856.contains, v16856, [this.containers[d$$256].element[0], this.items[i$$168].item[0]], JAM.policy.p3)) {
            i$$168--;
            v4436 = i$$168 >= 0;
            continue;
          }
          var v4434;
          if (this.containers[d$$256].floating) {
            var v16860 = this.items[i$$168].item;
            v4434 = JAM.call(v16860.offset, v16860, [], JAM.policy.p3).left;
          } else {
            var v16861 = this.items[i$$168].item;
            v4434 = JAM.call(v16861.offset, v16861, [], JAM.policy.p3).top;
          }
          var j$$80 = v4434;
          var v4435 = JAM.call(Math.abs, Math, [j$$80 - h$$111], JAM.policy.p3) < f$$104;
          if (v4435) {
            f$$104 = JAM.call(Math.abs, Math, [j$$80 - h$$111], JAM.policy.p3);
            g$$136 = this.items[i$$168];
            var v16863;
            if (j$$80 - h$$111 > 0) {
              v16863 = "down";
            } else {
              v16863 = "up";
            }
            this.direction = v16863;
          }
          i$$168--;
          v4436 = i$$168 >= 0;
        }
        var v11261 = !g$$136;
        if (v11261) {
          v11261 = !this.options.dropOnEmpty;
        }
        if (v11261) {
          return;
        }
        this.currentContainer = this.containers[d$$256];
        var v28195;
        if (g$$136) {
          v28195 = JAM.call(this._rearrange, this, [b$$400, g$$136, null, !0], JAM.policy.p3);
        } else {
          v28195 = JAM.call(this._rearrange, this, [b$$400, null, this.containers[d$$256].element, !0], JAM.policy.p3);
        }
        v28195;
        JAM.call(this._trigger, this, ["change", b$$400, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
        var v25103 = this.containers[d$$256];
        JAM.call(v25103._trigger, v25103, ["change", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        var v22385 = this.options.placeholder;
        JAM.call(v22385.update, v22385, [this.currentContainer, this.placeholder], JAM.policy.p3);
        var v16865 = this.containers[d$$256];
        JAM.call(v16865._trigger, v16865, ["over", b$$400, JAM.call(this._uiHash, this, [this], JAM.policy.p3)], JAM.policy.p3);
        this.containers[d$$256].containerCache.over = 1;
      }
    }
    return;
  }
  function v1324(b$$397) {
    function v1323(a$$460, b$$399) {
      var v11263 = e$$236;
      if (v11263) {
        v11263 = !d$$255.forcePlaceholderSize;
      }
      if (v11263) {
        return;
      }
      var v11264 = JAM.call(b$$399.height, b$$399, [], JAM.policy.p3);
      if (!v11264) {
        var v26972 = c$$328.currentItem;
        var v25106 = JAM.call(v26972.innerHeight, v26972, [], JAM.policy.p3);
        var v29006 = c$$328.currentItem;
        var v28196 = JAM.call(v29006.css, v29006, ["paddingTop"], JAM.policy.p3);
        if (!v28196) {
          v28196 = 0;
        }
        var v22390 = v25106 - parseInt(v28196, 10);
        var v28197 = c$$328.currentItem;
        var v26974 = JAM.call(v28197.css, v28197, ["paddingBottom"], JAM.policy.p3);
        if (!v26974) {
          v26974 = 0;
        }
        JAM.call(b$$399.height, b$$399, [v22390 - parseInt(v26974, 10)], JAM.policy.p3);
      }
      var v11265 = JAM.call(b$$399.width, b$$399, [], JAM.policy.p3);
      if (!v11265) {
        var v26975 = c$$328.currentItem;
        var v25109 = JAM.call(v26975.innerWidth, v26975, [], JAM.policy.p3);
        var v29008 = c$$328.currentItem;
        var v28199 = JAM.call(v29008.css, v29008, ["paddingLeft"], JAM.policy.p3);
        if (!v28199) {
          v28199 = 0;
        }
        var v22392 = v25109 - parseInt(v28199, 10);
        var v28200 = c$$328.currentItem;
        var v26977 = JAM.call(v28200.css, v28200, ["paddingRight"], JAM.policy.p3);
        if (!v26977) {
          v26977 = 0;
        }
        JAM.call(b$$399.width, b$$399, [v22392 - parseInt(v26977, 10)], JAM.policy.p3);
      }
      return;
    }
    function v1322() {
      var v16873 = JAM.call(a$$452, null, [JAM.call(document.createElement, document, [c$$328.currentItem[0].nodeName], JAM.policy.p3)], JAM.policy.p3);
      var v22395 = e$$236;
      if (!v22395) {
        v22395 = c$$328.currentItem[0].className + " ui-sortable-placeholder";
      }
      var v11266 = JAM.call(v16873.addClass, v16873, [v22395], JAM.policy.p3);
      var b$$398 = JAM.call(v11266.removeClass, v11266, ["ui-sortable-helper"], JAM.policy.p3)[0];
      if (!e$$236) {
        b$$398.style.visibility = "hidden";
      }
      return b$$398;
    }
    var c$$328 = b$$397 || this;
    var d$$255 = c$$328.options;
    var v11267 = !d$$255.placeholder;
    if (!v11267) {
      v11267 = d$$255.placeholder.constructor == String;
    }
    if (v11267) {
      var e$$236 = d$$255.placeholder;
      d$$255.placeholder = {element:v1322, update:v1323};
    }
    var v16880 = c$$328;
    var v25115 = d$$255.placeholder.element;
    var v31061 = JAM.call(a$$452, null, [JAM.call(v25115.call, v25115, [c$$328.element, c$$328.currentItem], JAM.policy.p3)], JAM.policy.p3);
    v16880.placeholder = v31061;
    var v16881 = c$$328.currentItem;
    JAM.call(v16881.after, v16881, [c$$328.placeholder], JAM.policy.p3);
    var v11268 = d$$255.placeholder;
    JAM.call(v11268.update, v11268, [c$$328, c$$328.placeholder], JAM.policy.p3);
    return;
  }
  function v1321(b$$396) {
    var v11270 = this.offsetParent;
    if (v11270) {
      v11270 = this.helper;
    }
    var v4443 = v11270;
    if (v4443) {
      var v11271 = this.offset;
      var v31062 = JAM.call(this._getParentOffset, this, [], JAM.policy.p3);
      v11271.parent = v31062;
    }
    var c$$327 = this.items.length - 1;
    var v4448 = c$$327 >= 0;
    for (;v4448;) {
      var d$$254 = this.items[c$$327];
      var v16883 = d$$254.instance != this.currentContainer;
      if (v16883) {
        v16883 = this.currentContainer;
      }
      var v11273 = v16883;
      if (v11273) {
        v11273 = d$$254.item[0] != this.currentItem[0];
      }
      if (v11273) {
        c$$327--;
        v4448 = c$$327 >= 0;
        continue;
      }
      var v4447;
      if (this.options.toleranceElement) {
        v4447 = JAM.call(a$$452, null, [this.options.toleranceElement, d$$254.item], JAM.policy.p3);
      } else {
        v4447 = d$$254.item;
      }
      var e$$235 = v4447;
      if (!b$$396) {
        var v31063 = JAM.call(e$$235.outerWidth, e$$235, [], JAM.policy.p3);
        d$$254.width = v31063;
        var v31064 = JAM.call(e$$235.outerHeight, e$$235, [], JAM.policy.p3);
        d$$254.height = v31064;
      }
      var f$$103 = JAM.call(e$$235.offset, e$$235, [], JAM.policy.p3);
      d$$254.left = f$$103.left;
      d$$254.top = f$$103.top;
      c$$327--;
      v4448 = c$$327 >= 0;
    }
    var v11278 = this.options.custom;
    if (v11278) {
      v11278 = this.options.custom.refreshContainers;
    }
    if (v11278) {
      var v4449 = this.options.custom.refreshContainers;
      JAM.call(v4449.call, v4449, [this], JAM.policy.p3);
    } else {
      c$$327 = this.containers.length - 1;
      var v4452 = c$$327 >= 0;
      for (;v4452;) {
        var v4451 = this.containers[c$$327].element;
        f$$103 = JAM.call(v4451.offset, v4451, [], JAM.policy.p3);
        this.containers[c$$327].containerCache.left = f$$103.left;
        this.containers[c$$327].containerCache.top = f$$103.top;
        var v16892 = this.containers[c$$327].containerCache;
        var v22406 = this.containers[c$$327].element;
        var v31065 = JAM.call(v22406.outerWidth, v22406, [], JAM.policy.p3);
        v16892.width = v31065;
        var v11282 = this.containers[c$$327].containerCache;
        var v16894 = this.containers[c$$327].element;
        var v31066 = JAM.call(v16894.outerHeight, v16894, [], JAM.policy.p3);
        v11282.height = v31066;
        c$$327--;
        v4452 = c$$327 >= 0;
      }
    }
    return this;
  }
  function v1320(b$$395) {
    this.items = [];
    this.containers = [this];
    var c$$326 = this.items;
    var d$$253 = this;
    var v16895;
    if (JAM.call(a$$452.isFunction, a$$452, [this.options.items], JAM.policy.p3)) {
      var v22409 = this.options.items;
      v16895 = JAM.call(v22409.call, v22409, [this.element[0], b$$395, {item:this.currentItem}], JAM.policy.p3);
    } else {
      v16895 = JAM.call(a$$452, null, [this.options.items, this.element], JAM.policy.p3);
    }
    var e$$234 = [[v16895, this]];
    var f$$102 = JAM.call(this._connectWith, this, [], JAM.policy.p3);
    var v11284 = f$$102;
    if (v11284) {
      v11284 = this.ready;
    }
    if (v11284) {
      var g$$135 = f$$102.length - 1;
      var v4462 = g$$135 >= 0;
      for (;v4462;) {
        var h$$110 = JAM.call(a$$452, null, [f$$102[g$$135]], JAM.policy.p3);
        var i$$167 = h$$110.length - 1;
        var v4461 = i$$167 >= 0;
        for (;v4461;) {
          var j$$79 = JAM.call(a$$452.data, a$$452, [h$$110[i$$167], this.widgetName], JAM.policy.p3);
          var v16896 = j$$79;
          if (v16896) {
            v16896 = j$$79 != this;
          }
          var v11285 = v16896;
          if (v11285) {
            v11285 = !j$$79.options.disabled;
          }
          var v4460 = v11285;
          if (v4460) {
            var v25128;
            if (JAM.call(a$$452.isFunction, a$$452, [j$$79.options.items], JAM.policy.p3)) {
              var v26985 = j$$79.options.items;
              v25128 = JAM.call(v26985.call, v26985, [j$$79.element[0], b$$395, {item:this.currentItem}], JAM.policy.p3);
            } else {
              v25128 = JAM.call(a$$452, null, [j$$79.options.items, j$$79.element], JAM.policy.p3);
            }
            JAM.call(e$$234.push, e$$234, [[v25128, j$$79]], JAM.policy.p3);
            var v16899 = this.containers;
            JAM.call(v16899.push, v16899, [j$$79], JAM.policy.p3);
          }
          i$$167--;
          v4461 = i$$167 >= 0;
        }
        g$$135--;
        v4462 = g$$135 >= 0;
      }
    }
    g$$135 = e$$234.length - 1;
    var v4469 = g$$135 >= 0;
    for (;v4469;) {
      var k$$54 = e$$234[g$$135][1];
      var l$$64 = e$$234[g$$135][0];
      i$$167 = 0;
      var m$$35 = l$$64.length;
      var v4468 = i$$167 < m$$35;
      for (;v4468;) {
        var n$$85 = JAM.call(a$$452, null, [l$$64[i$$167]], JAM.policy.p3);
        JAM.call(n$$85.data, n$$85, [this.widgetName + "-item", k$$54], JAM.policy.p3);
        JAM.call(c$$326.push, c$$326, [{item:n$$85, instance:k$$54, width:0, height:0, left:0, top:0}], JAM.policy.p3);
        i$$167++;
        v4468 = i$$167 < m$$35;
      }
      g$$135--;
      v4469 = g$$135 >= 0;
    }
    return;
  }
  function v1319() {
    var v4470 = this.currentItem;
    var a$$459 = JAM.call(v4470.find, v4470, [":data(" + this.widgetName + "-item)"], JAM.policy.p3);
    var b$$394 = 0;
    var v4474 = b$$394 < this.items.length;
    for (;v4474;) {
      var c$$325 = 0;
      var v4473 = c$$325 < a$$459.length;
      for (;v4473;) {
        var v4472 = a$$459[c$$325] == this.items[b$$394].item[0];
        if (v4472) {
          var v11293 = this.items;
          JAM.call(v11293.splice, v11293, [b$$394, 1], JAM.policy.p3);
        }
        c$$325++;
        v4473 = c$$325 < a$$459.length;
      }
      b$$394++;
      v4474 = b$$394 < this.items.length;
    }
    return;
  }
  function v1318(b$$393) {
    function v1317() {
      JAM.call(d$$252.push, d$$252, [this], JAM.policy.p3);
      return;
    }
    var c$$324 = this;
    var d$$252 = [];
    var e$$233 = [];
    var f$$101 = JAM.call(this._connectWith, this, [], JAM.policy.p3);
    if (f$$101 && b$$393) {
      var g$$134 = f$$101.length - 1;
      var v4482 = g$$134 >= 0;
      for (;v4482;) {
        var h$$109 = JAM.call(a$$452, null, [f$$101[g$$134]], JAM.policy.p3);
        var i$$166 = h$$109.length - 1;
        var v4481 = i$$166 >= 0;
        for (;v4481;) {
          var j$$78 = JAM.call(a$$452.data, a$$452, [h$$109[i$$166], this.widgetName], JAM.policy.p3);
          var v16905 = j$$78;
          if (v16905) {
            v16905 = j$$78 != this;
          }
          var v11296 = v16905;
          if (v11296) {
            v11296 = !j$$78.options.disabled;
          }
          var v4480 = v11296;
          if (v4480) {
            var v22419;
            if (JAM.call(a$$452.isFunction, a$$452, [j$$78.options.items], JAM.policy.p3)) {
              var v25130 = j$$78.options.items;
              v22419 = JAM.call(v25130.call, v25130, [j$$78.element], JAM.policy.p3);
            } else {
              var v26993 = JAM.call(a$$452, null, [j$$78.options.items, j$$78.element], JAM.policy.p3);
              var v25132 = JAM.call(v26993.not, v26993, [".ui-sortable-helper"], JAM.policy.p3);
              v22419 = JAM.call(v25132.not, v25132, [".ui-sortable-placeholder"], JAM.policy.p3);
            }
            JAM.call(e$$233.push, e$$233, [[v22419, j$$78]], JAM.policy.p3);
          }
          i$$166--;
          v4481 = i$$166 >= 0;
        }
        g$$134--;
        v4482 = g$$134 >= 0;
      }
    }
    var v16908;
    if (JAM.call(a$$452.isFunction, a$$452, [this.options.items], JAM.policy.p3)) {
      var v22420 = this.options.items;
      v16908 = JAM.call(v22420.call, v22420, [this.element, null, {options:this.options, item:this.currentItem}], JAM.policy.p3);
    } else {
      var v25138 = JAM.call(a$$452, null, [this.options.items, this.element], JAM.policy.p3);
      var v22423 = JAM.call(v25138.not, v25138, [".ui-sortable-helper"], JAM.policy.p3);
      v16908 = JAM.call(v22423.not, v22423, [".ui-sortable-placeholder"], JAM.policy.p3);
    }
    JAM.call(e$$233.push, e$$233, [[v16908, this]], JAM.policy.p3);
    g$$134 = e$$233.length - 1;
    var v4487 = g$$134 >= 0;
    for (;v4487;) {
      var v4486 = e$$233[g$$134][0];
      JAM.call(v4486.each, v4486, [v1317], JAM.policy.p3);
      g$$134--;
      v4487 = g$$134 >= 0;
    }
    return JAM.call(a$$452, null, [d$$252], JAM.policy.p3);
  }
  function v1316() {
    var a$$458 = this.options;
    var v4488;
    if (a$$458.connectWith.constructor == String) {
      v4488 = [a$$458.connectWith];
    } else {
      v4488 = a$$458.connectWith;
    }
    return v4488;
  }
  function v1315(a$$457) {
    JAM.call(this._refreshItems, this, [a$$457], JAM.policy.p3);
    JAM.call(this.refreshPositions, this, [], JAM.policy.p3);
    return this;
  }
  function v1314() {
    var a$$456 = this.positionAbs.left - this.lastPositionAbs.left;
    var v4491 = a$$456 != 0;
    if (v4491) {
      var v11304;
      if (a$$456 > 0) {
        v11304 = "right";
      } else {
        v11304 = "left";
      }
      v4491 = v11304;
    }
    return v4491;
  }
  function v1313() {
    var a$$455 = this.positionAbs.top - this.lastPositionAbs.top;
    var v4494 = a$$455 != 0;
    if (v4494) {
      var v11307;
      if (a$$455 > 0) {
        v11307 = "down";
      } else {
        v11307 = "up";
      }
      v4494 = v11307;
    }
    return v4494;
  }
  function v1312(b$$392) {
    var v4495 = a$$452.ui;
    var c$$323 = JAM.call(v4495.isOverAxis, v4495, [this.positionAbs.top + this.offset.click.top, b$$392.top + b$$392.height / 2, b$$392.height], JAM.policy.p3);
    var v4499 = a$$452.ui;
    var d$$251 = JAM.call(v4499.isOverAxis, v4499, [this.positionAbs.left + this.offset.click.left, b$$392.left + b$$392.width / 2, b$$392.width], JAM.policy.p3);
    var e$$232 = JAM.call(this._getDragVerticalDirection, this, [], JAM.policy.p3);
    var f$$100 = JAM.call(this._getDragHorizontalDirection, this, [], JAM.policy.p3);
    var v4503;
    var v16918 = this.floating;
    if (v16918) {
      v16918 = f$$100;
    }
    if (v16918) {
      var v16919 = f$$100 == "right";
      if (v16919) {
        v16919 = d$$251;
      }
      var v11316 = v16919;
      if (!v11316) {
        var v16920 = f$$100 == "left";
        if (v16920) {
          v16920 = !d$$251;
        }
        v11316 = v16920;
      }
      v4503 = v11316;
    } else {
      var v11317 = e$$232;
      if (v11317) {
        var v22428 = e$$232 == "down";
        if (v22428) {
          v22428 = c$$323;
        }
        var v16922 = v22428;
        if (!v16922) {
          var v22429 = e$$232 == "up";
          if (v22429) {
            v22429 = !c$$323;
          }
          v16922 = v22429;
        }
        v11317 = v16922;
      }
      v4503 = v11317;
    }
    return v4503;
  }
  function v1311(b$$391) {
    var v4504 = this.options.axis === "x";
    if (!v4504) {
      var v11320 = a$$452.ui;
      v4504 = JAM.call(v11320.isOverAxis, v11320, [this.positionAbs.top + this.offset.click.top, b$$391.top, b$$391.height], JAM.policy.p3);
    }
    var c$$322 = v4504;
    var v4505 = this.options.axis === "y";
    if (!v4505) {
      var v11326 = a$$452.ui;
      v4505 = JAM.call(v11326.isOverAxis, v11326, [this.positionAbs.left + this.offset.click.left, b$$391.left, b$$391.width], JAM.policy.p3);
    }
    var d$$250 = v4505;
    var e$$231 = c$$322 && d$$250;
    var f$$99 = JAM.call(this._getDragVerticalDirection, this, [], JAM.policy.p3);
    var g$$133 = JAM.call(this._getDragHorizontalDirection, this, [], JAM.policy.p3);
    var v4506;
    if (e$$231) {
      var v11331;
      if (this.floating) {
        var v16929;
        var v26997 = g$$133;
        if (v26997) {
          v26997 = g$$133 == "right";
        }
        var v25141 = v26997;
        if (!v25141) {
          v25141 = f$$99 == "down";
        }
        if (v25141) {
          v16929 = 2;
        } else {
          v16929 = 1;
        }
        v11331 = v16929;
      } else {
        var v16930 = f$$99;
        if (v16930) {
          var v22436;
          if (f$$99 == "down") {
            v22436 = 2;
          } else {
            v22436 = 1;
          }
          v16930 = v22436;
        }
        v11331 = v16930;
      }
      v4506 = v11331;
    } else {
      v4506 = !1;
    }
    return v4506;
  }
  function v1310(a$$454) {
    var b$$390 = this.positionAbs.left;
    var c$$321 = b$$390 + this.helperProportions.width;
    var d$$249 = this.positionAbs.top;
    var e$$230 = d$$249 + this.helperProportions.height;
    var f$$98 = a$$454.left;
    var g$$132 = f$$98 + a$$454.width;
    var h$$108 = a$$454.top;
    var i$$165 = h$$108 + a$$454.height;
    var j$$77 = this.offset.click.top;
    var k$$53 = this.offset.click.left;
    var v16932 = d$$249 + j$$77 > h$$108;
    if (v16932) {
      v16932 = d$$249 + j$$77 < i$$165;
    }
    var v11336 = v16932;
    if (v11336) {
      v11336 = b$$390 + k$$53 > f$$98;
    }
    var v4515 = v11336;
    if (v4515) {
      v4515 = b$$390 + k$$53 < g$$132;
    }
    var l$$63 = v4515;
    var v4516;
    var v22439 = this.options.tolerance == "pointer";
    if (!v22439) {
      v22439 = this.options.forcePointerForContainers;
    }
    var v16934 = v22439;
    if (!v16934) {
      var v22440 = this.options.tolerance != "pointer";
      if (v22440) {
        var v27001 = this.helperProportions;
        var v28213;
        if (this.floating) {
          v28213 = "width";
        } else {
          v28213 = "height";
        }
        var v25147 = v27001[v28213];
        var v28214;
        if (this.floating) {
          v28214 = "width";
        } else {
          v28214 = "height";
        }
        v22440 = v25147 > a$$454[v28214];
      }
      v16934 = v22440;
    }
    if (v16934) {
      v4516 = l$$63;
    } else {
      var v22442 = f$$98 < b$$390 + this.helperProportions.width / 2;
      if (v22442) {
        v22442 = c$$321 - this.helperProportions.width / 2 < g$$132;
      }
      var v16935 = v22442;
      if (v16935) {
        v16935 = h$$108 < d$$249 + this.helperProportions.height / 2;
      }
      var v11338 = v16935;
      if (v11338) {
        v11338 = e$$230 - this.helperProportions.height / 2 < i$$165;
      }
      v4516 = v11338;
    }
    return v4516;
  }
  function v1309(b$$389) {
    function v1308() {
      var v25153 = b$$389.item;
      if (!v25153) {
        v25153 = this;
      }
      var v16937 = JAM.call(a$$452, null, [v25153], JAM.policy.p3);
      var v22446 = b$$389.attribute;
      if (!v22446) {
        v22446 = "id";
      }
      var v11340 = JAM.call(v16937.attr, v16937, [v22446], JAM.policy.p3);
      if (!v11340) {
        v11340 = "";
      }
      JAM.call(d$$248.push, d$$248, [v11340], JAM.policy.p3);
      return;
    }
    var v11341 = b$$389;
    if (v11341) {
      v11341 = b$$389.connected;
    }
    var c$$320 = JAM.call(this._getItemsAsjQuery, this, [v11341], JAM.policy.p3);
    var d$$248 = [];
    b$$389 = b$$389 || {};
    JAM.call(c$$320.each, c$$320, [v1308], JAM.policy.p3);
    return d$$248;
  }
  function v1307(b$$388) {
    function v1306() {
      var v25155 = b$$388.item;
      if (!v25155) {
        v25155 = this;
      }
      var v16940 = JAM.call(a$$452, null, [v25155], JAM.policy.p3);
      var v22448 = b$$388.attribute;
      if (!v22448) {
        v22448 = "id";
      }
      var v11342 = JAM.call(v16940.attr, v16940, [v22448], JAM.policy.p3);
      if (!v11342) {
        v11342 = "";
      }
      var v4519 = v11342;
      var v11343 = b$$388.expression;
      if (!v11343) {
        v11343 = /(.+)[-=_](.+)/;
      }
      var c$$319 = JAM.call(v4519.match, v4519, [v11343], JAM.policy.p3);
      if (c$$319) {
        var v25157 = b$$388.key;
        if (!v25157) {
          v25157 = c$$319[1] + "[]";
        }
        var v16944 = v25157 + "=";
        var v22450;
        var v27012 = b$$388.key;
        if (v27012) {
          v27012 = b$$388.expression;
        }
        if (v27012) {
          v22450 = c$$319[1];
        } else {
          v22450 = c$$319[2];
        }
        JAM.call(d$$247.push, d$$247, [v16944 + v22450], JAM.policy.p3);
      }
      return;
    }
    var v11345 = b$$388;
    if (v11345) {
      v11345 = b$$388.connected;
    }
    var c$$318 = JAM.call(this._getItemsAsjQuery, this, [v11345], JAM.policy.p3);
    var d$$247 = [];
    b$$388 = b$$388 || {};
    var v22451 = JAM.call(a$$452, null, [c$$318], JAM.policy.p3);
    JAM.call(v22451.each, v22451, [v1306], JAM.policy.p3);
    var v22452 = !d$$247.length;
    if (v22452) {
      v22452 = b$$388.key;
    }
    var v16946 = v22452;
    if (v16946) {
      JAM.call(d$$247.push, d$$247, [b$$388.key + "="], JAM.policy.p3);
    }
    return JAM.call(d$$247.join, d$$247, ["&"], JAM.policy.p3);
  }
  function v1305() {
    var b$$387 = this;
    if (this.dragging) {
      JAM.call(this._mouseUp, this, [{target:null}], JAM.policy.p3);
      var v11347;
      if (this.options.helper == "original") {
        var v22455 = this.currentItem;
        var v16947 = JAM.call(v22455.css, v22455, [this._storedCSS], JAM.policy.p3);
        v11347 = JAM.call(v16947.removeClass, v16947, ["ui-sortable-helper"], JAM.policy.p3);
      } else {
        var v16948 = this.currentItem;
        v11347 = JAM.call(v16948.show, v16948, [], JAM.policy.p3);
      }
      v11347;
      var c$$317 = this.containers.length - 1;
      var v4523 = c$$317 >= 0;
      for (;v4523;) {
        var v11349 = this.containers[c$$317];
        JAM.call(v11349._trigger, v11349, ["deactivate", null, JAM.call(b$$387._uiHash, b$$387, [this], JAM.policy.p3)], JAM.policy.p3);
        var v11351 = this.containers[c$$317].containerCache.over;
        if (v11351) {
          var v22458 = this.containers[c$$317];
          JAM.call(v22458._trigger, v22458, ["out", null, JAM.call(b$$387._uiHash, b$$387, [this], JAM.policy.p3)], JAM.policy.p3);
          this.containers[c$$317].containerCache.over = 0;
        }
        c$$317--;
        v4523 = c$$317 >= 0;
      }
    }
    var v11352 = this.placeholder;
    if (v11352) {
      var v27014 = this.placeholder[0].parentNode;
      if (v27014) {
        var v28219 = this.placeholder[0].parentNode;
        JAM.call(v28219.removeChild, v28219, [this.placeholder[0]], JAM.policy.p3);
      }
      var v29019 = this.options.helper != "original";
      if (v29019) {
        v29019 = this.helper;
      }
      var v28221 = v29019;
      if (v28221) {
        v28221 = this.helper[0].parentNode;
      }
      var v27015 = v28221;
      if (v27015) {
        var v28222 = this.helper;
        JAM.call(v28222.remove, v28222, [], JAM.policy.p3);
      }
      JAM.call(a$$452.extend, a$$452, [this, {helper:null, dragging:!1, reverting:!1, _noFinalSort:null}], JAM.policy.p3);
      var v22461;
      if (this.domPosition.prev) {
        var v25166 = JAM.call(a$$452, null, [this.domPosition.prev], JAM.policy.p3);
        v22461 = JAM.call(v25166.after, v25166, [this.currentItem], JAM.policy.p3);
      } else {
        var v25168 = JAM.call(a$$452, null, [this.domPosition.parent], JAM.policy.p3);
        v22461 = JAM.call(v25168.prepend, v25168, [this.currentItem], JAM.policy.p3);
      }
      v22461;
    }
    return this;
  }
  function v1304(b$$386, c$$316) {
    function v1303() {
      JAM.call(d$$246._clear, d$$246, [b$$386], JAM.policy.p3);
      return;
    }
    if (!b$$386) {
      return;
    }
    var v11353 = a$$452.ui.ddmanager;
    if (v11353) {
      v11353 = !this.options.dropBehaviour;
    }
    var v4526 = v11353;
    if (v4526) {
      var v11354 = a$$452.ui.ddmanager;
      JAM.call(v11354.drop, v11354, [this, b$$386], JAM.policy.p3);
    }
    if (this.options.revert) {
      var d$$246 = this;
      var v4527 = d$$246.placeholder;
      var e$$229 = JAM.call(v4527.offset, v4527, [], JAM.policy.p3);
      d$$246.reverting = !0;
      var v11356 = JAM.call(a$$452, null, [this.helper], JAM.policy.p3);
      var v22463 = e$$229.left - this.offset.parent.left - d$$246.margins.left;
      var v25173;
      if (this.offsetParent[0] == document.body) {
        v25173 = 0;
      } else {
        v25173 = this.offsetParent[0].scrollLeft;
      }
      var v16956 = v22463 + v25173;
      var v22465 = e$$229.top - this.offset.parent.top - d$$246.margins.top;
      var v25176;
      if (this.offsetParent[0] == document.body) {
        v25176 = 0;
      } else {
        v25176 = this.offsetParent[0].scrollTop;
      }
      var v11357 = {left:v16956, top:v22465 + v25176};
      var v16958 = parseInt(this.options.revert, 10);
      if (!v16958) {
        v16958 = 500;
      }
      JAM.call(v11356.animate, v11356, [v11357, v16958, v1303], JAM.policy.p3);
    } else {
      JAM.call(this._clear, this, [b$$386, c$$316], JAM.policy.p3);
    }
    return !1;
  }
  function v1302(b$$385) {
    var v31067 = JAM.call(this._generatePosition, this, [b$$385], JAM.policy.p3);
    this.position = v31067;
    var v31068 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
    this.positionAbs = v31068;
    var v11359 = this.lastPositionAbs;
    if (!v11359) {
      this.lastPositionAbs = this.positionAbs;
    }
    if (this.options.scroll) {
      var c$$315 = this.options;
      var d$$245 = !1;
      var v11361;
      var v22469 = this.scrollParent[0] != document;
      if (v22469) {
        v22469 = this.scrollParent[0].tagName != "HTML";
      }
      if (v22469) {
        var v22470;
        if (this.overflowOffset.top + this.scrollParent[0].offsetHeight - b$$385.pageY < c$$315.scrollSensitivity) {
          v22470 = this.scrollParent[0].scrollTop = d$$245 = this.scrollParent[0].scrollTop + c$$315.scrollSpeed;
        } else {
          var v25181 = b$$385.pageY - this.overflowOffset.top < c$$315.scrollSensitivity;
          if (v25181) {
            v25181 = this.scrollParent[0].scrollTop = d$$245 = this.scrollParent[0].scrollTop - c$$315.scrollSpeed;
          }
          v22470 = v25181;
        }
        v22470;
        var v22471;
        if (this.overflowOffset.left + this.scrollParent[0].offsetWidth - b$$385.pageX < c$$315.scrollSensitivity) {
          v22471 = this.scrollParent[0].scrollLeft = d$$245 = this.scrollParent[0].scrollLeft + c$$315.scrollSpeed;
        } else {
          var v25184 = b$$385.pageX - this.overflowOffset.left < c$$315.scrollSensitivity;
          if (v25184) {
            v25184 = this.scrollParent[0].scrollLeft = d$$245 = this.scrollParent[0].scrollLeft - c$$315.scrollSpeed;
          }
          v22471 = v25184;
        }
        v11361 = v22471;
      } else {
        var v22472;
        var v28250 = b$$385.pageY;
        var v29035 = JAM.call(a$$452, null, [document], JAM.policy.p3);
        if (v28250 - JAM.call(v29035.scrollTop, v29035, [], JAM.policy.p3) < c$$315.scrollSensitivity) {
          var v25186 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v28252 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          v22472 = d$$245 = JAM.call(v25186.scrollTop, v25186, [JAM.call(v28252.scrollTop, v28252, [], JAM.policy.p3) - c$$315.scrollSpeed], JAM.policy.p3);
        } else {
          var v29036 = JAM.call(a$$452, null, [window], JAM.policy.p3);
          var v28253 = JAM.call(v29036.height, v29036, [], JAM.policy.p3);
          var v29037 = b$$385.pageY;
          var v29552 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v25188 = v28253 - (v29037 - JAM.call(v29552.scrollTop, v29552, [], JAM.policy.p3)) < c$$315.scrollSensitivity;
          if (v25188) {
            var v27055 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            var v29039 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            v25188 = d$$245 = JAM.call(v27055.scrollTop, v27055, [JAM.call(v29039.scrollTop, v29039, [], JAM.policy.p3) + c$$315.scrollSpeed], JAM.policy.p3);
          }
          v22472 = v25188;
        }
        v22472;
        var v22473;
        var v28257 = b$$385.pageX;
        var v29040 = JAM.call(a$$452, null, [document], JAM.policy.p3);
        if (v28257 - JAM.call(v29040.scrollLeft, v29040, [], JAM.policy.p3) < c$$315.scrollSensitivity) {
          var v25190 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v28259 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          v22473 = d$$245 = JAM.call(v25190.scrollLeft, v25190, [JAM.call(v28259.scrollLeft, v28259, [], JAM.policy.p3) - c$$315.scrollSpeed], JAM.policy.p3);
        } else {
          var v29041 = JAM.call(a$$452, null, [window], JAM.policy.p3);
          var v28260 = JAM.call(v29041.width, v29041, [], JAM.policy.p3);
          var v29042 = b$$385.pageX;
          var v29553 = JAM.call(a$$452, null, [document], JAM.policy.p3);
          var v25192 = v28260 - (v29042 - JAM.call(v29553.scrollLeft, v29553, [], JAM.policy.p3)) < c$$315.scrollSensitivity;
          if (v25192) {
            var v27063 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            var v29044 = JAM.call(a$$452, null, [document], JAM.policy.p3);
            v25192 = d$$245 = JAM.call(v27063.scrollLeft, v27063, [JAM.call(v29044.scrollLeft, v29044, [], JAM.policy.p3) + c$$315.scrollSpeed], JAM.policy.p3);
          }
          v22473 = v25192;
        }
        v11361 = v22473;
      }
      v11361;
      var v22474 = d$$245 !== !1;
      if (v22474) {
        v22474 = a$$452.ui.ddmanager;
      }
      var v16961 = v22474;
      if (v16961) {
        v16961 = !c$$315.dropBehaviour;
      }
      var v11362 = v16961;
      if (v11362) {
        var v16962 = a$$452.ui.ddmanager;
        JAM.call(v16962.prepareOffsets, v16962, [this, b$$385], JAM.policy.p3);
      }
    }
    var v31069 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
    this.positionAbs = v31069;
    var v11363 = !this.options.axis;
    if (!v11363) {
      v11363 = this.options.axis != "y";
    }
    if (v11363) {
      this.helper[0].style.left = this.position.left + "px";
    }
    var v11366 = !this.options.axis;
    if (!v11366) {
      v11366 = this.options.axis != "x";
    }
    if (v11366) {
      this.helper[0].style.top = this.position.top + "px";
    }
    var e$$228 = this.items.length - 1;
    var v4543 = e$$228 >= 0;
    for (;v4543;) {
      var f$$97 = this.items[e$$228];
      var g$$131 = f$$97.item[0];
      var h$$107 = JAM.call(this._intersectsWithPointer, this, [f$$97], JAM.policy.p3);
      if (!h$$107) {
        e$$228--;
        v4543 = e$$228 >= 0;
        continue;
      }
      if (f$$97.instance !== this.currentContainer) {
        e$$228--;
        v4543 = e$$228 >= 0;
        continue;
      }
      var v22481 = g$$131 != this.currentItem[0];
      if (v22481) {
        var v28264 = this.placeholder;
        var v29045;
        if (h$$107 == 1) {
          v29045 = "next";
        } else {
          v29045 = "prev";
        }
        v22481 = JAM.call(v28264[v29045], v28264, [], JAM.policy.p3)[0] != g$$131;
      }
      var v16973 = v22481;
      if (v16973) {
        var v25198 = a$$452.ui;
        v16973 = !JAM.call(v25198.contains, v25198, [this.placeholder[0], g$$131], JAM.policy.p3);
      }
      var v11372 = v16973;
      if (v11372) {
        var v16974;
        if (this.options.type == "semi-dynamic") {
          var v25201 = a$$452.ui;
          v16974 = !JAM.call(v25201.contains, v25201, [this.element[0], g$$131], JAM.policy.p3);
        } else {
          v16974 = !0;
        }
        v11372 = v16974;
      }
      if (v11372) {
        var v4539;
        if (h$$107 == 1) {
          v4539 = "down";
        } else {
          v4539 = "up";
        }
        this.direction = v4539;
        var v11374 = this.options.tolerance == "pointer";
        if (!v11374) {
          v11374 = JAM.call(this._intersectsWithSides, this, [f$$97], JAM.policy.p3);
        }
        if (v11374) {
          JAM.call(this._rearrange, this, [b$$385, f$$97], JAM.policy.p3);
        } else {
          break;
        }
        JAM.call(this._trigger, this, ["change", b$$385, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
        break;
      }
      e$$228--;
      v4543 = e$$228 >= 0;
    }
    JAM.call(this._contactContainers, this, [b$$385], JAM.policy.p3);
    var v25203 = a$$452.ui.ddmanager;
    if (v25203) {
      var v27071 = a$$452.ui.ddmanager;
      JAM.call(v27071.drag, v27071, [this, b$$385], JAM.policy.p3);
    }
    JAM.call(this._trigger, this, ["sort", b$$385, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    this.lastPositionAbs = this.positionAbs;
    return !1;
  }
  function v1301(b$$384, c$$314, d$$244) {
    var e$$227 = this.options;
    var f$$96 = this;
    this.currentContainer = this;
    JAM.call(this.refreshPositions, this, [], JAM.policy.p3);
    var v31070 = JAM.call(this._createHelper, this, [b$$384], JAM.policy.p3);
    this.helper = v31070;
    JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
    JAM.call(this._cacheMargins, this, [], JAM.policy.p3);
    var v30843 = this.helper;
    var v31071 = JAM.call(v30843.scrollParent, v30843, [], JAM.policy.p3);
    this.scrollParent = v31071;
    var v30832 = this.currentItem;
    var v31072 = JAM.call(v30832.offset, v30832, [], JAM.policy.p3);
    this.offset = v31072;
    this.offset = {top:this.offset.top - this.margins.top, left:this.offset.left - this.margins.left};
    JAM.call(a$$452.extend, a$$452, [this.offset, {click:{left:b$$384.pageX - this.offset.left, top:b$$384.pageY - this.offset.top}, parent:JAM.call(this._getParentOffset, this, [], JAM.policy.p3), relative:JAM.call(this._getRelativeOffset, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v30767 = this.helper;
    JAM.call(v30767.css, v30767, ["position", "absolute"], JAM.policy.p3);
    var v30728 = this.helper;
    var v31073 = JAM.call(v30728.css, v30728, ["position"], JAM.policy.p3);
    this.cssPosition = v31073;
    var v31074 = JAM.call(this._generatePosition, this, [b$$384], JAM.policy.p3);
    this.originalPosition = v31074;
    this.originalPageX = b$$384.pageX;
    this.originalPageY = b$$384.pageY;
    var v30327 = e$$227.cursorAt;
    if (v30327) {
      JAM.call(this._adjustOffsetFromHelper, this, [e$$227.cursorAt], JAM.policy.p3);
    }
    var v30468 = this.currentItem;
    var v30128 = JAM.call(v30468.prev, v30468, [], JAM.policy.p3)[0];
    var v30469 = this.currentItem;
    this.domPosition = {prev:v30128, parent:JAM.call(v30469.parent, v30469, [], JAM.policy.p3)[0]};
    var v29877 = this.helper[0] != this.currentItem[0];
    if (v29877) {
      var v30132 = this.currentItem;
      JAM.call(v30132.hide, v30132, [], JAM.policy.p3);
    }
    JAM.call(this._createPlaceholder, this, [], JAM.policy.p3);
    var v29046 = e$$227.containment;
    if (v29046) {
      JAM.call(this._setContainment, this, [], JAM.policy.p3);
    }
    var v28267 = e$$227.cursor;
    if (v28267) {
      var v29878 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
      var v29555 = JAM.call(v29878.css, v29878, ["cursor"], JAM.policy.p3);
      if (v29555) {
        var v29879 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
        var v31075 = JAM.call(v29879.css, v29879, ["cursor"], JAM.policy.p3);
        this._storedCursor = v31075;
      }
      var v29556 = JAM.call(a$$452, null, ["body"], JAM.policy.p3);
      JAM.call(v29556.css, v29556, ["cursor", e$$227.cursor], JAM.policy.p3);
    }
    var v27072 = e$$227.opacity;
    if (v27072) {
      var v29558 = this.helper;
      var v29047 = JAM.call(v29558.css, v29558, ["opacity"], JAM.policy.p3);
      if (v29047) {
        var v29559 = this.helper;
        var v31076 = JAM.call(v29559.css, v29559, ["opacity"], JAM.policy.p3);
        this._storedOpacity = v31076;
      }
      var v29048 = this.helper;
      JAM.call(v29048.css, v29048, ["opacity", e$$227.opacity], JAM.policy.p3);
    }
    var v25204 = e$$227.zIndex;
    if (v25204) {
      var v29050 = this.helper;
      var v28268 = JAM.call(v29050.css, v29050, ["zIndex"], JAM.policy.p3);
      if (v28268) {
        var v29051 = this.helper;
        var v31077 = JAM.call(v29051.css, v29051, ["zIndex"], JAM.policy.p3);
        this._storedZIndex = v31077;
      }
      var v28269 = this.helper;
      JAM.call(v28269.css, v28269, ["zIndex", e$$227.zIndex], JAM.policy.p3);
    }
    var v25205 = this.scrollParent[0] != document;
    if (v25205) {
      v25205 = this.scrollParent[0].tagName != "HTML";
    }
    var v22487 = v25205;
    if (v22487) {
      var v25206 = this.scrollParent;
      var v31078 = JAM.call(v25206.offset, v25206, [], JAM.policy.p3);
      this.overflowOffset = v31078;
    }
    JAM.call(this._trigger, this, ["start", b$$384, JAM.call(this._uiHash, this, [], JAM.policy.p3)], JAM.policy.p3);
    var v11375 = this._preserveHelperProportions;
    if (!v11375) {
      JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
    }
    if (!d$$244) {
      var g$$130 = this.containers.length - 1;
      var v4547 = g$$130 >= 0;
      for (;v4547;) {
        var v4545 = this.containers[g$$130];
        JAM.call(v4545._trigger, v4545, ["activate", b$$384, JAM.call(f$$96._uiHash, f$$96, [this], JAM.policy.p3)], JAM.policy.p3);
        g$$130--;
        v4547 = g$$130 >= 0;
      }
    }
    var v27075 = a$$452.ui.ddmanager;
    if (v27075) {
      a$$452.ui.ddmanager.current = this;
    }
    var v28275 = a$$452.ui.ddmanager;
    if (v28275) {
      v28275 = !e$$227.dropBehaviour;
    }
    var v27076 = v28275;
    if (v27076) {
      var v28276 = a$$452.ui.ddmanager;
      JAM.call(v28276.prepareOffsets, v28276, [this, b$$384], JAM.policy.p3);
    }
    this.dragging = !0;
    var v22488 = this.helper;
    JAM.call(v22488.addClass, v22488, ["ui-sortable-helper"], JAM.policy.p3);
    JAM.call(this._mouseDrag, this, [b$$384], JAM.policy.p3);
    return !0;
  }
  function v1300(b$$383, c$$313) {
    function v1299() {
      var v4549 = this == b$$383.target;
      if (v4549) {
        h$$106 = !0;
      }
      return;
    }
    function v1298() {
      if (JAM.call(a$$452.data, a$$452, [this, d$$243.widgetName + "-item"], JAM.policy.p3) == f$$95) {
        e$$226 = JAM.call(a$$452, null, [this], JAM.policy.p3);
        return !1;
      }
      return;
    }
    var d$$243 = this;
    if (this.reverting) {
      return !1;
    }
    var v11380 = this.options.disabled;
    if (!v11380) {
      v11380 = this.options.type == "static";
    }
    if (v11380) {
      return !1;
    }
    JAM.call(this._refreshItems, this, [b$$383], JAM.policy.p3);
    var e$$226 = null;
    var f$$95 = this;
    var v11381 = JAM.call(a$$452, null, [b$$383.target], JAM.policy.p3);
    var v4553 = JAM.call(v11381.parents, v11381, [], JAM.policy.p3);
    var g$$129 = JAM.call(v4553.each, v4553, [v1298], JAM.policy.p3);
    var v4554 = JAM.call(a$$452.data, a$$452, [b$$383.target, d$$243.widgetName + "-item"], JAM.policy.p3) == f$$95;
    if (v4554) {
      e$$226 = JAM.call(a$$452, null, [b$$383.target], JAM.policy.p3);
    }
    if (!e$$226) {
      return !1;
    }
    var v11384 = this.options.handle;
    if (v11384) {
      v11384 = !c$$313;
    }
    if (v11384) {
      var h$$106 = !1;
      var v16987 = JAM.call(a$$452, null, [this.options.handle, e$$226], JAM.policy.p3);
      var v11385 = JAM.call(v16987.find, v16987, ["*"], JAM.policy.p3);
      var v4556 = JAM.call(v11385.andSelf, v11385, [], JAM.policy.p3);
      JAM.call(v4556.each, v4556, [v1299], JAM.policy.p3);
      if (!h$$106) {
        return !1;
      }
    }
    this.currentItem = e$$226;
    JAM.call(this._removeCurrentsFromItems, this, [], JAM.policy.p3);
    return !0;
  }
  function v1297(b$$382, c$$312) {
    var v4559;
    if (b$$382 === "disabled") {
      var v16988 = this.options;
      introspect(JAM.policy.p2) {
        v16988[b$$382] = c$$312;
      }
      var v16989 = JAM.call(this.widget, this, [], JAM.policy.p3);
      var v22493;
      if (c$$312) {
        v22493 = "addClass";
      } else {
        v22493 = "removeClass";
      }
      v4559 = JAM.call(v16989[v22493], v16989, ["ui-sortable-disabled"], JAM.policy.p3);
    } else {
      var v11386 = a$$452.Widget.prototype._setOption;
      v4559 = JAM.call(v11386.apply, v11386, [this, arguments], JAM.policy.p3);
    }
    v4559;
    return;
  }
  function v1296() {
    var v16992 = a$$452.Widget.prototype.destroy;
    JAM.call(v16992.call, v16992, [this], JAM.policy.p3);
    var v16993 = this.element;
    JAM.call(v16993.removeClass, v16993, ["ui-sortable ui-sortable-disabled"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    var b$$381 = this.items.length - 1;
    var v4563 = b$$381 >= 0;
    for (;v4563;) {
      var v4561 = this.items[b$$381].item;
      JAM.call(v4561.removeData, v4561, [this.widgetName + "-item"], JAM.policy.p3);
      b$$381--;
      v4563 = b$$381 >= 0;
    }
    return this;
  }
  function v1295() {
    var a$$453 = this.options;
    this.containerCache = {};
    var v28277 = this.element;
    JAM.call(v28277.addClass, v28277, ["ui-sortable"], JAM.policy.p3);
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    var v25209;
    if (this.items.length) {
      var v28279 = a$$453.axis === "x";
      if (!v28279) {
        var v29560 = this.items[0].item;
        v28279 = JAM.call(/left|right/.test, /left|right/, [JAM.call(v29560.css, v29560, ["float"], JAM.policy.p3)], JAM.policy.p3);
      }
      var v27077 = v28279;
      if (!v27077) {
        var v29060 = this.items[0].item;
        v27077 = JAM.call(/inline|table-cell/.test, /inline|table-cell/, [JAM.call(v29060.css, v29060, ["display"], JAM.policy.p3)], JAM.policy.p3);
      }
      v25209 = v27077;
    } else {
      v25209 = !1;
    }
    this.floating = v25209;
    var v22496 = this.element;
    var v31079 = JAM.call(v22496.offset, v22496, [], JAM.policy.p3);
    this.offset = v31079;
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    this.ready = !0;
    return;
  }
  JAM.call(a$$452.widget, a$$452, ["ui.sortable", a$$452.ui.mouse, {widgetEventPrefix:"sort", ready:!1, options:{appendTo:"parent", axis:!1, connectWith:!1, containment:!1, cursor:"auto", cursorAt:!1, dropOnEmpty:!0, forcePlaceholderSize:!1, forceHelperSize:!1, grid:!1, handle:!1, helper:"original", items:"> *", opacity:!1, placeholder:!1, revert:!1, scroll:!0, scrollSensitivity:20, scrollSpeed:20, scope:"default", tolerance:"intersect", zIndex:1E3}, _create:v1295, destroy:v1296, _setOption:v1297, 
  _mouseCapture:v1300, _mouseStart:v1301, _mouseDrag:v1302, _mouseStop:v1304, cancel:v1305, serialize:v1307, toArray:v1309, _intersectsWith:v1310, _intersectsWithPointer:v1311, _intersectsWithSides:v1312, _getDragVerticalDirection:v1313, _getDragHorizontalDirection:v1314, refresh:v1315, _connectWith:v1316, _getItemsAsjQuery:v1318, _removeCurrentsFromItems:v1319, _refreshItems:v1320, refreshPositions:v1321, _createPlaceholder:v1324, _contactContainers:v1325, _createHelper:v1326, _adjustOffsetFromHelper:v1327, 
  _getParentOffset:v1328, _getRelativeOffset:v1329, _cacheMargins:v1330, _cacheHelperProportions:v1331, _setContainment:v1332, _convertPositionTo:v1333, _generatePosition:v1334, _rearrange:v1336, _clear:v1348, _trigger:v1349, _uiHash:v1350}], JAM.policy.p3);
  JAM.call(a$$452.extend, a$$452, [a$$452.ui.sortable, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1294(a$$451, b$$374) {
  function v1293(b$$379) {
    function v1292() {
      var d$$242 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      var v27079 = d$$242.$element;
      var v25210 = JAM.call(v27079.removeClass, v27079, ["ui-selecting"], JAM.policy.p3);
      JAM.call(v25210.addClass, v25210, ["ui-selected"], JAM.policy.p3);
      d$$242.selecting = !1;
      d$$242.selected = !0;
      d$$242.startselected = !0;
      JAM.call(c$$311._trigger, c$$311, ["selected", b$$379, {selected:d$$242.element}], JAM.policy.p3);
      return;
    }
    function v1291() {
      var d$$241 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      var v22510 = d$$241.$element;
      JAM.call(v22510.removeClass, v22510, ["ui-unselecting"], JAM.policy.p3);
      d$$241.unselecting = !1;
      d$$241.startselected = !1;
      JAM.call(c$$311._trigger, c$$311, ["unselected", b$$379, {unselected:d$$241.element}], JAM.policy.p3);
      return;
    }
    var c$$311 = this;
    this.dragged = !1;
    var d$$240 = this.options;
    var v25211 = JAM.call(a$$451, null, [".ui-unselecting", this.element[0]], JAM.policy.p3);
    JAM.call(v25211.each, v25211, [v1291], JAM.policy.p3);
    var v25212 = JAM.call(a$$451, null, [".ui-selecting", this.element[0]], JAM.policy.p3);
    JAM.call(v25212.each, v25212, [v1292], JAM.policy.p3);
    JAM.call(this._trigger, this, ["stop", b$$379], JAM.policy.p3);
    var v17001 = this.helper;
    JAM.call(v17001.remove, v17001, [], JAM.policy.p3);
    return !1;
  }
  function v1290(b$$378) {
    function v1289() {
      var i$$164 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      var v11397 = !i$$164;
      if (!v11397) {
        v11397 = i$$164.element == c$$310.element[0];
      }
      if (v11397) {
        return;
      }
      var j$$76 = !1;
      var v11398;
      if (d$$239.tolerance == "touch") {
        var v27082 = i$$164.left > g$$128;
        if (!v27082) {
          v27082 = i$$164.right < e$$225;
        }
        var v25213 = v27082;
        if (!v25213) {
          v25213 = i$$164.top > h$$105;
        }
        var v22513 = v25213;
        if (!v22513) {
          v22513 = i$$164.bottom < f$$94;
        }
        v11398 = j$$76 = !v22513;
      } else {
        var v17006 = d$$239.tolerance == "fit";
        if (v17006) {
          var v27085 = i$$164.left > e$$225;
          if (v27085) {
            v27085 = i$$164.right < g$$128;
          }
          var v25216 = v27085;
          if (v25216) {
            v25216 = i$$164.top > f$$94;
          }
          var v22515 = v25216;
          if (v22515) {
            v22515 = i$$164.bottom < h$$105;
          }
          v17006 = j$$76 = v22515;
        }
        v11398 = v17006;
      }
      v11398;
      var v11399;
      if (j$$76) {
        var v25218 = i$$164.selected;
        if (v25218) {
          var v28289 = i$$164.$element;
          JAM.call(v28289.removeClass, v28289, ["ui-selected"], JAM.policy.p3);
          i$$164.selected = !1;
        }
        var v25219 = i$$164.unselecting;
        if (v25219) {
          var v28290 = i$$164.$element;
          JAM.call(v28290.removeClass, v28290, ["ui-unselecting"], JAM.policy.p3);
          i$$164.unselecting = !1;
        }
        var v22516 = i$$164.selecting;
        if (!v22516) {
          var v28291 = i$$164.$element;
          JAM.call(v28291.addClass, v28291, ["ui-selecting"], JAM.policy.p3);
          i$$164.selecting = !0;
          v22516 = JAM.call(c$$310._trigger, c$$310, ["selecting", b$$378, {selecting:i$$164.element}], JAM.policy.p3);
        }
        v11399 = v22516;
      } else {
        var v22517 = i$$164.selecting;
        if (v22517) {
          var v25221;
          var v29061 = b$$378.metaKey;
          if (!v29061) {
            v29061 = b$$378.ctrlKey;
          }
          var v28293 = v29061;
          if (v28293) {
            v28293 = i$$164.startselected;
          }
          if (v28293) {
            var v29563 = i$$164.$element;
            JAM.call(v29563.removeClass, v29563, ["ui-selecting"], JAM.policy.p3);
            i$$164.selecting = !1;
            var v29062 = i$$164.$element;
            JAM.call(v29062.addClass, v29062, ["ui-selected"], JAM.policy.p3);
            v25221 = i$$164.selected = !0;
          } else {
            var v29564 = i$$164.$element;
            JAM.call(v29564.removeClass, v29564, ["ui-selecting"], JAM.policy.p3);
            i$$164.selecting = !1;
            var v29063 = i$$164.startselected;
            if (v29063) {
              var v29882 = i$$164.$element;
              JAM.call(v29882.addClass, v29882, ["ui-unselecting"], JAM.policy.p3);
              i$$164.unselecting = !0;
            }
            v25221 = JAM.call(c$$310._trigger, c$$310, ["unselecting", b$$378, {unselecting:i$$164.element}], JAM.policy.p3);
          }
          v25221;
        }
        var v28295 = i$$164.selected;
        if (v28295) {
          v28295 = !b$$378.metaKey;
        }
        var v27089 = v28295;
        if (v27089) {
          v27089 = !b$$378.ctrlKey;
        }
        var v25222 = v27089;
        if (v25222) {
          v25222 = !i$$164.startselected;
        }
        var v22518 = v25222;
        if (v22518) {
          var v29565 = i$$164.$element;
          JAM.call(v29565.removeClass, v29565, ["ui-selected"], JAM.policy.p3);
          i$$164.selected = !1;
          var v29066 = i$$164.$element;
          JAM.call(v29066.addClass, v29066, ["ui-unselecting"], JAM.policy.p3);
          i$$164.unselecting = !0;
          v22518 = JAM.call(c$$310._trigger, c$$310, ["unselecting", b$$378, {unselecting:i$$164.element}], JAM.policy.p3);
        }
        v11399 = v22518;
      }
      v11399;
      return;
    }
    var c$$310 = this;
    this.dragged = !0;
    if (this.options.disabled) {
      return;
    }
    var d$$239 = this.options;
    var e$$225 = this.opos[0];
    var f$$94 = this.opos[1];
    var g$$128 = b$$378.pageX;
    var h$$105 = b$$378.pageY;
    if (e$$225 > g$$128) {
      var i$$163 = g$$128;
      g$$128 = e$$225;
      e$$225 = i$$163;
    }
    if (f$$94 > h$$105) {
      i$$163 = h$$105;
      h$$105 = f$$94;
      f$$94 = i$$163;
    }
    var v17008 = this.helper;
    JAM.call(v17008.css, v17008, [{left:e$$225, top:f$$94, width:g$$128 - e$$225, height:h$$105 - f$$94}], JAM.policy.p3);
    var v17010 = this.selectees;
    JAM.call(v17010.each, v17010, [v1289], JAM.policy.p3);
    return !1;
  }
  function v1288(b$$377) {
    function v1287() {
      var d$$238 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      if (d$$238) {
        var v11401 = !b$$377.metaKey;
        if (v11401) {
          v11401 = !b$$377.ctrlKey;
        }
        var v4570 = v11401;
        if (!v4570) {
          var v17013 = d$$238.$element;
          v4570 = !JAM.call(v17013.hasClass, v17013, ["ui-selected"], JAM.policy.p3);
        }
        var e$$224 = v4570;
        var v28298 = d$$238.$element;
        var v29067;
        if (e$$224) {
          v29067 = "ui-unselecting";
        } else {
          v29067 = "ui-selected";
        }
        var v27092 = JAM.call(v28298.removeClass, v28298, [v29067], JAM.policy.p3);
        var v28300;
        if (e$$224) {
          v28300 = "ui-selecting";
        } else {
          v28300 = "ui-unselecting";
        }
        JAM.call(v27092.addClass, v27092, [v28300], JAM.policy.p3);
        d$$238.unselecting = !e$$224;
        d$$238.selecting = e$$224;
        d$$238.selected = e$$224;
        var v17014;
        if (e$$224) {
          v17014 = JAM.call(c$$309._trigger, c$$309, ["selecting", b$$377, {selecting:d$$238.element}], JAM.policy.p3);
        } else {
          v17014 = JAM.call(c$$309._trigger, c$$309, ["unselecting", b$$377, {unselecting:d$$238.element}], JAM.policy.p3);
        }
        v17014;
        return !1;
      }
      return;
    }
    function v1286() {
      var d$$237 = JAM.call(a$$451.data, a$$451, [this, "selectable-item"], JAM.policy.p3);
      d$$237.startselected = !0;
      var v17015 = !b$$377.metaKey;
      if (v17015) {
        v17015 = !b$$377.ctrlKey;
      }
      var v11404 = v17015;
      if (v11404) {
        var v28301 = d$$237.$element;
        JAM.call(v28301.removeClass, v28301, ["ui-selected"], JAM.policy.p3);
        d$$237.selected = !1;
        var v27094 = d$$237.$element;
        JAM.call(v27094.addClass, v27094, ["ui-unselecting"], JAM.policy.p3);
        d$$237.unselecting = !0;
        JAM.call(c$$309._trigger, c$$309, ["unselecting", b$$377, {unselecting:d$$237.element}], JAM.policy.p3);
      }
      return;
    }
    var c$$309 = this;
    this.opos = [b$$377.pageX, b$$377.pageY];
    if (this.options.disabled) {
      return;
    }
    var d$$236 = this.options;
    var v31080 = JAM.call(a$$451, null, [d$$236.filter, this.element[0]], JAM.policy.p3);
    this.selectees = v31080;
    JAM.call(this._trigger, this, ["start", b$$377], JAM.policy.p3);
    var v27095 = JAM.call(a$$451, null, [d$$236.appendTo], JAM.policy.p3);
    JAM.call(v27095.append, v27095, [this.helper], JAM.policy.p3);
    var v25226 = this.helper;
    JAM.call(v25226.css, v25226, [{left:b$$377.clientX, top:b$$377.clientY, width:0, height:0}], JAM.policy.p3);
    var v22526 = d$$236.autoRefresh;
    if (v22526) {
      JAM.call(this.refresh, this, [], JAM.policy.p3);
    }
    var v22527 = this.selectees;
    var v17016 = JAM.call(v22527.filter, v22527, [".ui-selected"], JAM.policy.p3);
    JAM.call(v17016.each, v17016, [v1286], JAM.policy.p3);
    var v22528 = JAM.call(a$$451, null, [b$$377.target], JAM.policy.p3);
    var v17017 = JAM.call(v22528.parents, v22528, [], JAM.policy.p3);
    var v11406 = JAM.call(v17017.andSelf, v17017, [], JAM.policy.p3);
    JAM.call(v11406.each, v11406, [v1287], JAM.policy.p3);
    return;
  }
  function v1285() {
    var v25229 = this.selectees;
    var v22529 = JAM.call(v25229.removeClass, v25229, ["ui-selectee"], JAM.policy.p3);
    JAM.call(v22529.removeData, v22529, ["selectable-item"], JAM.policy.p3);
    var v27099 = this.element;
    var v25230 = JAM.call(v27099.removeClass, v27099, ["ui-selectable ui-selectable-disabled"], JAM.policy.p3);
    var v22530 = JAM.call(v25230.removeData, v25230, ["selectable"], JAM.policy.p3);
    JAM.call(v22530.unbind, v22530, [".selectable"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    return this;
  }
  function v1284() {
    function v1283() {
      function v1282() {
        var b$$376 = JAM.call(a$$451, null, [this], JAM.policy.p3);
        var c$$308 = JAM.call(b$$376.offset, b$$376, [], JAM.policy.p3);
        JAM.call(a$$451.data, a$$451, [this, "selectable-item", {element:this, $element:b$$376, left:c$$308.left, top:c$$308.top, right:c$$308.left + JAM.call(b$$376.outerWidth, b$$376, [], JAM.policy.p3), bottom:c$$308.top + JAM.call(b$$376.outerHeight, b$$376, [], JAM.policy.p3), startselected:!1, selected:JAM.call(b$$376.hasClass, b$$376, ["ui-selected"], JAM.policy.p3), selecting:JAM.call(b$$376.hasClass, b$$376, ["ui-selecting"], JAM.policy.p3), unselecting:JAM.call(b$$376.hasClass, b$$376, 
        ["ui-unselecting"], JAM.policy.p3)}], JAM.policy.p3);
        return;
      }
      c$$307 = JAM.call(a$$451, null, [b$$375.options.filter, b$$375.element[0]], JAM.policy.p3);
      JAM.call(c$$307.addClass, c$$307, ["ui-selectee"], JAM.policy.p3);
      JAM.call(c$$307.each, c$$307, [v1282], JAM.policy.p3);
      return;
    }
    var b$$375 = this;
    var v11415 = this.element;
    JAM.call(v11415.addClass, v11415, ["ui-selectable"], JAM.policy.p3);
    this.dragged = !1;
    var c$$307;
    this.refresh = v1283;
    JAM.call(this.refresh, this, [], JAM.policy.p3);
    var v31081 = JAM.call(c$$307.addClass, c$$307, ["ui-selectee"], JAM.policy.p3);
    this.selectees = v31081;
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    var v31082 = JAM.call(a$$451, null, ["<div class='ui-selectable-helper'></div>"], JAM.policy.p3);
    this.helper = v31082;
    return;
  }
  JAM.call(a$$451.widget, a$$451, ["ui.selectable", a$$451.ui.mouse, {options:{appendTo:"body", autoRefresh:!0, distance:0, filter:"*", tolerance:"touch"}, _create:v1284, destroy:v1285, _mouseStart:v1288, _mouseDrag:v1290, _mouseStop:v1293}], JAM.policy.p3);
  JAM.call(a$$451.extend, a$$451, [a$$451.ui.selectable, {version:"1.8.24"}], JAM.policy.p3);
  return;
}
function v1281(a$$434, b$$331) {
  function v1280(b$$373, c$$306) {
    var v4575 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$235 = JAM.call(v4575.data, v4575, ["resizable"], JAM.policy.p3);
    var e$$223 = d$$235.options;
    var f$$93 = d$$235.size;
    var g$$127 = d$$235.originalSize;
    var h$$104 = d$$235.originalPosition;
    var i$$162 = d$$235.axis;
    var v4576 = e$$223._aspectRatio;
    if (!v4576) {
      v4576 = b$$373.shiftKey;
    }
    var j$$75 = v4576;
    var v4577;
    if (typeof e$$223.grid == "number") {
      v4577 = [e$$223.grid, e$$223.grid];
    } else {
      v4577 = e$$223.grid;
    }
    e$$223.grid = v4577;
    var v17028 = f$$93.width - g$$127.width;
    var v22537 = e$$223.grid[0];
    if (!v22537) {
      v22537 = 1;
    }
    var v4578 = JAM.call(Math.round, Math, [v17028 / v22537], JAM.policy.p3);
    var v11425 = e$$223.grid[0];
    if (!v11425) {
      v11425 = 1;
    }
    var k$$52 = v4578 * v11425;
    var v17032 = f$$93.height - g$$127.height;
    var v22540 = e$$223.grid[1];
    if (!v22540) {
      v22540 = 1;
    }
    var v4580 = JAM.call(Math.round, Math, [v17032 / v22540], JAM.policy.p3);
    var v11427 = e$$223.grid[1];
    if (!v11427) {
      v11427 = 1;
    }
    var l$$62 = v4580 * v11427;
    var v4582;
    if (JAM.call(/^(se|s|e)$/.test, /^(se|s|e)$/, [i$$162], JAM.policy.p3)) {
      d$$235.size.width = g$$127.width + k$$52;
      v4582 = d$$235.size.height = g$$127.height + l$$62;
    } else {
      var v11428;
      if (JAM.call(/^(ne)$/.test, /^(ne)$/, [i$$162], JAM.policy.p3)) {
        d$$235.size.width = g$$127.width + k$$52;
        d$$235.size.height = g$$127.height + l$$62;
        v11428 = d$$235.position.top = h$$104.top - l$$62;
      } else {
        var v17038;
        if (JAM.call(/^(sw)$/.test, /^(sw)$/, [i$$162], JAM.policy.p3)) {
          d$$235.size.width = g$$127.width + k$$52;
          d$$235.size.height = g$$127.height + l$$62;
          v17038 = d$$235.position.left = h$$104.left - k$$52;
        } else {
          d$$235.size.width = g$$127.width + k$$52;
          d$$235.size.height = g$$127.height + l$$62;
          d$$235.position.top = h$$104.top - l$$62;
          v17038 = d$$235.position.left = h$$104.left - k$$52;
        }
        v11428 = v17038;
      }
      v4582 = v11428;
    }
    v4582;
    return;
  }
  function v1279(b$$372, c$$305) {
    var v4583 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$234 = JAM.call(v4583.data, v4583, ["resizable"], JAM.policy.p3);
    var e$$222 = d$$234.options;
    var v11430 = d$$234.ghost;
    if (v11430) {
      v11430 = d$$234.helper;
    }
    var v4584 = v11430;
    if (v4584) {
      var v17040 = d$$234.helper;
      var v11431 = JAM.call(v17040.get, v17040, [0], JAM.policy.p3);
      var v17041 = d$$234.ghost;
      JAM.call(v11431.removeChild, v11431, [JAM.call(v17041.get, v17041, [0], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1278(b$$371, c$$304) {
    var v4585 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$233 = JAM.call(v4585.data, v4585, ["resizable"], JAM.policy.p3);
    var e$$221 = d$$233.options;
    var v4586 = d$$233.ghost;
    if (v4586) {
      var v11433 = d$$233.ghost;
      JAM.call(v11433.css, v11433, [{position:"relative", height:d$$233.size.height, width:d$$233.size.width}], JAM.policy.p3);
    }
    return;
  }
  function v1277(b$$370, c$$303) {
    var v4587 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$232 = JAM.call(v4587.data, v4587, ["resizable"], JAM.policy.p3);
    var e$$220 = d$$232.options;
    var f$$92 = d$$232.size;
    var v17044 = d$$232.originalElement;
    var v31083 = JAM.call(v17044.clone, v17044, [], JAM.policy.p3);
    d$$232.ghost = v31083;
    var v25240 = d$$232.ghost;
    var v22547 = JAM.call(v25240.css, v25240, [{opacity:.25, display:"block", position:"relative", height:f$$92.height, width:f$$92.width, margin:0, left:0, top:0}], JAM.policy.p3);
    var v17045 = JAM.call(v22547.addClass, v22547, ["ui-resizable-ghost"], JAM.policy.p3);
    var v22548;
    if (typeof e$$220.ghost == "string") {
      v22548 = e$$220.ghost;
    } else {
      v22548 = "";
    }
    JAM.call(v17045.addClass, v17045, [v22548], JAM.policy.p3);
    var v11435 = d$$232.ghost;
    JAM.call(v11435.appendTo, v11435, [d$$232.helper], JAM.policy.p3);
    return;
  }
  function v1276(b$$369, c$$302) {
    var v4588 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$231 = JAM.call(v4588.data, v4588, ["resizable"], JAM.policy.p3);
    var e$$219 = d$$231.options;
    var f$$91 = d$$231.position;
    var g$$126 = d$$231.containerOffset;
    var h$$103 = d$$231.containerPosition;
    var i$$161 = d$$231.containerElement;
    var j$$74 = JAM.call(a$$434, null, [d$$231.helper], JAM.policy.p3);
    var k$$51 = JAM.call(j$$74.offset, j$$74, [], JAM.policy.p3);
    var l$$61 = JAM.call(j$$74.outerWidth, j$$74, [], JAM.policy.p3) - d$$231.sizeDiff.width;
    var m$$34 = JAM.call(j$$74.outerHeight, j$$74, [], JAM.policy.p3) - d$$231.sizeDiff.height;
    var v22549 = d$$231._helper;
    if (v22549) {
      v22549 = !e$$219.animate;
    }
    var v17047 = v22549;
    if (v17047) {
      v17047 = JAM.call(/relative/.test, /relative/, [JAM.call(i$$161.css, i$$161, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v11439 = v17047;
    if (v11439) {
      var v17048 = JAM.call(a$$434, null, [this], JAM.policy.p3);
      JAM.call(v17048.css, v17048, [{left:k$$51.left - h$$103.left - g$$126.left, width:l$$61, height:m$$34}], JAM.policy.p3);
    }
    var v22552 = d$$231._helper;
    if (v22552) {
      v22552 = !e$$219.animate;
    }
    var v17050 = v22552;
    if (v17050) {
      v17050 = JAM.call(/static/.test, /static/, [JAM.call(i$$161.css, i$$161, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v11440 = v17050;
    if (v11440) {
      var v17051 = JAM.call(a$$434, null, [this], JAM.policy.p3);
      JAM.call(v17051.css, v17051, [{left:k$$51.left - h$$103.left - g$$126.left, width:l$$61, height:m$$34}], JAM.policy.p3);
    }
    return;
  }
  function v1275(b$$368, c$$301) {
    var v4594 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$230 = JAM.call(v4594.data, v4594, ["resizable"], JAM.policy.p3);
    var e$$218 = d$$230.options;
    var f$$90 = d$$230.containerSize;
    var g$$125 = d$$230.containerOffset;
    var h$$102 = d$$230.size;
    var i$$160 = d$$230.position;
    var v4595 = d$$230._aspectRatio;
    if (!v4595) {
      v4595 = b$$368.shiftKey;
    }
    var j$$73 = v4595;
    var k$$50 = {top:0, left:0};
    var l$$60 = d$$230.containerElement;
    var v27114 = l$$60[0] != document;
    if (v27114) {
      v27114 = JAM.call(/static/.test, /static/, [JAM.call(l$$60.css, l$$60, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v25249 = v27114;
    if (v25249) {
      k$$50 = g$$125;
    }
    var v27115 = i$$160.left;
    var v28313;
    if (d$$230._helper) {
      v28313 = g$$125.left;
    } else {
      v28313 = 0;
    }
    var v25250 = v27115 < v28313;
    if (v25250) {
      var v29072 = d$$230.size;
      var v29566 = d$$230.size.width;
      var v29884;
      if (d$$230._helper) {
        v29884 = d$$230.position.left - g$$125.left;
      } else {
        v29884 = d$$230.position.left - k$$50.left;
      }
      v29072.width = v29566 + v29884;
      if (j$$73) {
        d$$230.size.height = d$$230.size.width / d$$230.aspectRatio;
      }
      var v28314 = d$$230.position;
      var v29073;
      if (e$$218.helper) {
        v29073 = g$$125.left;
      } else {
        v29073 = 0;
      }
      v28314.left = v29073;
    }
    var v25251 = i$$160.top;
    var v27117;
    if (d$$230._helper) {
      v27117 = g$$125.top;
    } else {
      v27117 = 0;
    }
    var v22555 = v25251 < v27117;
    if (v22555) {
      var v28316 = d$$230.size;
      var v29074 = d$$230.size.height;
      var v29571;
      if (d$$230._helper) {
        v29571 = d$$230.position.top - g$$125.top;
      } else {
        v29571 = d$$230.position.top;
      }
      v28316.height = v29074 + v29571;
      if (j$$73) {
        d$$230.size.width = d$$230.size.height * d$$230.aspectRatio;
      }
      var v27118 = d$$230.position;
      var v28317;
      if (d$$230._helper) {
        v28317 = g$$125.top;
      } else {
        v28317 = 0;
      }
      v27118.top = v28317;
    }
    d$$230.offset.left = d$$230.parentData.left + d$$230.position.left;
    d$$230.offset.top = d$$230.parentData.top + d$$230.position.top;
    var v17056;
    if (d$$230._helper) {
      v17056 = d$$230.offset.left - k$$50.left;
    } else {
      v17056 = d$$230.offset.left - k$$50.left;
    }
    var m$$33 = JAM.call(Math.abs, Math, [v17056 + d$$230.sizeDiff.width], JAM.policy.p3);
    var v17058;
    if (d$$230._helper) {
      v17058 = d$$230.offset.top - k$$50.top;
    } else {
      v17058 = d$$230.offset.top - g$$125.top;
    }
    var n$$84 = JAM.call(Math.abs, Math, [v17058 + d$$230.sizeDiff.height], JAM.policy.p3);
    var v11447 = d$$230.containerElement;
    var v4598 = JAM.call(v11447.get, v11447, [0], JAM.policy.p3);
    var v17060 = d$$230.element;
    var v11448 = JAM.call(v17060.parent, v17060, [], JAM.policy.p3);
    var o$$20 = v4598 == JAM.call(v11448.get, v11448, [0], JAM.policy.p3);
    var v11449 = d$$230.containerElement;
    var p$$41 = JAM.call(/relative|absolute/.test, /relative|absolute/, [JAM.call(v11449.css, v11449, ["position"], JAM.policy.p3)], JAM.policy.p3);
    var v17061 = o$$20 && p$$41;
    if (v17061) {
      m$$33 = m$$33 - d$$230.parentData.left;
    }
    var v17062 = m$$33 + d$$230.size.width >= d$$230.parentData.width;
    if (v17062) {
      d$$230.size.width = d$$230.parentData.width - m$$33;
      if (j$$73) {
        d$$230.size.height = d$$230.size.width / d$$230.aspectRatio;
      }
    }
    var v11450 = n$$84 + d$$230.size.height >= d$$230.parentData.height;
    if (v11450) {
      d$$230.size.height = d$$230.parentData.height - n$$84;
      if (j$$73) {
        d$$230.size.width = d$$230.size.height * d$$230.aspectRatio;
      }
    }
    return;
  }
  function v1274(b$$366, d$$229) {
    function v1273(a$$448, b$$367) {
      var v4601 = k$$49;
      var v31084 = c$$273(JAM.call(j$$72.css, j$$72, ["padding" + b$$367], JAM.policy.p3));
      introspect(JAM.policy.p2) {
        v4601[a$$448] = v31084;
      }
      return;
    }
    var v4602 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var e$$217 = JAM.call(v4602.data, v4602, ["resizable"], JAM.policy.p3);
    var f$$89 = e$$217.options;
    var g$$124 = e$$217.element;
    var h$$101 = f$$89.containment;
    var v4603;
    if (h$$101 instanceof a$$434) {
      v4603 = JAM.call(h$$101.get, h$$101, [0], JAM.policy.p3);
    } else {
      var v11452;
      if (JAM.call(/parent/.test, /parent/, [h$$101], JAM.policy.p3)) {
        var v17066 = JAM.call(g$$124.parent, g$$124, [], JAM.policy.p3);
        v11452 = JAM.call(v17066.get, v17066, [0], JAM.policy.p3);
      } else {
        v11452 = h$$101;
      }
      v4603 = v11452;
    }
    var i$$159 = v4603;
    if (!i$$159) {
      return;
    }
    var v4605 = e$$217;
    var v31085 = JAM.call(a$$434, null, [i$$159], JAM.policy.p3);
    v4605.containerElement = v31085;
    var v11454 = JAM.call(/document/.test, /document/, [h$$101], JAM.policy.p3);
    if (!v11454) {
      v11454 = h$$101 == document;
    }
    if (v11454) {
      e$$217.containerOffset = {left:0, top:0};
      e$$217.containerPosition = {left:0, top:0};
      var v11455 = e$$217;
      var v17069 = JAM.call(a$$434, null, [document], JAM.policy.p3);
      var v22575 = JAM.call(a$$434, null, [document], JAM.policy.p3);
      var v17070 = JAM.call(v22575.width, v22575, [], JAM.policy.p3);
      var v25266 = JAM.call(a$$434, null, [document], JAM.policy.p3);
      var v22576 = JAM.call(v25266.height, v25266, [], JAM.policy.p3);
      if (!v22576) {
        v22576 = document.body.parentNode.scrollHeight;
      }
      v11455.parentData = {element:v17069, left:0, top:0, width:v17070, height:v22576};
    } else {
      var j$$72 = JAM.call(a$$434, null, [i$$159], JAM.policy.p3);
      var k$$49 = [];
      var v22577 = JAM.call(a$$434, null, [["Top", "Right", "Left", "Bottom"]], JAM.policy.p3);
      JAM.call(v22577.each, v22577, [v1273], JAM.policy.p3);
      var v22578 = e$$217;
      var v31086 = JAM.call(j$$72.offset, j$$72, [], JAM.policy.p3);
      v22578.containerOffset = v31086;
      var v17072 = e$$217;
      var v31087 = JAM.call(j$$72.position, j$$72, [], JAM.policy.p3);
      v17072.containerPosition = v31087;
      e$$217.containerSize = {height:JAM.call(j$$72.innerHeight, j$$72, [], JAM.policy.p3) - k$$49[3], width:JAM.call(j$$72.innerWidth, j$$72, [], JAM.policy.p3) - k$$49[1]};
      var l$$59 = e$$217.containerOffset;
      var m$$32 = e$$217.containerSize.height;
      var n$$83 = e$$217.containerSize.width;
      var v4608;
      var v17075 = a$$434.ui;
      if (JAM.call(v17075.hasScroll, v17075, [i$$159, "left"], JAM.policy.p3)) {
        v4608 = i$$159.scrollWidth;
      } else {
        v4608 = n$$83;
      }
      var o$$19 = v4608;
      var v4609;
      var v17076 = a$$434.ui;
      if (JAM.call(v17076.hasScroll, v17076, [i$$159], JAM.policy.p3)) {
        v4609 = i$$159.scrollHeight;
      } else {
        v4609 = m$$32;
      }
      var p$$40 = v4609;
      e$$217.parentData = {element:i$$159, left:l$$59.left, top:l$$59.top, width:o$$19, height:p$$40};
    }
    return;
  }
  function v1272(b$$365, c$$299) {
    function v1271() {
      var v17077 = d$$228.element;
      var v4613 = parseInt(JAM.call(v17077.css, v17077, ["width"], JAM.policy.p3), 10);
      var v17078 = d$$228.element;
      var v4614 = parseInt(JAM.call(v17078.css, v17078, ["height"], JAM.policy.p3), 10);
      var v17079 = d$$228.element;
      var v4615 = parseInt(JAM.call(v17079.css, v17079, ["top"], JAM.policy.p3), 10);
      var v17080 = d$$228.element;
      var c$$300 = {width:v4613, height:v4614, top:v4615, left:parseInt(JAM.call(v17080.css, v17080, ["left"], JAM.policy.p3), 10)};
      var v22583 = f$$88;
      if (v22583) {
        v22583 = f$$88.length;
      }
      var v17081 = v22583;
      if (v17081) {
        var v22584 = JAM.call(a$$434, null, [f$$88[0]], JAM.policy.p3);
        JAM.call(v22584.css, v22584, [{width:c$$300.width, height:c$$300.height}], JAM.policy.p3);
      }
      JAM.call(d$$228._updateCache, d$$228, [c$$300], JAM.policy.p3);
      JAM.call(d$$228._propagate, d$$228, ["resize", b$$365], JAM.policy.p3);
      return;
    }
    var v4617 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$228 = JAM.call(v4617.data, v4617, ["resizable"], JAM.policy.p3);
    var e$$216 = d$$228.options;
    var f$$88 = d$$228._proportionallyResizeElements;
    var v4618 = f$$88.length;
    if (v4618) {
      v4618 = JAM.call(/textarea/i.test, /textarea/i, [f$$88[0].nodeName], JAM.policy.p3);
    }
    var g$$123 = v4618;
    var v4619;
    var v17083 = g$$123;
    if (v17083) {
      var v22586 = a$$434.ui;
      v17083 = JAM.call(v22586.hasScroll, v22586, [f$$88[0], "left"], JAM.policy.p3);
    }
    if (v17083) {
      v4619 = 0;
    } else {
      v4619 = d$$228.sizeDiff.height;
    }
    var h$$100 = v4619;
    var v4620;
    if (g$$123) {
      v4620 = 0;
    } else {
      v4620 = d$$228.sizeDiff.width;
    }
    var i$$158 = v4620;
    var j$$71 = {width:d$$228.size.width - i$$158, height:d$$228.size.height - h$$100};
    var v22588 = d$$228.element;
    var v4623 = parseInt(JAM.call(v22588.css, v22588, ["left"], JAM.policy.p3), 10) + (d$$228.position.left - d$$228.originalPosition.left);
    if (!v4623) {
      v4623 = null;
    }
    var k$$48 = v4623;
    var v22591 = d$$228.element;
    var v4624 = parseInt(JAM.call(v22591.css, v22591, ["top"], JAM.policy.p3), 10) + (d$$228.position.top - d$$228.originalPosition.top);
    if (!v4624) {
      v4624 = null;
    }
    var l$$58 = v4624;
    var v4625 = d$$228.element;
    var v17092;
    if (l$$58 && k$$48) {
      v17092 = {top:l$$58, left:k$$48};
    } else {
      v17092 = {};
    }
    JAM.call(v4625.animate, v4625, [JAM.call(a$$434.extend, a$$434, [j$$71, v17092], JAM.policy.p3), {duration:e$$216.animateDuration, easing:e$$216.animateEasing, step:v1271}], JAM.policy.p3);
    return;
  }
  function v1270(b$$364, c$$298) {
    var v4628 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    JAM.call(v4628.removeData, v4628, ["resizable-alsoresize"], JAM.policy.p3);
    return;
  }
  function v1269(b$$359, c$$296) {
    function v1268(a$$447, b$$363) {
      i$$157(a$$447, b$$363);
      return;
    }
    function i$$157(b$$360, d$$227) {
      function v1267() {
        function v1266(a$$446, b$$362) {
          var v11478 = e$$215[b$$362];
          if (!v11478) {
            v11478 = 0;
          }
          var v4629 = v11478;
          var v11479 = h$$99[b$$362];
          if (!v11479) {
            v11479 = 0;
          }
          var c$$297 = v4629 + v11479;
          var v11480 = c$$297;
          if (v11480) {
            v11480 = c$$297 >= 0;
          }
          var v4631 = v11480;
          if (v4631) {
            introspect(JAM.policy.p2) {
              f$$87[b$$362] = c$$297 || null;
            }
          }
          return;
        }
        var b$$361 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        var v4632 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        var e$$215 = JAM.call(v4632.data, v4632, ["resizable-alsoresize"], JAM.policy.p3);
        var f$$87 = {};
        var v4633;
        var v17095 = d$$227;
        if (v17095) {
          v17095 = d$$227.length;
        }
        if (v17095) {
          v4633 = d$$227;
        } else {
          var v11481;
          if (JAM.call(b$$361.parents, b$$361, [c$$296.originalElement[0]], JAM.policy.p3).length) {
            v11481 = ["width", "height"];
          } else {
            v11481 = ["width", "height", "top", "left"];
          }
          v4633 = v11481;
        }
        var g$$122 = v4633;
        JAM.call(a$$434.each, a$$434, [g$$122, v1266], JAM.policy.p3);
        JAM.call(b$$361.css, b$$361, [f$$87], JAM.policy.p3);
        return;
      }
      var v4634 = JAM.call(a$$434, null, [b$$360], JAM.policy.p3);
      JAM.call(v4634.each, v4634, [v1267], JAM.policy.p3);
      return;
    }
    var v4635 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$226 = JAM.call(v4635.data, v4635, ["resizable"], JAM.policy.p3);
    var e$$214 = d$$226.options;
    var f$$86 = d$$226.originalSize;
    var g$$121 = d$$226.originalPosition;
    var v11483 = d$$226.size.height - f$$86.height;
    if (!v11483) {
      v11483 = 0;
    }
    var v4636 = v11483;
    var v11484 = d$$226.size.width - f$$86.width;
    if (!v11484) {
      v11484 = 0;
    }
    var v4637 = v11484;
    var v11485 = d$$226.position.top - g$$121.top;
    if (!v11485) {
      v11485 = 0;
    }
    var v4638 = v11485;
    var v11486 = d$$226.position.left - g$$121.left;
    if (!v11486) {
      v11486 = 0;
    }
    var h$$99 = {height:v4636, width:v4637, top:v4638, left:v11486};
    var v4640;
    var v17109 = typeof e$$214.alsoResize == "object";
    if (v17109) {
      v17109 = !e$$214.alsoResize.nodeType;
    }
    if (v17109) {
      v4640 = JAM.call(a$$434.each, a$$434, [e$$214.alsoResize, v1268], JAM.policy.p3);
    } else {
      v4640 = i$$157(e$$214.alsoResize);
    }
    v4640;
    return;
  }
  function v1265(b$$356, c$$295) {
    function v1264(a$$445) {
      f$$85(a$$445);
      return;
    }
    function f$$85(b$$357) {
      function v1263() {
        var b$$358 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        JAM.call(b$$358.data, b$$358, ["resizable-alsoresize", {width:parseInt(JAM.call(b$$358.width, b$$358, [], JAM.policy.p3), 10), height:parseInt(JAM.call(b$$358.height, b$$358, [], JAM.policy.p3), 10), left:parseInt(JAM.call(b$$358.css, b$$358, ["left"], JAM.policy.p3), 10), top:parseInt(JAM.call(b$$358.css, b$$358, ["top"], JAM.policy.p3), 10)}], JAM.policy.p3);
        return;
      }
      var v4642 = JAM.call(a$$434, null, [b$$357], JAM.policy.p3);
      JAM.call(v4642.each, v4642, [v1263], JAM.policy.p3);
      return;
    }
    var v4643 = JAM.call(a$$434, null, [this], JAM.policy.p3);
    var d$$225 = JAM.call(v4643.data, v4643, ["resizable"], JAM.policy.p3);
    var e$$213 = d$$225.options;
    var v4644;
    var v17114 = typeof e$$213.alsoResize == "object";
    if (v17114) {
      v17114 = !e$$213.alsoResize.parentNode;
    }
    if (v17114) {
      var v11494;
      if (e$$213.alsoResize.length) {
        e$$213.alsoResize = e$$213.alsoResize[0];
        v11494 = f$$85(e$$213.alsoResize);
      } else {
        v11494 = JAM.call(a$$434.each, a$$434, [e$$213.alsoResize, v1264], JAM.policy.p3);
      }
      v4644 = v11494;
    } else {
      v4644 = f$$85(e$$213.alsoResize);
    }
    v4644;
    return;
  }
  function v1262() {
    return {originalElement:this.originalElement, element:this.element, helper:this.helper, position:this.position, size:this.size, originalSize:this.originalSize, originalPosition:this.originalPosition};
  }
  function v1261(b$$355, c$$294) {
    var v11497 = a$$434.ui.plugin;
    JAM.call(v11497.call, v11497, [this, b$$355, [c$$294, JAM.call(this.ui, this, [], JAM.policy.p3)]], JAM.policy.p3);
    var v11499 = b$$355 != "resize";
    if (v11499) {
      JAM.call(this._trigger, this, [b$$355, c$$294, JAM.call(this.ui, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1260(b$$354, c$$293, d$$224) {
    var v11500 = this._change.n;
    var v4652 = JAM.call(v11500.apply, v11500, [this, arguments], JAM.policy.p3);
    var v11501 = this._change.w;
    return JAM.call(a$$434.extend, a$$434, [v4652, JAM.call(v11501.apply, v11501, [this, [b$$354, c$$293, d$$224]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1259(b$$353, c$$292, d$$223) {
    var v11503 = this._change.n;
    var v4654 = JAM.call(v11503.apply, v11503, [this, arguments], JAM.policy.p3);
    var v11504 = this._change.e;
    return JAM.call(a$$434.extend, a$$434, [v4654, JAM.call(v11504.apply, v11504, [this, [b$$353, c$$292, d$$223]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1258(b$$352, c$$291, d$$222) {
    var v11506 = this._change.s;
    var v4656 = JAM.call(v11506.apply, v11506, [this, arguments], JAM.policy.p3);
    var v11507 = this._change.w;
    return JAM.call(a$$434.extend, a$$434, [v4656, JAM.call(v11507.apply, v11507, [this, [b$$352, c$$291, d$$222]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1257(b$$351, c$$290, d$$221) {
    var v11509 = this._change.s;
    var v4658 = JAM.call(v11509.apply, v11509, [this, arguments], JAM.policy.p3);
    var v11510 = this._change.e;
    return JAM.call(a$$434.extend, a$$434, [v4658, JAM.call(v11510.apply, v11510, [this, [b$$351, c$$290, d$$221]], JAM.policy.p3)], JAM.policy.p3);
  }
  function v1256(a$$444, b$$350, c$$289) {
    return {height:this.originalSize.height + c$$289};
  }
  function v1255(a$$443, b$$349, c$$288) {
    var d$$220 = this.options;
    var e$$212 = this.originalSize;
    var f$$84 = this.originalPosition;
    return {top:f$$84.top + c$$288, height:e$$212.height - c$$288};
  }
  function v1254(a$$442, b$$348, c$$287) {
    var d$$219 = this.options;
    var e$$211 = this.originalSize;
    var f$$83 = this.originalPosition;
    return {left:f$$83.left + b$$348, width:e$$211.width - b$$348};
  }
  function v1253(a$$441, b$$347, c$$286) {
    return {width:this.originalSize.width + b$$347};
  }
  function v1252() {
    var b$$346 = this.element;
    var c$$285 = this.options;
    var v31088 = JAM.call(b$$346.offset, b$$346, [], JAM.policy.p3);
    this.elementOffset = v31088;
    if (this._helper) {
      var v4666 = this.helper;
      if (!v4666) {
        v4666 = JAM.call(a$$434, null, ['<div style="overflow:hidden;"></div>'], JAM.policy.p3);
      }
      this.helper = v4666;
      var v4667 = a$$434.browser.msie;
      if (v4667) {
        v4667 = a$$434.browser.version < 7;
      }
      var d$$218 = v4667;
      var v4668;
      if (d$$218) {
        v4668 = 1;
      } else {
        v4668 = 0;
      }
      var e$$210 = v4668;
      var v4669;
      if (d$$218) {
        v4669 = 2;
      } else {
        v4669 = -1;
      }
      var f$$82 = v4669;
      var v17131 = this.helper;
      var v11521 = JAM.call(v17131.addClass, v17131, [this._helper], JAM.policy.p3);
      var v25278 = this.element;
      var v17133 = JAM.call(v25278.outerWidth, v25278, [], JAM.policy.p3) + f$$82;
      var v25279 = this.element;
      JAM.call(v11521.css, v11521, [{width:v17133, height:JAM.call(v25279.outerHeight, v25279, [], JAM.policy.p3) + f$$82, position:"absolute", left:this.elementOffset.left - e$$210 + "px", top:this.elementOffset.top - e$$210 + "px", zIndex:c$$285.zIndex = c$$285.zIndex + 1}], JAM.policy.p3);
      var v17138 = this.helper;
      var v11523 = JAM.call(v17138.appendTo, v17138, ["body"], JAM.policy.p3);
      JAM.call(v11523.disableSelection, v11523, [], JAM.policy.p3);
    } else {
      this.helper = this.element;
    }
    return;
  }
  function v1251() {
    function v1250(a$$440, b$$345) {
      var v4671 = parseInt(a$$440, 10);
      if (!v4671) {
        v4671 = 0;
      }
      var c$$284 = v4671;
      var v4672 = parseInt(g$$120[b$$345], 10);
      if (!v4672) {
        v4672 = 0;
      }
      var d$$217 = v4672;
      return c$$284 + d$$217;
    }
    var b$$344 = this.options;
    if (!this._proportionallyResizeElements.length) {
      return;
    }
    var v4674 = this.helper;
    if (!v4674) {
      v4674 = this.element;
    }
    var c$$283 = v4674;
    var d$$216 = 0;
    var v4687 = d$$216 < this._proportionallyResizeElements.length;
    for (;v4687;) {
      var e$$209 = this._proportionallyResizeElements[d$$216];
      if (!this.borderDif) {
        var f$$81 = [JAM.call(e$$209.css, e$$209, ["borderTopWidth"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["borderRightWidth"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["borderBottomWidth"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["borderLeftWidth"], JAM.policy.p3)];
        var g$$120 = [JAM.call(e$$209.css, e$$209, ["paddingTop"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["paddingRight"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["paddingBottom"], JAM.policy.p3), JAM.call(e$$209.css, e$$209, ["paddingLeft"], JAM.policy.p3)];
        var v31089 = JAM.call(a$$434.map, a$$434, [f$$81, v1250], JAM.policy.p3);
        this.borderDif = v31089;
      }
      var v11531 = !a$$434.browser.msie;
      if (!v11531) {
        var v25283 = JAM.call(a$$434, null, [c$$283], JAM.policy.p3);
        var v17142 = !JAM.call(v25283.is, v25283, [":hidden"], JAM.policy.p3);
        if (v17142) {
          var v27130 = JAM.call(a$$434, null, [c$$283], JAM.policy.p3);
          v17142 = !JAM.call(v27130.parents, v27130, [":hidden"], JAM.policy.p3).length;
        }
        v11531 = v17142;
      }
      if (v11531) {
        var v17144 = JAM.call(c$$283.height, c$$283, [], JAM.policy.p3) - this.borderDif[0] - this.borderDif[2];
        if (!v17144) {
          v17144 = 0;
        }
        var v11532 = v17144;
        var v17145 = JAM.call(c$$283.width, c$$283, [], JAM.policy.p3) - this.borderDif[1] - this.borderDif[3];
        if (!v17145) {
          v17145 = 0;
        }
        JAM.call(e$$209.css, e$$209, [{height:v11532, width:v17145}], JAM.policy.p3);
      } else {
      }
      d$$216++;
      v4687 = d$$216 < this._proportionallyResizeElements.length;
    }
    return;
  }
  function v1249(a$$439, b$$343) {
    var c$$282 = this.helper;
    var e$$208 = this._vBoundaries;
    var v4688 = this._aspectRatio;
    if (!v4688) {
      v4688 = b$$343.shiftKey;
    }
    var f$$80 = v4688;
    var g$$119 = this.axis;
    var v11536 = d$$209(a$$439.width);
    if (v11536) {
      v11536 = e$$208.maxWidth;
    }
    var v4689 = v11536;
    if (v4689) {
      v4689 = e$$208.maxWidth < a$$439.width;
    }
    var h$$98 = v4689;
    var v11539 = d$$209(a$$439.height);
    if (v11539) {
      v11539 = e$$208.maxHeight;
    }
    var v4690 = v11539;
    if (v4690) {
      v4690 = e$$208.maxHeight < a$$439.height;
    }
    var i$$156 = v4690;
    var v11542 = d$$209(a$$439.width);
    if (v11542) {
      v11542 = e$$208.minWidth;
    }
    var v4691 = v11542;
    if (v4691) {
      v4691 = e$$208.minWidth > a$$439.width;
    }
    var j$$70 = v4691;
    var v11545 = d$$209(a$$439.height);
    if (v11545) {
      v11545 = e$$208.minHeight;
    }
    var v4692 = v11545;
    if (v4692) {
      v4692 = e$$208.minHeight > a$$439.height;
    }
    var k$$47 = v4692;
    if (j$$70) {
      a$$439.width = e$$208.minWidth;
    }
    if (k$$47) {
      a$$439.height = e$$208.minHeight;
    }
    if (h$$98) {
      a$$439.width = e$$208.maxWidth;
    }
    if (i$$156) {
      a$$439.height = e$$208.maxHeight;
    }
    var l$$57 = this.originalPosition.left + this.originalSize.width;
    var m$$31 = this.position.top + this.size.height;
    var n$$82 = JAM.call(/sw|nw|w/.test, /sw|nw|w/, [g$$119], JAM.policy.p3);
    var o$$18 = JAM.call(/nw|ne|n/.test, /nw|ne|n/, [g$$119], JAM.policy.p3);
    var v22620 = j$$70 && n$$82;
    if (v22620) {
      a$$439.left = l$$57 - e$$208.minWidth;
    }
    var v22621 = h$$98 && n$$82;
    if (v22621) {
      a$$439.left = l$$57 - e$$208.maxWidth;
    }
    var v17151 = k$$47 && o$$18;
    if (v17151) {
      a$$439.top = m$$31 - e$$208.minHeight;
    }
    var v11552 = i$$156 && o$$18;
    if (v11552) {
      a$$439.top = m$$31 - e$$208.maxHeight;
    }
    var v4697 = !a$$439.width;
    if (v4697) {
      v4697 = !a$$439.height;
    }
    var p$$39 = v4697;
    var v11555;
    var v25293 = p$$39;
    if (v25293) {
      v25293 = !a$$439.left;
    }
    var v22623 = v25293;
    if (v22623) {
      v22623 = a$$439.top;
    }
    if (v22623) {
      v11555 = a$$439.top = null;
    } else {
      var v25294 = p$$39;
      if (v25294) {
        v25294 = !a$$439.top;
      }
      var v22624 = v25294;
      if (v22624) {
        v22624 = a$$439.left;
      }
      var v17153 = v22624;
      if (v17153) {
        v17153 = a$$439.left = null;
      }
      v11555 = v17153;
    }
    v11555;
    return a$$439;
  }
  function v1248(a$$438, b$$342) {
    var c$$281 = this.options;
    var e$$207 = this.position;
    var f$$79 = this.size;
    var g$$118 = this.axis;
    var v22625;
    if (d$$209(a$$438.height)) {
      v22625 = a$$438.width = a$$438.height * this.aspectRatio;
    } else {
      var v25297 = d$$209(a$$438.width);
      if (v25297) {
        v25297 = a$$438.height = a$$438.width / this.aspectRatio;
      }
      v22625 = v25297;
    }
    v22625;
    var v22626 = g$$118 == "sw";
    if (v22626) {
      a$$438.left = e$$207.left + (f$$79.width - a$$438.width);
      a$$438.top = null;
    }
    var v17155 = g$$118 == "nw";
    if (v17155) {
      a$$438.top = e$$207.top + (f$$79.height - a$$438.height);
      a$$438.left = e$$207.left + (f$$79.width - a$$438.width);
    }
    return a$$438;
  }
  function v1247(a$$437) {
    var b$$341 = this.options;
    var v25303 = this.helper;
    var v31090 = JAM.call(v25303.offset, v25303, [], JAM.policy.p3);
    this.offset = v31090;
    var v25304 = d$$209(a$$437.left);
    if (v25304) {
      this.position.left = a$$437.left;
    }
    var v22627 = d$$209(a$$437.top);
    if (v22627) {
      this.position.top = a$$437.top;
    }
    var v17156 = d$$209(a$$437.height);
    if (v17156) {
      this.size.height = a$$437.height;
    }
    var v11556 = d$$209(a$$437.width);
    if (v11556) {
      this.size.width = a$$437.width;
    }
    return;
  }
  function v1246(a$$436) {
    var b$$340 = this.options;
    var c$$280;
    var e$$206;
    var f$$78;
    var g$$117;
    var h$$97;
    var v11557;
    if (d$$209(b$$340.minWidth)) {
      v11557 = b$$340.minWidth;
    } else {
      v11557 = 0;
    }
    var v4698 = v11557;
    var v11558;
    if (d$$209(b$$340.maxWidth)) {
      v11558 = b$$340.maxWidth;
    } else {
      v11558 = Infinity;
    }
    var v4699 = v11558;
    var v11559;
    if (d$$209(b$$340.minHeight)) {
      v11559 = b$$340.minHeight;
    } else {
      v11559 = 0;
    }
    var v4700 = v11559;
    var v11560;
    if (d$$209(b$$340.maxHeight)) {
      v11560 = b$$340.maxHeight;
    } else {
      v11560 = Infinity;
    }
    h$$97 = {minWidth:v4698, maxWidth:v4699, minHeight:v4700, maxHeight:v11560};
    var v11561 = this._aspectRatio;
    if (!v11561) {
      v11561 = a$$436;
    }
    if (v11561) {
      c$$280 = h$$97.minHeight * this.aspectRatio;
      f$$78 = h$$97.minWidth / this.aspectRatio;
      e$$206 = h$$97.maxHeight * this.aspectRatio;
      g$$117 = h$$97.maxWidth / this.aspectRatio;
      var v25307 = c$$280 > h$$97.minWidth;
      if (v25307) {
        h$$97.minWidth = c$$280;
      }
      var v22634 = f$$78 > h$$97.minHeight;
      if (v22634) {
        h$$97.minHeight = f$$78;
      }
      var v17164 = e$$206 < h$$97.maxWidth;
      if (v17164) {
        h$$97.maxWidth = e$$206;
      }
      var v11562 = g$$117 < h$$97.maxHeight;
      if (v11562) {
        h$$97.maxHeight = g$$117;
      }
    }
    this._vBoundaries = h$$97;
    return;
  }
  function v1245(b$$339) {
    this.resizing = !1;
    var c$$279 = this.options;
    var d$$215 = this;
    if (this._helper) {
      var e$$205 = this._proportionallyResizeElements;
      var v4703 = e$$205.length;
      if (v4703) {
        v4703 = JAM.call(/textarea/i.test, /textarea/i, [e$$205[0].nodeName], JAM.policy.p3);
      }
      var f$$77 = v4703;
      var v4704;
      var v17167 = f$$77;
      if (v17167) {
        var v22636 = a$$434.ui;
        v17167 = JAM.call(v22636.hasScroll, v22636, [e$$205[0], "left"], JAM.policy.p3);
      }
      if (v17167) {
        v4704 = 0;
      } else {
        v4704 = d$$215.sizeDiff.height;
      }
      var g$$116 = v4704;
      var v4705;
      if (f$$77) {
        v4705 = 0;
      } else {
        v4705 = d$$215.sizeDiff.width;
      }
      var h$$96 = v4705;
      var v17168 = d$$215.helper;
      var v4706 = JAM.call(v17168.width, v17168, [], JAM.policy.p3) - h$$96;
      var v17169 = d$$215.helper;
      var i$$155 = {width:v4706, height:JAM.call(v17169.height, v17169, [], JAM.policy.p3) - g$$116};
      var v22638 = d$$215.element;
      var v4708 = parseInt(JAM.call(v22638.css, v22638, ["left"], JAM.policy.p3), 10) + (d$$215.position.left - d$$215.originalPosition.left);
      if (!v4708) {
        v4708 = null;
      }
      var j$$69 = v4708;
      var v22641 = d$$215.element;
      var v4709 = parseInt(JAM.call(v22641.css, v22641, ["top"], JAM.policy.p3), 10) + (d$$215.position.top - d$$215.originalPosition.top);
      if (!v4709) {
        v4709 = null;
      }
      var k$$46 = v4709;
      var v22644 = c$$279.animate;
      if (!v22644) {
        var v25309 = this.element;
        JAM.call(v25309.css, v25309, [JAM.call(a$$434.extend, a$$434, [i$$155, {top:k$$46, left:j$$69}], JAM.policy.p3)], JAM.policy.p3);
      }
      var v22645 = d$$215.helper;
      JAM.call(v22645.height, v22645, [d$$215.size.height], JAM.policy.p3);
      var v17176 = d$$215.helper;
      JAM.call(v17176.width, v17176, [d$$215.size.width], JAM.policy.p3);
      var v17178 = this._helper;
      if (v17178) {
        v17178 = !c$$279.animate;
      }
      var v11575 = v17178;
      if (v11575) {
        JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
      }
    }
    var v25313 = JAM.call(a$$434, null, ["body"], JAM.policy.p3);
    JAM.call(v25313.css, v25313, ["cursor", "auto"], JAM.policy.p3);
    var v25314 = this.element;
    JAM.call(v25314.removeClass, v25314, ["ui-resizable-resizing"], JAM.policy.p3);
    JAM.call(this._propagate, this, ["stop", b$$339], JAM.policy.p3);
    var v17179 = this._helper;
    if (v17179) {
      var v22649 = this.helper;
      JAM.call(v22649.remove, v22649, [], JAM.policy.p3);
    }
    return !1;
  }
  function v1244(b$$338) {
    var c$$278 = this.helper;
    var d$$214 = this.options;
    var f$$76 = this;
    var g$$115 = this.originalMousePosition;
    var h$$95 = this.axis;
    var v4711 = b$$338.pageX - g$$115.left;
    if (!v4711) {
      v4711 = 0;
    }
    var i$$154 = v4711;
    var v4712 = b$$338.pageY - g$$115.top;
    if (!v4712) {
      v4712 = 0;
    }
    var j$$68 = v4712;
    var k$$45 = this._change[h$$95];
    if (!k$$45) {
      return !1;
    }
    var l$$56 = JAM.call(k$$45.apply, k$$45, [this, [b$$338, i$$154, j$$68]], JAM.policy.p3);
    var v4716 = a$$434.browser.msie;
    if (v4716) {
      v4716 = a$$434.browser.version < 7;
    }
    var m$$30 = v4716;
    var n$$81 = this.sizeDiff;
    JAM.call(this._updateVirtualBoundaries, this, [b$$338.shiftKey], JAM.policy.p3);
    var v11584 = this._aspectRatio;
    if (!v11584) {
      v11584 = b$$338.shiftKey;
    }
    if (v11584) {
      l$$56 = JAM.call(this._updateRatio, this, [l$$56, b$$338], JAM.policy.p3);
    }
    l$$56 = JAM.call(this._respectSize, this, [l$$56, b$$338], JAM.policy.p3);
    JAM.call(this._propagate, this, ["resize", b$$338], JAM.policy.p3);
    JAM.call(c$$278.css, c$$278, [{top:this.position.top + "px", left:this.position.left + "px", width:this.size.width + "px", height:this.size.height + "px"}], JAM.policy.p3);
    var v27152 = !this._helper;
    if (v27152) {
      v27152 = this._proportionallyResizeElements.length;
    }
    var v25315 = v27152;
    if (v25315) {
      JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
    }
    JAM.call(this._updateCache, this, [l$$56], JAM.policy.p3);
    JAM.call(this._trigger, this, ["resize", b$$338, JAM.call(this.ui, this, [], JAM.policy.p3)], JAM.policy.p3);
    return !1;
  }
  function v1243(b$$337) {
    var d$$213 = this.options;
    var v4719 = this.element;
    var e$$203 = JAM.call(v4719.position, v4719, [], JAM.policy.p3);
    var f$$75 = this.element;
    this.resizing = !0;
    var v25316 = JAM.call(a$$434, null, [document], JAM.policy.p3);
    var v22650 = JAM.call(v25316.scrollTop, v25316, [], JAM.policy.p3);
    var v25317 = JAM.call(a$$434, null, [document], JAM.policy.p3);
    this.documentScroll = {top:v22650, left:JAM.call(v25317.scrollLeft, v25317, [], JAM.policy.p3)};
    var v22652 = JAM.call(f$$75.is, f$$75, [".ui-draggable"], JAM.policy.p3);
    if (!v22652) {
      v22652 = JAM.call(/absolute/.test, /absolute/, [JAM.call(f$$75.css, f$$75, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v17183 = v22652;
    if (v17183) {
      JAM.call(f$$75.css, f$$75, [{position:"absolute", top:e$$203.top, left:e$$203.left}], JAM.policy.p3);
    }
    JAM.call(this._renderProxy, this, [], JAM.policy.p3);
    var v11585 = this.helper;
    var g$$114 = c$$273(JAM.call(v11585.css, v11585, ["left"], JAM.policy.p3));
    var v11586 = this.helper;
    var h$$94 = c$$273(JAM.call(v11586.css, v11586, ["top"], JAM.policy.p3));
    var v29578 = d$$213.containment;
    if (v29578) {
      var v30597 = JAM.call(a$$434, null, [d$$213.containment], JAM.policy.p3);
      var v30470 = JAM.call(v30597.scrollLeft, v30597, [], JAM.policy.p3);
      if (!v30470) {
        v30470 = 0;
      }
      g$$114 = g$$114 + v30470;
      var v30599 = JAM.call(a$$434, null, [d$$213.containment], JAM.policy.p3);
      var v30471 = JAM.call(v30599.scrollTop, v30599, [], JAM.policy.p3);
      if (!v30471) {
        v30471 = 0;
      }
      h$$94 = h$$94 + v30471;
    }
    var v29579 = this.helper;
    var v31091 = JAM.call(v29579.offset, v29579, [], JAM.policy.p3);
    this.offset = v31091;
    this.position = {left:g$$114, top:h$$94};
    var v28332;
    if (this._helper) {
      v28332 = {width:JAM.call(f$$75.outerWidth, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.outerHeight, f$$75, [], JAM.policy.p3)};
    } else {
      v28332 = {width:JAM.call(f$$75.width, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.height, f$$75, [], JAM.policy.p3)};
    }
    this.size = v28332;
    var v27153;
    if (this._helper) {
      v27153 = {width:JAM.call(f$$75.outerWidth, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.outerHeight, f$$75, [], JAM.policy.p3)};
    } else {
      v27153 = {width:JAM.call(f$$75.width, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.height, f$$75, [], JAM.policy.p3)};
    }
    this.originalSize = v27153;
    this.originalPosition = {left:g$$114, top:h$$94};
    this.sizeDiff = {width:JAM.call(f$$75.outerWidth, f$$75, [], JAM.policy.p3) - JAM.call(f$$75.width, f$$75, [], JAM.policy.p3), height:JAM.call(f$$75.outerHeight, f$$75, [], JAM.policy.p3) - JAM.call(f$$75.height, f$$75, [], JAM.policy.p3)};
    this.originalMousePosition = {left:b$$337.pageX, top:b$$337.pageY};
    var v11587;
    if (typeof d$$213.aspectRatio == "number") {
      v11587 = d$$213.aspectRatio;
    } else {
      var v17186 = this.originalSize.width / this.originalSize.height;
      if (!v17186) {
        v17186 = 1;
      }
      v11587 = v17186;
    }
    this.aspectRatio = v11587;
    var v4722 = JAM.call(a$$434, null, [".ui-resizable-" + this.axis], JAM.policy.p3);
    var i$$153 = JAM.call(v4722.css, v4722, ["cursor"], JAM.policy.p3);
    var v22660 = JAM.call(a$$434, null, ["body"], JAM.policy.p3);
    var v25329;
    if (i$$153 == "auto") {
      v25329 = this.axis + "-resize";
    } else {
      v25329 = i$$153;
    }
    JAM.call(v22660.css, v22660, ["cursor", v25329], JAM.policy.p3);
    JAM.call(f$$75.addClass, f$$75, ["ui-resizable-resizing"], JAM.policy.p3);
    JAM.call(this._propagate, this, ["start", b$$337], JAM.policy.p3);
    return !0;
  }
  function v1242(b$$336) {
    var c$$277 = !1;
    var d$$212;
    for (d$$212 in this.handles) {
      var v4723 = JAM.call(a$$434, null, [this.handles[d$$212]], JAM.policy.p3)[0] == b$$336.target;
      if (v4723) {
        c$$277 = !0;
      }
    }
    var v4725 = !this.options.disabled;
    if (v4725) {
      v4725 = c$$277;
    }
    return v4725;
  }
  function v1241() {
    function b$$334(b$$335) {
      var v25331 = JAM.call(a$$434, null, [b$$335], JAM.policy.p3);
      var v22663 = JAM.call(v25331.removeClass, v25331, ["ui-resizable ui-resizable-disabled ui-resizable-resizing"], JAM.policy.p3);
      var v17191 = JAM.call(v22663.removeData, v22663, ["resizable"], JAM.policy.p3);
      var v11592 = JAM.call(v17191.unbind, v17191, [".resizable"], JAM.policy.p3);
      var v4726 = JAM.call(v11592.find, v11592, [".ui-resizable-handle"], JAM.policy.p3);
      JAM.call(v4726.remove, v4726, [], JAM.policy.p3);
      return;
    }
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    if (this.elementIsWrapper) {
      b$$334(this.element);
      var c$$276 = this.element;
      var v17192 = this.originalElement;
      var v4728 = JAM.call(c$$276.after, c$$276, [JAM.call(v17192.css, v17192, [{position:JAM.call(c$$276.css, c$$276, ["position"], JAM.policy.p3), width:JAM.call(c$$276.outerWidth, c$$276, [], JAM.policy.p3), height:JAM.call(c$$276.outerHeight, c$$276, [], JAM.policy.p3), top:JAM.call(c$$276.css, c$$276, ["top"], JAM.policy.p3), left:JAM.call(c$$276.css, c$$276, ["left"], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v4728.remove, v4728, [], JAM.policy.p3);
    }
    var v17194 = this.originalElement;
    JAM.call(v17194.css, v17194, ["resize", this.originalResizeStyle], JAM.policy.p3);
    b$$334(this.originalElement);
    return this;
  }
  function v1240() {
    function v1239() {
      if (c$$274.disabled) {
        return;
      }
      var v4731 = b$$332.resizing;
      if (!v4731) {
        var v17197 = JAM.call(a$$434, null, [this], JAM.policy.p3);
        JAM.call(v17197.addClass, v17197, ["ui-resizable-autohide"], JAM.policy.p3);
        var v17198 = b$$332._handles;
        JAM.call(v17198.hide, v17198, [], JAM.policy.p3);
      }
      return;
    }
    function v1238() {
      if (c$$274.disabled) {
        return;
      }
      var v11595 = JAM.call(a$$434, null, [this], JAM.policy.p3);
      JAM.call(v11595.removeClass, v11595, ["ui-resizable-autohide"], JAM.policy.p3);
      var v11596 = b$$332._handles;
      JAM.call(v11596.show, v11596, [], JAM.policy.p3);
      return;
    }
    function v1237() {
      if (!b$$332.resizing) {
        if (this.className) {
          var v4733 = this.className;
          var a$$435 = JAM.call(v4733.match, v4733, [/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i], JAM.policy.p3);
        }
        var v4735;
        var v17199 = a$$435;
        if (v17199) {
          v17199 = a$$435[1];
        }
        if (v17199) {
          v4735 = a$$435[1];
        } else {
          v4735 = "se";
        }
        b$$332.axis = v4735;
      }
      return;
    }
    function v1236(b$$333) {
      var v4737 = b$$333;
      if (!v4737) {
        v4737 = this.element;
      }
      b$$333 = v4737;
      var c$$275;
      for (c$$275 in this.handles) {
        var v4738 = this.handles[c$$275].constructor == String;
        if (v4738) {
          var v11601 = this.handles;
          var v17201 = JAM.call(a$$434, null, [this.handles[c$$275], this.element], JAM.policy.p3);
          var v31092 = JAM.call(v17201.show, v17201, [], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            v11601[c$$275] = v31092;
          }
        }
        var v11602 = this.elementIsWrapper;
        if (v11602) {
          var v17202 = this.originalElement[0].nodeName;
          v11602 = JAM.call(v17202.match, v17202, [/textarea|input|select|button/i], JAM.policy.p3);
        }
        if (v11602) {
          var d$$211 = JAM.call(a$$434, null, [this.handles[c$$275], this.element], JAM.policy.p3);
          var e$$202 = 0;
          var v4741;
          if (JAM.call(/sw|ne|nw|se|n|s/.test, /sw|ne|nw|se|n|s/, [c$$275], JAM.policy.p3)) {
            v4741 = JAM.call(d$$211.outerHeight, d$$211, [], JAM.policy.p3);
          } else {
            v4741 = JAM.call(d$$211.outerWidth, d$$211, [], JAM.policy.p3);
          }
          e$$202 = v4741;
          var v17203;
          if (JAM.call(/ne|nw|n/.test, /ne|nw|n/, [c$$275], JAM.policy.p3)) {
            v17203 = "Top";
          } else {
            var v22673;
            if (JAM.call(/se|sw|s/.test, /se|sw|s/, [c$$275], JAM.policy.p3)) {
              v22673 = "Bottom";
            } else {
              var v25334;
              if (JAM.call(/^e$/.test, /^e$/, [c$$275], JAM.policy.p3)) {
                v25334 = "Right";
              } else {
                v25334 = "Left";
              }
              v22673 = v25334;
            }
            v17203 = v22673;
          }
          var v4742 = ["padding", v17203];
          var f$$74 = JAM.call(v4742.join, v4742, [""], JAM.policy.p3);
          JAM.call(b$$333.css, b$$333, [f$$74, e$$202], JAM.policy.p3);
          JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
        }
        if (!JAM.call(a$$434, null, [this.handles[c$$275]], JAM.policy.p3).length) {
        }
      }
      return;
    }
    var b$$332 = this;
    var c$$274 = this.options;
    var v22676 = this.element;
    JAM.call(v22676.addClass, v22676, ["ui-resizable"], JAM.policy.p3);
    var v25337 = !!c$$274.aspectRatio;
    var v25338 = c$$274.aspectRatio;
    var v25339 = this.element;
    var v27158;
    var v29580 = c$$274.helper;
    if (!v29580) {
      v29580 = c$$274.ghost;
    }
    var v29092 = v29580;
    if (!v29092) {
      v29092 = c$$274.animate;
    }
    if (v29092) {
      var v28339 = c$$274.helper;
      if (!v28339) {
        v28339 = "ui-resizable-helper";
      }
      v27158 = v28339;
    } else {
      v27158 = null;
    }
    JAM.call(a$$434.extend, a$$434, [this, {_aspectRatio:v25337, aspectRatio:v25338, originalElement:v25339, _proportionallyResizeElements:[], _helper:v27158}], JAM.policy.p3);
    var v22678 = this.element[0].nodeName;
    var v17205 = JAM.call(v22678.match, v22678, [/canvas|textarea|input|select|button|img/i], JAM.policy.p3);
    if (v17205) {
      var v30472 = this.element;
      var v30601 = JAM.call(a$$434, null, ['<div class="ui-wrapper" style="overflow: hidden;"></div>'], JAM.policy.p3);
      var v30729 = this.element;
      var v30679 = JAM.call(v30729.css, v30729, ["position"], JAM.policy.p3);
      var v30730 = this.element;
      var v30680 = JAM.call(v30730.outerWidth, v30730, [], JAM.policy.p3);
      var v30731 = this.element;
      var v30681 = JAM.call(v30731.outerHeight, v30731, [], JAM.policy.p3);
      var v30732 = this.element;
      var v30682 = JAM.call(v30732.css, v30732, ["top"], JAM.policy.p3);
      var v30733 = this.element;
      JAM.call(v30472.wrap, v30472, [JAM.call(v30601.css, v30601, [{position:v30679, width:v30680, height:v30681, top:v30682, left:JAM.call(v30733.css, v30733, ["left"], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
      var v30603 = this.element;
      var v30474 = JAM.call(v30603.parent, v30603, [], JAM.policy.p3);
      var v30604 = this.element;
      var v31093 = JAM.call(v30474.data, v30474, ["resizable", JAM.call(v30604.data, v30604, ["resizable"], JAM.policy.p3)], JAM.policy.p3);
      this.element = v31093;
      this.elementIsWrapper = !0;
      var v30141 = this.element;
      var v30476 = this.originalElement;
      var v30336 = JAM.call(v30476.css, v30476, ["marginLeft"], JAM.policy.p3);
      var v30477 = this.originalElement;
      var v30337 = JAM.call(v30477.css, v30477, ["marginTop"], JAM.policy.p3);
      var v30478 = this.originalElement;
      var v30338 = JAM.call(v30478.css, v30478, ["marginRight"], JAM.policy.p3);
      var v30479 = this.originalElement;
      JAM.call(v30141.css, v30141, [{marginLeft:v30336, marginTop:v30337, marginRight:v30338, marginBottom:JAM.call(v30479.css, v30479, ["marginBottom"], JAM.policy.p3)}], JAM.policy.p3);
      var v29893 = this.originalElement;
      JAM.call(v29893.css, v29893, [{marginLeft:0, marginTop:0, marginRight:0, marginBottom:0}], JAM.policy.p3);
      var v29582 = this.originalElement;
      var v31094 = JAM.call(v29582.css, v29582, ["resize"], JAM.policy.p3);
      this.originalResizeStyle = v31094;
      var v29094 = this.originalElement;
      JAM.call(v29094.css, v29094, ["resize", "none"], JAM.policy.p3);
      var v28341 = this._proportionallyResizeElements;
      var v29095 = this.originalElement;
      JAM.call(v28341.push, v28341, [JAM.call(v29095.css, v29095, [{position:"static", zoom:1, display:"block"}], JAM.policy.p3)], JAM.policy.p3);
      var v27160 = this.originalElement;
      var v29097 = this.originalElement;
      JAM.call(v27160.css, v27160, [{margin:JAM.call(v29097.css, v29097, ["margin"], JAM.policy.p3)}], JAM.policy.p3);
      JAM.call(this._proportionallyResize, this, [], JAM.policy.p3);
    }
    var v11607 = c$$274.handles;
    if (!v11607) {
      var v17206;
      if (JAM.call(a$$434, null, [".ui-resizable-handle", this.element], JAM.policy.p3).length) {
        v17206 = {n:".ui-resizable-n", e:".ui-resizable-e", s:".ui-resizable-s", w:".ui-resizable-w", se:".ui-resizable-se", sw:".ui-resizable-sw", ne:".ui-resizable-ne", nw:".ui-resizable-nw"};
      } else {
        v17206 = "e,s,se";
      }
      v11607 = v17206;
    }
    this.handles = v11607;
    if (this.handles.constructor == String) {
      var v4746 = this.handles == "all";
      if (v4746) {
        this.handles = "n,e,s,w,se,sw,ne,nw";
      }
      var v4747 = this.handles;
      var d$$210 = JAM.call(v4747.split, v4747, [","], JAM.policy.p3);
      this.handles = {};
      var e$$201 = 0;
      var v4750 = e$$201 < d$$210.length;
      for (;v4750;) {
        var f$$73 = JAM.call(a$$434.trim, a$$434, [d$$210[e$$201]], JAM.policy.p3);
        var g$$113 = "ui-resizable-" + f$$73;
        var h$$93 = JAM.call(a$$434, null, ['<div class="ui-resizable-handle ' + g$$113 + '"></div>'], JAM.policy.p3);
        JAM.call(h$$93.css, h$$93, [{zIndex:c$$274.zIndex}], JAM.policy.p3);
        var v22681 = "se" == f$$73;
        if (v22681) {
          JAM.call(h$$93.addClass, h$$93, ["ui-icon ui-icon-gripsmall-diagonal-se"], JAM.policy.p3);
        }
        var v17209 = this.handles;
        introspect(JAM.policy.p2) {
          v17209[f$$73] = ".ui-resizable-" + f$$73;
        }
        var v11612 = this.element;
        JAM.call(v11612.append, v11612, [h$$93], JAM.policy.p3);
        e$$201++;
        v4750 = e$$201 < d$$210.length;
      }
    }
    this._renderAxis = v1236;
    JAM.call(this._renderAxis, this, [this.element], JAM.policy.p3);
    var v25344 = JAM.call(a$$434, null, [".ui-resizable-handle", this.element], JAM.policy.p3);
    var v31095 = JAM.call(v25344.disableSelection, v25344, [], JAM.policy.p3);
    this._handles = v31095;
    var v22682 = this._handles;
    JAM.call(v22682.mouseover, v22682, [v1237], JAM.policy.p3);
    var v17210 = c$$274.autoHide;
    if (v17210) {
      var v25345 = this._handles;
      JAM.call(v25345.hide, v25345, [], JAM.policy.p3);
      var v27165 = JAM.call(a$$434, null, [this.element], JAM.policy.p3);
      var v25346 = JAM.call(v27165.addClass, v27165, ["ui-resizable-autohide"], JAM.policy.p3);
      JAM.call(v25346.hover, v25346, [v1238, v1239], JAM.policy.p3);
    }
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    return;
  }
  function d$$209(a$$450) {
    return !isNaN(parseInt(a$$450, 10));
  }
  function c$$273(a$$449) {
    var v4753 = parseInt(a$$449, 10);
    if (!v4753) {
      v4753 = 0;
    }
    return v4753;
  }
  JAM.call(a$$434.widget, a$$434, ["ui.resizable", a$$434.ui.mouse, {widgetEventPrefix:"resize", options:{alsoResize:!1, animate:!1, animateDuration:"slow", animateEasing:"swing", aspectRatio:!1, autoHide:!1, containment:!1, ghost:!1, grid:!1, handles:"e,s,se", helper:!1, maxHeight:null, maxWidth:null, minHeight:10, minWidth:10, zIndex:1E3}, _create:v1240, destroy:v1241, _mouseCapture:v1242, _mouseStart:v1243, _mouseDrag:v1244, _mouseStop:v1245, _updateVirtualBoundaries:v1246, _updateCache:v1247, 
  _updateRatio:v1248, _respectSize:v1249, _proportionallyResize:v1251, _renderProxy:v1252, _change:{e:v1253, w:v1254, n:v1255, s:v1256, se:v1257, sw:v1258, ne:v1259, nw:v1260}, _propagate:v1261, plugins:{}, ui:v1262}], JAM.policy.p3);
  JAM.call(a$$434.extend, a$$434, [a$$434.ui.resizable, {version:"1.8.24"}], JAM.policy.p3);
  var v27166 = a$$434.ui.plugin;
  JAM.call(v27166.add, v27166, ["resizable", "alsoResize", {start:v1265, resize:v1269, stop:v1270}], JAM.policy.p3);
  var v25347 = a$$434.ui.plugin;
  JAM.call(v25347.add, v25347, ["resizable", "animate", {stop:v1272}], JAM.policy.p3);
  var v22683 = a$$434.ui.plugin;
  JAM.call(v22683.add, v22683, ["resizable", "containment", {start:v1274, resize:v1275, stop:v1276}], JAM.policy.p3);
  var v17211 = a$$434.ui.plugin;
  JAM.call(v17211.add, v17211, ["resizable", "ghost", {start:v1277, resize:v1278, stop:v1279}], JAM.policy.p3);
  var v11616 = a$$434.ui.plugin;
  JAM.call(v11616.add, v11616, ["resizable", "grid", {resize:v1280}], JAM.policy.p3);
  return;
}
function v1235(a$$430, b$$315) {
  function v1234(b$$330, c$$272) {
    var v17214 = b$$330.element;
    var v11618 = JAM.call(v17214.parents, v17214, [":not(body,html)"], JAM.policy.p3);
    JAM.call(v11618.unbind, v11618, ["scroll.droppable"], JAM.policy.p3);
    var v11619 = b$$330.options.refreshPositions;
    if (!v11619) {
      var v17216 = a$$430.ui.ddmanager;
      JAM.call(v17216.prepareOffsets, v17216, [b$$330, c$$272], JAM.policy.p3);
    }
    return;
  }
  function v1233(b$$329, c$$271) {
    function v1232() {
      function v1231() {
        return JAM.call(a$$430.data, a$$430, [this, "droppable"], JAM.policy.p3).options.scope === g$$112;
      }
      var v17219 = this.options.disabled;
      if (!v17219) {
        v17219 = this.greedyChild;
      }
      var v11621 = v17219;
      if (!v11621) {
        v11621 = !this.visible;
      }
      if (v11621) {
        return;
      }
      var v4756 = a$$430.ui;
      var d$$208 = JAM.call(v4756.intersect, v4756, [b$$329, this, this.options.tolerance], JAM.policy.p3);
      var v4758;
      var v17222 = !d$$208;
      if (v17222) {
        v17222 = this.isover == 1;
      }
      if (v17222) {
        v4758 = "isout";
      } else {
        var v11623;
        var v22690 = d$$208;
        if (v22690) {
          v22690 = this.isover == 0;
        }
        if (v22690) {
          v11623 = "isover";
        } else {
          v11623 = null;
        }
        v4758 = v11623;
      }
      var e$$200 = v4758;
      if (!e$$200) {
        return;
      }
      var f$$72;
      if (this.options.greedy) {
        var g$$112 = this.options.scope;
        var v11626 = this.element;
        var v4761 = JAM.call(v11626.parents, v11626, [":data(droppable)"], JAM.policy.p3);
        var h$$92 = JAM.call(v4761.filter, v4761, [v1231], JAM.policy.p3);
        var v4762 = h$$92.length;
        if (v4762) {
          f$$72 = JAM.call(a$$430.data, a$$430, [h$$92[0], "droppable"], JAM.policy.p3);
          var v17225;
          if (e$$200 == "isover") {
            v17225 = 1;
          } else {
            v17225 = 0;
          }
          f$$72.greedyChild = v17225;
        }
      }
      var v27169 = f$$72;
      if (v27169) {
        v27169 = e$$200 == "isover";
      }
      var v25351 = v27169;
      if (v25351) {
        f$$72.isover = 0;
        f$$72.isout = 1;
        var v28350 = f$$72._out;
        JAM.call(v28350.call, v28350, [f$$72, c$$271], JAM.policy.p3);
      }
      introspect(JAM.policy.p2) {
        this[e$$200] = 1;
      }
      var v25352;
      if (e$$200 == "isout") {
        v25352 = "isover";
      } else {
        v25352 = "isout";
      }
      var v22692 = v25352;
      introspect(JAM.policy.p2) {
        this[v22692] = 0;
      }
      var v25353;
      if (e$$200 == "isover") {
        v25353 = "_over";
      } else {
        v25353 = "_out";
      }
      var v17226 = this[v25353];
      JAM.call(v17226.call, v17226, [this, c$$271], JAM.policy.p3);
      var v17227 = f$$72;
      if (v17227) {
        v17227 = e$$200 == "isout";
      }
      var v11627 = v17227;
      if (v11627) {
        f$$72.isout = 0;
        f$$72.isover = 1;
        var v22694 = f$$72._over;
        JAM.call(v22694.call, v22694, [f$$72, c$$271], JAM.policy.p3);
      }
      return;
    }
    var v11628 = b$$329.options.refreshPositions;
    if (v11628) {
      var v17229 = a$$430.ui.ddmanager;
      JAM.call(v17229.prepareOffsets, v17229, [b$$329, c$$271], JAM.policy.p3);
    }
    var v17230 = a$$430.ui.ddmanager.droppables[b$$329.options.scope];
    if (!v17230) {
      v17230 = [];
    }
    JAM.call(a$$430.each, a$$430, [v17230, v1232], JAM.policy.p3);
    return;
  }
  function v1230(b$$328, c$$270) {
    function v1229() {
      var v4764 = b$$328.options.refreshPositions;
      if (!v4764) {
        var v11631 = a$$430.ui.ddmanager;
        JAM.call(v11631.prepareOffsets, v11631, [b$$328, c$$270], JAM.policy.p3);
      }
      return;
    }
    var v11633 = b$$328.element;
    var v4765 = JAM.call(v11633.parents, v11633, [":not(body,html)"], JAM.policy.p3);
    JAM.call(v4765.bind, v4765, ["scroll.droppable", v1229], JAM.policy.p3);
    return;
  }
  function v1228(b$$327, c$$269) {
    function v1227() {
      if (!this.options) {
        return;
      }
      var v22699 = !this.options.disabled;
      if (v22699) {
        v22699 = this.visible;
      }
      var v17232 = v22699;
      if (v17232) {
        var v22700 = a$$430.ui;
        v17232 = JAM.call(v22700.intersect, v22700, [b$$327, this, this.options.tolerance], JAM.policy.p3);
      }
      var v11635 = v17232;
      if (v11635) {
        var v22702 = this._drop;
        var v17233 = JAM.call(v22702.call, v22702, [this, c$$269], JAM.policy.p3);
        if (!v17233) {
          v17233 = d$$207;
        }
        d$$207 = v17233;
      }
      var v22704 = !this.options.disabled;
      if (v22704) {
        v22704 = this.visible;
      }
      var v17234 = v22704;
      if (v17234) {
        var v22705 = this.accept;
        var v22706 = this.element[0];
        var v25360 = b$$327.currentItem;
        if (!v25360) {
          v25360 = b$$327.element;
        }
        v17234 = JAM.call(v22705.call, v22705, [v22706, v25360], JAM.policy.p3);
      }
      var v11636 = v17234;
      if (v11636) {
        this.isout = 1;
        this.isover = 0;
        var v22708 = this._deactivate;
        JAM.call(v22708.call, v22708, [this, c$$269], JAM.policy.p3);
      }
      return;
    }
    var d$$207 = !1;
    var v17235 = a$$430.ui.ddmanager.droppables[b$$327.options.scope];
    if (!v17235) {
      v17235 = [];
    }
    JAM.call(a$$430.each, a$$430, [v17235, v1227], JAM.policy.p3);
    return d$$207;
  }
  function v1226(b$$326, c$$268) {
    var v4767 = a$$430.ui.ddmanager.droppables[b$$326.options.scope];
    if (!v4767) {
      v4767 = [];
    }
    var d$$206 = v4767;
    var v4768;
    if (c$$268) {
      v4768 = c$$268.type;
    } else {
      v4768 = null;
    }
    var e$$199 = v4768;
    var v17238 = b$$326.currentItem;
    if (!v17238) {
      v17238 = b$$326.element;
    }
    var v11641 = v17238;
    var v4769 = JAM.call(v11641.find, v11641, [":data(droppable)"], JAM.policy.p3);
    var f$$71 = JAM.call(v4769.andSelf, v4769, [], JAM.policy.p3);
    var h$$91 = 0;
    var v4776 = h$$91 < d$$206.length;
    g: for (;v4776;) {
      var v11643 = d$$206[h$$91].options.disabled;
      if (!v11643) {
        var v17240 = b$$326;
        if (v17240) {
          var v25363 = d$$206[h$$91].accept;
          var v25364 = d$$206[h$$91].element[0];
          var v27179 = b$$326.currentItem;
          if (!v27179) {
            v27179 = b$$326.element;
          }
          v17240 = !JAM.call(v25363.call, v25363, [v25364, v27179], JAM.policy.p3);
        }
        v11643 = v17240;
      }
      if (v11643) {
        h$$91++;
        v4776 = h$$91 < d$$206.length;
        continue;
      }
      var i$$152 = 0;
      var v4773 = i$$152 < f$$71.length;
      for (;v4773;) {
        if (f$$71[i$$152] == d$$206[h$$91].element[0]) {
          d$$206[h$$91].proportions.height = 0;
          i$$152++;
          v4773 = i$$152 < f$$71.length;
          h$$91++;
          v4776 = h$$91 < d$$206.length;
          continue g;
        }
        i$$152++;
        v4773 = i$$152 < f$$71.length;
      }
      var v4774 = d$$206[h$$91];
      var v17243 = d$$206[h$$91].element;
      v4774.visible = JAM.call(v17243.css, v17243, ["display"], JAM.policy.p3) != "none";
      if (!d$$206[h$$91].visible) {
        h$$91++;
        v4776 = h$$91 < d$$206.length;
        continue;
      }
      var v17245 = e$$199 == "mousedown";
      if (v17245) {
        var v22718 = d$$206[h$$91]._activate;
        JAM.call(v22718.call, v22718, [d$$206[h$$91], c$$268], JAM.policy.p3);
      }
      var v17246 = d$$206[h$$91];
      var v22720 = d$$206[h$$91].element;
      var v31096 = JAM.call(v22720.offset, v22720, [], JAM.policy.p3);
      v17246.offset = v31096;
      d$$206[h$$91].proportions = {width:d$$206[h$$91].element[0].offsetWidth, height:d$$206[h$$91].element[0].offsetHeight};
      h$$91++;
      v4776 = h$$91 < d$$206.length;
    }
    return;
  }
  function v1225(b$$325, c$$267, d$$205) {
    if (!c$$267.offset) {
      return !1;
    }
    var v11658 = b$$325.positionAbs;
    if (!v11658) {
      v11658 = b$$325.position.absolute;
    }
    var e$$198 = v11658.left;
    var f$$70 = e$$198 + b$$325.helperProportions.width;
    var v11660 = b$$325.positionAbs;
    if (!v11660) {
      v11660 = b$$325.position.absolute;
    }
    var g$$111 = v11660.top;
    var h$$90 = g$$111 + b$$325.helperProportions.height;
    var i$$151 = c$$267.offset.left;
    var j$$67 = i$$151 + c$$267.proportions.width;
    var k$$44 = c$$267.offset.top;
    var l$$55 = k$$44 + c$$267.proportions.height;
    switch(d$$205) {
      case "fit":
        var v17253 = i$$151 <= e$$198;
        if (v17253) {
          v17253 = f$$70 <= j$$67;
        }
        var v11664 = v17253;
        if (v11664) {
          v11664 = k$$44 <= g$$111;
        }
        var v4786 = v11664;
        if (v4786) {
          v4786 = h$$90 <= l$$55;
        }
        return v4786;
      case "intersect":
        var v17254 = i$$151 < e$$198 + b$$325.helperProportions.width / 2;
        if (v17254) {
          v17254 = f$$70 - b$$325.helperProportions.width / 2 < j$$67;
        }
        var v11665 = v17254;
        if (v11665) {
          v11665 = k$$44 < g$$111 + b$$325.helperProportions.height / 2;
        }
        var v4787 = v11665;
        if (v4787) {
          v4787 = h$$90 - b$$325.helperProportions.height / 2 < l$$55;
        }
        return v4787;
      case "pointer":
        var v17257 = b$$325.positionAbs;
        if (!v17257) {
          v17257 = b$$325.position.absolute;
        }
        var v4788 = v17257.left;
        var v17258 = b$$325.clickOffset;
        if (!v17258) {
          v17258 = b$$325.offset.click;
        }
        var m$$29 = v4788 + v17258.left;
        var v17259 = b$$325.positionAbs;
        if (!v17259) {
          v17259 = b$$325.position.absolute;
        }
        var v4790 = v17259.top;
        var v17260 = b$$325.clickOffset;
        if (!v17260) {
          v17260 = b$$325.offset.click;
        }
        var n$$80 = v4790 + v17260.top;
        var v4792 = a$$430.ui;
        var o$$17 = JAM.call(v4792.isOver, v4792, [n$$80, m$$29, k$$44, i$$151, c$$267.proportions.height, c$$267.proportions.width], JAM.policy.p3);
        return o$$17;
      case "touch":
        var v22735 = g$$111 >= k$$44;
        if (v22735) {
          v22735 = g$$111 <= l$$55;
        }
        var v17261 = v22735;
        if (!v17261) {
          var v22736 = h$$90 >= k$$44;
          if (v22736) {
            v22736 = h$$90 <= l$$55;
          }
          v17261 = v22736;
        }
        var v11673 = v17261;
        if (!v11673) {
          var v17262 = g$$111 < k$$44;
          if (v17262) {
            v17262 = h$$90 > l$$55;
          }
          v11673 = v17262;
        }
        var v4795 = v11673;
        if (v4795) {
          var v22738 = e$$198 >= i$$151;
          if (v22738) {
            v22738 = e$$198 <= j$$67;
          }
          var v17264 = v22738;
          if (!v17264) {
            var v22739 = f$$70 >= i$$151;
            if (v22739) {
              v22739 = f$$70 <= j$$67;
            }
            v17264 = v22739;
          }
          var v11674 = v17264;
          if (!v11674) {
            var v17265 = e$$198 < i$$151;
            if (v17265) {
              v17265 = f$$70 > j$$67;
            }
            v11674 = v17265;
          }
          v4795 = v11674;
        }
        return v4795;
      default:
        return !1;
    }
    return;
  }
  function v1224(a$$433) {
    var v11675 = a$$433.currentItem;
    if (!v11675) {
      v11675 = a$$433.element;
    }
    return {draggable:v11675, helper:a$$433.helper, position:a$$433.position, offset:a$$433.positionAbs};
  }
  function v1223(b$$323, c$$266) {
    function v1222() {
      var b$$324 = JAM.call(a$$430.data, a$$430, [this, "droppable"], JAM.policy.p3);
      var v25374 = b$$324.options.greedy;
      if (v25374) {
        v25374 = !b$$324.options.disabled;
      }
      var v22741 = v25374;
      if (v22741) {
        v22741 = b$$324.options.scope == d$$204.options.scope;
      }
      var v17268 = v22741;
      if (v17268) {
        var v22742 = b$$324.accept;
        var v22743 = b$$324.element[0];
        var v25378 = d$$204.currentItem;
        if (!v25378) {
          v25378 = d$$204.element;
        }
        v17268 = JAM.call(v22742.call, v22742, [v22743, v25378], JAM.policy.p3);
      }
      var v11676 = v17268;
      if (v11676) {
        var v17269 = a$$430.ui;
        var v27190 = b$$324.element;
        v11676 = JAM.call(v17269.intersect, v17269, [d$$204, JAM.call(a$$430.extend, a$$430, [b$$324, {offset:JAM.call(v27190.offset, v27190, [], JAM.policy.p3)}], JAM.policy.p3), b$$324.options.tolerance], JAM.policy.p3);
      }
      if (v11676) {
        e$$197 = !0;
        return !1;
      }
      return;
    }
    var v4801 = c$$266;
    if (!v4801) {
      v4801 = a$$430.ui.ddmanager.current;
    }
    var d$$204 = v4801;
    var v11679 = !d$$204;
    if (!v11679) {
      var v25380 = d$$204.currentItem;
      if (!v25380) {
        v25380 = d$$204.element;
      }
      v11679 = v25380[0] == this.element[0];
    }
    if (v11679) {
      return !1;
    }
    var e$$197 = !1;
    var v22749 = this.element;
    var v17276 = JAM.call(v22749.find, v22749, [":data(droppable)"], JAM.policy.p3);
    var v11680 = JAM.call(v17276.not, v17276, [".ui-draggable-dragging"], JAM.policy.p3);
    JAM.call(v11680.each, v11680, [v1222], JAM.policy.p3);
    var v11681;
    if (e$$197) {
      v11681 = !1;
    } else {
      var v17277;
      var v25381 = this.accept;
      var v25382 = this.element[0];
      var v27193 = d$$204.currentItem;
      if (!v27193) {
        v27193 = d$$204.element;
      }
      if (JAM.call(v25381.call, v25381, [v25382, v27193], JAM.policy.p3)) {
        var v28357 = this.options.activeClass;
        if (v28357) {
          var v29103 = this.element;
          JAM.call(v29103.removeClass, v29103, [this.options.activeClass], JAM.policy.p3);
        }
        var v28358 = this.options.hoverClass;
        if (v28358) {
          var v29106 = this.element;
          JAM.call(v29106.removeClass, v29106, [this.options.hoverClass], JAM.policy.p3);
        }
        JAM.call(this._trigger, this, ["drop", b$$323, JAM.call(this.ui, this, [d$$204], JAM.policy.p3)], JAM.policy.p3);
        v17277 = this.element;
      } else {
        v17277 = !1;
      }
      v11681 = v17277;
    }
    return v11681;
  }
  function v1221(b$$322) {
    var c$$265 = a$$430.ui.ddmanager.current;
    var v11683 = !c$$265;
    if (!v11683) {
      var v25384 = c$$265.currentItem;
      if (!v25384) {
        v25384 = c$$265.element;
      }
      v11683 = v25384[0] == this.element[0];
    }
    if (v11683) {
      return;
    }
    var v11684 = this.accept;
    var v11685 = this.element[0];
    var v17282 = c$$265.currentItem;
    if (!v17282) {
      v17282 = c$$265.element;
    }
    var v4805 = JAM.call(v11684.call, v11684, [v11685, v17282], JAM.policy.p3);
    if (v4805) {
      var v17283 = this.options.hoverClass;
      if (v17283) {
        var v22755 = this.element;
        JAM.call(v22755.removeClass, v22755, [this.options.hoverClass], JAM.policy.p3);
      }
      JAM.call(this._trigger, this, ["out", b$$322, JAM.call(this.ui, this, [c$$265], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1220(b$$321) {
    var c$$264 = a$$430.ui.ddmanager.current;
    var v11688 = !c$$264;
    if (!v11688) {
      var v25386 = c$$264.currentItem;
      if (!v25386) {
        v25386 = c$$264.element;
      }
      v11688 = v25386[0] == this.element[0];
    }
    if (v11688) {
      return;
    }
    var v11689 = this.accept;
    var v11690 = this.element[0];
    var v17289 = c$$264.currentItem;
    if (!v17289) {
      v17289 = c$$264.element;
    }
    var v4808 = JAM.call(v11689.call, v11689, [v11690, v17289], JAM.policy.p3);
    if (v4808) {
      var v17290 = this.options.hoverClass;
      if (v17290) {
        var v22761 = this.element;
        JAM.call(v22761.addClass, v22761, [this.options.hoverClass], JAM.policy.p3);
      }
      JAM.call(this._trigger, this, ["over", b$$321, JAM.call(this.ui, this, [c$$264], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1219(b$$320) {
    var c$$263 = a$$430.ui.ddmanager.current;
    var v11693 = this.options.activeClass;
    if (v11693) {
      var v17293 = this.element;
      JAM.call(v17293.removeClass, v17293, [this.options.activeClass], JAM.policy.p3);
    }
    if (c$$263) {
      JAM.call(this._trigger, this, ["deactivate", b$$320, JAM.call(this.ui, this, [c$$263], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1218(b$$319) {
    var c$$262 = a$$430.ui.ddmanager.current;
    var v11695 = this.options.activeClass;
    if (v11695) {
      var v17297 = this.element;
      JAM.call(v17297.addClass, v17297, [this.options.activeClass], JAM.policy.p3);
    }
    if (c$$262) {
      JAM.call(this._trigger, this, ["activate", b$$319, JAM.call(this.ui, this, [c$$262], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v1217(b$$318, c$$261) {
    function v1216(a$$432) {
      return JAM.call(a$$432.is, a$$432, [c$$261], JAM.policy.p3);
    }
    var v11696 = b$$318 == "accept";
    if (v11696) {
      var v17300;
      if (JAM.call(a$$430.isFunction, a$$430, [c$$261], JAM.policy.p3)) {
        v17300 = c$$261;
      } else {
        v17300 = v1216;
      }
      this.accept = v17300;
    }
    var v11697 = a$$430.Widget.prototype._setOption;
    JAM.call(v11697.apply, v11697, [this, arguments], JAM.policy.p3);
    return;
  }
  function v1215() {
    var b$$317 = a$$430.ui.ddmanager.droppables[this.options.scope];
    var c$$260 = 0;
    var v4814 = c$$260 < b$$317.length;
    for (;v4814;) {
      var v4813 = b$$317[c$$260] == this;
      if (v4813) {
        JAM.call(b$$317.splice, b$$317, [c$$260, 1], JAM.policy.p3);
      }
      c$$260++;
      v4814 = c$$260 < b$$317.length;
    }
    var v22767 = this.element;
    var v17303 = JAM.call(v22767.removeClass, v22767, ["ui-droppable ui-droppable-disabled"], JAM.policy.p3);
    var v11703 = JAM.call(v17303.removeData, v17303, ["droppable"], JAM.policy.p3);
    JAM.call(v11703.unbind, v11703, [".droppable"], JAM.policy.p3);
    return this;
  }
  function v1214() {
    function v1213(a$$431) {
      return JAM.call(a$$431.is, a$$431, [c$$259], JAM.policy.p3);
    }
    var b$$316 = this.options;
    var c$$259 = b$$316.accept;
    this.isover = 0;
    this.isout = 1;
    var v27197;
    if (JAM.call(a$$430.isFunction, a$$430, [c$$259], JAM.policy.p3)) {
      v27197 = c$$259;
    } else {
      v27197 = v1213;
    }
    this.accept = v27197;
    this.proportions = {width:this.element[0].offsetWidth, height:this.element[0].offsetHeight};
    var v22768 = a$$430.ui.ddmanager.droppables;
    var v22769 = b$$316.scope;
    var v25391 = a$$430.ui.ddmanager.droppables[b$$316.scope];
    if (!v25391) {
      v25391 = [];
    }
    introspect(JAM.policy.p2) {
      v22768[v22769] = v25391;
    }
    var v17304 = a$$430.ui.ddmanager.droppables[b$$316.scope];
    JAM.call(v17304.push, v17304, [this], JAM.policy.p3);
    var v11704 = b$$316.addClasses;
    if (v11704) {
      var v17305 = this.element;
      JAM.call(v17305.addClass, v17305, ["ui-droppable"], JAM.policy.p3);
    }
    return;
  }
  JAM.call(a$$430.widget, a$$430, ["ui.droppable", {widgetEventPrefix:"drop", options:{accept:"*", activeClass:!1, addClasses:!0, greedy:!1, hoverClass:!1, scope:"default", tolerance:"intersect"}, _create:v1214, destroy:v1215, _setOption:v1217, _activate:v1218, _deactivate:v1219, _over:v1220, _out:v1221, _drop:v1223, ui:v1224}], JAM.policy.p3);
  JAM.call(a$$430.extend, a$$430, [a$$430.ui.droppable, {version:"1.8.24"}], JAM.policy.p3);
  a$$430.ui.intersect = v1225;
  a$$430.ui.ddmanager = {current:null, droppables:{"default":[]}, prepareOffsets:v1226, drop:v1228, dragStart:v1230, drag:v1233, dragStop:v1234};
  return;
}
function v1212(a$$426, b$$284) {
  function v1211(b$$314, c$$258) {
    var v11706 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$203 = JAM.call(v11706.data, v11706, ["draggable"], JAM.policy.p3).options;
    var v4816 = d$$203._zIndex;
    if (v4816) {
      var v11707 = JAM.call(a$$426, null, [c$$258.helper], JAM.policy.p3);
      JAM.call(v11707.css, v11707, ["zIndex", d$$203._zIndex], JAM.policy.p3);
    }
    return;
  }
  function v1210(b$$313, c$$257) {
    var d$$202 = JAM.call(a$$426, null, [c$$257.helper], JAM.policy.p3);
    var v11709 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var e$$196 = JAM.call(v11709.data, v11709, ["draggable"], JAM.policy.p3).options;
    var v11710 = JAM.call(d$$202.css, d$$202, ["zIndex"], JAM.policy.p3);
    if (v11710) {
      var v31097 = JAM.call(d$$202.css, d$$202, ["zIndex"], JAM.policy.p3);
      e$$196._zIndex = v31097;
    }
    JAM.call(d$$202.css, d$$202, ["zIndex", e$$196.zIndex], JAM.policy.p3);
    return;
  }
  function v1209(b$$311, c$$255) {
    function v1208(a$$429) {
      this.style.zIndex = f$$69 + a$$429;
      return;
    }
    function v1207(b$$312, c$$256) {
      var v22775 = JAM.call(a$$426, null, [b$$312], JAM.policy.p3);
      var v11712 = parseInt(JAM.call(v22775.css, v22775, ["zIndex"], JAM.policy.p3), 10);
      if (!v11712) {
        v11712 = 0;
      }
      var v4820 = v11712;
      var v22776 = JAM.call(a$$426, null, [c$$256], JAM.policy.p3);
      var v11713 = parseInt(JAM.call(v22776.css, v22776, ["zIndex"], JAM.policy.p3), 10);
      if (!v11713) {
        v11713 = 0;
      }
      return v4820 - v11713;
    }
    var v11714 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$201 = JAM.call(v11714.data, v11714, ["draggable"], JAM.policy.p3).options;
    var v4823 = JAM.call(a$$426.makeArray, a$$426, [JAM.call(a$$426, null, [d$$201.stack], JAM.policy.p3)], JAM.policy.p3);
    var e$$195 = JAM.call(v4823.sort, v4823, [v1207], JAM.policy.p3);
    if (!e$$195.length) {
      return;
    }
    var v4825 = parseInt(e$$195[0].style.zIndex);
    if (!v4825) {
      v4825 = 0;
    }
    var f$$69 = v4825;
    var v11719 = JAM.call(a$$426, null, [e$$195], JAM.policy.p3);
    JAM.call(v11719.each, v11719, [v1208], JAM.policy.p3);
    this[0].style.zIndex = f$$69 + e$$195.length;
    return;
  }
  function v1206(b$$310, c$$254) {
    var v4826 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$200 = JAM.call(v4826.data, v4826, ["draggable"], JAM.policy.p3);
    var e$$194 = d$$200.options;
    var f$$68 = e$$194.snapTolerance;
    var g$$110 = c$$254.offset.left;
    var h$$89 = g$$110 + d$$200.helperProportions.width;
    var i$$150 = c$$254.offset.top;
    var j$$66 = i$$150 + d$$200.helperProportions.height;
    var k$$43 = d$$200.snapElements.length - 1;
    var v4848 = k$$43 >= 0;
    for (;v4848;) {
      var l$$54 = d$$200.snapElements[k$$43].left;
      var m$$28 = l$$54 + d$$200.snapElements[k$$43].width;
      var n$$79 = d$$200.snapElements[k$$43].top;
      var o$$16 = n$$79 + d$$200.snapElements[k$$43].height;
      var v29109 = l$$54 - f$$68 < g$$110;
      if (v29109) {
        v29109 = g$$110 < m$$28 + f$$68;
      }
      var v28363 = v29109;
      if (v28363) {
        v28363 = n$$79 - f$$68 < i$$150;
      }
      var v27209 = v28363;
      if (v27209) {
        v27209 = i$$150 < o$$16 + f$$68;
      }
      var v25395 = v27209;
      if (!v25395) {
        var v29111 = l$$54 - f$$68 < g$$110;
        if (v29111) {
          v29111 = g$$110 < m$$28 + f$$68;
        }
        var v28365 = v29111;
        if (v28365) {
          v28365 = n$$79 - f$$68 < j$$66;
        }
        var v27210 = v28365;
        if (v27210) {
          v27210 = j$$66 < o$$16 + f$$68;
        }
        v25395 = v27210;
      }
      var v22778 = v25395;
      if (!v22778) {
        var v28367 = l$$54 - f$$68 < h$$89;
        if (v28367) {
          v28367 = h$$89 < m$$28 + f$$68;
        }
        var v27212 = v28367;
        if (v27212) {
          v27212 = n$$79 - f$$68 < i$$150;
        }
        var v25396 = v27212;
        if (v25396) {
          v25396 = i$$150 < o$$16 + f$$68;
        }
        v22778 = v25396;
      }
      var v17319 = v22778;
      if (!v17319) {
        var v27214 = l$$54 - f$$68 < h$$89;
        if (v27214) {
          v27214 = h$$89 < m$$28 + f$$68;
        }
        var v25398 = v27214;
        if (v25398) {
          v25398 = n$$79 - f$$68 < j$$66;
        }
        var v22779 = v25398;
        if (v22779) {
          v22779 = j$$66 < o$$16 + f$$68;
        }
        v17319 = v22779;
      }
      if (!v17319) {
        var v17320 = d$$200.snapElements[k$$43].snapping;
        if (v17320) {
          v17320 = d$$200.options.snap.release;
        }
        var v11729 = v17320;
        if (v11729) {
          var v17321 = d$$200.options.snap.release;
          JAM.call(v17321.call, v17321, [d$$200.element, b$$310, JAM.call(a$$426.extend, a$$426, [JAM.call(d$$200._uiHash, d$$200, [], JAM.policy.p3), {snapItem:d$$200.snapElements[k$$43].item}], JAM.policy.p3)], JAM.policy.p3);
        }
        d$$200.snapElements[k$$43].snapping = !1;
        k$$43--;
        v4848 = k$$43 >= 0;
        continue;
      }
      if (e$$194.snapMode != "inner") {
        var p$$38 = JAM.call(Math.abs, Math, [n$$79 - j$$66], JAM.policy.p3) <= f$$68;
        var q$$15 = JAM.call(Math.abs, Math, [o$$16 - i$$150], JAM.policy.p3) <= f$$68;
        var r$$17 = JAM.call(Math.abs, Math, [l$$54 - h$$89], JAM.policy.p3) <= f$$68;
        var s$$26 = JAM.call(Math.abs, Math, [m$$28 - g$$110], JAM.policy.p3) <= f$$68;
        if (p$$38) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:n$$79 - d$$200.helperProportions.height, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (q$$15) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:o$$16, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (r$$17) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:l$$54 - d$$200.helperProportions.width}], JAM.policy.p3).left - d$$200.margins.left;
        }
        if (s$$26) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:m$$28}], JAM.policy.p3).left - d$$200.margins.left;
        }
      }
      var v11736 = p$$38 || q$$15;
      if (!v11736) {
        v11736 = r$$17;
      }
      var v4842 = v11736;
      if (!v4842) {
        v4842 = s$$26;
      }
      var t$$11 = v4842;
      if (e$$194.snapMode != "outer") {
        p$$38 = JAM.call(Math.abs, Math, [n$$79 - i$$150], JAM.policy.p3) <= f$$68;
        q$$15 = JAM.call(Math.abs, Math, [o$$16 - j$$66], JAM.policy.p3) <= f$$68;
        r$$17 = JAM.call(Math.abs, Math, [l$$54 - g$$110], JAM.policy.p3) <= f$$68;
        s$$26 = JAM.call(Math.abs, Math, [m$$28 - h$$89], JAM.policy.p3) <= f$$68;
        if (p$$38) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:n$$79, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (q$$15) {
          c$$254.position.top = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:o$$16 - d$$200.helperProportions.height, left:0}], JAM.policy.p3).top - d$$200.margins.top;
        }
        if (r$$17) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:l$$54}], JAM.policy.p3).left - d$$200.margins.left;
        }
        if (s$$26) {
          c$$254.position.left = JAM.call(d$$200._convertPositionTo, d$$200, ["relative", {top:0, left:m$$28 - d$$200.helperProportions.width}], JAM.policy.p3).left - d$$200.margins.left;
        }
      }
      var v22792 = !d$$200.snapElements[k$$43].snapping;
      if (v22792) {
        var v28384 = p$$38 || q$$15;
        if (!v28384) {
          v28384 = r$$17;
        }
        var v27232 = v28384;
        if (!v27232) {
          v27232 = s$$26;
        }
        var v25417 = v27232;
        if (!v25417) {
          v25417 = t$$11;
        }
        v22792 = v25417;
      }
      var v17328 = v22792;
      if (v17328) {
        v17328 = d$$200.options.snap.snap;
      }
      var v11743 = v17328;
      if (v11743) {
        var v17329 = d$$200.options.snap.snap;
        JAM.call(v17329.call, v17329, [d$$200.element, b$$310, JAM.call(a$$426.extend, a$$426, [JAM.call(d$$200._uiHash, d$$200, [], JAM.policy.p3), {snapItem:d$$200.snapElements[k$$43].item}], JAM.policy.p3)], JAM.policy.p3);
      }
      var v11744 = d$$200.snapElements[k$$43];
      var v25421 = p$$38 || q$$15;
      if (!v25421) {
        v25421 = r$$17;
      }
      var v22797 = v25421;
      if (!v22797) {
        v22797 = s$$26;
      }
      var v17333 = v22797;
      if (!v17333) {
        v17333 = t$$11;
      }
      v11744.snapping = v17333;
      k$$43--;
      v4848 = k$$43 >= 0;
    }
    return;
  }
  function v1205(b$$308, c$$252) {
    function v1204() {
      var b$$309 = JAM.call(a$$426, null, [this], JAM.policy.p3);
      var c$$253 = JAM.call(b$$309.offset, b$$309, [], JAM.policy.p3);
      var v4849 = this != d$$199.element[0];
      if (v4849) {
        var v11746 = d$$199.snapElements;
        JAM.call(v11746.push, v11746, [{item:this, width:JAM.call(b$$309.outerWidth, b$$309, [], JAM.policy.p3), height:JAM.call(b$$309.outerHeight, b$$309, [], JAM.policy.p3), top:c$$253.top, left:c$$253.left}], JAM.policy.p3);
      }
      return;
    }
    var v4850 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$199 = JAM.call(v4850.data, v4850, ["draggable"], JAM.policy.p3);
    var e$$193 = d$$199.options;
    d$$199.snapElements = [];
    var v22799;
    if (e$$193.snap.constructor != String) {
      var v25423 = e$$193.snap.items;
      if (!v25423) {
        v25423 = ":data(draggable)";
      }
      v22799 = v25423;
    } else {
      v22799 = e$$193.snap;
    }
    var v11748 = JAM.call(a$$426, null, [v22799], JAM.policy.p3);
    JAM.call(v11748.each, v11748, [v1204], JAM.policy.p3);
    return;
  }
  function v1203(b$$307, c$$251) {
    var v4851 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$198 = JAM.call(v4851.data, v4851, ["draggable"], JAM.policy.p3);
    var e$$192 = d$$198.options;
    var f$$67 = !1;
    var v11749 = d$$198.scrollParent[0] != document;
    if (v11749) {
      v11749 = d$$198.scrollParent[0].tagName != "HTML";
    }
    if (v11749) {
      var v11750 = !e$$192.axis;
      if (!v11750) {
        v11750 = e$$192.axis != "x";
      }
      if (v11750) {
        var v4852;
        if (d$$198.overflowOffset.top + d$$198.scrollParent[0].offsetHeight - b$$307.pageY < e$$192.scrollSensitivity) {
          v4852 = d$$198.scrollParent[0].scrollTop = f$$67 = d$$198.scrollParent[0].scrollTop + e$$192.scrollSpeed;
        } else {
          var v11752 = b$$307.pageY - d$$198.overflowOffset.top < e$$192.scrollSensitivity;
          if (v11752) {
            v11752 = d$$198.scrollParent[0].scrollTop = f$$67 = d$$198.scrollParent[0].scrollTop - e$$192.scrollSpeed;
          }
          v4852 = v11752;
        }
        v4852;
      }
      var v11754 = !e$$192.axis;
      if (!v11754) {
        v11754 = e$$192.axis != "y";
      }
      if (v11754) {
        var v4854;
        if (d$$198.overflowOffset.left + d$$198.scrollParent[0].offsetWidth - b$$307.pageX < e$$192.scrollSensitivity) {
          v4854 = d$$198.scrollParent[0].scrollLeft = f$$67 = d$$198.scrollParent[0].scrollLeft + e$$192.scrollSpeed;
        } else {
          var v11756 = b$$307.pageX - d$$198.overflowOffset.left < e$$192.scrollSensitivity;
          if (v11756) {
            v11756 = d$$198.scrollParent[0].scrollLeft = f$$67 = d$$198.scrollParent[0].scrollLeft - e$$192.scrollSpeed;
          }
          v4854 = v11756;
        }
        v4854;
      }
    } else {
      var v11758 = !e$$192.axis;
      if (!v11758) {
        v11758 = e$$192.axis != "x";
      }
      if (v11758) {
        var v4856;
        var v22818 = b$$307.pageY;
        var v25436 = JAM.call(a$$426, null, [document], JAM.policy.p3);
        if (v22818 - JAM.call(v25436.scrollTop, v25436, [], JAM.policy.p3) < e$$192.scrollSensitivity) {
          var v11759 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v22820 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          v4856 = f$$67 = JAM.call(v11759.scrollTop, v11759, [JAM.call(v22820.scrollTop, v22820, [], JAM.policy.p3) - e$$192.scrollSpeed], JAM.policy.p3);
        } else {
          var v25437 = JAM.call(a$$426, null, [window], JAM.policy.p3);
          var v22821 = JAM.call(v25437.height, v25437, [], JAM.policy.p3);
          var v25438 = b$$307.pageY;
          var v27245 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v11761 = v22821 - (v25438 - JAM.call(v27245.scrollTop, v27245, [], JAM.policy.p3)) < e$$192.scrollSensitivity;
          if (v11761) {
            var v17373 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            var v25440 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            v11761 = f$$67 = JAM.call(v17373.scrollTop, v17373, [JAM.call(v25440.scrollTop, v25440, [], JAM.policy.p3) + e$$192.scrollSpeed], JAM.policy.p3);
          }
          v4856 = v11761;
        }
        v4856;
      }
      var v11763 = !e$$192.axis;
      if (!v11763) {
        v11763 = e$$192.axis != "y";
      }
      if (v11763) {
        var v4858;
        var v22825 = b$$307.pageX;
        var v25441 = JAM.call(a$$426, null, [document], JAM.policy.p3);
        if (v22825 - JAM.call(v25441.scrollLeft, v25441, [], JAM.policy.p3) < e$$192.scrollSensitivity) {
          var v11764 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v22827 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          v4858 = f$$67 = JAM.call(v11764.scrollLeft, v11764, [JAM.call(v22827.scrollLeft, v22827, [], JAM.policy.p3) - e$$192.scrollSpeed], JAM.policy.p3);
        } else {
          var v25442 = JAM.call(a$$426, null, [window], JAM.policy.p3);
          var v22828 = JAM.call(v25442.width, v25442, [], JAM.policy.p3);
          var v25443 = b$$307.pageX;
          var v27246 = JAM.call(a$$426, null, [document], JAM.policy.p3);
          var v11766 = v22828 - (v25443 - JAM.call(v27246.scrollLeft, v27246, [], JAM.policy.p3)) < e$$192.scrollSensitivity;
          if (v11766) {
            var v17384 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            var v25445 = JAM.call(a$$426, null, [document], JAM.policy.p3);
            v11766 = f$$67 = JAM.call(v17384.scrollLeft, v17384, [JAM.call(v25445.scrollLeft, v25445, [], JAM.policy.p3) + e$$192.scrollSpeed], JAM.policy.p3);
          }
          v4858 = v11766;
        }
        v4858;
      }
    }
    var v17386 = f$$67 !== !1;
    if (v17386) {
      v17386 = a$$426.ui.ddmanager;
    }
    var v11768 = v17386;
    if (v11768) {
      v11768 = !e$$192.dropBehaviour;
    }
    var v4861 = v11768;
    if (v4861) {
      var v11769 = a$$426.ui.ddmanager;
      JAM.call(v11769.prepareOffsets, v11769, [d$$198, b$$307], JAM.policy.p3);
    }
    return;
  }
  function v1202(b$$306, c$$250) {
    var v4862 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$197 = JAM.call(v4862.data, v4862, ["draggable"], JAM.policy.p3);
    var v11770 = d$$197.scrollParent[0] != document;
    if (v11770) {
      v11770 = d$$197.scrollParent[0].tagName != "HTML";
    }
    var v4863 = v11770;
    if (v4863) {
      var v11771 = d$$197.scrollParent;
      var v31098 = JAM.call(v11771.offset, v11771, [], JAM.policy.p3);
      d$$197.overflowOffset = v31098;
    }
    return;
  }
  function v1201(b$$305, c$$249) {
    var v11772 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$196 = JAM.call(v11772.data, v11772, ["draggable"], JAM.policy.p3).options;
    var v4865 = d$$196._opacity;
    if (v4865) {
      var v11773 = JAM.call(a$$426, null, [c$$249.helper], JAM.policy.p3);
      JAM.call(v11773.css, v11773, ["opacity", d$$196._opacity], JAM.policy.p3);
    }
    return;
  }
  function v1200(b$$304, c$$248) {
    var d$$195 = JAM.call(a$$426, null, [c$$248.helper], JAM.policy.p3);
    var v11775 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var e$$191 = JAM.call(v11775.data, v11775, ["draggable"], JAM.policy.p3).options;
    var v11776 = JAM.call(d$$195.css, d$$195, ["opacity"], JAM.policy.p3);
    if (v11776) {
      var v31099 = JAM.call(d$$195.css, d$$195, ["opacity"], JAM.policy.p3);
      e$$191._opacity = v31099;
    }
    JAM.call(d$$195.css, d$$195, ["opacity", e$$191.opacity], JAM.policy.p3);
    return;
  }
  function v1199(b$$303, c$$247) {
    var v11778 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$194 = JAM.call(v11778.data, v11778, ["draggable"], JAM.policy.p3).options;
    var v4869 = d$$194._cursor;
    if (v4869) {
      var v11779 = JAM.call(a$$426, null, ["body"], JAM.policy.p3);
      JAM.call(v11779.css, v11779, ["cursor", d$$194._cursor], JAM.policy.p3);
    }
    return;
  }
  function v1198(b$$302, c$$246) {
    var d$$193 = JAM.call(a$$426, null, ["body"], JAM.policy.p3);
    var v11781 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var e$$190 = JAM.call(v11781.data, v11781, ["draggable"], JAM.policy.p3).options;
    var v11782 = JAM.call(d$$193.css, d$$193, ["cursor"], JAM.policy.p3);
    if (v11782) {
      var v31100 = JAM.call(d$$193.css, d$$193, ["cursor"], JAM.policy.p3);
      e$$190._cursor = v31100;
    }
    JAM.call(d$$193.css, d$$193, ["cursor", e$$190.cursor], JAM.policy.p3);
    return;
  }
  function v1197(b$$300, c$$244) {
    function v1196(f$$66) {
      function v1195() {
        return c$$244.helper[0];
      }
      this.instance.positionAbs = d$$191.positionAbs;
      this.instance.helperProportions = d$$191.helperProportions;
      this.instance.offset.click = d$$191.offset.click;
      var v11784;
      var v22840 = this.instance;
      if (JAM.call(v22840._intersectsWith, v22840, [this.instance.containerCache], JAM.policy.p3)) {
        var v22842 = this.instance.isOver;
        if (!v22842) {
          this.instance.isOver = 1;
          var v30823 = this.instance;
          var v30860 = JAM.call(a$$426, null, [e$$188], JAM.policy.p3);
          var v30857 = JAM.call(v30860.clone, v30860, [], JAM.policy.p3);
          var v30852 = JAM.call(v30857.removeAttr, v30857, ["id"], JAM.policy.p3);
          var v30839 = JAM.call(v30852.appendTo, v30852, [this.instance.element], JAM.policy.p3);
          var v31101 = JAM.call(v30839.data, v30839, ["sortable-item", !0], JAM.policy.p3);
          v30823.currentItem = v31101;
          this.instance.options._helper = this.instance.options.helper;
          this.instance.options.helper = v1195;
          b$$300.target = this.instance.currentItem[0];
          var v30684 = this.instance;
          JAM.call(v30684._mouseCapture, v30684, [b$$300, !0], JAM.policy.p3);
          var v30605 = this.instance;
          JAM.call(v30605._mouseStart, v30605, [b$$300, !0, !0], JAM.policy.p3);
          this.instance.offset.click.top = d$$191.offset.click.top;
          this.instance.offset.click.left = d$$191.offset.click.left;
          var v30145 = this.instance.offset.parent;
          v30145.left = v30145.left - (d$$191.offset.parent.left - this.instance.offset.parent.left);
          var v29898 = this.instance.offset.parent;
          v29898.top = v29898.top - (d$$191.offset.parent.top - this.instance.offset.parent.top);
          JAM.call(d$$191._trigger, d$$191, ["toSortable", b$$300], JAM.policy.p3);
          d$$191.dropped = this.instance.element;
          d$$191.currentItem = d$$191.element;
          this.instance.fromOutside = d$$191;
        }
        var v22843 = this.instance.currentItem;
        if (v22843) {
          var v25451 = this.instance;
          v22843 = JAM.call(v25451._mouseDrag, v25451, [b$$300], JAM.policy.p3);
        }
        v11784 = v22843;
      } else {
        var v17393 = this.instance.isOver;
        if (v17393) {
          this.instance.isOver = 0;
          this.instance.cancelHelperRemoval = !0;
          this.instance.options.revert = !1;
          var v30147 = this.instance;
          var v30346 = this.instance;
          JAM.call(v30147._trigger, v30147, ["out", b$$300, JAM.call(v30346._uiHash, v30346, [this.instance], JAM.policy.p3)], JAM.policy.p3);
          var v29899 = this.instance;
          JAM.call(v29899._mouseStop, v29899, [b$$300, !0], JAM.policy.p3);
          this.instance.options.helper = this.instance.options._helper;
          var v29123 = this.instance.currentItem;
          JAM.call(v29123.remove, v29123, [], JAM.policy.p3);
          var v28390 = this.instance.placeholder;
          if (v28390) {
            var v29125 = this.instance.placeholder;
            JAM.call(v29125.remove, v29125, [], JAM.policy.p3);
          }
          JAM.call(d$$191._trigger, d$$191, ["fromSortable", b$$300], JAM.policy.p3);
          v17393 = d$$191.dropped = !1;
        }
        v11784 = v17393;
      }
      v11784;
      return;
    }
    var v4872 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$191 = JAM.call(v4872.data, v4872, ["draggable"], JAM.policy.p3);
    var e$$188 = this;
    JAM.call(a$$426.each, a$$426, [d$$191.sortables, v1196], JAM.policy.p3);
    return;
  }
  function v1194(b$$299, c$$243) {
    function v1193() {
      var v4874;
      if (this.instance.isOver) {
        this.instance.isOver = 0;
        d$$190.cancelHelperRemoval = !0;
        this.instance.cancelHelperRemoval = !1;
        var v27248 = this.shouldRevert;
        if (v27248) {
          this.instance.options.revert = !0;
        }
        var v25452 = this.instance;
        JAM.call(v25452._mouseStop, v25452, [b$$299], JAM.policy.p3);
        this.instance.options.helper = this.instance.options._helper;
        var v17396 = d$$190.options.helper == "original";
        if (v17396) {
          var v22847 = this.instance.currentItem;
          v17396 = JAM.call(v22847.css, v22847, [{top:"auto", left:"auto"}], JAM.policy.p3);
        }
        v4874 = v17396;
      } else {
        this.instance.cancelHelperRemoval = !1;
        var v17398 = this.instance;
        v4874 = JAM.call(v17398._trigger, v17398, ["deactivate", b$$299, e$$187], JAM.policy.p3);
      }
      v4874;
      return;
    }
    var v4875 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$190 = JAM.call(v4875.data, v4875, ["draggable"], JAM.policy.p3);
    var e$$187 = JAM.call(a$$426.extend, a$$426, [{}, c$$243, {item:d$$190.element}], JAM.policy.p3);
    JAM.call(a$$426.each, a$$426, [d$$190.sortables, v1193], JAM.policy.p3);
    return;
  }
  function v1192(b$$298, c$$241) {
    function v1191() {
      var c$$242 = JAM.call(a$$426.data, a$$426, [this, "sortable"], JAM.policy.p3);
      var v11787 = c$$242;
      if (v11787) {
        v11787 = !c$$242.options.disabled;
      }
      var v4878 = v11787;
      if (v4878) {
        var v22850 = d$$189.sortables;
        JAM.call(v22850.push, v22850, [{instance:c$$242, shouldRevert:c$$242.options.revert}], JAM.policy.p3);
        JAM.call(c$$242.refreshPositions, c$$242, [], JAM.policy.p3);
        JAM.call(c$$242._trigger, c$$242, ["activate", b$$298, f$$63], JAM.policy.p3);
      }
      return;
    }
    var v4879 = JAM.call(a$$426, null, [this], JAM.policy.p3);
    var d$$189 = JAM.call(v4879.data, v4879, ["draggable"], JAM.policy.p3);
    var e$$186 = d$$189.options;
    var f$$63 = JAM.call(a$$426.extend, a$$426, [{}, c$$241, {item:d$$189.element}], JAM.policy.p3);
    d$$189.sortables = [];
    var v11789 = JAM.call(a$$426, null, [e$$186.connectToSortable], JAM.policy.p3);
    JAM.call(v11789.each, v11789, [v1191], JAM.policy.p3);
    return;
  }
  function v1190(a$$428) {
    return {helper:this.helper, position:this.position, originalPosition:this.originalPosition, offset:this.positionAbs};
  }
  function v1189(b$$297, c$$240, d$$188) {
    var v22852 = d$$188;
    if (!v22852) {
      v22852 = JAM.call(this._uiHash, this, [], JAM.policy.p3);
    }
    d$$188 = v22852;
    var v22853 = a$$426.ui.plugin;
    JAM.call(v22853.call, v22853, [this, b$$297, [c$$240, d$$188]], JAM.policy.p3);
    var v17401 = b$$297 == "drag";
    if (v17401) {
      var v31102 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
      this.positionAbs = v31102;
    }
    var v11790 = a$$426.Widget.prototype._trigger;
    return JAM.call(v11790.call, v11790, [this, b$$297, c$$240, d$$188], JAM.policy.p3);
  }
  function v1188() {
    var v22856 = this.helper;
    JAM.call(v22856.removeClass, v22856, ["ui-draggable-dragging"], JAM.policy.p3);
    var v25460 = this.helper[0] != this.element[0];
    if (v25460) {
      v25460 = !this.cancelHelperRemoval;
    }
    var v22857 = v25460;
    if (v22857) {
      var v25461 = this.helper;
      JAM.call(v25461.remove, v25461, [], JAM.policy.p3);
    }
    this.helper = null;
    this.cancelHelperRemoval = !1;
    return;
  }
  function v1187(b$$296) {
    var c$$239 = this.options;
    var v4885;
    var v17403 = this.cssPosition == "absolute";
    if (v17403) {
      var v22859 = this.scrollParent[0] == document;
      if (!v22859) {
        var v27255 = a$$426.ui;
        v22859 = !JAM.call(v27255.contains, v27255, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v17403 = v22859;
    }
    if (v17403) {
      v4885 = this.offsetParent;
    } else {
      v4885 = this.scrollParent;
    }
    var d$$187 = v4885;
    var e$$185 = JAM.call(/(html|body)/i.test, /(html|body)/i, [d$$187[0].tagName], JAM.policy.p3);
    var f$$62 = b$$296.pageX;
    var g$$108 = b$$296.pageY;
    if (this.originalPosition) {
      var h$$87;
      if (this.containment) {
        if (this.relative_container) {
          var v4887 = this.relative_container;
          var i$$148 = JAM.call(v4887.offset, v4887, [], JAM.policy.p3);
          h$$87 = [this.containment[0] + i$$148.left, this.containment[1] + i$$148.top, this.containment[2] + i$$148.left, this.containment[3] + i$$148.top];
        } else {
          h$$87 = this.containment;
        }
        var v22860 = b$$296.pageX - this.offset.click.left < h$$87[0];
        if (v22860) {
          f$$62 = h$$87[0] + this.offset.click.left;
        }
        var v22861 = b$$296.pageY - this.offset.click.top < h$$87[1];
        if (v22861) {
          g$$108 = h$$87[1] + this.offset.click.top;
        }
        var v17408 = b$$296.pageX - this.offset.click.left > h$$87[2];
        if (v17408) {
          f$$62 = h$$87[2] + this.offset.click.left;
        }
        var v11801 = b$$296.pageY - this.offset.click.top > h$$87[3];
        if (v11801) {
          g$$108 = h$$87[3] + this.offset.click.top;
        }
      }
      if (c$$239.grid) {
        var v4894;
        if (c$$239.grid[1]) {
          v4894 = this.originalPageY + JAM.call(Math.round, Math, [(g$$108 - this.originalPageY) / c$$239.grid[1]], JAM.policy.p3) * c$$239.grid[1];
        } else {
          v4894 = this.originalPageY;
        }
        var j$$64 = v4894;
        var v4895;
        if (h$$87) {
          var v11805;
          var v22871 = j$$64 - this.offset.click.top < h$$87[1];
          if (!v22871) {
            v22871 = j$$64 - this.offset.click.top > h$$87[3];
          }
          if (v22871) {
            var v17416;
            if (j$$64 - this.offset.click.top < h$$87[1]) {
              v17416 = j$$64 + c$$239.grid[1];
            } else {
              v17416 = j$$64 - c$$239.grid[1];
            }
            v11805 = v17416;
          } else {
            v11805 = j$$64;
          }
          v4895 = v11805;
        } else {
          v4895 = j$$64;
        }
        g$$108 = v4895;
        var v4896;
        if (c$$239.grid[0]) {
          v4896 = this.originalPageX + JAM.call(Math.round, Math, [(f$$62 - this.originalPageX) / c$$239.grid[0]], JAM.policy.p3) * c$$239.grid[0];
        } else {
          v4896 = this.originalPageX;
        }
        var k$$42 = v4896;
        var v4897;
        if (h$$87) {
          var v11809;
          var v22877 = k$$42 - this.offset.click.left < h$$87[0];
          if (!v22877) {
            v22877 = k$$42 - this.offset.click.left > h$$87[2];
          }
          if (v22877) {
            var v17421;
            if (k$$42 - this.offset.click.left < h$$87[0]) {
              v17421 = k$$42 + c$$239.grid[0];
            } else {
              v17421 = k$$42 - c$$239.grid[0];
            }
            v11809 = v17421;
          } else {
            v11809 = k$$42;
          }
          v4897 = v11809;
        } else {
          v4897 = k$$42;
        }
        f$$62 = v4897;
      }
    }
    var v11810 = g$$108 - this.offset.click.top - this.offset.relative.top - this.offset.parent.top;
    var v17425;
    var v27279 = a$$426.browser.safari;
    if (v27279) {
      v27279 = a$$426.browser.version < 526;
    }
    var v25503 = v27279;
    if (v25503) {
      v25503 = this.cssPosition == "fixed";
    }
    if (v25503) {
      v17425 = 0;
    } else {
      var v22884;
      if (this.cssPosition == "fixed") {
        var v27282 = this.scrollParent;
        v22884 = -JAM.call(v27282.scrollTop, v27282, [], JAM.policy.p3);
      } else {
        var v25505;
        if (e$$185) {
          v25505 = 0;
        } else {
          v25505 = JAM.call(d$$187.scrollTop, d$$187, [], JAM.policy.p3);
        }
        v22884 = v25505;
      }
      v17425 = v22884;
    }
    var v4900 = v11810 + v17425;
    var v11812 = f$$62 - this.offset.click.left - this.offset.relative.left - this.offset.parent.left;
    var v17428;
    var v27285 = a$$426.browser.safari;
    if (v27285) {
      v27285 = a$$426.browser.version < 526;
    }
    var v25510 = v27285;
    if (v25510) {
      v25510 = this.cssPosition == "fixed";
    }
    if (v25510) {
      v17428 = 0;
    } else {
      var v22889;
      if (this.cssPosition == "fixed") {
        var v27288 = this.scrollParent;
        v22889 = -JAM.call(v27288.scrollLeft, v27288, [], JAM.policy.p3);
      } else {
        var v25512;
        if (e$$185) {
          v25512 = 0;
        } else {
          v25512 = JAM.call(d$$187.scrollLeft, d$$187, [], JAM.policy.p3);
        }
        v22889 = v25512;
      }
      v17428 = v22889;
    }
    return {top:v4900, left:v11812 + v17428};
  }
  function v1186(b$$295, c$$238) {
    if (!c$$238) {
      c$$238 = this.position;
    }
    var v4902;
    if (b$$295 == "absolute") {
      v4902 = 1;
    } else {
      v4902 = -1;
    }
    var d$$186 = v4902;
    var e$$184 = this.options;
    var v4903;
    var v17429 = this.cssPosition == "absolute";
    if (v17429) {
      var v22892 = this.scrollParent[0] == document;
      if (!v22892) {
        var v27290 = a$$426.ui;
        v22892 = !JAM.call(v27290.contains, v27290, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
      }
      v17429 = v22892;
    }
    if (v17429) {
      v4903 = this.offsetParent;
    } else {
      v4903 = this.scrollParent;
    }
    var f$$61 = v4903;
    var g$$107 = JAM.call(/(html|body)/i.test, /(html|body)/i, [f$$61[0].tagName], JAM.policy.p3);
    var v11818 = c$$238.top + this.offset.relative.top * d$$186 + this.offset.parent.top * d$$186;
    var v17432;
    var v27295 = a$$426.browser.safari;
    if (v27295) {
      v27295 = a$$426.browser.version < 526;
    }
    var v25519 = v27295;
    if (v25519) {
      v25519 = this.cssPosition == "fixed";
    }
    if (v25519) {
      v17432 = 0;
    } else {
      var v25520;
      if (this.cssPosition == "fixed") {
        var v28420 = this.scrollParent;
        v25520 = -JAM.call(v28420.scrollTop, v28420, [], JAM.policy.p3);
      } else {
        var v27298;
        if (g$$107) {
          v27298 = 0;
        } else {
          v27298 = JAM.call(f$$61.scrollTop, f$$61, [], JAM.policy.p3);
        }
        v25520 = v27298;
      }
      v17432 = v25520 * d$$186;
    }
    var v4905 = v11818 - v17432;
    var v11820 = c$$238.left + this.offset.relative.left * d$$186 + this.offset.parent.left * d$$186;
    var v17435;
    var v27302 = a$$426.browser.safari;
    if (v27302) {
      v27302 = a$$426.browser.version < 526;
    }
    var v25523 = v27302;
    if (v25523) {
      v25523 = this.cssPosition == "fixed";
    }
    if (v25523) {
      v17435 = 0;
    } else {
      var v25524;
      if (this.cssPosition == "fixed") {
        var v28425 = this.scrollParent;
        v25524 = -JAM.call(v28425.scrollLeft, v28425, [], JAM.policy.p3);
      } else {
        var v27305;
        if (g$$107) {
          v27305 = 0;
        } else {
          v27305 = JAM.call(f$$61.scrollLeft, f$$61, [], JAM.policy.p3);
        }
        v25524 = v27305;
      }
      v17435 = v25524 * d$$186;
    }
    return {top:v4905, left:v11820 - v17435};
  }
  function v1185() {
    var b$$294 = this.options;
    var v4907 = b$$294.containment == "parent";
    if (v4907) {
      b$$294.containment = this.helper[0].parentNode;
    }
    var v11824 = b$$294.containment == "document";
    if (!v11824) {
      v11824 = b$$294.containment == "window";
    }
    if (v11824) {
      var v11825;
      if (b$$294.containment == "document") {
        v11825 = 0;
      } else {
        var v25525 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v11825 = JAM.call(v25525.scrollLeft, v25525, [], JAM.policy.p3) - this.offset.relative.left - this.offset.parent.left;
      }
      var v4908 = v11825;
      var v11826;
      if (b$$294.containment == "document") {
        v11826 = 0;
      } else {
        var v25528 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v11826 = JAM.call(v25528.scrollTop, v25528, [], JAM.policy.p3) - this.offset.relative.top - this.offset.parent.top;
      }
      var v4909 = v11826;
      var v25531;
      if (b$$294.containment == "document") {
        v25531 = 0;
      } else {
        var v27309 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v25531 = JAM.call(v27309.scrollLeft, v27309, [], JAM.policy.p3);
      }
      var v22911 = v25531;
      var v28427;
      if (b$$294.containment == "document") {
        v28427 = document;
      } else {
        v28427 = window;
      }
      var v25532 = JAM.call(a$$426, null, [v28427], JAM.policy.p3);
      var v4910 = v22911 + JAM.call(v25532.width, v25532, [], JAM.policy.p3) - this.helperProportions.width - this.margins.left;
      var v25533;
      if (b$$294.containment == "document") {
        v25533 = 0;
      } else {
        var v27312 = JAM.call(a$$426, null, [window], JAM.policy.p3);
        v25533 = JAM.call(v27312.scrollTop, v27312, [], JAM.policy.p3);
      }
      var v22914 = v25533;
      var v29141;
      if (b$$294.containment == "document") {
        v29141 = document;
      } else {
        v29141 = window;
      }
      var v27314 = JAM.call(a$$426, null, [v29141], JAM.policy.p3);
      var v25534 = JAM.call(v27314.height, v27314, [], JAM.policy.p3);
      if (!v25534) {
        v25534 = document.body.parentNode.scrollHeight;
      }
      this.containment = [v4908, v4909, v4910, v22914 + v25534 - this.helperProportions.height - this.margins.top];
    }
    var v11831 = !JAM.call(/^(document|window|parent)$/.test, /^(document|window|parent)$/, [b$$294.containment], JAM.policy.p3);
    if (v11831) {
      v11831 = b$$294.containment.constructor != Array;
    }
    if (v11831) {
      var c$$237 = JAM.call(a$$426, null, [b$$294.containment], JAM.policy.p3);
      var d$$185 = c$$237[0];
      if (!d$$185) {
        return;
      }
      var e$$183 = JAM.call(c$$237.offset, c$$237, [], JAM.policy.p3);
      var v11832 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var f$$60 = JAM.call(v11832.css, v11832, ["overflow"], JAM.policy.p3) != "hidden";
      var v27317 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v22919 = parseInt(JAM.call(v27317.css, v27317, ["borderLeftWidth"], JAM.policy.p3), 10);
      if (!v22919) {
        v22919 = 0;
      }
      var v17454 = v22919;
      var v27318 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v22920 = parseInt(JAM.call(v27318.css, v27318, ["paddingLeft"], JAM.policy.p3), 10);
      if (!v22920) {
        v22920 = 0;
      }
      var v11833 = v17454 + v22920;
      var v27319 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v22921 = parseInt(JAM.call(v27319.css, v27319, ["borderTopWidth"], JAM.policy.p3), 10);
      if (!v22921) {
        v22921 = 0;
      }
      var v17456 = v22921;
      var v27320 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v22922 = parseInt(JAM.call(v27320.css, v27320, ["paddingTop"], JAM.policy.p3), 10);
      if (!v22922) {
        v22922 = 0;
      }
      var v11834 = v17456 + v22922;
      var v29142;
      if (f$$60) {
        v29142 = JAM.call(Math.max, Math, [d$$185.scrollWidth, d$$185.offsetWidth], JAM.policy.p3);
      } else {
        v29142 = d$$185.offsetWidth;
      }
      var v28431 = v29142;
      var v29904 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v29143 = parseInt(JAM.call(v29904.css, v29904, ["borderLeftWidth"], JAM.policy.p3), 10);
      if (!v29143) {
        v29143 = 0;
      }
      var v27321 = v28431 - v29143;
      var v29610 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v28433 = parseInt(JAM.call(v29610.css, v29610, ["paddingRight"], JAM.policy.p3), 10);
      if (!v28433) {
        v28433 = 0;
      }
      var v11835 = v27321 - v28433 - this.helperProportions.width - this.margins.left - this.margins.right;
      var v29146;
      if (f$$60) {
        v29146 = JAM.call(Math.max, Math, [d$$185.scrollHeight, d$$185.offsetHeight], JAM.policy.p3);
      } else {
        v29146 = d$$185.offsetHeight;
      }
      var v28434 = v29146;
      var v29905 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v29147 = parseInt(JAM.call(v29905.css, v29905, ["borderTopWidth"], JAM.policy.p3), 10);
      if (!v29147) {
        v29147 = 0;
      }
      var v27324 = v28434 - v29147;
      var v29615 = JAM.call(a$$426, null, [d$$185], JAM.policy.p3);
      var v28436 = parseInt(JAM.call(v29615.css, v29615, ["paddingBottom"], JAM.policy.p3), 10);
      if (!v28436) {
        v28436 = 0;
      }
      this.containment = [v11833, v11834, v11835, v27324 - v28436 - this.helperProportions.height - this.margins.top - this.margins.bottom];
      this.relative_container = c$$237;
    } else {
      var v4916 = b$$294.containment.constructor == Array;
      if (v4916) {
        this.containment = b$$294.containment;
      }
    }
    return;
  }
  function v1184() {
    var v11838 = this.helper;
    var v4918 = JAM.call(v11838.outerWidth, v11838, [], JAM.policy.p3);
    var v11839 = this.helper;
    this.helperProportions = {width:v4918, height:JAM.call(v11839.outerHeight, v11839, [], JAM.policy.p3)};
    return;
  }
  function v1183() {
    var v22929 = this.element;
    var v11840 = parseInt(JAM.call(v22929.css, v22929, ["marginLeft"], JAM.policy.p3), 10);
    if (!v11840) {
      v11840 = 0;
    }
    var v4920 = v11840;
    var v22930 = this.element;
    var v11841 = parseInt(JAM.call(v22930.css, v22930, ["marginTop"], JAM.policy.p3), 10);
    if (!v11841) {
      v11841 = 0;
    }
    var v4921 = v11841;
    var v22931 = this.element;
    var v11842 = parseInt(JAM.call(v22931.css, v22931, ["marginRight"], JAM.policy.p3), 10);
    if (!v11842) {
      v11842 = 0;
    }
    var v4922 = v11842;
    var v22932 = this.element;
    var v11843 = parseInt(JAM.call(v22932.css, v22932, ["marginBottom"], JAM.policy.p3), 10);
    if (!v11843) {
      v11843 = 0;
    }
    this.margins = {left:v4920, top:v4921, right:v4922, bottom:v11843};
    return;
  }
  function v1182() {
    if (this.cssPosition == "relative") {
      var v4924 = this.element;
      var a$$427 = JAM.call(v4924.position, v4924, [], JAM.policy.p3);
      var v17471 = a$$427.top;
      var v27327 = this.helper;
      var v22933 = parseInt(JAM.call(v27327.css, v27327, ["top"], JAM.policy.p3), 10);
      if (!v22933) {
        v22933 = 0;
      }
      var v11845 = v17471 - v22933;
      var v17473 = this.scrollParent;
      var v4925 = v11845 + JAM.call(v17473.scrollTop, v17473, [], JAM.policy.p3);
      var v17474 = a$$427.left;
      var v27328 = this.helper;
      var v22934 = parseInt(JAM.call(v27328.css, v27328, ["left"], JAM.policy.p3), 10);
      if (!v22934) {
        v22934 = 0;
      }
      var v11847 = v17474 - v22934;
      var v17476 = this.scrollParent;
      return {top:v4925, left:v11847 + JAM.call(v17476.scrollLeft, v17476, [], JAM.policy.p3)};
    }
    return {top:0, left:0};
  }
  function v1181() {
    var v4928 = this.helper;
    var v31103 = JAM.call(v4928.offsetParent, v4928, [], JAM.policy.p3);
    this.offsetParent = v31103;
    var v4929 = this.offsetParent;
    var b$$293 = JAM.call(v4929.offset, v4929, [], JAM.policy.p3);
    var v17477 = this.cssPosition == "absolute";
    if (v17477) {
      v17477 = this.scrollParent[0] != document;
    }
    var v11849 = v17477;
    if (v11849) {
      var v17478 = a$$426.ui;
      v11849 = JAM.call(v17478.contains, v17478, [this.scrollParent[0], this.offsetParent[0]], JAM.policy.p3);
    }
    var v4930 = v11849;
    if (v4930) {
      var v22939 = b$$293.left;
      var v25554 = this.scrollParent;
      b$$293.left = v22939 + JAM.call(v25554.scrollLeft, v25554, [], JAM.policy.p3);
      var v22941 = b$$293.top;
      var v25555 = this.scrollParent;
      b$$293.top = v22941 + JAM.call(v25555.scrollTop, v25555, [], JAM.policy.p3);
    }
    var v11850 = this.offsetParent[0] == document.body;
    if (!v11850) {
      var v22944 = this.offsetParent[0].tagName;
      if (v22944) {
        var v27330 = this.offsetParent[0].tagName;
        v22944 = JAM.call(v27330.toLowerCase, v27330, [], JAM.policy.p3) == "html";
      }
      var v17483 = v22944;
      if (v17483) {
        v17483 = a$$426.browser.msie;
      }
      v11850 = v17483;
    }
    if (v11850) {
      b$$293 = {top:0, left:0};
    }
    var v11851 = b$$293.top;
    var v25558 = this.offsetParent;
    var v17485 = parseInt(JAM.call(v25558.css, v25558, ["borderTopWidth"], JAM.policy.p3), 10);
    if (!v17485) {
      v17485 = 0;
    }
    var v4932 = v11851 + v17485;
    var v11853 = b$$293.left;
    var v25559 = this.offsetParent;
    var v17486 = parseInt(JAM.call(v25559.css, v25559, ["borderLeftWidth"], JAM.policy.p3), 10);
    if (!v17486) {
      v17486 = 0;
    }
    return {top:v4932, left:v11853 + v17486};
  }
  function v1180(b$$292) {
    var v27331 = typeof b$$292 == "string";
    if (v27331) {
      b$$292 = JAM.call(b$$292.split, b$$292, [" "], JAM.policy.p3);
    }
    var v27332 = JAM.call(a$$426.isArray, a$$426, [b$$292], JAM.policy.p3);
    if (v27332) {
      var v28439 = +b$$292[0];
      var v29152 = +b$$292[1];
      if (!v29152) {
        v29152 = 0;
      }
      b$$292 = {left:v28439, top:v29152};
    }
    var v25560 = "left" in b$$292;
    if (v25560) {
      this.offset.click.left = b$$292.left + this.margins.left;
    }
    var v22950 = "right" in b$$292;
    if (v22950) {
      this.offset.click.left = this.helperProportions.width - b$$292.right + this.margins.left;
    }
    var v17487 = "top" in b$$292;
    if (v17487) {
      this.offset.click.top = b$$292.top + this.margins.top;
    }
    var v11855 = "bottom" in b$$292;
    if (v11855) {
      this.offset.click.top = this.helperProportions.height - b$$292.bottom + this.margins.top;
    }
    return;
  }
  function v1179(b$$291) {
    var c$$236 = this.options;
    var v4934;
    if (JAM.call(a$$426.isFunction, a$$426, [c$$236.helper], JAM.policy.p3)) {
      var v17490 = c$$236.helper;
      v4934 = JAM.call(a$$426, null, [JAM.call(v17490.apply, v17490, [this.element[0], [b$$291]], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var v11857;
      if (c$$236.helper == "clone") {
        var v22957 = this.element;
        var v17493 = JAM.call(v22957.clone, v22957, [], JAM.policy.p3);
        v11857 = JAM.call(v17493.removeAttr, v17493, ["id"], JAM.policy.p3);
      } else {
        v11857 = this.element;
      }
      v4934 = v11857;
    }
    var d$$184 = v4934;
    var v17495 = JAM.call(d$$184.parents, d$$184, ["body"], JAM.policy.p3).length;
    if (!v17495) {
      var v25568;
      if (c$$236.appendTo == "parent") {
        v25568 = this.element[0].parentNode;
      } else {
        v25568 = c$$236.appendTo;
      }
      JAM.call(d$$184.appendTo, d$$184, [v25568], JAM.policy.p3);
    }
    var v22961 = d$$184[0] != this.element[0];
    if (v22961) {
      v22961 = !JAM.call(/(fixed|absolute)/.test, /(fixed|absolute)/, [JAM.call(d$$184.css, d$$184, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v17496 = v22961;
    if (v17496) {
      JAM.call(d$$184.css, d$$184, ["position", "absolute"], JAM.policy.p3);
    }
    return d$$184;
  }
  function v1178(b$$290) {
    function v1177() {
      var v4935 = this == b$$290.target;
      if (v4935) {
        c$$235 = !0;
      }
      return;
    }
    var v4936;
    var v17497 = !this.options.handle;
    if (!v17497) {
      v17497 = !JAM.call(a$$426, null, [this.options.handle, this.element], JAM.policy.p3).length;
    }
    if (v17497) {
      v4936 = !0;
    } else {
      v4936 = !1;
    }
    var c$$235 = v4936;
    var v22965 = JAM.call(a$$426, null, [this.options.handle, this.element], JAM.policy.p3);
    var v17498 = JAM.call(v22965.find, v22965, ["*"], JAM.policy.p3);
    var v11861 = JAM.call(v17498.andSelf, v17498, [], JAM.policy.p3);
    JAM.call(v11861.each, v11861, [v1177], JAM.policy.p3);
    return c$$235;
  }
  function v1176() {
    var v11862;
    var v22966 = this.helper;
    if (JAM.call(v22966.is, v22966, [".ui-draggable-dragging"], JAM.policy.p3)) {
      v11862 = JAM.call(this._mouseUp, this, [{}], JAM.policy.p3);
    } else {
      v11862 = JAM.call(this._clear, this, [], JAM.policy.p3);
    }
    v11862;
    return this;
  }
  function v1175(b$$289) {
    function v1174() {
      var v4937 = this.parentNode;
      JAM.call(v4937.removeChild, v4937, [this], JAM.policy.p3);
      return;
    }
    var v17500 = JAM.call(a$$426, null, ["div.ui-draggable-iframeFix"], JAM.policy.p3);
    JAM.call(v17500.each, v17500, [v1174], JAM.policy.p3);
    var v17501 = a$$426.ui.ddmanager;
    if (v17501) {
      var v22968 = a$$426.ui.ddmanager;
      JAM.call(v22968.dragStop, v22968, [this, b$$289], JAM.policy.p3);
    }
    var v11863 = a$$426.ui.mouse.prototype._mouseUp;
    return JAM.call(v11863.call, v11863, [this, b$$289], JAM.policy.p3);
  }
  function v1173(b$$288) {
    function v1172() {
      var v4938 = JAM.call(f$$59._trigger, f$$59, ["stop", b$$288], JAM.policy.p3) !== !1;
      if (v4938) {
        JAM.call(f$$59._clear, f$$59, [], JAM.policy.p3);
      }
      return;
    }
    var c$$234 = !1;
    var v17503 = a$$426.ui.ddmanager;
    if (v17503) {
      v17503 = !this.options.dropBehaviour;
    }
    var v11866 = v17503;
    if (v11866) {
      var v17504 = a$$426.ui.ddmanager;
      c$$234 = JAM.call(v17504.drop, v17504, [this, b$$288], JAM.policy.p3);
    }
    var v11867 = this.dropped;
    if (v11867) {
      c$$234 = this.dropped;
      this.dropped = !1;
    }
    var d$$183 = this.element[0];
    var e$$182 = !1;
    var v11868 = d$$183;
    if (v11868) {
      v11868 = d$$183 = d$$183.parentNode;
    }
    var v4941 = v11868;
    for (;v4941;) {
      var v4940 = d$$183 == document;
      if (v4940) {
        e$$182 = !0;
      }
      var v11869 = d$$183;
      if (v11869) {
        v11869 = d$$183 = d$$183.parentNode;
      }
      v4941 = v11869;
    }
    var v11870 = !e$$182;
    if (v11870) {
      v11870 = this.options.helper === "original";
    }
    if (v11870) {
      return !1;
    }
    var v25579 = this.options.revert == "invalid";
    if (v25579) {
      v25579 = !c$$234;
    }
    var v22974 = v25579;
    if (!v22974) {
      var v25580 = this.options.revert == "valid";
      if (v25580) {
        v25580 = c$$234;
      }
      v22974 = v25580;
    }
    var v17506 = v22974;
    if (!v17506) {
      v17506 = this.options.revert === !0;
    }
    var v11871 = v17506;
    if (!v11871) {
      var v17507 = JAM.call(a$$426.isFunction, a$$426, [this.options.revert], JAM.policy.p3);
      if (v17507) {
        var v22979 = this.options.revert;
        v17507 = JAM.call(v22979.call, v22979, [this.element, c$$234], JAM.policy.p3);
      }
      v11871 = v17507;
    }
    if (v11871) {
      var f$$59 = this;
      var v4943 = JAM.call(a$$426, null, [this.helper], JAM.policy.p3);
      JAM.call(v4943.animate, v4943, [this.originalPosition, parseInt(this.options.revertDuration, 10), v1172], JAM.policy.p3);
    } else {
      var v4946 = JAM.call(this._trigger, this, ["stop", b$$288], JAM.policy.p3) !== !1;
      if (v4946) {
        JAM.call(this._clear, this, [], JAM.policy.p3);
      }
    }
    return !1;
  }
  function v1171(b$$287, c$$233) {
    var v31104 = JAM.call(this._generatePosition, this, [b$$287], JAM.policy.p3);
    this.position = v31104;
    var v31105 = JAM.call(this._convertPositionTo, this, ["absolute"], JAM.policy.p3);
    this.positionAbs = v31105;
    if (!c$$233) {
      var d$$182 = JAM.call(this._uiHash, this, [], JAM.policy.p3);
      if (JAM.call(this._trigger, this, ["drag", b$$287, d$$182], JAM.policy.p3) === !1) {
        JAM.call(this._mouseUp, this, [{}], JAM.policy.p3);
        return !1;
      }
      this.position = d$$182.position;
    }
    var v11878 = !this.options.axis;
    if (!v11878) {
      v11878 = this.options.axis != "y";
    }
    if (v11878) {
      this.helper[0].style.left = this.position.left + "px";
    }
    var v11881 = !this.options.axis;
    if (!v11881) {
      v11881 = this.options.axis != "x";
    }
    if (v11881) {
      this.helper[0].style.top = this.position.top + "px";
    }
    var v11884 = a$$426.ui.ddmanager;
    if (v11884) {
      var v17521 = a$$426.ui.ddmanager;
      JAM.call(v17521.drag, v17521, [this, b$$287], JAM.policy.p3);
    }
    return !1;
  }
  function v1170(b$$286) {
    var c$$232 = this.options;
    var v31106 = JAM.call(this._createHelper, this, [b$$286], JAM.policy.p3);
    this.helper = v31106;
    var v30738 = this.helper;
    JAM.call(v30738.addClass, v30738, ["ui-draggable-dragging"], JAM.policy.p3);
    JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
    var v30616 = a$$426.ui.ddmanager;
    if (v30616) {
      a$$426.ui.ddmanager.current = this;
    }
    JAM.call(this._cacheMargins, this, [], JAM.policy.p3);
    var v30348 = this.helper;
    var v31107 = JAM.call(v30348.css, v30348, ["position"], JAM.policy.p3);
    this.cssPosition = v31107;
    var v30150 = this.helper;
    var v31108 = JAM.call(v30150.scrollParent, v30150, [], JAM.policy.p3);
    this.scrollParent = v31108;
    var v29906 = this.element;
    var v31109 = JAM.call(v29906.offset, v29906, [], JAM.policy.p3);
    this.offset = this.positionAbs = v31109;
    this.offset = {top:this.offset.top - this.margins.top, left:this.offset.left - this.margins.left};
    JAM.call(a$$426.extend, a$$426, [this.offset, {click:{left:b$$286.pageX - this.offset.left, top:b$$286.pageY - this.offset.top}, parent:JAM.call(this._getParentOffset, this, [], JAM.policy.p3), relative:JAM.call(this._getRelativeOffset, this, [], JAM.policy.p3)}], JAM.policy.p3);
    var v31110 = JAM.call(this._generatePosition, this, [b$$286], JAM.policy.p3);
    this.originalPosition = this.position = v31110;
    this.originalPageX = b$$286.pageX;
    this.originalPageY = b$$286.pageY;
    var v22986 = c$$232.cursorAt;
    if (v22986) {
      JAM.call(this._adjustOffsetFromHelper, this, [c$$232.cursorAt], JAM.policy.p3);
    }
    var v17522 = c$$232.containment;
    if (v17522) {
      JAM.call(this._setContainment, this, [], JAM.policy.p3);
    }
    var v11885;
    if (JAM.call(this._trigger, this, ["start", b$$286], JAM.policy.p3) === !1) {
      JAM.call(this._clear, this, [], JAM.policy.p3);
      v11885 = !1;
    } else {
      JAM.call(this._cacheHelperProportions, this, [], JAM.policy.p3);
      var v29157 = a$$426.ui.ddmanager;
      if (v29157) {
        v29157 = !c$$232.dropBehaviour;
      }
      var v28452 = v29157;
      if (v28452) {
        var v29158 = a$$426.ui.ddmanager;
        JAM.call(v29158.prepareOffsets, v29158, [this, b$$286], JAM.policy.p3);
      }
      JAM.call(this._mouseDrag, this, [b$$286, !0], JAM.policy.p3);
      var v25586 = a$$426.ui.ddmanager;
      if (v25586) {
        var v27350 = a$$426.ui.ddmanager;
        JAM.call(v27350.dragStart, v27350, [this, b$$286], JAM.policy.p3);
      }
      v11885 = !0;
    }
    return v11885;
  }
  function v1169(b$$285) {
    function v1168() {
      var v17524 = JAM.call(a$$426, null, ['<div class="ui-draggable-iframeFix" style="background: #fff;"></div>'], JAM.policy.p3);
      var v11886 = JAM.call(v17524.css, v17524, [{width:this.offsetWidth + "px", height:this.offsetHeight + "px", position:"absolute", opacity:"0.001", zIndex:1E3}], JAM.policy.p3);
      var v17526 = JAM.call(a$$426, null, [this], JAM.policy.p3);
      var v4954 = JAM.call(v11886.css, v11886, [JAM.call(v17526.offset, v17526, [], JAM.policy.p3)], JAM.policy.p3);
      JAM.call(v4954.appendTo, v4954, ["body"], JAM.policy.p3);
      return;
    }
    var c$$231 = this.options;
    var v4955;
    var v22991 = this.helper;
    if (!v22991) {
      v22991 = c$$231.disabled;
    }
    var v17527 = v22991;
    if (!v17527) {
      var v22992 = JAM.call(a$$426, null, [b$$285.target], JAM.policy.p3);
      v17527 = JAM.call(v22992.is, v22992, [".ui-resizable-handle"], JAM.policy.p3);
    }
    if (v17527) {
      v4955 = !1;
    } else {
      var v31111 = JAM.call(this._getHandle, this, [b$$285], JAM.policy.p3);
      this.handle = v31111;
      var v17528;
      if (this.handle) {
        var v25591 = c$$231.iframeFix;
        if (v25591) {
          var v29159;
          if (c$$231.iframeFix === !0) {
            v29159 = "iframe";
          } else {
            v29159 = c$$231.iframeFix;
          }
          var v27351 = JAM.call(a$$426, null, [v29159], JAM.policy.p3);
          JAM.call(v27351.each, v27351, [v1168], JAM.policy.p3);
        }
        v17528 = !0;
      } else {
        v17528 = !1;
      }
      v4955 = v17528;
    }
    return v4955;
  }
  function v1167() {
    var v17529 = this.element;
    if (!JAM.call(v17529.data, v17529, ["draggable"], JAM.policy.p3)) {
      return;
    }
    var v25592 = this.element;
    var v22995 = JAM.call(v25592.removeData, v25592, ["draggable"], JAM.policy.p3);
    var v17530 = JAM.call(v22995.unbind, v22995, [".draggable"], JAM.policy.p3);
    JAM.call(v17530.removeClass, v17530, ["ui-draggable ui-draggable-dragging ui-draggable-disabled"], JAM.policy.p3);
    JAM.call(this._mouseDestroy, this, [], JAM.policy.p3);
    return this;
  }
  function v1166() {
    var v25593 = this.options.helper == "original";
    if (v25593) {
      var v29160 = this.element;
      v25593 = !JAM.call(/^(?:r|a|f)/.test, /^(?:r|a|f)/, [JAM.call(v29160.css, v29160, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v22996 = v25593;
    if (v22996) {
      this.element[0].style.position = "relative";
    }
    var v22997 = this.options.addClasses;
    if (v22997) {
      var v25596 = this.element;
      JAM.call(v25596.addClass, v25596, ["ui-draggable"], JAM.policy.p3);
    }
    var v17531 = this.options.disabled;
    if (v17531) {
      var v22999 = this.element;
      JAM.call(v22999.addClass, v22999, ["ui-draggable-disabled"], JAM.policy.p3);
    }
    JAM.call(this._mouseInit, this, [], JAM.policy.p3);
    return;
  }
  JAM.call(a$$426.widget, a$$426, ["ui.draggable", a$$426.ui.mouse, {widgetEventPrefix:"drag", options:{addClasses:!0, appendTo:"parent", axis:!1, connectToSortable:!1, containment:!1, cursor:"auto", cursorAt:!1, grid:!1, handle:!1, helper:"original", iframeFix:!1, opacity:!1, refreshPositions:!1, revert:!1, revertDuration:500, scope:"default", scroll:!0, scrollSensitivity:20, scrollSpeed:20, snap:!1, snapMode:"both", snapTolerance:20, stack:!1, zIndex:!1}, _create:v1166, destroy:v1167, _mouseCapture:v1169, 
  _mouseStart:v1170, _mouseDrag:v1171, _mouseStop:v1173, _mouseUp:v1175, cancel:v1176, _getHandle:v1178, _createHelper:v1179, _adjustOffsetFromHelper:v1180, _getParentOffset:v1181, _getRelativeOffset:v1182, _cacheMargins:v1183, _cacheHelperProportions:v1184, _setContainment:v1185, _convertPositionTo:v1186, _generatePosition:v1187, _clear:v1188, _trigger:v1189, plugins:{}, _uiHash:v1190}], JAM.policy.p3);
  JAM.call(a$$426.extend, a$$426, [a$$426.ui.draggable, {version:"1.8.24"}], JAM.policy.p3);
  var v29161 = a$$426.ui.plugin;
  JAM.call(v29161.add, v29161, ["draggable", "connectToSortable", {start:v1192, stop:v1194, drag:v1197}], JAM.policy.p3);
  var v28458 = a$$426.ui.plugin;
  JAM.call(v28458.add, v28458, ["draggable", "cursor", {start:v1198, stop:v1199}], JAM.policy.p3);
  var v27355 = a$$426.ui.plugin;
  JAM.call(v27355.add, v27355, ["draggable", "opacity", {start:v1200, stop:v1201}], JAM.policy.p3);
  var v25597 = a$$426.ui.plugin;
  JAM.call(v25597.add, v25597, ["draggable", "scroll", {start:v1202, drag:v1203}], JAM.policy.p3);
  var v23000 = a$$426.ui.plugin;
  JAM.call(v23000.add, v23000, ["draggable", "snap", {start:v1205, drag:v1206}], JAM.policy.p3);
  var v17532 = a$$426.ui.plugin;
  JAM.call(v17532.add, v17532, ["draggable", "stack", {start:v1209}], JAM.policy.p3);
  var v11890 = a$$426.ui.plugin;
  JAM.call(v11890.add, v11890, ["draggable", "zIndex", {start:v1210, stop:v1211}], JAM.policy.p3);
  return;
}
function v1165(a$$415, b$$279) {
  function v1164(a$$425) {
    return !0;
  }
  function v1163(a$$424) {
    return;
  }
  function v1162(a$$423) {
    return;
  }
  function v1161(a$$422) {
    return;
  }
  function v1160(a$$421) {
    return this.mouseDelayMet;
  }
  function v1159(a$$420) {
    return JAM.call(Math.max, Math, [JAM.call(Math.abs, Math, [this._mouseDownEvent.pageX - a$$420.pageX], JAM.policy.p3), JAM.call(Math.abs, Math, [this._mouseDownEvent.pageY - a$$420.pageY], JAM.policy.p3)], JAM.policy.p3) >= this.options.distance;
  }
  function v1158(b$$283) {
    var v23007 = JAM.call(a$$415, null, [document], JAM.policy.p3);
    var v17537 = JAM.call(v23007.unbind, v23007, ["mousemove." + this.widgetName, this._mouseMoveDelegate], JAM.policy.p3);
    JAM.call(v17537.unbind, v17537, ["mouseup." + this.widgetName, this._mouseUpDelegate], JAM.policy.p3);
    var v17540 = this._mouseStarted;
    if (v17540) {
      this._mouseStarted = !1;
      var v27358 = b$$283.target == this._mouseDownEvent.target;
      if (v27358) {
        JAM.call(a$$415.data, a$$415, [b$$283.target, this.widgetName + ".preventClickEvent", !0], JAM.policy.p3);
      }
      JAM.call(this._mouseStop, this, [b$$283], JAM.policy.p3);
    }
    return !1;
  }
  function v1157(b$$282) {
    var v4959;
    var v23011 = !a$$415.browser.msie;
    if (!v23011) {
      v23011 = document.documentMode >= 9;
    }
    var v17541 = v23011;
    if (!v17541) {
      v17541 = !!b$$282.button;
    }
    if (v17541) {
      var v11895;
      if (this._mouseStarted) {
        JAM.call(this._mouseDrag, this, [b$$282], JAM.policy.p3);
        v11895 = JAM.call(b$$282.preventDefault, b$$282, [], JAM.policy.p3);
      } else {
        var v25607 = JAM.call(this._mouseDistanceMet, this, [b$$282], JAM.policy.p3);
        if (v25607) {
          v25607 = this.mouseDelayMet;
        }
        var v23014 = v25607;
        if (v23014) {
          this._mouseStarted = JAM.call(this._mouseStart, this, [this._mouseDownEvent, b$$282], JAM.policy.p3) !== !1;
          var v27362;
          if (this._mouseStarted) {
            v27362 = JAM.call(this._mouseDrag, this, [b$$282], JAM.policy.p3);
          } else {
            v27362 = JAM.call(this._mouseUp, this, [b$$282], JAM.policy.p3);
          }
          v27362;
        }
        v11895 = !this._mouseStarted;
      }
      v4959 = v11895;
    } else {
      v4959 = JAM.call(this._mouseUp, this, [b$$282], JAM.policy.p3);
    }
    return v4959;
  }
  function v1156(b$$281) {
    function v1155(a$$419) {
      return JAM.call(d$$181._mouseUp, d$$181, [a$$419], JAM.policy.p3);
    }
    function v1154(a$$418) {
      return JAM.call(d$$181._mouseMove, d$$181, [a$$418], JAM.policy.p3);
    }
    function v1153() {
      d$$181.mouseDelayMet = !0;
      return;
    }
    if (c$$229) {
      return;
    }
    var v11897 = this._mouseStarted;
    if (v11897) {
      JAM.call(this._mouseUp, this, [b$$281], JAM.policy.p3);
    }
    this._mouseDownEvent = b$$281;
    var d$$181 = this;
    var e$$181 = b$$281.which == 1;
    var v4961;
    var v17543 = typeof this.options.cancel == "string";
    if (v17543) {
      v17543 = b$$281.target.nodeName;
    }
    if (v17543) {
      var v17544 = JAM.call(a$$415, null, [b$$281.target], JAM.policy.p3);
      v4961 = JAM.call(v17544.closest, v17544, [this.options.cancel], JAM.policy.p3).length;
    } else {
      v4961 = !1;
    }
    var f$$58 = v4961;
    var v17546 = !e$$181;
    if (!v17546) {
      v17546 = f$$58;
    }
    var v11900 = v17546;
    if (!v11900) {
      v11900 = !JAM.call(this._mouseCapture, this, [b$$281], JAM.policy.p3);
    }
    if (v11900) {
      return !0;
    }
    this.mouseDelayMet = !this.options.delay;
    var v11902 = this.mouseDelayMet;
    if (!v11902) {
      var v31112 = JAM.call(setTimeout, null, [v1153, this.options.delay]);
      this._mouseDelayTimer = v31112;
    }
    var v11903 = JAM.call(this._mouseDistanceMet, this, [b$$281], JAM.policy.p3);
    if (v11903) {
      v11903 = this.mouseDelayMet;
    }
    if (v11903) {
      this._mouseStarted = JAM.call(this._mouseStart, this, [b$$281], JAM.policy.p3) !== !1;
      if (!this._mouseStarted) {
        JAM.call(b$$281.preventDefault, b$$281, [], JAM.policy.p3);
        return !0;
      }
    }
    var v28468 = !0 === JAM.call(a$$415.data, a$$415, [b$$281.target, this.widgetName + ".preventClickEvent"], JAM.policy.p3);
    if (v28468) {
      JAM.call(a$$415.removeData, a$$415, [b$$281.target, this.widgetName + ".preventClickEvent"], JAM.policy.p3);
    }
    this._mouseMoveDelegate = v1154;
    this._mouseUpDelegate = v1155;
    var v27364 = JAM.call(a$$415, null, [document], JAM.policy.p3);
    var v25609 = JAM.call(v27364.bind, v27364, ["mousemove." + this.widgetName, this._mouseMoveDelegate], JAM.policy.p3);
    JAM.call(v25609.bind, v25609, ["mouseup." + this.widgetName, this._mouseUpDelegate], JAM.policy.p3);
    JAM.call(b$$281.preventDefault, b$$281, [], JAM.policy.p3);
    c$$229 = !0;
    return !0;
  }
  function v1152() {
    var v11905 = this.element;
    JAM.call(v11905.unbind, v11905, ["." + this.widgetName], JAM.policy.p3);
    var v11907 = this._mouseMoveDelegate;
    if (v11907) {
      var v23022 = JAM.call(a$$415, null, [document], JAM.policy.p3);
      var v17553 = JAM.call(v23022.unbind, v23022, ["mousemove." + this.widgetName, this._mouseMoveDelegate], JAM.policy.p3);
      JAM.call(v17553.unbind, v17553, ["mouseup." + this.widgetName, this._mouseUpDelegate], JAM.policy.p3);
    }
    return;
  }
  function v1151() {
    function v1150(c$$230) {
      if (!0 === JAM.call(a$$415.data, a$$415, [c$$230.target, b$$280.widgetName + ".preventClickEvent"], JAM.policy.p3)) {
        JAM.call(a$$415.removeData, a$$415, [c$$230.target, b$$280.widgetName + ".preventClickEvent"], JAM.policy.p3);
        JAM.call(c$$230.stopImmediatePropagation, c$$230, [], JAM.policy.p3);
        return !1;
      }
      return;
    }
    function v1149(a$$417) {
      return JAM.call(b$$280._mouseDown, b$$280, [a$$417], JAM.policy.p3);
    }
    var b$$280 = this;
    var v17560 = this.element;
    var v11910 = JAM.call(v17560.bind, v17560, ["mousedown." + this.widgetName, v1149], JAM.policy.p3);
    JAM.call(v11910.bind, v11910, ["click." + this.widgetName, v1150], JAM.policy.p3);
    this.started = !1;
    return;
  }
  function v1148(a$$416) {
    c$$229 = !1;
    return;
  }
  var c$$229 = !1;
  var v11912 = JAM.call(a$$415, null, [document], JAM.policy.p3);
  JAM.call(v11912.mouseup, v11912, [v1148], JAM.policy.p3);
  JAM.call(a$$415.widget, a$$415, ["ui.mouse", {options:{cancel:":input,option", distance:1, delay:0}, _mouseInit:v1151, _mouseDestroy:v1152, _mouseDown:v1156, _mouseMove:v1157, _mouseUp:v1158, _mouseDistanceMet:v1159, _mouseDelayMet:v1160, _mouseStart:v1161, _mouseDrag:v1162, _mouseStop:v1163, _mouseCapture:v1164}], JAM.policy.p3);
  return;
}
function v1147(a$$410, b$$266) {
  function v1146(b$$278, c$$228, d$$180) {
    var e$$180;
    var f$$57;
    var g$$106 = this.options[b$$278];
    d$$180 = d$$180 || {};
    c$$228 = JAM.call(a$$410.Event, a$$410, [c$$228], JAM.policy.p3);
    var v25613;
    if (b$$278 === this.widgetEventPrefix) {
      v25613 = b$$278;
    } else {
      v25613 = this.widgetEventPrefix + b$$278;
    }
    var v23029 = v25613;
    var v31113 = JAM.call(v23029.toLowerCase, v23029, [], JAM.policy.p3);
    c$$228.type = v31113;
    c$$228.target = this.element[0];
    f$$57 = c$$228.originalEvent;
    if (f$$57) {
      for (e$$180 in f$$57) {
        var v4969 = e$$180 in c$$228;
        if (!v4969) {
          introspect(JAM.policy.p2) {
            c$$228[e$$180] = f$$57[e$$180];
          }
        }
      }
    }
    var v11915 = this.element;
    JAM.call(v11915.trigger, v11915, [c$$228, d$$180], JAM.policy.p3);
    var v23030 = JAM.call(a$$410.isFunction, a$$410, [g$$106], JAM.policy.p3);
    if (v23030) {
      v23030 = JAM.call(g$$106.call, g$$106, [this.element[0], c$$228, d$$180], JAM.policy.p3) === !1;
    }
    var v17565 = v23030;
    if (!v17565) {
      v17565 = JAM.call(c$$228.isDefaultPrevented, c$$228, [], JAM.policy.p3);
    }
    return !v17565;
  }
  function v1145() {
    return JAM.call(this._setOption, this, ["disabled", !0], JAM.policy.p3);
  }
  function v1144() {
    return JAM.call(this._setOption, this, ["disabled", !1], JAM.policy.p3);
  }
  function v1143(a$$414, b$$277) {
    var v17566 = this.options;
    introspect(JAM.policy.p2) {
      v17566[a$$414] = b$$277;
    }
    var v17567 = a$$414 === "disabled";
    if (v17567) {
      var v25616 = JAM.call(this.widget, this, [], JAM.policy.p3);
      var v27371;
      if (b$$277) {
        v27371 = "addClass";
      } else {
        v27371 = "removeClass";
      }
      var v23032 = JAM.call(v25616[v27371], v25616, [this.widgetBaseClass + "-disabled" + " " + "ui-state-disabled"], JAM.policy.p3);
      JAM.call(v23032.attr, v23032, ["aria-disabled", b$$277], JAM.policy.p3);
    }
    return this;
  }
  function v1142(b$$275) {
    function v1141(a$$413, b$$276) {
      JAM.call(c$$227._setOption, c$$227, [a$$413, b$$276], JAM.policy.p3);
      return;
    }
    var c$$227 = this;
    JAM.call(a$$410.each, a$$410, [b$$275, v1141], JAM.policy.p3);
    return this;
  }
  function v1140(c$$226, d$$179) {
    var e$$179 = c$$226;
    if (arguments.length === 0) {
      return JAM.call(a$$410.extend, a$$410, [{}, this.options], JAM.policy.p3);
    }
    if (typeof c$$226 == "string") {
      if (d$$179 === b$$266) {
        return this.options[c$$226];
      }
      e$$179 = {};
      introspect(JAM.policy.p2) {
        e$$179[c$$226] = d$$179;
      }
    }
    JAM.call(this._setOptions, this, [e$$179], JAM.policy.p3);
    return this;
  }
  function v1139() {
    return this.element;
  }
  function v1138() {
    var v17568 = this.element;
    var v11919 = JAM.call(v17568.unbind, v17568, ["." + this.widgetName], JAM.policy.p3);
    JAM.call(v11919.removeData, v11919, [this.widgetName], JAM.policy.p3);
    var v23034 = JAM.call(this.widget, this, [], JAM.policy.p3);
    var v17570 = JAM.call(v23034.unbind, v23034, ["." + this.widgetName], JAM.policy.p3);
    var v11921 = JAM.call(v17570.removeAttr, v17570, ["aria-disabled"], JAM.policy.p3);
    JAM.call(v11921.removeClass, v11921, [this.widgetBaseClass + "-disabled " + "ui-state-disabled"], JAM.policy.p3);
    return;
  }
  function v1137() {
    return;
  }
  function v1136() {
    return;
  }
  function v1135() {
    var v4977 = a$$410.metadata;
    if (v4977) {
      var v17572 = a$$410.metadata;
      v4977 = JAM.call(v17572.get, v17572, [this.element[0]], JAM.policy.p3)[this.widgetName];
    }
    return v4977;
  }
  function v1134(b$$274, c$$225) {
    function v1133() {
      JAM.call(d$$178.destroy, d$$178, [], JAM.policy.p3);
      return;
    }
    JAM.call(a$$410.data, a$$410, [c$$225, this.widgetName, this], JAM.policy.p3);
    var v31114 = JAM.call(a$$410, null, [c$$225], JAM.policy.p3);
    this.element = v31114;
    var v31115 = JAM.call(a$$410.extend, a$$410, [!0, {}, this.options, JAM.call(this._getCreateOptions, this, [], JAM.policy.p3), b$$274], JAM.policy.p3);
    this.options = v31115;
    var d$$178 = this;
    var v23038 = this.element;
    JAM.call(v23038.bind, v23038, ["remove." + this.widgetName, v1133], JAM.policy.p3);
    JAM.call(this._create, this, [], JAM.policy.p3);
    JAM.call(this._trigger, this, ["create"], JAM.policy.p3);
    JAM.call(this._init, this, [], JAM.policy.p3);
    return;
  }
  function v1132(a$$412, b$$273) {
    var v4978 = arguments.length;
    if (v4978) {
      JAM.call(this._createWidget, this, [a$$412, b$$273], JAM.policy.p3);
    }
    return;
  }
  function v1131(c$$224, d$$176) {
    function v1130(e$$178) {
      function v1129() {
        var b$$272 = JAM.call(a$$410.data, a$$410, [this, c$$224], JAM.policy.p3);
        var v4979;
        if (b$$272) {
          var v11928 = JAM.call(b$$272.option, b$$272, [e$$178 || {}], JAM.policy.p3);
          v4979 = JAM.call(v11928._init, v11928, [], JAM.policy.p3);
        } else {
          v4979 = JAM.call(a$$410.data, a$$410, [this, c$$224, JAM.new(d$$176, [e$$178, this])], JAM.policy.p3);
        }
        v4979;
        return;
      }
      function v1128() {
        var d$$177 = JAM.call(a$$410.data, a$$410, [this, c$$224], JAM.policy.p3);
        var v4980;
        var v17576 = d$$177;
        if (v17576) {
          v17576 = JAM.call(a$$410.isFunction, a$$410, [d$$177[e$$178]], JAM.policy.p3);
        }
        if (v17576) {
          var v11930 = d$$177[e$$178];
          v4980 = JAM.call(v11930.apply, v11930, [d$$177, g$$105], JAM.policy.p3);
        } else {
          v4980 = d$$177;
        }
        var f$$56 = v4980;
        var v11932 = f$$56 !== d$$177;
        if (v11932) {
          v11932 = f$$56 !== b$$266;
        }
        if (v11932) {
          h$$86 = f$$56;
          return !1;
        }
        return;
      }
      var f$$55 = typeof e$$178 == "string";
      var v4983 = Array.prototype.slice;
      var g$$105 = JAM.call(v4983.call, v4983, [arguments, 1], JAM.policy.p3);
      var h$$86 = this;
      var v11934;
      var v23041 = !f$$55;
      if (v23041) {
        v23041 = g$$105.length;
      }
      if (v23041) {
        var v17577 = a$$410.extend;
        var v23042 = [!0, e$$178];
        v11934 = JAM.call(v17577.apply, v17577, [null, JAM.call(v23042.concat, v23042, [g$$105], JAM.policy.p3)], JAM.policy.p3);
      } else {
        v11934 = e$$178;
      }
      e$$178 = v11934;
      var v11935;
      var v23043 = f$$55;
      if (v23043) {
        v23043 = JAM.call(e$$178.charAt, e$$178, [0], JAM.policy.p3) === "_";
      }
      if (v23043) {
        v11935 = h$$86;
      } else {
        var v23044;
        if (f$$55) {
          v23044 = JAM.call(this.each, this, [v1128], JAM.policy.p3);
        } else {
          v23044 = JAM.call(this.each, this, [v1129], JAM.policy.p3);
        }
        v23044;
        v11935 = h$$86;
      }
      return v11935;
    }
    var v4984 = a$$410.fn;
    introspect(JAM.policy.p2) {
      v4984[c$$224] = v1130;
    }
    return;
  }
  function v1127(b$$270, c$$222, d$$175) {
    function v1126(a$$411, b$$271) {
      var v4985 = arguments.length;
      if (v4985) {
        JAM.call(this._createWidget, this, [a$$411, b$$271], JAM.policy.p3);
      }
      return;
    }
    function v1125(c$$223) {
      return !!JAM.call(a$$410.data, a$$410, [c$$223, b$$270], JAM.policy.p3);
    }
    var e$$177 = JAM.call(b$$270.split, b$$270, ["."], JAM.policy.p3)[0];
    var f$$54;
    b$$270 = JAM.call(b$$270.split, b$$270, ["."], JAM.policy.p3)[1];
    f$$54 = e$$177 + "-" + b$$270;
    if (!d$$175) {
      d$$175 = c$$222;
      c$$222 = a$$410.Widget;
    }
    var v23045 = a$$410.expr[":"];
    introspect(JAM.policy.p2) {
      v23045[f$$54] = v1125;
    }
    var v17581 = a$$410[e$$177];
    if (!v17581) {
      v17581 = {};
    }
    introspect(JAM.policy.p2) {
      a$$410[e$$177] = v17581;
    }
    var v11937 = a$$410[e$$177];
    introspect(JAM.policy.p2) {
      v11937[b$$270] = v1126;
    }
    var g$$104 = new c$$222;
    var v17582 = g$$104;
    var v31116 = JAM.call(a$$410.extend, a$$410, [!0, {}, g$$104.options], JAM.policy.p3);
    v17582.options = v31116;
    var v17583 = a$$410[e$$177][b$$270];
    var v23050 = !0;
    var v27376 = a$$410[e$$177][b$$270].prototype.widgetEventPrefix;
    if (!v27376) {
      v27376 = b$$270;
    }
    var v31117 = JAM.call(a$$410.extend, a$$410, [v23050, g$$104, {namespace:e$$177, widgetName:b$$270, widgetEventPrefix:v27376, widgetBaseClass:f$$54}, d$$175], JAM.policy.p3);
    v17583.prototype = v31117;
    var v11938 = a$$410.widget;
    JAM.call(v11938.bridge, v11938, [b$$270, a$$410[e$$177][b$$270]], JAM.policy.p3);
    return;
  }
  function v1124(b$$268, c$$221) {
    function v1123() {
      function v1122() {
        try {
          var v4988 = JAM.call(a$$410, null, [this], JAM.policy.p3);
          JAM.call(v4988.triggerHandler, v4988, ["remove"], JAM.policy.p3);
        } catch (b$$269) {
        }
        return;
      }
      if (!c$$221) {
        var v23052 = !b$$268;
        if (!v23052) {
          v23052 = JAM.call(a$$410.filter, a$$410, [b$$268, [this]], JAM.policy.p3).length;
        }
        var v17585 = v23052;
        if (v17585) {
          var v25627 = JAM.call(a$$410, null, ["*", this], JAM.policy.p3);
          var v23053 = JAM.call(v25627.add, v25627, [[this]], JAM.policy.p3);
          JAM.call(v23053.each, v23053, [v1122], JAM.policy.p3);
        }
      }
      return JAM.call(d$$173.call, d$$173, [JAM.call(a$$410, null, [this], JAM.policy.p3), b$$268, c$$221], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v1123], JAM.policy.p3);
  }
  function v1121(b$$267) {
    var d$$174 = 0;
    var e$$176;
    var v4990 = (e$$176 = b$$267[d$$174]) != null;
    for (;v4990;) {
      try {
        var v4989 = JAM.call(a$$410, null, [e$$176], JAM.policy.p3);
        JAM.call(v4989.triggerHandler, v4989, ["remove"], JAM.policy.p3);
      } catch (f$$53) {
      }
      d$$174++;
      v4990 = (e$$176 = b$$267[d$$174]) != null;
    }
    JAM.call(c$$220, null, [b$$267], JAM.policy.p3);
    return;
  }
  if (a$$410.cleanData) {
    var c$$220 = a$$410.cleanData;
    a$$410.cleanData = v1121;
  } else {
    var d$$173 = a$$410.fn.remove;
    a$$410.fn.remove = v1124;
  }
  a$$410.widget = v1127;
  a$$410.widget.bridge = v1131;
  a$$410.Widget = v1132;
  a$$410.Widget.prototype = {widgetName:"widget", widgetEventPrefix:"", options:{disabled:!1}, _createWidget:v1134, _getCreateOptions:v1135, _create:v1136, _init:v1137, destroy:v1138, widget:v1139, option:v1140, _setOptions:v1142, _setOption:v1143, enable:v1144, disable:v1145, _trigger:v1146};
  return;
}
function v1120(a$$405, b$$248) {
  function v1119(b$$265, c$$219, d$$172, e$$175, f$$52, g$$103) {
    var v11944 = a$$405.ui;
    var v4994 = JAM.call(v11944.isOverAxis, v11944, [b$$265, d$$172, f$$52], JAM.policy.p3);
    if (v4994) {
      var v11945 = a$$405.ui;
      v4994 = JAM.call(v11945.isOverAxis, v11945, [c$$219, e$$175, g$$103], JAM.policy.p3);
    }
    return v4994;
  }
  function v1118(a$$409, b$$264, c$$218) {
    var v4995 = a$$409 > b$$264;
    if (v4995) {
      v4995 = a$$409 < b$$264 + c$$218;
    }
    return v4995;
  }
  function v1117(b$$263, c$$217) {
    var v17588 = JAM.call(a$$405, null, [b$$263], JAM.policy.p3);
    if (JAM.call(v17588.css, v17588, ["overflow"], JAM.policy.p3) === "hidden") {
      return !1;
    }
    var v4997;
    var v17589 = c$$217;
    if (v17589) {
      v17589 = c$$217 === "left";
    }
    if (v17589) {
      v4997 = "scrollLeft";
    } else {
      v4997 = "scrollTop";
    }
    var d$$171 = v4997;
    var e$$174 = !1;
    var v4998;
    if (b$$263[d$$171] > 0) {
      v4998 = !0;
    } else {
      introspect(JAM.policy.p2) {
        b$$263[d$$171] = 1;
      }
      e$$174 = b$$263[d$$171] > 0;
      introspect(JAM.policy.p2) {
        b$$263[d$$171] = 0;
      }
      v4998 = e$$174;
    }
    return v4998;
  }
  function v1116(a$$408, b$$262) {
    var v4999;
    if (document.compareDocumentPosition) {
      v4999 = JAM.call(a$$408.compareDocumentPosition, a$$408, [b$$262], JAM.policy.p3) & 16;
    } else {
      var v11951 = a$$408 !== b$$262;
      if (v11951) {
        v11951 = JAM.call(a$$408.contains, a$$408, [b$$262], JAM.policy.p3);
      }
      v4999 = v11951;
    }
    return v4999;
  }
  function v1115(a$$407, b$$261, c$$216) {
    var d$$170 = a$$407.plugins[b$$261];
    var v11953 = !d$$170;
    if (!v11953) {
      v11953 = !a$$407.element[0].parentNode;
    }
    if (v11953) {
      return;
    }
    var e$$173 = 0;
    var v5003 = e$$173 < d$$170.length;
    for (;v5003;) {
      var v5002 = a$$407.options[d$$170[e$$173][0]];
      if (v5002) {
        var v11957 = d$$170[e$$173][1];
        JAM.call(v11957.apply, v11957, [a$$407.element, c$$216], JAM.policy.p3);
      }
      e$$173++;
      v5003 = e$$173 < d$$170.length;
    }
    return;
  }
  function v1114(b$$260, c$$215, d$$169) {
    var e$$172 = a$$405.ui[b$$260].prototype;
    var f$$51;
    for (f$$51 in d$$169) {
      var v11961 = e$$172.plugins;
      var v17595 = e$$172.plugins[f$$51];
      if (!v17595) {
        v17595 = [];
      }
      introspect(JAM.policy.p2) {
        v11961[f$$51] = v17595;
      }
      var v11962 = e$$172.plugins[f$$51];
      JAM.call(v11962.push, v11962, [[c$$215, d$$169[f$$51]]], JAM.policy.p3);
    }
    return;
  }
  function v1113() {
    var b$$259 = document.body;
    var c$$214 = JAM.call(b$$259.appendChild, b$$259, [c$$214 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3)], JAM.policy.p3);
    c$$214.offsetHeight;
    JAM.call(a$$405.extend, a$$405, [c$$214.style, {minHeight:"100px", height:"auto", padding:0, borderWidth:0}], JAM.policy.p3);
    a$$405.support.minHeight = c$$214.offsetHeight === 100;
    a$$405.support.selectstart = "onselectstart" in c$$214;
    JAM.call(b$$259.removeChild, b$$259, [c$$214], JAM.policy.p3).style.display = "none";
    return;
  }
  function v1112(b$$258) {
    var d$$168 = JAM.call(a$$405.attr, a$$405, [b$$258, "tabindex"], JAM.policy.p3);
    var e$$171 = isNaN(d$$168);
    var v11965 = e$$171;
    if (!v11965) {
      v11965 = d$$168 >= 0;
    }
    var v5006 = v11965;
    if (v5006) {
      v5006 = c$$204(b$$258, !e$$171);
    }
    return v5006;
  }
  function v1111(b$$257) {
    return c$$204(b$$257, !isNaN(JAM.call(a$$405.attr, a$$405, [b$$257, "tabindex"], JAM.policy.p3)));
  }
  function v1110(b$$256, c$$213, d$$167) {
    return !!JAM.call(a$$405.data, a$$405, [b$$256, d$$167[3]], JAM.policy.p3);
  }
  function v1109(b$$255) {
    function v1108(c$$212) {
      return !!JAM.call(a$$405.data, a$$405, [c$$212, b$$255], JAM.policy.p3);
    }
    return v1108;
  }
  function v1107(c$$208, d$$165) {
    function v1106(b$$254, c$$211) {
      function v1105() {
        var v5010 = JAM.call(a$$405, null, [this], JAM.policy.p3);
        JAM.call(v5010.css, v5010, [f$$49, h$$85(this, b$$254, !0, c$$211) + "px"], JAM.policy.p3);
        return;
      }
      var v5012;
      if (typeof b$$254 != "number") {
        var v11971 = g$$102["outer" + d$$165];
        v5012 = JAM.call(v11971.call, v11971, [this, b$$254], JAM.policy.p3);
      } else {
        v5012 = JAM.call(this.each, this, [v1105], JAM.policy.p3);
      }
      return v5012;
    }
    function v1104(c$$210) {
      function v1103() {
        var v5013 = JAM.call(a$$405, null, [this], JAM.policy.p3);
        JAM.call(v5013.css, v5013, [f$$49, h$$85(this, c$$210) + "px"], JAM.policy.p3);
        return;
      }
      var v5015;
      if (c$$210 === b$$248) {
        var v11974 = g$$102["inner" + d$$165];
        v5015 = JAM.call(v11974.call, v11974, [this], JAM.policy.p3);
      } else {
        v5015 = JAM.call(this.each, this, [v1103], JAM.policy.p3);
      }
      return v5015;
    }
    function h$$85(b$$253, c$$209, d$$166, f$$50) {
      function v1102() {
        var v23060 = c$$209;
        var v25634 = parseFloat(JAM.call(a$$405.curCSS, a$$405, [b$$253, "padding" + this, !0], JAM.policy.p3));
        if (!v25634) {
          v25634 = 0;
        }
        c$$209 = v23060 - v25634;
        if (d$$166) {
          var v25635 = c$$209;
          var v27380 = parseFloat(JAM.call(a$$405.curCSS, a$$405, [b$$253, "border" + this + "Width", !0], JAM.policy.p3));
          if (!v27380) {
            v27380 = 0;
          }
          c$$209 = v25635 - v27380;
        }
        if (f$$50) {
          var v23062 = c$$209;
          var v25637 = parseFloat(JAM.call(a$$405.curCSS, a$$405, [b$$253, "margin" + this, !0], JAM.policy.p3));
          if (!v25637) {
            v25637 = 0;
          }
          c$$209 = v23062 - v25637;
        }
        return;
      }
      JAM.call(a$$405.each, a$$405, [e$$170, v1102], JAM.policy.p3);
      return c$$209;
    }
    var v5016;
    if (d$$165 === "Width") {
      v5016 = ["Left", "Right"];
    } else {
      v5016 = ["Top", "Bottom"];
    }
    var e$$170 = v5016;
    var f$$49 = JAM.call(d$$165.toLowerCase, d$$165, [], JAM.policy.p3);
    var g$$102 = {innerWidth:a$$405.fn.innerWidth, innerHeight:a$$405.fn.innerHeight, outerWidth:a$$405.fn.outerWidth, outerHeight:a$$405.fn.outerHeight};
    var v11981 = a$$405.fn;
    var v11982 = "inner" + d$$165;
    introspect(JAM.policy.p2) {
      v11981[v11982] = v1104;
    }
    var v11983 = a$$405.fn;
    var v11984 = "outer" + d$$165;
    introspect(JAM.policy.p2) {
      v11983[v11984] = v1106;
    }
    return;
  }
  function v1101() {
    return JAM.call(this.unbind, this, [".ui-disableSelection"], JAM.policy.p3);
  }
  function v1100() {
    function v1099(a$$406) {
      JAM.call(a$$406.preventDefault, a$$406, [], JAM.policy.p3);
      return;
    }
    var v17607;
    if (a$$405.support.selectstart) {
      v17607 = "selectstart";
    } else {
      v17607 = "mousedown";
    }
    return JAM.call(this.bind, this, [v17607 + ".ui-disableSelection", v1099], JAM.policy.p3);
  }
  function v1098(c$$207) {
    if (c$$207 !== b$$248) {
      return JAM.call(this.css, this, ["zIndex", c$$207], JAM.policy.p3);
    }
    if (this.length) {
      var d$$164 = JAM.call(a$$405, null, [this[0]], JAM.policy.p3);
      var e$$169;
      var f$$48;
      var v11986 = d$$164.length;
      if (v11986) {
        v11986 = d$$164[0] !== document;
      }
      var v5027 = v11986;
      for (;v5027;) {
        e$$169 = JAM.call(d$$164.css, d$$164, ["position"], JAM.policy.p3);
        var v17609 = e$$169 === "absolute";
        if (!v17609) {
          v17609 = e$$169 === "relative";
        }
        var v11987 = v17609;
        if (!v11987) {
          v11987 = e$$169 === "fixed";
        }
        if (v11987) {
          f$$48 = parseInt(JAM.call(d$$164.css, d$$164, ["zIndex"], JAM.policy.p3), 10);
          var v11988 = !isNaN(f$$48);
          if (v11988) {
            v11988 = f$$48 !== 0;
          }
          if (v11988) {
            return f$$48;
          }
        }
        d$$164 = JAM.call(d$$164.parent, d$$164, [], JAM.policy.p3);
        var v11989 = d$$164.length;
        if (v11989) {
          v11989 = d$$164[0] !== document;
        }
        v5027 = v11989;
      }
    }
    return 0;
  }
  function v1097() {
    function v1096() {
      return JAM.call(/(auto|scroll)/.test, /(auto|scroll)/, [JAM.call(a$$405.curCSS, a$$405, [this, "overflow", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-y", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-x", 1], JAM.policy.p3)], JAM.policy.p3);
    }
    function v1095() {
      var v5030 = JAM.call(/(relative|absolute|fixed)/.test, /(relative|absolute|fixed)/, [JAM.call(a$$405.curCSS, a$$405, [this, "position", 1], JAM.policy.p3)], JAM.policy.p3);
      if (v5030) {
        v5030 = JAM.call(/(auto|scroll)/.test, /(auto|scroll)/, [JAM.call(a$$405.curCSS, a$$405, [this, "overflow", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-y", 1], JAM.policy.p3) + JAM.call(a$$405.curCSS, a$$405, [this, "overflow-x", 1], JAM.policy.p3)], JAM.policy.p3);
      }
      return v5030;
    }
    var b$$252;
    var v11994;
    var v25639 = a$$405.browser.msie;
    if (v25639) {
      v25639 = JAM.call(/(static|relative)/.test, /(static|relative)/, [JAM.call(this.css, this, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    var v23068 = v25639;
    if (!v23068) {
      v23068 = JAM.call(/absolute/.test, /absolute/, [JAM.call(this.css, this, ["position"], JAM.policy.p3)], JAM.policy.p3);
    }
    if (v23068) {
      var v23069 = JAM.call(this.parents, this, [], JAM.policy.p3);
      var v17617 = JAM.call(v23069.filter, v23069, [v1095], JAM.policy.p3);
      v11994 = b$$252 = JAM.call(v17617.eq, v17617, [0], JAM.policy.p3);
    } else {
      var v23070 = JAM.call(this.parents, this, [], JAM.policy.p3);
      var v17618 = JAM.call(v23070.filter, v23070, [v1096], JAM.policy.p3);
      v11994 = b$$252 = JAM.call(v17618.eq, v17618, [0], JAM.policy.p3);
    }
    v11994;
    var v11995;
    var v23071 = JAM.call(/fixed/.test, /fixed/, [JAM.call(this.css, this, ["position"], JAM.policy.p3)], JAM.policy.p3);
    if (!v23071) {
      v23071 = !b$$252.length;
    }
    if (v23071) {
      v11995 = JAM.call(a$$405, null, [document], JAM.policy.p3);
    } else {
      v11995 = b$$252;
    }
    return v11995;
  }
  function v1094(b$$251, c$$206) {
    function v1093() {
      function v1092() {
        var v11996 = JAM.call(a$$405, null, [d$$163], JAM.policy.p3);
        JAM.call(v11996.focus, v11996, [], JAM.policy.p3);
        if (c$$206) {
          JAM.call(c$$206.call, c$$206, [d$$163], JAM.policy.p3);
        }
        return;
      }
      var d$$163 = this;
      JAM.call(setTimeout, null, [v1092, b$$251]);
      return;
    }
    var v5031;
    if (typeof b$$251 == "number") {
      v5031 = JAM.call(this.each, this, [v1093], JAM.policy.p3);
    } else {
      var v11997 = this._focus;
      v5031 = JAM.call(v11997.apply, v11997, [this, arguments], JAM.policy.p3);
    }
    return v5031;
  }
  function c$$204(b$$249, c$$205) {
    var v5032 = b$$249.nodeName;
    var e$$168 = JAM.call(v5032.toLowerCase, v5032, [], JAM.policy.p3);
    if ("area" === e$$168) {
      var f$$47 = b$$249.parentNode;
      var g$$101 = f$$47.name;
      var h$$84;
      var v5033;
      var v23072 = !b$$249.href;
      if (!v23072) {
        v23072 = !g$$101;
      }
      var v17622 = v23072;
      if (!v17622) {
        var v25647 = f$$47.nodeName;
        v17622 = JAM.call(v25647.toLowerCase, v25647, [], JAM.policy.p3) !== "map";
      }
      if (v17622) {
        v5033 = !1;
      } else {
        h$$84 = JAM.call(a$$405, null, ["img[usemap=#" + g$$101 + "]"], JAM.policy.p3)[0];
        var v17624 = !!h$$84;
        if (v17624) {
          v17624 = d$$162(h$$84);
        }
        v5033 = v17624;
      }
      return v5033;
    }
    var v12000;
    if (JAM.call(/input|select|textarea|button|object/.test, /input|select|textarea|button|object/, [e$$168], JAM.policy.p3)) {
      v12000 = !b$$249.disabled;
    } else {
      var v17626;
      if ("a" == e$$168) {
        var v23077 = b$$249.href;
        if (!v23077) {
          v23077 = c$$205;
        }
        v17626 = v23077;
      } else {
        v17626 = c$$205;
      }
      v12000 = v17626;
    }
    var v5035 = v12000;
    if (v5035) {
      v5035 = d$$162(b$$249);
    }
    return v5035;
  }
  function d$$162(b$$250) {
    function v1091() {
      var v5036 = JAM.call(a$$405.curCSS, a$$405, [this, "visibility"], JAM.policy.p3) === "hidden";
      if (!v5036) {
        var v12002 = a$$405.expr.filters;
        v5036 = JAM.call(v12002.hidden, v12002, [this], JAM.policy.p3);
      }
      return v5036;
    }
    var v25650 = JAM.call(a$$405, null, [b$$250], JAM.policy.p3);
    var v23079 = JAM.call(v25650.parents, v25650, [], JAM.policy.p3);
    var v17629 = JAM.call(v23079.andSelf, v23079, [], JAM.policy.p3);
    return !JAM.call(v17629.filter, v17629, [v1091], JAM.policy.p3).length;
  }
  var v5038 = a$$405.ui;
  if (!v5038) {
    v5038 = {};
  }
  a$$405.ui = v5038;
  if (a$$405.ui.version) {
    return;
  }
  JAM.call(a$$405.extend, a$$405, [a$$405.ui, {version:"1.8.24", keyCode:{ALT:18, BACKSPACE:8, CAPS_LOCK:20, COMMA:188, COMMAND:91, COMMAND_LEFT:91, COMMAND_RIGHT:93, CONTROL:17, DELETE:46, DOWN:40, END:35, ENTER:13, ESCAPE:27, HOME:36, INSERT:45, LEFT:37, MENU:93, NUMPAD_ADD:107, NUMPAD_DECIMAL:110, NUMPAD_DIVIDE:111, NUMPAD_ENTER:108, NUMPAD_MULTIPLY:106, NUMPAD_SUBTRACT:109, PAGE_DOWN:34, PAGE_UP:33, PERIOD:190, RIGHT:39, SHIFT:16, SPACE:32, TAB:9, UP:38, WINDOWS:91}}], JAM.policy.p3);
  var v28483 = a$$405.fn;
  var v29637 = a$$405.fn.prop;
  if (!v29637) {
    v29637 = a$$405.fn.attr;
  }
  JAM.call(v28483.extend, v28483, [{propAttr:v29637, _focus:a$$405.fn.focus, focus:v1094, scrollParent:v1097, zIndex:v1098, disableSelection:v1100, enableSelection:v1101}], JAM.policy.p3);
  var v29177 = JAM.call(a$$405, null, ["<a>"], JAM.policy.p3);
  var v27385 = JAM.call(v29177.outerWidth, v29177, [1], JAM.policy.p3).jquery;
  if (!v27385) {
    JAM.call(a$$405.each, a$$405, [["Width", "Height"], v1107], JAM.policy.p3);
  }
  var v25651 = a$$405.expr[":"];
  var v28488;
  if (a$$405.expr.createPseudo) {
    var v29178 = a$$405.expr;
    v28488 = JAM.call(v29178.createPseudo, v29178, [v1109], JAM.policy.p3);
  } else {
    v28488 = v1110;
  }
  JAM.call(a$$405.extend, a$$405, [v25651, {data:v28488, focusable:v1111, tabbable:v1112}], JAM.policy.p3);
  JAM.call(a$$405, null, [v1113], JAM.policy.p3);
  var v17630 = a$$405.curCSS;
  if (!v17630) {
    a$$405.curCSS = a$$405.css;
  }
  JAM.call(a$$405.extend, a$$405, [a$$405.ui, {plugin:{add:v1114, call:v1115}, contains:v1116, hasScroll:v1117, isOverAxis:v1118, isOver:v1119}], JAM.policy.p3);
  return;
}
function v1090(a$$13, b$$9) {
  function v1089() {
    return f$$4;
  }
  function v1088(a$$400, c$$202) {
    function v1087(a$$403) {
      function v1086(a$$404, c$$203, h$$83) {
        var i$$147;
        var j$$63;
        var k$$41;
        var l$$53;
        if (JAM.call(f$$4.isWindow, f$$4, [a$$404], JAM.policy.p3)) {
          i$$147 = a$$404.document;
          j$$63 = i$$147.documentElement[d$$161];
          var v17632 = f$$4.support.boxModel;
          if (v17632) {
            v17632 = j$$63;
          }
          var v12010 = v17632;
          if (!v12010) {
            var v17633 = i$$147.body;
            if (v17633) {
              v17633 = i$$147.body[d$$161];
            }
            v12010 = v17633;
          }
          var v5040 = v12010;
          if (!v5040) {
            v5040 = j$$63;
          }
          return v5040;
        }
        if (a$$404.nodeType === 9) {
          i$$147 = a$$404.documentElement;
          if (i$$147[d$$161] >= i$$147[e$$167]) {
            return i$$147[d$$161];
          }
          return JAM.call(Math.max, Math, [a$$404.body[e$$167], i$$147[e$$167], a$$404.body[g$$100], i$$147[g$$100]], JAM.policy.p3);
        }
        if (h$$83 === b$$9) {
          k$$41 = JAM.call(f$$4.css, f$$4, [a$$404, c$$203], JAM.policy.p3);
          l$$53 = parseFloat(k$$41);
          var v5048;
          if (JAM.call(f$$4.isNumeric, f$$4, [l$$53], JAM.policy.p3)) {
            v5048 = l$$53;
          } else {
            v5048 = k$$41;
          }
          return v5048;
        }
        var v5050 = JAM.call(f$$4, null, [a$$404], JAM.policy.p3);
        JAM.call(v5050.css, v5050, [c$$203, h$$83], JAM.policy.p3);
        return;
      }
      return JAM.call(f$$4.access, f$$4, [this, v1086, c$$202, a$$403, arguments.length, null], JAM.policy.p3);
    }
    function v1085(a$$402) {
      var b$$247 = this[0];
      var v5052;
      if (b$$247) {
        var v12018;
        if (b$$247.style) {
          var v25653;
          if (a$$402) {
            v25653 = "margin";
          } else {
            v25653 = "border";
          }
          v12018 = parseFloat(JAM.call(f$$4.css, f$$4, [b$$247, c$$202, v25653], JAM.policy.p3));
        } else {
          v12018 = JAM.call(this[c$$202], this, [], JAM.policy.p3);
        }
        v5052 = v12018;
      } else {
        v5052 = null;
      }
      return v5052;
    }
    function v1084() {
      var a$$401 = this[0];
      var v5053;
      if (a$$401) {
        var v12019;
        if (a$$401.style) {
          v12019 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$401, c$$202, "padding"], JAM.policy.p3));
        } else {
          v12019 = JAM.call(this[c$$202], this, [], JAM.policy.p3);
        }
        v5053 = v12019;
      } else {
        v5053 = null;
      }
      return v5053;
    }
    var d$$161 = "client" + a$$400;
    var e$$167 = "scroll" + a$$400;
    var g$$100 = "offset" + a$$400;
    var v17639 = f$$4.fn;
    var v17640 = "inner" + a$$400;
    introspect(JAM.policy.p2) {
      v17639[v17640] = v1084;
    }
    var v17641 = f$$4.fn;
    var v17642 = "outer" + a$$400;
    introspect(JAM.policy.p2) {
      v17641[v17642] = v1085;
    }
    var v12020 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v12020[c$$202] = v1087;
    }
    return;
  }
  function v1083(a$$398, c$$201) {
    function v1082(e$$165) {
      function v1081(a$$399, e$$166, g$$99) {
        var h$$82 = cy(a$$399);
        if (g$$99 === b$$9) {
          var v5054;
          if (h$$82) {
            var v12021;
            if (c$$201 in h$$82) {
              v12021 = h$$82[c$$201];
            } else {
              var v23084 = f$$4.support.boxModel;
              if (v23084) {
                v23084 = h$$82.document.documentElement[e$$166];
              }
              var v17643 = v23084;
              if (!v17643) {
                v17643 = h$$82.document.body[e$$166];
              }
              v12021 = v17643;
            }
            v5054 = v12021;
          } else {
            v5054 = a$$399[e$$166];
          }
          return v5054;
        }
        var v5056;
        if (h$$82) {
          var v17645;
          if (d$$160) {
            var v23087 = JAM.call(f$$4, null, [h$$82], JAM.policy.p3);
            v17645 = JAM.call(v23087.scrollLeft, v23087, [], JAM.policy.p3);
          } else {
            v17645 = g$$99;
          }
          var v12022 = v17645;
          var v17646;
          if (d$$160) {
            v17646 = g$$99;
          } else {
            var v23088 = JAM.call(f$$4, null, [h$$82], JAM.policy.p3);
            v17646 = JAM.call(v23088.scrollTop, v23088, [], JAM.policy.p3);
          }
          v5056 = JAM.call(h$$82.scrollTo, h$$82, [v12022, v17646], JAM.policy.p3);
        } else {
          introspect(JAM.policy.p2) {
            v5056 = a$$399[e$$166] = g$$99;
          }
        }
        v5056;
        return;
      }
      return JAM.call(f$$4.access, f$$4, [this, v1081, a$$398, e$$165, arguments.length, null], JAM.policy.p3);
    }
    var d$$160 = JAM.call(/Y/.test, /Y/, [c$$201], JAM.policy.p3);
    var v5058 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v5058[a$$398] = v1082;
    }
    return;
  }
  function v1080() {
    function v1079() {
      var v5059 = this.offsetParent;
      if (!v5059) {
        v5059 = c$$5.body;
      }
      var a$$397 = v5059;
      var v17647 = a$$397;
      if (v17647) {
        v17647 = !JAM.call(cx.test, cx, [a$$397.nodeName], JAM.policy.p3);
      }
      var v12025 = v17647;
      if (v12025) {
        v12025 = JAM.call(f$$4.css, f$$4, [a$$397, "position"], JAM.policy.p3) === "static";
      }
      var v5060 = v12025;
      for (;v5060;) {
        a$$397 = a$$397.offsetParent;
        var v17649 = a$$397;
        if (v17649) {
          v17649 = !JAM.call(cx.test, cx, [a$$397.nodeName], JAM.policy.p3);
        }
        var v12026 = v17649;
        if (v12026) {
          v12026 = JAM.call(f$$4.css, f$$4, [a$$397, "position"], JAM.policy.p3) === "static";
        }
        v5060 = v12026;
      }
      return a$$397;
    }
    return JAM.call(this.map, this, [v1079], JAM.policy.p3);
  }
  function v1078() {
    if (!this[0]) {
      return null;
    }
    var a$$396 = this[0];
    var b$$246 = JAM.call(this.offsetParent, this, [], JAM.policy.p3);
    var c$$200 = JAM.call(this.offset, this, [], JAM.policy.p3);
    var v5062;
    if (JAM.call(cx.test, cx, [b$$246[0].nodeName], JAM.policy.p3)) {
      v5062 = {top:0, left:0};
    } else {
      v5062 = JAM.call(b$$246.offset, b$$246, [], JAM.policy.p3);
    }
    var d$$159 = v5062;
    var v25659 = c$$200.top;
    var v27389 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$396, "marginTop"], JAM.policy.p3));
    if (!v27389) {
      v27389 = 0;
    }
    c$$200.top = v25659 - v27389;
    var v25661 = c$$200.left;
    var v27390 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$396, "marginLeft"], JAM.policy.p3));
    if (!v27390) {
      v27390 = 0;
    }
    c$$200.left = v25661 - v27390;
    var v23092 = d$$159.top;
    var v25663 = parseFloat(JAM.call(f$$4.css, f$$4, [b$$246[0], "borderTopWidth"], JAM.policy.p3));
    if (!v25663) {
      v25663 = 0;
    }
    d$$159.top = v23092 + v25663;
    var v17652 = d$$159.left;
    var v23094 = parseFloat(JAM.call(f$$4.css, f$$4, [b$$246[0], "borderLeftWidth"], JAM.policy.p3));
    if (!v23094) {
      v23094 = 0;
    }
    d$$159.left = v17652 + v23094;
    return {top:c$$200.top - d$$159.top, left:c$$200.left - d$$159.left};
  }
  function v1077(a$$395, b$$245, c$$199) {
    var d$$158 = JAM.call(f$$4.css, f$$4, [a$$395, "position"], JAM.policy.p3);
    var v5065 = d$$158 === "static";
    if (v5065) {
      a$$395.style.position = "relative";
    }
    var e$$164 = JAM.call(f$$4, null, [a$$395], JAM.policy.p3);
    var g$$98 = JAM.call(e$$164.offset, e$$164, [], JAM.policy.p3);
    var h$$81 = JAM.call(f$$4.css, f$$4, [a$$395, "top"], JAM.policy.p3);
    var i$$146 = JAM.call(f$$4.css, f$$4, [a$$395, "left"], JAM.policy.p3);
    var v12034 = d$$158 === "absolute";
    if (!v12034) {
      v12034 = d$$158 === "fixed";
    }
    var v5066 = v12034;
    if (v5066) {
      v5066 = JAM.call(f$$4.inArray, f$$4, ["auto", [h$$81, i$$146]], JAM.policy.p3) > -1;
    }
    var j$$62 = v5066;
    var k$$40 = {};
    var l$$52 = {};
    var m$$27;
    var n$$78;
    var v25666;
    if (j$$62) {
      l$$52 = JAM.call(e$$164.position, e$$164, [], JAM.policy.p3);
      m$$27 = l$$52.top;
      v25666 = n$$78 = l$$52.left;
    } else {
      var v28494 = parseFloat(h$$81);
      if (!v28494) {
        v28494 = 0;
      }
      m$$27 = v28494;
      var v28495 = parseFloat(i$$146);
      if (!v28495) {
        v28495 = 0;
      }
      v25666 = n$$78 = v28495;
    }
    v25666;
    var v25667 = JAM.call(f$$4.isFunction, f$$4, [b$$245], JAM.policy.p3);
    if (v25667) {
      b$$245 = JAM.call(b$$245.call, b$$245, [a$$395, c$$199, g$$98], JAM.policy.p3);
    }
    var v23095 = b$$245.top != null;
    if (v23095) {
      k$$40.top = b$$245.top - g$$98.top + m$$27;
    }
    var v17656 = b$$245.left != null;
    if (v17656) {
      k$$40.left = b$$245.left - g$$98.left + n$$78;
    }
    var v12036;
    if ("using" in b$$245) {
      var v17657 = b$$245.using;
      v12036 = JAM.call(v17657.call, v17657, [a$$395, k$$40], JAM.policy.p3);
    } else {
      v12036 = JAM.call(e$$164.css, e$$164, [k$$40], JAM.policy.p3);
    }
    v12036;
    return;
  }
  function v1076(a$$394) {
    var b$$244 = a$$394.offsetTop;
    var c$$198 = a$$394.offsetLeft;
    var v5067 = f$$4.support.doesNotIncludeMarginInBodyOffset;
    if (v5067) {
      var v25672 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$394, "marginTop"], JAM.policy.p3));
      if (!v25672) {
        v25672 = 0;
      }
      b$$244 = b$$244 + v25672;
      var v25673 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$394, "marginLeft"], JAM.policy.p3));
      if (!v25673) {
        v25673 = 0;
      }
      c$$198 = c$$198 + v25673;
    }
    return {top:b$$244, left:c$$198};
  }
  function v1075(a$$393) {
    function v1074(b$$243) {
      var v5068 = f$$4.offset;
      JAM.call(v5068.setOffset, v5068, [this, a$$393, b$$243], JAM.policy.p3);
      return;
    }
    if (arguments.length) {
      var v5069;
      if (a$$393 === b$$9) {
        v5069 = this;
      } else {
        v5069 = JAM.call(this.each, this, [v1074], JAM.policy.p3);
      }
      return v5069;
    }
    var c$$197 = this[0];
    var v5071 = c$$197;
    if (v5071) {
      v5071 = c$$197.ownerDocument;
    }
    var d$$157 = v5071;
    if (!d$$157) {
      return null;
    }
    if (c$$197 === d$$157.body) {
      var v5073 = f$$4.offset;
      return JAM.call(v5073.bodyOffset, v5073, [c$$197], JAM.policy.p3);
    }
    return JAM.call(cv, null, [c$$197, d$$157, d$$157.documentElement], JAM.policy.p3);
  }
  function v1073(a$$392, b$$242, c$$196) {
    var d$$156;
    var e$$163 = a$$392.offsetParent;
    var g$$97 = a$$392;
    var h$$80 = b$$242.body;
    var i$$145 = b$$242.defaultView;
    var v5076;
    if (i$$145) {
      v5076 = JAM.call(i$$145.getComputedStyle, i$$145, [a$$392, null], JAM.policy.p3);
    } else {
      v5076 = a$$392.currentStyle;
    }
    var j$$61 = v5076;
    var k$$39 = a$$392.offsetTop;
    var l$$51 = a$$392.offsetLeft;
    var v17659 = a$$392 = a$$392.parentNode;
    if (v17659) {
      v17659 = a$$392 !== h$$80;
    }
    var v12040 = v17659;
    if (v12040) {
      v12040 = a$$392 !== c$$196;
    }
    var v5078 = v12040;
    for (;v5078;) {
      var v12041 = f$$4.support.fixedPosition;
      if (v12041) {
        v12041 = j$$61.position === "fixed";
      }
      if (v12041) {
        break;
      }
      var v27400;
      if (i$$145) {
        v27400 = JAM.call(i$$145.getComputedStyle, i$$145, [a$$392, null], JAM.policy.p3);
      } else {
        v27400 = a$$392.currentStyle;
      }
      d$$156 = v27400;
      k$$39 = k$$39 - a$$392.scrollTop;
      l$$51 = l$$51 - a$$392.scrollLeft;
      var v23100 = a$$392 === e$$163;
      if (v23100) {
        k$$39 = k$$39 + a$$392.offsetTop;
        l$$51 = l$$51 + a$$392.offsetLeft;
        var v29640 = f$$4.support.doesNotAddBorder;
        if (v29640) {
          var v29925 = !f$$4.support.doesAddBorderForTableAndCells;
          if (!v29925) {
            v29925 = !JAM.call(cw.test, cw, [a$$392.nodeName], JAM.policy.p3);
          }
          v29640 = v29925;
        }
        var v29182 = v29640;
        if (v29182) {
          var v30353 = parseFloat(d$$156.borderTopWidth);
          if (!v30353) {
            v30353 = 0;
          }
          k$$39 = k$$39 + v30353;
          var v30354 = parseFloat(d$$156.borderLeftWidth);
          if (!v30354) {
            v30354 = 0;
          }
          l$$51 = l$$51 + v30354;
        }
        g$$97 = e$$163;
        e$$163 = a$$392.offsetParent;
      }
      var v23101 = f$$4.support.subtractsBorderForOverflowNotVisible;
      if (v23101) {
        v23101 = d$$156.overflow !== "visible";
      }
      var v17662 = v23101;
      if (v17662) {
        var v28497 = parseFloat(d$$156.borderTopWidth);
        if (!v28497) {
          v28497 = 0;
        }
        k$$39 = k$$39 + v28497;
        var v28498 = parseFloat(d$$156.borderLeftWidth);
        if (!v28498) {
          v28498 = 0;
        }
        l$$51 = l$$51 + v28498;
      }
      j$$61 = d$$156;
      var v17663 = a$$392 = a$$392.parentNode;
      if (v17663) {
        v17663 = a$$392 !== h$$80;
      }
      var v12042 = v17663;
      if (v12042) {
        v12042 = a$$392 !== c$$196;
      }
      v5078 = v12042;
    }
    var v12043 = j$$61.position === "relative";
    if (!v12043) {
      v12043 = j$$61.position === "static";
    }
    if (v12043) {
      k$$39 = k$$39 + h$$80.offsetTop;
      l$$51 = l$$51 + h$$80.offsetLeft;
    }
    var v12044 = f$$4.support.fixedPosition;
    if (v12044) {
      v12044 = j$$61.position === "fixed";
    }
    var v5080 = v12044;
    if (v5080) {
      k$$39 = k$$39 + JAM.call(Math.max, Math, [c$$196.scrollTop, h$$80.scrollTop], JAM.policy.p3);
      l$$51 = l$$51 + JAM.call(Math.max, Math, [c$$196.scrollLeft, h$$80.scrollLeft], JAM.policy.p3);
    }
    return {top:k$$39, left:l$$51};
  }
  function v1072(a$$391, b$$241, c$$195, d$$155) {
    try {
      d$$155 = JAM.call(a$$391.getBoundingClientRect, a$$391, [], JAM.policy.p3);
    } catch (e$$162) {
    }
    var v12045 = !d$$155;
    if (!v12045) {
      v12045 = !JAM.call(f$$4.contains, f$$4, [c$$195, a$$391], JAM.policy.p3);
    }
    if (v12045) {
      var v5081;
      if (d$$155) {
        v5081 = {top:d$$155.top, left:d$$155.left};
      } else {
        v5081 = {top:0, left:0};
      }
      return v5081;
    }
    var g$$96 = b$$241.body;
    var h$$79 = cy(b$$241);
    var v12048 = c$$195.clientTop;
    if (!v12048) {
      v12048 = g$$96.clientTop;
    }
    var v5083 = v12048;
    if (!v5083) {
      v5083 = 0;
    }
    var i$$144 = v5083;
    var v12050 = c$$195.clientLeft;
    if (!v12050) {
      v12050 = g$$96.clientLeft;
    }
    var v5084 = v12050;
    if (!v5084) {
      v5084 = 0;
    }
    var j$$60 = v5084;
    var v12052 = h$$79.pageYOffset;
    if (!v12052) {
      var v17675 = f$$4.support.boxModel;
      if (v17675) {
        v17675 = c$$195.scrollTop;
      }
      v12052 = v17675;
    }
    var v5085 = v12052;
    if (!v5085) {
      v5085 = g$$96.scrollTop;
    }
    var k$$38 = v5085;
    var v12054 = h$$79.pageXOffset;
    if (!v12054) {
      var v17677 = f$$4.support.boxModel;
      if (v17677) {
        v17677 = c$$195.scrollLeft;
      }
      v12054 = v17677;
    }
    var v5086 = v12054;
    if (!v5086) {
      v5086 = g$$96.scrollLeft;
    }
    var l$$50 = v5086;
    var m$$26 = d$$155.top + k$$38 - i$$144;
    var n$$77 = d$$155.left + l$$50 - j$$60;
    return {top:m$$26, left:n$$77};
  }
  function v1071(a$$390) {
    function v1070(b$$240) {
      return a$$390 === b$$240.elem;
    }
    return JAM.call(f$$4.grep, f$$4, [f$$4.timers, v1070], JAM.policy.p3).length;
  }
  function v1069(a$$388, b$$239) {
    function v1068(a$$389) {
      JAM.call(f$$4.style, f$$4, [a$$389.elem, b$$239, JAM.call(Math.max, Math, [0, a$$389.now], JAM.policy.p3) + a$$389.unit], JAM.policy.p3);
      return;
    }
    var v5093 = JAM.call(b$$239.indexOf, b$$239, ["margin"], JAM.policy.p3);
    if (v5093) {
      var v12061 = f$$4.fx.step;
      introspect(JAM.policy.p2) {
        v12061[b$$239] = v1068;
      }
    }
    return;
  }
  function v1067(a$$387) {
    var v5094;
    var v17681 = a$$387.elem.style;
    if (v17681) {
      v17681 = a$$387.elem.style[a$$387.prop] != null;
    }
    if (v17681) {
      var v12062 = a$$387.elem.style;
      var v12063 = a$$387.prop;
      var v17683 = a$$387.now;
      var v17684 = a$$387.unit;
      introspect(JAM.policy.p2) {
        v5094 = v12062[v12063] = v17683 + v17684;
      }
    } else {
      var v12064 = a$$387.elem;
      var v12065 = a$$387.prop;
      introspect(JAM.policy.p2) {
        v5094 = v12064[v12065] = a$$387.now;
      }
    }
    v5094;
    return;
  }
  function v1066(a$$386) {
    JAM.call(f$$4.style, f$$4, [a$$386.elem, "opacity", a$$386.now], JAM.policy.p3);
    return;
  }
  function v1065() {
    clearInterval(co);
    co = null;
    return;
  }
  function v1064() {
    var a$$385;
    var b$$238 = f$$4.timers;
    var c$$194 = 0;
    var v5097 = c$$194 < b$$238.length;
    for (;v5097;) {
      a$$385 = b$$238[c$$194];
      var v17685 = !JAM.call(a$$385, null, [], JAM.policy.p3);
      if (v17685) {
        v17685 = b$$238[c$$194] === a$$385;
      }
      var v12068 = v17685;
      if (v12068) {
        var v17686 = c$$194;
        c$$194 = c$$194 - 1;
        JAM.call(b$$238.splice, b$$238, [v17686, 1], JAM.policy.p3);
      }
      c$$194++;
      v5097 = c$$194 < b$$238.length;
    }
    var v5098 = b$$238.length;
    if (!v5098) {
      var v12070 = f$$4.fx;
      JAM.call(v12070.stop, v12070, [], JAM.policy.p3);
    }
    return;
  }
  function v1063(a$$383) {
    function v1062(a$$384, b$$237) {
      var v5099 = h$$78.style;
      var v5100 = "overflow" + b$$237;
      var v12072 = i$$143.overflow;
      introspect(JAM.policy.p2) {
        v5099[v5100] = v12072[a$$384];
      }
      return;
    }
    var b$$236;
    var c$$193;
    var d$$154;
    var v5101 = cq;
    if (!v5101) {
      v5101 = cr();
    }
    var e$$161 = v5101;
    var g$$95 = !0;
    var h$$78 = this.elem;
    var i$$143 = this.options;
    var v12074 = a$$383;
    if (!v12074) {
      v12074 = e$$161 >= i$$143.duration + this.startTime;
    }
    if (v12074) {
      this.now = this.end;
      this.pos = this.state = 1;
      JAM.call(this.update, this, [], JAM.policy.p3);
      var v12075 = i$$143.animatedProperties;
      var v12076 = this.prop;
      introspect(JAM.policy.p2) {
        v12075[v12076] = !0;
      }
      for (b$$236 in i$$143.animatedProperties) {
        var v5102 = i$$143.animatedProperties[b$$236] !== !0;
        if (v5102) {
          g$$95 = !1;
        }
      }
      if (g$$95) {
        var v17690 = i$$143.overflow != null;
        if (v17690) {
          v17690 = !f$$4.support.shrinkWrapBlocks;
        }
        var v12079 = v17690;
        if (v12079) {
          JAM.call(f$$4.each, f$$4, [["", "X", "Y"], v1062], JAM.policy.p3);
        }
        var v12080 = i$$143.hide;
        if (v12080) {
          var v17692 = JAM.call(f$$4, null, [h$$78], JAM.policy.p3);
          JAM.call(v17692.hide, v17692, [], JAM.policy.p3);
        }
        var v12081 = i$$143.hide;
        if (!v12081) {
          v12081 = i$$143.show;
        }
        if (v12081) {
          for (b$$236 in i$$143.animatedProperties) {
            JAM.call(f$$4.style, f$$4, [h$$78, b$$236, i$$143.orig[b$$236]], JAM.policy.p3);
            JAM.call(f$$4.removeData, f$$4, [h$$78, "fxshow" + b$$236, !0], JAM.policy.p3);
            JAM.call(f$$4.removeData, f$$4, [h$$78, "toggle" + b$$236, !0], JAM.policy.p3);
          }
        }
        d$$154 = i$$143.complete;
        if (d$$154) {
          i$$143.complete = !1;
          JAM.call(d$$154.call, d$$154, [h$$78], JAM.policy.p3);
        }
      }
      return !1;
    }
    var v12084;
    if (i$$143.duration == Infinity) {
      v12084 = this.now = e$$161;
    } else {
      c$$193 = e$$161 - this.startTime;
      this.state = c$$193 / i$$143.duration;
      var v25683 = f$$4.easing;
      var v31118 = JAM.call(v25683[i$$143.animatedProperties[this.prop]], v25683, [this.state, c$$193, 0, 1, i$$143.duration], JAM.policy.p3);
      this.pos = v31118;
      v12084 = this.now = this.start + (this.end - this.start) * this.pos;
    }
    v12084;
    JAM.call(this.update, this, [], JAM.policy.p3);
    return !0;
  }
  function v1061() {
    var v17698 = this.options.orig;
    var v17699 = this.prop;
    var v23119 = JAM.call(f$$4._data, f$$4, [this.elem, "fxshow" + this.prop], JAM.policy.p3);
    if (!v23119) {
      v23119 = JAM.call(f$$4.style, f$$4, [this.elem, this.prop], JAM.policy.p3);
    }
    introspect(JAM.policy.p2) {
      v17698[v17699] = v23119;
    }
    this.options.hide = !0;
    JAM.call(this.custom, this, [JAM.call(this.cur, this, [], JAM.policy.p3), 0], JAM.policy.p3);
    return;
  }
  function v1060() {
    var a$$382 = JAM.call(f$$4._data, f$$4, [this.elem, "fxshow" + this.prop], JAM.policy.p3);
    var v23120 = this.options.orig;
    var v23121 = this.prop;
    var v25695 = a$$382;
    if (!v25695) {
      v25695 = JAM.call(f$$4.style, f$$4, [this.elem, this.prop], JAM.policy.p3);
    }
    introspect(JAM.policy.p2) {
      v23120[v23121] = v25695;
    }
    this.options.show = !0;
    var v17701;
    if (a$$382 !== b$$9) {
      v17701 = JAM.call(this.custom, this, [JAM.call(this.cur, this, [], JAM.policy.p3), a$$382], JAM.policy.p3);
    } else {
      var v25696;
      var v28499 = this.prop === "width";
      if (!v28499) {
        v28499 = this.prop === "height";
      }
      if (v28499) {
        v25696 = 1;
      } else {
        v25696 = 0;
      }
      v17701 = JAM.call(this.custom, this, [v25696, JAM.call(this.cur, this, [], JAM.policy.p3)], JAM.policy.p3);
    }
    v17701;
    var v12087 = JAM.call(f$$4, null, [this.elem], JAM.policy.p3);
    JAM.call(v12087.show, v12087, [], JAM.policy.p3);
    return;
  }
  function v1059(a$$380, c$$192, d$$153) {
    function v1058() {
      var v5109 = JAM.call(f$$4._data, f$$4, [e$$160.elem, "fxshow" + e$$160.prop], JAM.policy.p3) === b$$9;
      if (v5109) {
        var v12089;
        if (e$$160.options.hide) {
          v12089 = JAM.call(f$$4._data, f$$4, [e$$160.elem, "fxshow" + e$$160.prop, e$$160.start], JAM.policy.p3);
        } else {
          var v17708 = e$$160.options.show;
          if (v17708) {
            v17708 = JAM.call(f$$4._data, f$$4, [e$$160.elem, "fxshow" + e$$160.prop, e$$160.end], JAM.policy.p3);
          }
          v12089 = v17708;
        }
        v12089;
      }
      return;
    }
    function h$$77(a$$381) {
      return JAM.call(e$$160.step, e$$160, [a$$381], JAM.policy.p3);
    }
    var e$$160 = this;
    var g$$94 = f$$4.fx;
    var v29641 = cq;
    if (!v29641) {
      v29641 = cr();
    }
    this.startTime = v29641;
    this.end = c$$192;
    this.now = this.start = a$$380;
    this.pos = this.state = 0;
    var v28500 = d$$153;
    if (!v28500) {
      v28500 = this.unit;
    }
    var v27416 = v28500;
    if (!v27416) {
      var v28501;
      if (f$$4.cssNumber[this.prop]) {
        v28501 = "";
      } else {
        v28501 = "px";
      }
      v27416 = v28501;
    }
    this.unit = v27416;
    h$$77.queue = this.options.queue;
    h$$77.elem = this.elem;
    h$$77.saveState = v1058;
    var v23134 = h$$77();
    if (v23134) {
      var v25699 = f$$4.timers;
      v23134 = JAM.call(v25699.push, v25699, [h$$77], JAM.policy.p3);
    }
    var v17710 = v23134;
    if (v17710) {
      v17710 = !co;
    }
    var v12090 = v17710;
    if (v12090) {
      co = JAM.call(setInterval, null, [g$$94.tick, g$$94.interval]);
    }
    return;
  }
  function v1057() {
    var v12091 = this.elem[this.prop] != null;
    if (v12091) {
      var v17714 = !this.elem.style;
      if (!v17714) {
        v17714 = this.elem.style[this.prop] == null;
      }
      v12091 = v17714;
    }
    if (v12091) {
      return this.elem[this.prop];
    }
    var a$$379;
    var b$$235 = JAM.call(f$$4.css, f$$4, [this.elem, this.prop], JAM.policy.p3);
    var v5115;
    if (isNaN(a$$379 = parseFloat(b$$235))) {
      var v12092;
      var v23140 = !b$$235;
      if (!v23140) {
        v23140 = b$$235 === "auto";
      }
      if (v23140) {
        v12092 = 0;
      } else {
        v12092 = b$$235;
      }
      v5115 = v12092;
    } else {
      v5115 = a$$379;
    }
    return v5115;
  }
  function v1056() {
    var v12094 = this.options.step;
    if (v12094) {
      var v17718 = this.options.step;
      JAM.call(v17718.call, v17718, [this.elem, this.now, this], JAM.policy.p3);
    }
    var v17721 = f$$4.fx.step[this.prop];
    if (!v17721) {
      v17721 = f$$4.fx.step._default;
    }
    JAM.call(v17721, null, [this], JAM.policy.p3);
    return;
  }
  function v1055(a$$378, b$$234, c$$191) {
    this.options = b$$234;
    this.elem = a$$378;
    this.prop = c$$191;
    var v12096 = b$$234.orig;
    if (!v12096) {
      v12096 = {};
    }
    b$$234.orig = v12096;
    return;
  }
  function v1054(a$$377) {
    return -JAM.call(Math.cos, Math, [a$$377 * Math.PI], JAM.policy.p3) / 2 + .5;
  }
  function v1053(a$$376) {
    return a$$376;
  }
  function v1052(a$$374, b$$233, c$$190) {
    function v1051(a$$375) {
      var v12098 = JAM.call(f$$4.isFunction, f$$4, [d$$152.old], JAM.policy.p3);
      if (v12098) {
        var v17725 = d$$152.old;
        JAM.call(v17725.call, v17725, [this], JAM.policy.p3);
      }
      var v12099;
      if (d$$152.queue) {
        v12099 = JAM.call(f$$4.dequeue, f$$4, [this, d$$152.queue], JAM.policy.p3);
      } else {
        var v17727 = a$$375 !== !1;
        if (v17727) {
          v17727 = JAM.call(f$$4._unmark, f$$4, [this], JAM.policy.p3);
        }
        v12099 = v17727;
      }
      v12099;
      return;
    }
    var v5117;
    var v17729 = a$$374;
    if (v17729) {
      v17729 = typeof a$$374 == "object";
    }
    if (v17729) {
      v5117 = JAM.call(f$$4.extend, f$$4, [{}, a$$374], JAM.policy.p3);
    } else {
      var v23149 = c$$190;
      if (!v23149) {
        var v25707 = !c$$190;
        if (v25707) {
          v25707 = b$$233;
        }
        v23149 = v25707;
      }
      var v17730 = v23149;
      if (!v17730) {
        var v23150 = JAM.call(f$$4.isFunction, f$$4, [a$$374], JAM.policy.p3);
        if (v23150) {
          v23150 = a$$374;
        }
        v17730 = v23150;
      }
      var v12100 = v17730;
      var v17731 = c$$190 && b$$233;
      if (!v17731) {
        var v25709 = b$$233;
        if (v25709) {
          v25709 = !JAM.call(f$$4.isFunction, f$$4, [b$$233], JAM.policy.p3);
        }
        var v23152 = v25709;
        if (v23152) {
          v23152 = b$$233;
        }
        v17731 = v23152;
      }
      v5117 = {complete:v12100, duration:a$$374, easing:v17731};
    }
    var d$$152 = v5117;
    var v5118;
    if (f$$4.fx.off) {
      v5118 = 0;
    } else {
      var v12103;
      if (typeof d$$152.duration == "number") {
        v12103 = d$$152.duration;
      } else {
        var v17733;
        if (d$$152.duration in f$$4.fx.speeds) {
          v17733 = f$$4.fx.speeds[d$$152.duration];
        } else {
          v17733 = f$$4.fx.speeds._default;
        }
        v12103 = v17733;
      }
      v5118 = v12103;
    }
    d$$152.duration = v5118;
    var v12105 = d$$152.queue == null;
    if (!v12105) {
      v12105 = d$$152.queue === !0;
    }
    if (v12105) {
      d$$152.queue = "fx";
    }
    d$$152.old = d$$152.complete;
    d$$152.complete = v1051;
    return d$$152;
  }
  function v1050(a$$372, b$$232) {
    function v1049(a$$373, c$$189, d$$151) {
      return JAM.call(this.animate, this, [b$$232, a$$373, c$$189, d$$151], JAM.policy.p3);
    }
    var v5120 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v5120[a$$372] = v1049;
    }
    return;
  }
  function v1048(a$$370, c$$186, d$$150) {
    function v1047() {
      var b$$230;
      var c$$187 = !1;
      var e$$158 = f$$4.timers;
      var g$$93 = JAM.call(f$$4._data, f$$4, [this], JAM.policy.p3);
      if (!d$$150) {
        JAM.call(f$$4._unmark, f$$4, [!0, this], JAM.policy.p3);
      }
      if (a$$370 == null) {
        for (b$$230 in g$$93) {
          var v17739 = g$$93[b$$230];
          if (v17739) {
            v17739 = g$$93[b$$230].stop;
          }
          var v12108 = v17739;
          if (v12108) {
            v12108 = JAM.call(b$$230.indexOf, b$$230, [".run"], JAM.policy.p3) === b$$230.length - 4;
          }
          if (v12108) {
            var e$$inline_63 = g$$93[b$$230];
            JAM.call(f$$4.removeData, f$$4, [this, b$$230, !0], JAM.policy.p3);
            JAM.call(e$$inline_63.stop, e$$inline_63, [d$$150], JAM.policy.p3);
          }
        }
      } else {
        var v12110 = g$$93[b$$230 = a$$370 + ".run"];
        if (v12110) {
          v12110 = g$$93[b$$230].stop;
        }
        if (v12110) {
          var e$$inline_68 = g$$93[b$$230];
          JAM.call(f$$4.removeData, f$$4, [this, b$$230, !0], JAM.policy.p3);
          JAM.call(e$$inline_68.stop, e$$inline_68, [d$$150], JAM.policy.p3);
        }
      }
      b$$230 = e$$158.length;
      var v5125 = b$$230;
      b$$230 = b$$230 - 1;
      for (;v5125;) {
        var v12112 = e$$158[b$$230].elem === this;
        if (v12112) {
          var v17745 = a$$370 == null;
          if (!v17745) {
            v17745 = e$$158[b$$230].queue === a$$370;
          }
          v12112 = v17745;
        }
        var v5124 = v12112;
        if (v5124) {
          var v23164;
          if (d$$150) {
            v23164 = JAM.call(e$$158[b$$230], e$$158, [!0], JAM.policy.p3);
          } else {
            var v25717 = e$$158[b$$230];
            v23164 = JAM.call(v25717.saveState, v25717, [], JAM.policy.p3);
          }
          v23164;
          c$$187 = !0;
          JAM.call(e$$158.splice, e$$158, [b$$230, 1], JAM.policy.p3);
        }
        v5125 = b$$230;
        b$$230 = b$$230 - 1;
      }
      var v12113 = !d$$150;
      if (!v12113) {
        v12113 = !c$$187;
      }
      var v5126 = v12113;
      if (v5126) {
        JAM.call(f$$4.dequeue, f$$4, [this, a$$370], JAM.policy.p3);
      }
      return;
    }
    var v12114 = typeof a$$370 != "string";
    if (v12114) {
      d$$150 = c$$186;
      c$$186 = a$$370;
      a$$370 = b$$9;
    }
    var v17748 = c$$186;
    if (v17748) {
      v17748 = a$$370 !== !1;
    }
    var v12115 = v17748;
    if (v12115) {
      JAM.call(this.queue, this, [a$$370 || "fx", []], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v1047], JAM.policy.p3);
  }
  function v1046(a$$369, b$$228, c$$184, d$$148) {
    function g$$91() {
      var v5127 = e$$157.queue === !1;
      if (v5127) {
        JAM.call(f$$4._mark, f$$4, [this], JAM.policy.p3);
      }
      var b$$229 = JAM.call(f$$4.extend, f$$4, [{}, e$$157], JAM.policy.p3);
      var c$$185 = this.nodeType === 1;
      var v5129 = c$$185;
      if (v5129) {
        var v12118 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        v5129 = JAM.call(v12118.is, v12118, [":hidden"], JAM.policy.p3);
      }
      var d$$149 = v5129;
      var g$$92;
      var h$$75;
      var i$$142;
      var j$$59;
      var k$$37;
      var l$$49;
      var m$$25;
      var n$$76;
      var o$$15;
      var p$$37;
      var q$$14;
      b$$229.animatedProperties = {};
      for (i$$142 in a$$369) {
        g$$92 = JAM.call(f$$4.camelCase, f$$4, [i$$142], JAM.policy.p3);
        var v12119 = i$$142 !== g$$92;
        if (v12119) {
          introspect(JAM.policy.p2) {
            a$$369[g$$92] = a$$369[i$$142];
          }
          delete a$$369[i$$142];
        }
        var v12120 = k$$37 = f$$4.cssHooks[g$$92];
        if (v12120) {
          v12120 = "expand" in k$$37;
        }
        if (v12120) {
          l$$49 = JAM.call(k$$37.expand, k$$37, [a$$369[g$$92]], JAM.policy.p3);
          delete a$$369[g$$92];
          for (i$$142 in l$$49) {
            var v5130 = i$$142 in a$$369;
            if (!v5130) {
              introspect(JAM.policy.p2) {
                a$$369[i$$142] = l$$49[i$$142];
              }
            }
          }
        }
      }
      for (g$$92 in a$$369) {
        h$$75 = a$$369[g$$92];
        var v12123;
        if (JAM.call(f$$4.isArray, f$$4, [h$$75], JAM.policy.p3)) {
          var v23166 = b$$229.animatedProperties;
          introspect(JAM.policy.p2) {
            v23166[g$$92] = h$$75[1];
          }
          introspect(JAM.policy.p2) {
            v12123 = h$$75 = a$$369[g$$92] = h$$75[0];
          }
        } else {
          var v17751 = b$$229.animatedProperties;
          var v27420 = b$$229.specialEasing;
          if (v27420) {
            v27420 = b$$229.specialEasing[g$$92];
          }
          var v25718 = v27420;
          if (!v25718) {
            v25718 = b$$229.easing;
          }
          var v23167 = v25718;
          if (!v23167) {
            v23167 = "swing";
          }
          introspect(JAM.policy.p2) {
            v12123 = v17751[g$$92] = v23167;
          }
        }
        v12123;
        var v17753 = h$$75 === "hide";
        if (v17753) {
          v17753 = d$$149;
        }
        var v12124 = v17753;
        if (!v12124) {
          var v17754 = h$$75 === "show";
          if (v17754) {
            v17754 = !d$$149;
          }
          v12124 = v17754;
        }
        if (v12124) {
          var v5132 = b$$229.complete;
          return JAM.call(v5132.call, v5132, [this], JAM.policy.p3);
        }
        var v12125 = c$$185;
        if (v12125) {
          var v17756 = g$$92 === "height";
          if (!v17756) {
            v17756 = g$$92 === "width";
          }
          v12125 = v17756;
        }
        var v5134 = v12125;
        if (v5134) {
          b$$229.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];
          var v23172 = JAM.call(f$$4.css, f$$4, [this, "display"], JAM.policy.p3) === "inline";
          if (v23172) {
            v23172 = JAM.call(f$$4.css, f$$4, [this, "float"], JAM.policy.p3) === "none";
          }
          var v17760 = v23172;
          if (v17760) {
            var v23173;
            var v27422 = !f$$4.support.inlineBlockNeedsLayout;
            if (!v27422) {
              v27422 = cu(this.nodeName) === "inline";
            }
            if (v27422) {
              v23173 = this.style.display = "inline-block";
            } else {
              v23173 = this.style.zoom = 1;
            }
            v23173;
          }
        }
      }
      var v5135 = b$$229.overflow != null;
      if (v5135) {
        this.style.overflow = "hidden";
      }
      for (i$$142 in a$$369) {
        j$$59 = JAM.new(f$$4.fx, [this, b$$229, i$$142]);
        h$$75 = a$$369[i$$142];
        var v12128;
        if (JAM.call(cm.test, cm, [h$$75], JAM.policy.p3)) {
          var v23174 = JAM.call(f$$4._data, f$$4, [this, "toggle" + i$$142], JAM.policy.p3);
          if (!v23174) {
            var v25726;
            if (h$$75 === "toggle") {
              var v27423;
              if (d$$149) {
                v27423 = "show";
              } else {
                v27423 = "hide";
              }
              v25726 = v27423;
            } else {
              v25726 = 0;
            }
            v23174 = v25726;
          }
          q$$14 = v23174;
          var v23175;
          if (q$$14) {
            var v27425 = "toggle" + i$$142;
            var v28507;
            if (q$$14 === "show") {
              v28507 = "hide";
            } else {
              v28507 = "show";
            }
            JAM.call(f$$4._data, f$$4, [this, v27425, v28507], JAM.policy.p3);
            v23175 = JAM.call(j$$59[q$$14], j$$59, [], JAM.policy.p3);
          } else {
            v23175 = JAM.call(j$$59[h$$75], j$$59, [], JAM.policy.p3);
          }
          v12128 = v23175;
        } else {
          m$$25 = JAM.call(cn.exec, cn, [h$$75], JAM.policy.p3);
          n$$76 = JAM.call(j$$59.cur, j$$59, [], JAM.policy.p3);
          var v23176;
          if (m$$25) {
            o$$15 = parseFloat(m$$25[2]);
            var v29645 = m$$25[3];
            if (!v29645) {
              var v29927;
              if (f$$4.cssNumber[i$$142]) {
                v29927 = "";
              } else {
                v29927 = "px";
              }
              v29645 = v29927;
            }
            p$$37 = v29645;
            var v29195 = p$$37 !== "px";
            if (v29195) {
              JAM.call(f$$4.style, f$$4, [this, i$$142, (o$$15 || 1) + p$$37], JAM.policy.p3);
              n$$76 = (o$$15 || 1) / JAM.call(j$$59.cur, j$$59, [], JAM.policy.p3) * n$$76;
              JAM.call(f$$4.style, f$$4, [this, i$$142, n$$76 + p$$37], JAM.policy.p3);
            }
            var v28508 = m$$25[1];
            if (v28508) {
              var v29930;
              if (m$$25[1] === "-=") {
                v29930 = -1;
              } else {
                v29930 = 1;
              }
              o$$15 = v29930 * o$$15 + n$$76;
            }
            v23176 = JAM.call(j$$59.custom, j$$59, [n$$76, o$$15, p$$37], JAM.policy.p3);
          } else {
            v23176 = JAM.call(j$$59.custom, j$$59, [n$$76, h$$75, ""], JAM.policy.p3);
          }
          v12128 = v23176;
        }
        v12128;
      }
      return !0;
    }
    var e$$157 = JAM.call(f$$4.speed, f$$4, [b$$228, c$$184, d$$148], JAM.policy.p3);
    if (JAM.call(f$$4.isEmptyObject, f$$4, [a$$369], JAM.policy.p3)) {
      return JAM.call(this.each, this, [e$$157.complete, [!1]], JAM.policy.p3);
    }
    a$$369 = JAM.call(f$$4.extend, f$$4, [{}, a$$369], JAM.policy.p3);
    var v5139;
    if (e$$157.queue === !1) {
      v5139 = JAM.call(this.each, this, [g$$91], JAM.policy.p3);
    } else {
      v5139 = JAM.call(this.queue, this, [e$$157.queue, g$$91], JAM.policy.p3);
    }
    return v5139;
  }
  function v1045(a$$368, b$$227, c$$183, d$$147) {
    var v23177 = JAM.call(this.filter, this, [":hidden"], JAM.policy.p3);
    var v17765 = JAM.call(v23177.css, v23177, ["opacity", 0], JAM.policy.p3);
    var v12132 = JAM.call(v17765.show, v17765, [], JAM.policy.p3);
    var v5140 = JAM.call(v12132.end, v12132, [], JAM.policy.p3);
    return JAM.call(v5140.animate, v5140, [{opacity:b$$227}, a$$368, c$$183, d$$147], JAM.policy.p3);
  }
  function v1044(a$$367, b$$225, c$$182) {
    function v1043() {
      var v5142;
      if (d$$146) {
        v5142 = a$$367;
      } else {
        var v12133 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        v5142 = JAM.call(v12133.is, v12133, [":hidden"], JAM.policy.p3);
      }
      var b$$226 = v5142;
      var v5143 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var v12134;
      if (b$$226) {
        v12134 = "show";
      } else {
        v12134 = "hide";
      }
      JAM.call(v5143[v12134], v5143, [], JAM.policy.p3);
      return;
    }
    var d$$146 = typeof a$$367 == "boolean";
    var v5146;
    var v17766 = JAM.call(f$$4.isFunction, f$$4, [a$$367], JAM.policy.p3);
    if (v17766) {
      v17766 = JAM.call(f$$4.isFunction, f$$4, [b$$225], JAM.policy.p3);
    }
    if (v17766) {
      var v12135 = this._toggle;
      v5146 = JAM.call(v12135.apply, v12135, [this, arguments], JAM.policy.p3);
    } else {
      var v12136;
      var v23178 = a$$367 == null;
      if (!v23178) {
        v23178 = d$$146;
      }
      if (v23178) {
        v12136 = JAM.call(this.each, this, [v1043], JAM.policy.p3);
      } else {
        v12136 = JAM.call(this.animate, this, [ct("toggle", 3), a$$367, b$$225, c$$182], JAM.policy.p3);
      }
      v5146 = v12136;
    }
    v5146;
    return this;
  }
  function v1042(a$$366, b$$224, c$$181) {
    var v12138 = a$$366;
    if (!v12138) {
      v12138 = a$$366 === 0;
    }
    if (v12138) {
      return JAM.call(this.animate, this, [ct("hide", 3), a$$366, b$$224, c$$181], JAM.policy.p3);
    }
    var d$$145;
    var e$$156;
    var g$$90 = 0;
    var h$$74 = this.length;
    var v5149 = g$$90 < h$$74;
    for (;v5149;) {
      d$$145 = this[g$$90];
      var v12139 = d$$145.style;
      if (v12139) {
        e$$156 = JAM.call(f$$4.css, f$$4, [d$$145, "display"], JAM.policy.p3);
        var v25729 = e$$156 !== "none";
        if (v25729) {
          v25729 = !JAM.call(f$$4._data, f$$4, [d$$145, "olddisplay"], JAM.policy.p3);
        }
        var v23179 = v25729;
        if (v23179) {
          JAM.call(f$$4._data, f$$4, [d$$145, "olddisplay", e$$156], JAM.policy.p3);
        }
      }
      g$$90++;
      v5149 = g$$90 < h$$74;
    }
    g$$90 = 0;
    var v5151 = g$$90 < h$$74;
    for (;v5151;) {
      var v5150 = this[g$$90].style;
      if (v5150) {
        this[g$$90].style.display = "none";
      }
      g$$90++;
      v5151 = g$$90 < h$$74;
    }
    return this;
  }
  function v1041(a$$365, b$$223, c$$180) {
    var d$$144;
    var e$$155;
    var v12142 = a$$365;
    if (!v12142) {
      v12142 = a$$365 === 0;
    }
    if (v12142) {
      return JAM.call(this.animate, this, [ct("show", 3), a$$365, b$$223, c$$180], JAM.policy.p3);
    }
    var g$$89 = 0;
    var h$$73 = this.length;
    var v5154 = g$$89 < h$$73;
    for (;v5154;) {
      d$$144 = this[g$$89];
      var v12143 = d$$144.style;
      if (v12143) {
        e$$155 = d$$144.style.display;
        var v27428 = !JAM.call(f$$4._data, f$$4, [d$$144, "olddisplay"], JAM.policy.p3);
        if (v27428) {
          v27428 = e$$155 === "none";
        }
        var v25731 = v27428;
        if (v25731) {
          e$$155 = d$$144.style.display = "";
        }
        var v27430 = e$$155 === "";
        if (v27430) {
          v27430 = JAM.call(f$$4.css, f$$4, [d$$144, "display"], JAM.policy.p3) === "none";
        }
        var v25732 = v27430;
        if (!v25732) {
          v25732 = !JAM.call(f$$4.contains, f$$4, [d$$144.ownerDocument.documentElement, d$$144], JAM.policy.p3);
        }
        var v23180 = v25732;
        if (v23180) {
          JAM.call(f$$4._data, f$$4, [d$$144, "olddisplay", cu(d$$144.nodeName)], JAM.policy.p3);
        }
      }
      g$$89++;
      v5154 = g$$89 < h$$73;
    }
    g$$89 = 0;
    var v5159 = g$$89 < h$$73;
    for (;v5159;) {
      d$$144 = this[g$$89];
      if (d$$144.style) {
        e$$155 = d$$144.style.display;
        var v12144 = e$$155 === "";
        if (!v12144) {
          v12144 = e$$155 === "none";
        }
        if (v12144) {
          var v5156 = d$$144.style;
          var v12145 = JAM.call(f$$4._data, f$$4, [d$$144, "olddisplay"], JAM.policy.p3);
          if (!v12145) {
            v12145 = "";
          }
          v5156.display = v12145;
        }
      }
      g$$89++;
      v5159 = g$$89 < h$$73;
    }
    return this;
  }
  function v1040(c$$179) {
    function v1039() {
      if (d$$143) {
        JAM.call(d$$143, null, [0, 1], JAM.policy.p3);
      }
      return;
    }
    function v1038(e$$153, g$$88) {
      function v1037(a$$363, e$$154) {
        var j$$58;
        var k$$36;
        var l$$48;
        var m$$24;
        var n$$75;
        try {
          var v12146 = d$$143;
          if (v12146) {
            var v17774 = e$$154;
            if (!v17774) {
              v17774 = h$$72.readyState === 4;
            }
            v12146 = v17774;
          }
          if (v12146) {
            d$$143 = b$$9;
            if (i$$141) {
              JAM.set(h$$72, "onreadystatechange", f$$4.noop);
              if (ce) {
                delete cg[i$$141];
              }
            }
            if (e$$154) {
              var v5160 = h$$72.readyState !== 4;
              if (v5160) {
                JAM.call(h$$72.abort, h$$72, [], JAM.policy.p3);
              }
            } else {
              j$$58 = h$$72.status;
              l$$48 = JAM.call(h$$72.getAllResponseHeaders, h$$72, [], JAM.policy.p3);
              m$$24 = {};
              n$$75 = h$$72.responseXML;
              var v17775 = n$$75;
              if (v17775) {
                v17775 = n$$75.documentElement;
              }
              var v12148 = v17775;
              if (v12148) {
                m$$24.xml = n$$75;
              }
              try {
                m$$24.text = h$$72.responseText;
              } catch (a$$364) {
              }
              try {
                k$$36 = h$$72.statusText;
              } catch (o$$14) {
                k$$36 = "";
              }
              var v5161;
              var v23183 = !j$$58;
              if (v23183) {
                v23183 = c$$179.isLocal;
              }
              var v17776 = v23183;
              if (v17776) {
                v17776 = !c$$179.crossDomain;
              }
              if (v17776) {
                var v12149;
                if (m$$24.text) {
                  v12149 = 200;
                } else {
                  v12149 = 404;
                }
                v5161 = j$$58 = v12149;
              } else {
                var v12150 = j$$58 === 1223;
                if (v12150) {
                  v12150 = j$$58 = 204;
                }
                v5161 = v12150;
              }
              v5161;
            }
          }
        } catch (p$$36) {
          if (!e$$154) {
            JAM.call(g$$88, null, [-1, p$$36], JAM.policy.p3);
          }
        }
        if (m$$24) {
          JAM.call(g$$88, null, [j$$58, k$$36, m$$24, l$$48], JAM.policy.p3);
        }
        return;
      }
      var h$$72 = JAM.call(c$$179.xhr, c$$179, [], JAM.policy.p3);
      var i$$141;
      var j$$57;
      var v5163;
      if (c$$179.username) {
        v5163 = JAM.call(h$$72.open, h$$72, [c$$179.type, c$$179.url, c$$179.async, c$$179.username, c$$179.password], JAM.policy.p3);
      } else {
        v5163 = JAM.call(h$$72.open, h$$72, [c$$179.type, c$$179.url, c$$179.async], JAM.policy.p3);
      }
      v5163;
      if (c$$179.xhrFields) {
        for (j$$57 in c$$179.xhrFields) {
          var v5164 = c$$179.xhrFields;
          introspect(JAM.policy.p2) {
            h$$72[j$$57] = v5164[j$$57];
          }
        }
      }
      var v17778 = c$$179.mimeType;
      if (v17778) {
        v17778 = h$$72.overrideMimeType;
      }
      var v12162 = v17778;
      if (v12162) {
        JAM.call(h$$72.overrideMimeType, h$$72, [c$$179.mimeType], JAM.policy.p3);
      }
      var v17780 = !c$$179.crossDomain;
      if (v17780) {
        v17780 = !e$$153["X-Requested-With"];
      }
      var v12163 = v17780;
      if (v12163) {
        e$$153["X-Requested-With"] = "XMLHttpRequest";
      }
      try {
        for (j$$57 in e$$153) {
          JAM.call(h$$72.setRequestHeader, h$$72, [j$$57, e$$153[j$$57]], JAM.policy.p3);
        }
      } catch (k$$35) {
      }
      var v25734 = c$$179.hasContent;
      if (v25734) {
        v25734 = c$$179.data;
      }
      var v23187 = v25734;
      if (!v23187) {
        v23187 = null;
      }
      JAM.call(h$$72.send, h$$72, [v23187], JAM.policy.p3);
      d$$143 = v1037;
      var v12164;
      var v23188 = !c$$179.async;
      if (!v23188) {
        v23188 = h$$72.readyState === 4;
      }
      if (v23188) {
        v12164 = JAM.call(d$$143, null, [], JAM.policy.p3);
      } else {
        i$$141 = cf = cf + 1;
        if (ce) {
          if (!cg) {
            cg = {};
            var v29647 = JAM.call(f$$4, null, [a$$13], JAM.policy.p3);
            JAM.call(v29647.unload, v29647, [ce], JAM.policy.p3);
          }
          introspect(JAM.policy.p2) {
            cg[i$$141] = d$$143;
          }
        }
        v12164 = JAM.set(h$$72, "onreadystatechange", d$$143);
      }
      v12164;
      return;
    }
    var v12165 = !c$$179.crossDomain;
    if (!v12165) {
      v12165 = f$$4.support.cors;
    }
    if (v12165) {
      var d$$143;
      return {send:v1038, abort:v1039};
    }
    return;
  }
  function v1036(a$$362) {
    var v5169 = f$$4.support;
    var v12166 = !!a$$362;
    var v17787 = !!a$$362;
    if (v17787) {
      v17787 = "withCredentials" in a$$362;
    }
    JAM.call(f$$4.extend, f$$4, [v5169, {ajax:v12166, cors:v17787}], JAM.policy.p3);
    return;
  }
  function v1035() {
    var JSCompiler_temp$$0;
    var v12168 = !this.isLocal;
    if (v12168) {
      v12168 = ch$$14();
    }
    if (JSCompiler_temp$$0 = v12168) {
    } else {
      JSCompiler_inline_label_ci_59: {
        try {
          JSCompiler_temp$$0 = JAM.new(a$$13.ActiveXObject, ["Microsoft.XMLHTTP"]);
          break JSCompiler_inline_label_ci_59;
        } catch (b$$inline_58) {
        }
        JSCompiler_temp$$0 = void 0;
      }
    }
    return JSCompiler_temp$$0;
  }
  function v1034() {
    var a$$361;
    for (a$$361 in cg) {
      JAM.call(cg[a$$361], cg, [0, 1], JAM.policy.p3);
    }
    return;
  }
  function v1033(a$$359) {
    function v1032() {
      if (d$$142) {
        JAM.call(d$$142.onload, d$$142, [0, 1], JAM.policy.p3);
      }
      return;
    }
    function v1031(f$$46, g$$87) {
      function v1030(a$$360, c$$178) {
        var v17789 = c$$178;
        if (!v17789) {
          v17789 = !d$$142.readyState;
        }
        var v12169 = v17789;
        if (!v12169) {
          v12169 = JAM.call(/loaded|complete/.test, /loaded|complete/, [d$$142.readyState], JAM.policy.p3);
        }
        if (v12169) {
          JAM.set(d$$142, "onload", JAM.set(d$$142, "onreadystatechange", null));
          var v25739 = e$$152;
          if (v25739) {
            v25739 = d$$142.parentNode;
          }
          var v23192 = v25739;
          if (v23192) {
            JAM.call(e$$152.removeChild, e$$152, [d$$142], JAM.policy.p3);
          }
          d$$142 = b$$9;
          if (!c$$178) {
            JAM.call(g$$87, null, [200, "success"], JAM.policy.p3);
          }
        }
        return;
      }
      d$$142 = JAM.call(c$$5.createElement, c$$5, ["script"], JAM.policy.p3);
      d$$142.async = "async";
      var v25740 = a$$359.scriptCharset;
      if (v25740) {
        d$$142.charset = a$$359.scriptCharset;
      }
      d$$142.src = a$$359.url;
      JAM.set(d$$142, "onload", JAM.set(d$$142, "onreadystatechange", v1030));
      JAM.call(e$$152.insertBefore, e$$152, [d$$142, e$$152.firstChild], JAM.policy.p3);
      return;
    }
    if (a$$359.crossDomain) {
      var d$$142;
      var v12171 = c$$5.head;
      if (!v12171) {
        v12171 = JAM.call(c$$5.getElementsByTagName, c$$5, ["head"], JAM.policy.p3)[0];
      }
      var v5174 = v12171;
      if (!v5174) {
        v5174 = c$$5.documentElement;
      }
      var e$$152 = v5174;
      return {send:v1031, abort:v1032};
    }
    return;
  }
  function v1029(a$$358) {
    var v12173 = a$$358.cache === b$$9;
    if (v12173) {
      a$$358.cache = !1;
    }
    var v12174 = a$$358.crossDomain;
    if (v12174) {
      a$$358.type = "GET";
      a$$358.global = !1;
    }
    return;
  }
  function v1028(a$$357) {
    JAM.call(f$$4.globalEval, f$$4, [a$$357], JAM.policy.p3);
    return a$$357;
  }
  function v1027(b$$222, c$$177, d$$141) {
    function v1026() {
      if (!g$$86) {
        JAM.call(f$$4.error, f$$4, [h$$71 + " was not called"], JAM.policy.p3);
      }
      return g$$86[0];
    }
    function v1025() {
      introspect(JAM.policy.p2) {
        a$$13[h$$71] = i$$140;
      }
      var v17796 = g$$86;
      if (v17796) {
        v17796 = JAM.call(f$$4.isFunction, f$$4, [i$$140], JAM.policy.p3);
      }
      var v12177 = v17796;
      if (v12177) {
        JAM.call(a$$13[h$$71], a$$13, [g$$86[0]], JAM.policy.p3);
      }
      return;
    }
    function v1024(a$$356) {
      g$$86 = [a$$356];
      return;
    }
    var v5176 = typeof b$$222.data == "string";
    if (v5176) {
      v5176 = JAM.call(/^application\/x\-www\-form\-urlencoded/.test, /^application\/x\-www\-form\-urlencoded/, [b$$222.contentType], JAM.policy.p3);
    }
    var e$$151 = v5176;
    var v12180 = b$$222.dataTypes[0] === "jsonp";
    if (!v12180) {
      var v17800 = b$$222.jsonp !== !1;
      if (v17800) {
        var v23196 = JAM.call(cd.test, cd, [b$$222.url], JAM.policy.p3);
        if (!v23196) {
          var v25742 = e$$151;
          if (v25742) {
            v25742 = JAM.call(cd.test, cd, [b$$222.data], JAM.policy.p3);
          }
          v23196 = v25742;
        }
        v17800 = v23196;
      }
      v12180 = v17800;
    }
    if (v12180) {
      var g$$86;
      var v5177 = b$$222;
      var v12181;
      if (JAM.call(f$$4.isFunction, f$$4, [b$$222.jsonpCallback], JAM.policy.p3)) {
        v12181 = JAM.call(b$$222.jsonpCallback, b$$222, [], JAM.policy.p3);
      } else {
        v12181 = b$$222.jsonpCallback;
      }
      var h$$71 = v5177.jsonpCallback = v12181;
      var i$$140 = a$$13[h$$71];
      var j$$56 = b$$222.url;
      var k$$34 = b$$222.data;
      var l$$47 = "$1" + h$$71 + "$2";
      var v28512 = b$$222.jsonp !== !1;
      if (v28512) {
        j$$56 = JAM.call(j$$56.replace, j$$56, [cd, l$$47], JAM.policy.p3);
        var v29648 = b$$222.url === j$$56;
        if (v29648) {
          if (e$$151) {
            k$$34 = JAM.call(k$$34.replace, k$$34, [cd, l$$47], JAM.policy.p3);
          }
          var v30183 = b$$222.data === k$$34;
          if (v30183) {
            var v30495 = j$$56;
            var v30771;
            if (JAM.call(/\?/.test, /\?/, [j$$56], JAM.policy.p3)) {
              v30771 = "&";
            } else {
              v30771 = "?";
            }
            j$$56 = v30495 + (v30771 + b$$222.jsonp + "=" + h$$71);
          }
        }
      }
      b$$222.url = j$$56;
      b$$222.data = k$$34;
      introspect(JAM.policy.p2) {
        a$$13[h$$71] = v1024;
      }
      JAM.call(d$$141.always, d$$141, [v1025], JAM.policy.p3);
      b$$222.converters["script json"] = v1026;
      b$$222.dataTypes[0] = "json";
      return "script";
    }
    return;
  }
  function v1023() {
    var v5180 = f$$4.expando + "_";
    var v5181 = cc;
    cc = cc + 1;
    return v5180 + v5181;
  }
  function v1022(a$$354, c$$176) {
    function v1021() {
      e$$150(this.name, this.value);
      return;
    }
    function e$$150(a$$355, b$$221) {
      var v12184;
      if (JAM.call(f$$4.isFunction, f$$4, [b$$221], JAM.policy.p3)) {
        v12184 = JAM.call(b$$221, null, [], JAM.policy.p3);
      } else {
        v12184 = b$$221;
      }
      b$$221 = v12184;
      d$$140[d$$140.length] = encodeURIComponent(a$$355) + "=" + encodeURIComponent(b$$221);
      return;
    }
    var d$$140 = [];
    var v5184 = c$$176 === b$$9;
    if (v5184) {
      c$$176 = f$$4.ajaxSettings.traditional;
    }
    var v12188 = JAM.call(f$$4.isArray, f$$4, [a$$354], JAM.policy.p3);
    if (!v12188) {
      var v17807 = a$$354.jquery;
      if (v17807) {
        v17807 = !JAM.call(f$$4.isPlainObject, f$$4, [a$$354], JAM.policy.p3);
      }
      v12188 = v17807;
    }
    if (v12188) {
      JAM.call(f$$4.each, f$$4, [a$$354, v1021], JAM.policy.p3);
    } else {
      var g$$85;
      for (g$$85 in a$$354) {
        b_(g$$85, a$$354[g$$85], c$$176, e$$150);
      }
    }
    var v5187 = JAM.call(d$$140.join, d$$140, ["&"], JAM.policy.p3);
    return JAM.call(v5187.replace, v5187, [bC, "+"], JAM.policy.p3);
  }
  function v1020(a$$347, c$$172) {
    function v1019() {
      JAM.call(v$$9.abort, v$$9, ["timeout"], JAM.policy.p3);
      return;
    }
    function v1018(a$$353) {
      if (a$$353) {
        var b$$220;
        if (s$$25 < 2) {
          for (b$$220 in a$$353) {
            var v5188 = j$$55[b$$220];
            var v5189 = a$$353[b$$220];
            introspect(JAM.policy.p2) {
              j$$55[b$$220] = [v5188, v5189];
            }
          }
        } else {
          b$$220 = a$$353[v$$9.status];
          JAM.call(v$$9.then, v$$9, [b$$220, b$$220], JAM.policy.p3);
        }
      }
      return this;
    }
    function v1017(a$$352) {
      a$$352 = a$$352 || "abort";
      if (p$$35) {
        JAM.call(p$$35.abort, p$$35, [a$$352], JAM.policy.p3);
      }
      w$$15(0, a$$352);
      return this;
    }
    function v1016(a$$351) {
      if (!s$$25) {
        d$$139.mimeType = a$$351;
      }
      return this;
    }
    function v1015(a$$350) {
      var c$$175;
      if (s$$25 === 2) {
        if (!o$$12) {
          o$$12 = {};
          var v5192 = c$$175 = JAM.call(bG.exec, bG, [n$$74], JAM.policy.p3);
          for (;v5192;) {
            var v12191 = c$$175[1];
            var v5191 = JAM.call(v12191.toLowerCase, v12191, [], JAM.policy.p3);
            introspect(JAM.policy.p2) {
              o$$12[v5191] = c$$175[2];
            }
            v5192 = c$$175 = JAM.call(bG.exec, bG, [n$$74], JAM.policy.p3);
          }
        }
        c$$175 = o$$12[JAM.call(a$$350.toLowerCase, a$$350, [], JAM.policy.p3)];
      }
      var v5197;
      if (c$$175 === b$$9) {
        v5197 = null;
      } else {
        v5197 = c$$175;
      }
      return v5197;
    }
    function v1014() {
      var v5198;
      if (s$$25 === 2) {
        v5198 = n$$74;
      } else {
        v5198 = null;
      }
      return v5198;
    }
    function v1013(a$$349, b$$219) {
      if (!s$$25) {
        var c$$174 = JAM.call(a$$349.toLowerCase, a$$349, [], JAM.policy.p3);
        var v12194 = m$$22[c$$174];
        if (!v12194) {
          v12194 = a$$349;
        }
        introspect(JAM.policy.p2) {
          a$$349 = m$$22[c$$174] = v12194;
        }
        introspect(JAM.policy.p2) {
          l$$45[a$$349] = b$$219;
        }
      }
      return this;
    }
    function w$$15(a$$348, c$$173, l$$46, m$$23) {
      if (s$$25 !== 2) {
        s$$25 = 2;
        if (q$$13) {
          clearTimeout(q$$13);
        }
        p$$35 = b$$9;
        n$$74 = m$$23 || "";
        var v12195;
        if (a$$348 > 0) {
          v12195 = 4;
        } else {
          v12195 = 0;
        }
        v$$9.readyState = v12195;
        var o$$13;
        var r$$16;
        var u$$9;
        var w$$16 = c$$173;
        var JSCompiler_temp$$2;
        if (l$$46) {
          JSCompiler_inline_label_ca_42: {
            var a$$inline_32 = d$$139;
            var c$$inline_33 = v$$9;
            var d$$inline_34 = l$$46;
            var e$$inline_35 = a$$inline_32.contents;
            var f$$inline_36 = a$$inline_32.dataTypes;
            var g$$inline_37 = a$$inline_32.responseFields;
            var h$$inline_38;
            var i$$inline_39;
            var j$$inline_40;
            var k$$inline_41;
            for (i$$inline_39 in g$$inline_37) {
              var v5200 = i$$inline_39 in d$$inline_34;
              if (v5200) {
                var v12196 = g$$inline_37[i$$inline_39];
                introspect(JAM.policy.p2) {
                  c$$inline_33[v12196] = d$$inline_34[i$$inline_39];
                }
              }
            }
            var v5201 = f$$inline_36[0] === "*";
            for (;v5201;) {
              JAM.call(f$$inline_36.shift, f$$inline_36, [], JAM.policy.p3);
              var v12198 = h$$inline_38 === b$$9;
              if (v12198) {
                var v17811 = a$$inline_32.mimeType;
                if (!v17811) {
                  v17811 = JAM.call(c$$inline_33.getResponseHeader, c$$inline_33, ["content-type"], JAM.policy.p3);
                }
                h$$inline_38 = v17811;
              }
              v5201 = f$$inline_36[0] === "*";
            }
            if (h$$inline_38) {
              for (i$$inline_39 in e$$inline_35) {
                var v12200 = e$$inline_35[i$$inline_39];
                if (v12200) {
                  var v17812 = e$$inline_35[i$$inline_39];
                  v12200 = JAM.call(v17812.test, v17812, [h$$inline_38], JAM.policy.p3);
                }
                if (v12200) {
                  JAM.call(f$$inline_36.unshift, f$$inline_36, [i$$inline_39], JAM.policy.p3);
                  break;
                }
              }
            }
            if (f$$inline_36[0] in d$$inline_34) {
              j$$inline_40 = f$$inline_36[0];
            } else {
              for (i$$inline_39 in d$$inline_34) {
                var v12202 = !f$$inline_36[0];
                if (!v12202) {
                  v12202 = a$$inline_32.converters[i$$inline_39 + " " + f$$inline_36[0]];
                }
                if (v12202) {
                  j$$inline_40 = i$$inline_39;
                  break;
                }
                if (!k$$inline_41) {
                  k$$inline_41 = i$$inline_39;
                }
              }
              j$$inline_40 = j$$inline_40 || k$$inline_41;
            }
            if (j$$inline_40) {
              var v5205 = j$$inline_40 !== f$$inline_36[0];
              if (v5205) {
                JAM.call(f$$inline_36.unshift, f$$inline_36, [j$$inline_40], JAM.policy.p3);
              }
              JSCompiler_temp$$2 = d$$inline_34[j$$inline_40];
              break JSCompiler_inline_label_ca_42;
            }
            JSCompiler_temp$$2 = void 0;
          }
        } else {
          JSCompiler_temp$$2 = b$$9;
        }
        var x$$72 = JSCompiler_temp$$2;
        var y$$53;
        var z$$4;
        var v17817 = a$$348 >= 200;
        if (v17817) {
          v17817 = a$$348 < 300;
        }
        var v12205 = v17817;
        if (!v12205) {
          v12205 = a$$348 === 304;
        }
        if (v12205) {
          if (d$$139.ifModified) {
            if (y$$53 = JAM.call(v$$9.getResponseHeader, v$$9, ["Last-Modified"], JAM.policy.p3)) {
              var v5206 = f$$4.lastModified;
              introspect(JAM.policy.p2) {
                v5206[k$$33] = y$$53;
              }
            }
            if (z$$4 = JAM.call(v$$9.getResponseHeader, v$$9, ["Etag"], JAM.policy.p3)) {
              var v5208 = f$$4.etag;
              introspect(JAM.policy.p2) {
                v5208[k$$33] = z$$4;
              }
            }
          }
          if (a$$348 === 304) {
            w$$16 = "notmodified";
            o$$13 = !0;
          } else {
            try {
              var JSCompiler_inline_result$$1;
              var a$$inline_43 = d$$139;
              var c$$inline_44 = x$$72;
              var v5211 = a$$inline_43.dataFilter;
              if (v5211) {
                c$$inline_44 = JAM.call(a$$inline_43.dataFilter, a$$inline_43, [c$$inline_44, a$$inline_43.dataType], JAM.policy.p3);
              }
              var d$$inline_45 = a$$inline_43.dataTypes;
              var e$$inline_46 = {};
              var g$$inline_47;
              var h$$inline_48;
              var i$$inline_49 = d$$inline_45.length;
              var j$$inline_50;
              var k$$inline_51 = d$$inline_45[0];
              var l$$inline_52;
              var m$$inline_53;
              var n$$inline_54;
              var o$$inline_55;
              var p$$inline_56;
              g$$inline_47 = 1;
              var v5220 = g$$inline_47 < i$$inline_49;
              for (;v5220;) {
                if (g$$inline_47 === 1) {
                  for (h$$inline_48 in a$$inline_43.converters) {
                    var v5212 = typeof h$$inline_48 == "string";
                    if (v5212) {
                      var v12208 = JAM.call(h$$inline_48.toLowerCase, h$$inline_48, [], JAM.policy.p3);
                      var v17819 = a$$inline_43.converters;
                      introspect(JAM.policy.p2) {
                        e$$inline_46[v12208] = v17819[h$$inline_48];
                      }
                    }
                  }
                }
                l$$inline_52 = k$$inline_51;
                k$$inline_51 = d$$inline_45[g$$inline_47];
                if (k$$inline_51 === "*") {
                  k$$inline_51 = l$$inline_52;
                } else {
                  var v12209 = l$$inline_52 !== "*";
                  if (v12209) {
                    v12209 = l$$inline_52 !== k$$inline_51;
                  }
                  if (v12209) {
                    m$$inline_53 = l$$inline_52 + " " + k$$inline_51;
                    var v12211 = e$$inline_46[m$$inline_53];
                    if (!v12211) {
                      v12211 = e$$inline_46["* " + k$$inline_51];
                    }
                    n$$inline_54 = v12211;
                    if (!n$$inline_54) {
                      p$$inline_56 = b$$9;
                      for (o$$inline_55 in e$$inline_46) {
                        j$$inline_50 = JAM.call(o$$inline_55.split, o$$inline_55, [" "], JAM.policy.p3);
                        var v12212 = j$$inline_50[0] === l$$inline_52;
                        if (!v12212) {
                          v12212 = j$$inline_50[0] === "*";
                        }
                        if (v12212) {
                          p$$inline_56 = e$$inline_46[j$$inline_50[1] + " " + k$$inline_51];
                          if (p$$inline_56) {
                            o$$inline_55 = e$$inline_46[o$$inline_55];
                            var v12214;
                            if (o$$inline_55 === !0) {
                              v12214 = n$$inline_54 = p$$inline_56;
                            } else {
                              var v17826 = p$$inline_56 === !0;
                              if (v17826) {
                                v17826 = n$$inline_54 = o$$inline_55;
                              }
                              v12214 = v17826;
                            }
                            v12214;
                            break;
                          }
                        }
                      }
                    }
                    var v17828 = !n$$inline_54;
                    if (v17828) {
                      v17828 = !p$$inline_56;
                    }
                    var v12215 = v17828;
                    if (v12215) {
                      JAM.call(f$$4.error, f$$4, ["No conversion from " + JAM.call(m$$inline_53.replace, m$$inline_53, [" ", " to "], JAM.policy.p3)], JAM.policy.p3);
                    }
                    var v12216 = n$$inline_54 !== !0;
                    if (v12216) {
                      var v17831;
                      if (n$$inline_54) {
                        v17831 = JAM.call(n$$inline_54, null, [c$$inline_44], JAM.policy.p3);
                      } else {
                        v17831 = JAM.call(p$$inline_56, null, [JAM.call(o$$inline_55, null, [c$$inline_44], JAM.policy.p3)], JAM.policy.p3);
                      }
                      c$$inline_44 = v17831;
                    }
                  }
                }
                g$$inline_47++;
                v5220 = g$$inline_47 < i$$inline_49;
              }
              JSCompiler_inline_result$$1 = c$$inline_44;
              r$$16 = JSCompiler_inline_result$$1;
              w$$16 = "success";
              o$$13 = !0;
            } catch (A$$2) {
              w$$16 = "parsererror";
              u$$9 = A$$2;
            }
          }
        } else {
          u$$9 = w$$16;
          var v12217 = !w$$16;
          if (!v12217) {
            v12217 = a$$348;
          }
          if (v12217) {
            w$$16 = "error";
            var v12218 = a$$348 < 0;
            if (v12218) {
              a$$348 = 0;
            }
          }
        }
        v$$9.status = a$$348;
        v$$9.statusText = "" + (c$$173 || w$$16);
        var v28513;
        if (o$$13) {
          v28513 = JAM.call(h$$70.resolveWith, h$$70, [e$$149, [r$$16, w$$16, v$$9]], JAM.policy.p3);
        } else {
          v28513 = JAM.call(h$$70.rejectWith, h$$70, [e$$149, [v$$9, w$$16, u$$9]], JAM.policy.p3);
        }
        v28513;
        JAM.call(v$$9.statusCode, v$$9, [j$$55], JAM.policy.p3);
        j$$55 = b$$9;
        if (t$$10) {
          var v28514;
          if (o$$13) {
            v28514 = "Success";
          } else {
            v28514 = "Error";
          }
          var v25744 = "ajax" + v28514;
          var v28515;
          if (o$$13) {
            v28515 = r$$16;
          } else {
            v28515 = u$$9;
          }
          JAM.call(g$$84.trigger, g$$84, [v25744, [v$$9, d$$139, v28515]], JAM.policy.p3);
        }
        JAM.call(i$$139.fireWith, i$$139, [e$$149, [v$$9, w$$16]], JAM.policy.p3);
        if (t$$10) {
          JAM.call(g$$84.trigger, g$$84, ["ajaxComplete", [v$$9, d$$139]], JAM.policy.p3);
          var v23208 = f$$4.active = f$$4.active - 1;
          if (!v23208) {
            var v25746 = f$$4.event;
            JAM.call(v25746.trigger, v25746, ["ajaxStop"], JAM.policy.p3);
          }
        }
      }
      return;
    }
    var v12219 = typeof a$$347 == "object";
    if (v12219) {
      c$$172 = a$$347;
      a$$347 = b$$9;
    }
    c$$172 = c$$172 || {};
    var d$$139 = JAM.call(f$$4.ajaxSetup, f$$4, [{}, c$$172], JAM.policy.p3);
    var v5225 = d$$139.context;
    if (!v5225) {
      v5225 = d$$139;
    }
    var e$$149 = v5225;
    var v5226;
    var v17835 = e$$149 !== d$$139;
    if (v17835) {
      var v23209 = e$$149.nodeType;
      if (!v23209) {
        v23209 = e$$149 instanceof f$$4;
      }
      v17835 = v23209;
    }
    if (v17835) {
      v5226 = JAM.call(f$$4, null, [e$$149], JAM.policy.p3);
    } else {
      v5226 = f$$4.event;
    }
    var g$$84 = v5226;
    var h$$70 = JAM.call(f$$4.Deferred, f$$4, [], JAM.policy.p3);
    var i$$139 = JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3);
    var v5227 = d$$139.statusCode;
    if (!v5227) {
      v5227 = {};
    }
    var j$$55 = v5227;
    var k$$33;
    var l$$45 = {};
    var m$$22 = {};
    var n$$74;
    var o$$12;
    var p$$35;
    var q$$13;
    var r$$15;
    var s$$25 = 0;
    var t$$10;
    var u$$8;
    var v$$9 = {readyState:0, setRequestHeader:v1013, getAllResponseHeaders:v1014, getResponseHeader:v1015, overrideMimeType:v1016, abort:v1017};
    JAM.call(h$$70.promise, h$$70, [v$$9], JAM.policy.p3);
    v$$9.success = v$$9.done;
    v$$9.error = v$$9.fail;
    v$$9.complete = i$$139.add;
    v$$9.statusCode = v1018;
    var v27438 = d$$139;
    var v29932 = a$$347;
    if (!v29932) {
      v29932 = d$$139.url;
    }
    var v29204 = v29932 + "";
    var v28516 = JAM.call(v29204.replace, v29204, [bF, ""], JAM.policy.p3);
    var v31119 = JAM.call(v28516.replace, v28516, [bK, bV[1] + "//"], JAM.policy.p3);
    v27438.url = v31119;
    var v25749 = d$$139;
    var v29650 = d$$139.dataType;
    if (!v29650) {
      v29650 = "*";
    }
    var v28518 = JAM.call(f$$4.trim, f$$4, [v29650], JAM.policy.p3);
    var v27439 = JAM.call(v28518.toLowerCase, v28518, [], JAM.policy.p3);
    var v31120 = JAM.call(v27439.split, v27439, [bO], JAM.policy.p3);
    v25749.dataTypes = v31120;
    var v23210 = d$$139.crossDomain == null;
    if (v23210) {
      var v28519 = d$$139.url;
      r$$15 = JAM.call(bQ.exec, bQ, [JAM.call(v28519.toLowerCase, v28519, [], JAM.policy.p3)], JAM.policy.p3);
      var v28520 = !r$$15;
      if (!v28520) {
        var v29651 = r$$15[1] == bV[1];
        if (v29651) {
          v29651 = r$$15[2] == bV[2];
        }
        var v29207 = v29651;
        if (v29207) {
          var v29938 = r$$15[3];
          if (!v29938) {
            var v30185;
            if (r$$15[1] === "http:") {
              v30185 = 80;
            } else {
              v30185 = 443;
            }
            v29938 = v30185;
          }
          var v29652 = v29938;
          var v29939 = bV[3];
          if (!v29939) {
            var v30187;
            if (bV[1] === "http:") {
              v30187 = 80;
            } else {
              v30187 = 443;
            }
            v29939 = v30187;
          }
          v29207 = v29652 == v29939;
        }
        v28520 = v29207;
      }
      d$$139.crossDomain = !v28520;
    }
    var v25751 = d$$139.data;
    if (v25751) {
      v25751 = d$$139.processData;
    }
    var v23211 = v25751;
    if (v23211) {
      v23211 = typeof d$$139.data != "string";
    }
    var v17836 = v23211;
    if (v17836) {
      var v23212 = d$$139;
      var v31121 = JAM.call(f$$4.param, f$$4, [d$$139.data, d$$139.traditional], JAM.policy.p3);
      v23212.data = v31121;
    }
    bZ(bS, d$$139, c$$172, v$$9);
    if (s$$25 === 2) {
      return !1;
    }
    t$$10 = d$$139.global;
    var v23213 = d$$139;
    var v25755 = d$$139.type;
    var v31122 = JAM.call(v25755.toUpperCase, v25755, [], JAM.policy.p3);
    v23213.type = v31122;
    d$$139.hasContent = !JAM.call(bJ.test, bJ, [d$$139.type], JAM.policy.p3);
    var v17838 = t$$10;
    if (v17838) {
      var v23215 = f$$4.active;
      f$$4.active = f$$4.active + 1;
      v17838 = v23215 === 0;
    }
    var v12223 = v17838;
    if (v12223) {
      var v17839 = f$$4.event;
      JAM.call(v17839.trigger, v17839, ["ajaxStart"], JAM.policy.p3);
    }
    if (!d$$139.hasContent) {
      var v12225 = d$$139.data;
      if (v12225) {
        var v23216 = d$$139;
        var v27444 = v23216.url;
        var v29209;
        if (JAM.call(bL.test, bL, [d$$139.url], JAM.policy.p3)) {
          v29209 = "&";
        } else {
          v29209 = "?";
        }
        v23216.url = v27444 + (v29209 + d$$139.data);
        delete d$$139.data;
      }
      k$$33 = d$$139.url;
      if (d$$139.cache === !1) {
        var x$$71 = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
        var v5229 = d$$139.url;
        var y$$52 = JAM.call(v5229.replace, v5229, [bP, "$1_=" + x$$71], JAM.policy.p3);
        var v5231 = d$$139;
        var v12228 = y$$52;
        var v17840;
        if (y$$52 === d$$139.url) {
          var v27446;
          if (JAM.call(bL.test, bL, [d$$139.url], JAM.policy.p3)) {
            v27446 = "&";
          } else {
            v27446 = "?";
          }
          v17840 = v27446 + "_=" + x$$71;
        } else {
          v17840 = "";
        }
        v5231.url = v12228 + v17840;
      }
    }
    var v27447 = d$$139.data;
    if (v27447) {
      v27447 = d$$139.hasContent;
    }
    var v25759 = v27447;
    if (v25759) {
      v25759 = d$$139.contentType !== !1;
    }
    var v23219 = v25759;
    if (!v23219) {
      v23219 = c$$172.contentType;
    }
    var v17841 = v23219;
    if (v17841) {
      JAM.call(v$$9.setRequestHeader, v$$9, ["Content-Type", d$$139.contentType], JAM.policy.p3);
    }
    var v17842 = d$$139.ifModified;
    if (v17842) {
      var v27450 = k$$33;
      if (!v27450) {
        v27450 = d$$139.url;
      }
      k$$33 = v27450;
      var v27451 = f$$4.lastModified[k$$33];
      if (v27451) {
        JAM.call(v$$9.setRequestHeader, v$$9, ["If-Modified-Since", f$$4.lastModified[k$$33]], JAM.policy.p3);
      }
      var v25761 = f$$4.etag[k$$33];
      if (v25761) {
        JAM.call(v$$9.setRequestHeader, v$$9, ["If-None-Match", f$$4.etag[k$$33]], JAM.policy.p3);
      }
    }
    var v17843;
    var v25762 = d$$139.dataTypes[0];
    if (v25762) {
      v25762 = d$$139.accepts[d$$139.dataTypes[0]];
    }
    if (v25762) {
      var v23221 = d$$139.accepts[d$$139.dataTypes[0]];
      var v25765;
      if (d$$139.dataTypes[0] !== "*") {
        v25765 = ", " + bW + "; q=0.01";
      } else {
        v25765 = "";
      }
      v17843 = v23221 + v25765;
    } else {
      v17843 = d$$139.accepts["*"];
    }
    JAM.call(v$$9.setRequestHeader, v$$9, ["Accept", v17843], JAM.policy.p3);
    for (u$$8 in d$$139.headers) {
      JAM.call(v$$9.setRequestHeader, v$$9, [u$$8, d$$139.headers[u$$8]], JAM.policy.p3);
    }
    var v12232 = d$$139.beforeSend;
    if (v12232) {
      var v25766 = d$$139.beforeSend;
      var v17844 = JAM.call(v25766.call, v25766, [e$$149, v$$9, d$$139], JAM.policy.p3) === !1;
      if (!v17844) {
        v17844 = s$$25 === 2;
      }
      v12232 = v17844;
    }
    if (v12232) {
      JAM.call(v$$9.abort, v$$9, [], JAM.policy.p3);
      return !1;
    }
    for (u$$8 in{success:1, error:1, complete:1}) {
      JAM.call(v$$9[u$$8], v$$9, [d$$139[u$$8]], JAM.policy.p3);
    }
    p$$35 = bZ(bT, d$$139, c$$172, v$$9);
    if (!p$$35) {
      w$$15(-1, "No Transport");
    } else {
      v$$9.readyState = 1;
      if (t$$10) {
        JAM.call(g$$84.trigger, g$$84, ["ajaxSend", [v$$9, d$$139]], JAM.policy.p3);
      }
      var v17845 = d$$139.async;
      if (v17845) {
        v17845 = d$$139.timeout > 0;
      }
      var v12233 = v17845;
      if (v12233) {
        q$$13 = JAM.call(setTimeout, null, [v1019, d$$139.timeout]);
      }
      try {
        s$$25 = 1;
        JAM.call(p$$35.send, p$$35, [l$$45, w$$15], JAM.policy.p3);
      } catch (z$$5) {
        if (s$$25 < 2) {
          w$$15(-1, z$$5);
        } else {
          throw z$$5;
        }
      }
    }
    return v$$9;
  }
  function v1012(a$$346, b$$218) {
    var v12234;
    if (b$$218) {
      v12234 = b$(a$$346, f$$4.ajaxSettings);
    } else {
      b$$218 = a$$346;
      v12234 = a$$346 = f$$4.ajaxSettings;
    }
    v12234;
    b$(a$$346, b$$218);
    return a$$346;
  }
  function v1011(a$$345, b$$217, c$$171) {
    return JAM.call(f$$4.get, f$$4, [a$$345, b$$217, c$$171, "json"], JAM.policy.p3);
  }
  function v1010(a$$344, c$$170) {
    return JAM.call(f$$4.get, f$$4, [a$$344, b$$9, c$$170, "script"], JAM.policy.p3);
  }
  function v1009(a$$342, c$$169) {
    function v1008(a$$343, d$$138, e$$148, g$$83) {
      var v5241 = JAM.call(f$$4.isFunction, f$$4, [d$$138], JAM.policy.p3);
      if (v5241) {
        g$$83 = g$$83 || e$$148;
        e$$148 = d$$138;
        d$$138 = b$$9;
      }
      return JAM.call(f$$4.ajax, f$$4, [{type:c$$169, url:a$$343, data:d$$138, success:e$$148, dataType:g$$83}], JAM.policy.p3);
    }
    introspect(JAM.policy.p2) {
      f$$4[c$$169] = v1008;
    }
    return;
  }
  function v1007(a$$340, b$$216) {
    function v1006(a$$341) {
      return JAM.call(this.on, this, [b$$216, a$$341], JAM.policy.p3);
    }
    var v5243 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v5243[b$$216] = v1006;
    }
    return;
  }
  function v1005() {
    function v1004(a$$338, b$$215) {
      function v1003(a$$339, c$$168) {
        return {name:b$$215.name, value:JAM.call(a$$339.replace, a$$339, [bE, "\r\n"], JAM.policy.p3)};
      }
      var v5246 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var c$$167 = JAM.call(v5246.val, v5246, [], JAM.policy.p3);
      var v5247;
      if (c$$167 == null) {
        v5247 = null;
      } else {
        var v12235;
        if (JAM.call(f$$4.isArray, f$$4, [c$$167], JAM.policy.p3)) {
          v12235 = JAM.call(f$$4.map, f$$4, [c$$167, v1003], JAM.policy.p3);
        } else {
          v12235 = {name:b$$215.name, value:JAM.call(c$$167.replace, c$$167, [bE, "\r\n"], JAM.policy.p3)};
        }
        v5247 = v12235;
      }
      return v5247;
    }
    function v1002() {
      var v12237 = this.name;
      if (v12237) {
        v12237 = !this.disabled;
      }
      var v5248 = v12237;
      if (v5248) {
        var v17852 = this.checked;
        if (!v17852) {
          v17852 = JAM.call(bN.test, bN, [this.nodeName], JAM.policy.p3);
        }
        var v12238 = v17852;
        if (!v12238) {
          v12238 = JAM.call(bH.test, bH, [this.type], JAM.policy.p3);
        }
        v5248 = v12238;
      }
      return v5248;
    }
    function v1001() {
      var v5249;
      if (this.elements) {
        v5249 = JAM.call(f$$4.makeArray, f$$4, [this.elements], JAM.policy.p3);
      } else {
        v5249 = this;
      }
      return v5249;
    }
    var v17855 = JAM.call(this.map, this, [v1001], JAM.policy.p3);
    var v12241 = JAM.call(v17855.filter, v17855, [v1002], JAM.policy.p3);
    var v5250 = JAM.call(v12241.map, v12241, [v1004], JAM.policy.p3);
    return JAM.call(v5250.get, v5250, [], JAM.policy.p3);
  }
  function v1000() {
    return JAM.call(f$$4.param, f$$4, [JAM.call(this.serializeArray, this, [], JAM.policy.p3)], JAM.policy.p3);
  }
  function v999(a$$335, c$$165, d$$137) {
    function v998(a$$336, b$$214, c$$166) {
      function v997(a$$337) {
        c$$166 = a$$337;
        return;
      }
      c$$166 = a$$336.responseText;
      var v17856 = JAM.call(a$$336.isResolved, a$$336, [], JAM.policy.p3);
      if (v17856) {
        JAM.call(a$$336.done, a$$336, [v997], JAM.policy.p3);
        var v27460;
        if (g$$82) {
          var v29213 = JAM.call(f$$4, null, ["<div>"], JAM.policy.p3);
          var v28530 = JAM.call(v29213.append, v29213, [JAM.call(c$$166.replace, c$$166, [bM, ""], JAM.policy.p3)], JAM.policy.p3);
          v27460 = JAM.call(v28530.find, v28530, [g$$82], JAM.policy.p3);
        } else {
          v27460 = c$$166;
        }
        JAM.call(i$$138.html, i$$138, [v27460], JAM.policy.p3);
      }
      if (d$$137) {
        JAM.call(i$$138.each, i$$138, [d$$137, [c$$166, b$$214, a$$336]], JAM.policy.p3);
      }
      return;
    }
    var v12242 = typeof a$$335 != "string";
    if (v12242) {
      v12242 = bR;
    }
    if (v12242) {
      return JAM.call(bR.apply, bR, [this, arguments], JAM.policy.p3);
    }
    if (!this.length) {
      return this;
    }
    var e$$147 = JAM.call(a$$335.indexOf, a$$335, [" "], JAM.policy.p3);
    if (e$$147 >= 0) {
      var g$$82 = JAM.call(a$$335.slice, a$$335, [e$$147, a$$335.length], JAM.policy.p3);
      a$$335 = JAM.call(a$$335.slice, a$$335, [0, e$$147], JAM.policy.p3);
    }
    var h$$69 = "GET";
    if (c$$165) {
      var v12244;
      if (JAM.call(f$$4.isFunction, f$$4, [c$$165], JAM.policy.p3)) {
        d$$137 = c$$165;
        v12244 = c$$165 = b$$9;
      } else {
        var v17859 = typeof c$$165 == "object";
        if (v17859) {
          c$$165 = JAM.call(f$$4.param, f$$4, [c$$165, f$$4.ajaxSettings.traditional], JAM.policy.p3);
          v17859 = h$$69 = "POST";
        }
        v12244 = v17859;
      }
      v12244;
    }
    var i$$138 = this;
    JAM.call(f$$4.ajax, f$$4, [{url:a$$335, type:h$$69, dataType:"html", data:c$$165, complete:v998}], JAM.policy.p3);
    return this;
  }
  function v996(a$$334, b$$213) {
    function v995(c$$164) {
      var d$$136;
      var v5257;
      if (typeof c$$164 == "string") {
        v5257 = JAM.call(c$$164.split, c$$164, [" "], JAM.policy.p3);
      } else {
        v5257 = [c$$164];
      }
      var e$$146 = v5257;
      var f$$45 = {};
      d$$136 = 0;
      var v5259 = d$$136 < 4;
      for (;v5259;) {
        var v5258 = a$$334 + bx[d$$136] + b$$213;
        var v17863 = e$$146[d$$136];
        if (!v17863) {
          v17863 = e$$146[d$$136 - 2];
        }
        var v12247 = v17863;
        if (!v12247) {
          v12247 = e$$146[0];
        }
        introspect(JAM.policy.p2) {
          f$$45[v5258] = v12247;
        }
        d$$136++;
        v5259 = d$$136 < 4;
      }
      return f$$45;
    }
    var v5260 = f$$4.cssHooks;
    var v5261 = a$$334 + b$$213;
    introspect(JAM.policy.p2) {
      v5260[v5261] = {expand:v995};
    }
    return;
  }
  function v994(a$$333) {
    var v12248 = f$$4.expr.filters;
    return !JAM.call(v12248.hidden, v12248, [a$$333], JAM.policy.p3);
  }
  function v993(a$$332) {
    var b$$212 = a$$332.offsetWidth;
    var c$$163 = a$$332.offsetHeight;
    var v12249 = b$$212 === 0;
    if (v12249) {
      v12249 = c$$163 === 0;
    }
    var v5263 = v12249;
    if (!v5263) {
      var v12250 = !f$$4.support.reliableHiddenOffsets;
      if (v12250) {
        var v25769 = a$$332.style;
        if (v25769) {
          v25769 = a$$332.style.display;
        }
        var v23236 = v25769;
        if (!v23236) {
          v23236 = JAM.call(f$$4.css, f$$4, [a$$332, "display"], JAM.policy.p3);
        }
        v12250 = v23236 === "none";
      }
      v5263 = v12250;
    }
    return v5263;
  }
  function v992() {
    function v991(a$$331, b$$211) {
      function v990() {
        var v5264;
        if (b$$211) {
          v5264 = JAM.call(by, null, [a$$331, "margin-right"], JAM.policy.p3);
        } else {
          v5264 = a$$331.style.marginRight;
        }
        return v5264;
      }
      return JAM.call(f$$4.swap, f$$4, [a$$331, {display:"inline-block"}, v990], JAM.policy.p3);
    }
    var v5266 = f$$4.support.reliableMarginRight;
    if (!v5266) {
      f$$4.cssHooks.marginRight = {get:v991};
    }
    return;
  }
  function v989(a$$330, b$$210) {
    var c$$162 = a$$330.style;
    var d$$135 = a$$330.currentStyle;
    var v5267;
    if (JAM.call(f$$4.isNumeric, f$$4, [b$$210], JAM.policy.p3)) {
      v5267 = "alpha(opacity=" + b$$210 * 100 + ")";
    } else {
      v5267 = "";
    }
    var e$$145 = v5267;
    var v17869 = d$$135;
    if (v17869) {
      v17869 = d$$135.filter;
    }
    var v12258 = v17869;
    if (!v12258) {
      v12258 = c$$162.filter;
    }
    var v5268 = v12258;
    if (!v5268) {
      v5268 = "";
    }
    var g$$81 = v5268;
    c$$162.zoom = 1;
    var v12260 = b$$210 >= 1;
    if (v12260) {
      v12260 = JAM.call(f$$4.trim, f$$4, [JAM.call(g$$81.replace, g$$81, [bp, ""], JAM.policy.p3)], JAM.policy.p3) === "";
    }
    if (v12260) {
      JAM.call(c$$162.removeAttribute, c$$162, ["filter"], JAM.policy.p3);
      var v12261 = d$$135;
      if (v12261) {
        v12261 = !d$$135.filter;
      }
      if (v12261) {
        return;
      }
    }
    var v5271;
    if (JAM.call(bp.test, bp, [g$$81], JAM.policy.p3)) {
      v5271 = JAM.call(g$$81.replace, g$$81, [bp, e$$145], JAM.policy.p3);
    } else {
      v5271 = g$$81 + " " + e$$145;
    }
    c$$162.filter = v5271;
    return;
  }
  function v988(a$$329, b$$209) {
    var v5272;
    var v25771;
    var v28531 = b$$209;
    if (v28531) {
      v28531 = a$$329.currentStyle;
    }
    if (v28531) {
      v25771 = a$$329.currentStyle.filter;
    } else {
      v25771 = a$$329.style.filter;
    }
    var v23238 = v25771;
    if (!v23238) {
      v23238 = "";
    }
    if (JAM.call(bq.test, bq, [v23238], JAM.policy.p3)) {
      v5272 = parseFloat(RegExp.$1) / 100 + "";
    } else {
      var v12265;
      if (b$$209) {
        v12265 = "1";
      } else {
        v12265 = "";
      }
      v5272 = v12265;
    }
    return v5272;
  }
  function v987(a$$326, b$$207) {
    function v986(a$$328, b$$208) {
      var v5273;
      if (JAM.call(bs.test, bs, [b$$208], JAM.policy.p3)) {
        v5273 = b$$208 + "px";
      } else {
        v5273 = b$$208;
      }
      return v5273;
    }
    function v985(a$$327, c$$161, d$$134) {
      function v984() {
        return bB(a$$327, b$$207, d$$134);
      }
      if (c$$161) {
        var v5274;
        if (a$$327.offsetWidth !== 0) {
          v5274 = bB(a$$327, b$$207, d$$134);
        } else {
          v5274 = JAM.call(f$$4.swap, f$$4, [a$$327, bw, v984], JAM.policy.p3);
        }
        return v5274;
      }
      return;
    }
    var v5275 = f$$4.cssHooks;
    introspect(JAM.policy.p2) {
      v5275[b$$207] = {get:v985, set:v986};
    }
    return;
  }
  function v983(a$$325, b$$206) {
    var c$$160;
    var d$$133;
    var e$$144;
    var v5276 = a$$325.currentStyle;
    if (v5276) {
      v5276 = a$$325.currentStyle[b$$206];
    }
    var f$$44 = v5276;
    var g$$80 = a$$325.style;
    var v23240 = f$$44 == null;
    if (v23240) {
      v23240 = g$$80;
    }
    var v17876 = v23240;
    if (v17876) {
      v17876 = e$$144 = g$$80[b$$206];
    }
    var v12270 = v17876;
    if (v12270) {
      f$$44 = e$$144;
    }
    var v12271 = JAM.call(bt.test, bt, [f$$44], JAM.policy.p3);
    if (v12271) {
      c$$160 = g$$80.left;
      var v29655 = a$$325.runtimeStyle;
      if (v29655) {
        v29655 = a$$325.runtimeStyle.left;
      }
      d$$133 = v29655;
      if (d$$133) {
        a$$325.runtimeStyle.left = a$$325.currentStyle.left;
      }
      var v28532;
      if (b$$206 === "fontSize") {
        v28532 = "1em";
      } else {
        v28532 = f$$44;
      }
      g$$80.left = v28532;
      f$$44 = g$$80.pixelLeft + "px";
      g$$80.left = c$$160;
      if (d$$133) {
        a$$325.runtimeStyle.left = d$$133;
      }
    }
    var v5277;
    if (f$$44 === "") {
      v5277 = "auto";
    } else {
      v5277 = f$$44;
    }
    return v5277;
  }
  function v982(a$$324, b$$205) {
    var c$$159;
    var d$$132;
    var e$$143;
    var g$$79;
    var h$$68 = a$$324.style;
    var v17877 = JAM.call(b$$205.replace, b$$205, [br, "-$1"], JAM.policy.p3);
    b$$205 = JAM.call(v17877.toLowerCase, v17877, [], JAM.policy.p3);
    var v23241 = d$$132 = a$$324.ownerDocument.defaultView;
    if (v23241) {
      v23241 = e$$143 = JAM.call(d$$132.getComputedStyle, d$$132, [a$$324, null], JAM.policy.p3);
    }
    var v17878 = v23241;
    if (v17878) {
      c$$159 = JAM.call(e$$143.getPropertyValue, e$$143, [b$$205], JAM.policy.p3);
      var v27467 = c$$159 === "";
      if (v27467) {
        v27467 = !JAM.call(f$$4.contains, f$$4, [a$$324.ownerDocument.documentElement, a$$324], JAM.policy.p3);
      }
      var v25775 = v27467;
      if (v25775) {
        c$$159 = JAM.call(f$$4.style, f$$4, [a$$324, b$$205], JAM.policy.p3);
      }
    }
    var v25776 = !f$$4.support.pixelMargin;
    if (v25776) {
      v25776 = e$$143;
    }
    var v23242 = v25776;
    if (v23242) {
      v23242 = JAM.call(bv.test, bv, [b$$205], JAM.policy.p3);
    }
    var v17879 = v23242;
    if (v17879) {
      v17879 = JAM.call(bt.test, bt, [c$$159], JAM.policy.p3);
    }
    var v12273 = v17879;
    if (v12273) {
      g$$79 = h$$68.width;
      h$$68.width = c$$159;
      c$$159 = e$$143.width;
      h$$68.width = g$$79;
    }
    return c$$159;
  }
  function v981(a$$323, b$$204, c$$158) {
    var d$$131 = {};
    var e$$142;
    var f$$43;
    for (f$$43 in b$$204) {
      var v12274 = a$$323.style;
      introspect(JAM.policy.p2) {
        d$$131[f$$43] = v12274[f$$43];
      }
      var v12275 = a$$323.style;
      introspect(JAM.policy.p2) {
        v12275[f$$43] = b$$204[f$$43];
      }
    }
    e$$142 = JAM.call(c$$158.call, c$$158, [a$$323], JAM.policy.p3);
    for (f$$43 in b$$204) {
      var v5278 = a$$323.style;
      introspect(JAM.policy.p2) {
        v5278[f$$43] = d$$131[f$$43];
      }
    }
    return e$$142;
  }
  function v980(a$$322, c$$157, d$$130) {
    var e$$141;
    var g$$78;
    c$$157 = JAM.call(f$$4.camelCase, f$$4, [c$$157], JAM.policy.p3);
    g$$78 = f$$4.cssHooks[c$$157];
    var v17880 = f$$4.cssProps[c$$157];
    if (!v17880) {
      v17880 = c$$157;
    }
    c$$157 = v17880;
    var v12276 = c$$157 === "cssFloat";
    if (v12276) {
      c$$157 = "float";
    }
    var v17881 = g$$78;
    if (v17881) {
      v17881 = "get" in g$$78;
    }
    var v12277 = v17881;
    if (v12277) {
      v12277 = (e$$141 = JAM.call(g$$78.get, g$$78, [a$$322, !0, d$$130], JAM.policy.p3)) !== b$$9;
    }
    if (v12277) {
      return e$$141;
    }
    if (by) {
      return JAM.call(by, null, [a$$322, c$$157], JAM.policy.p3);
    }
    return;
  }
  function v979(a$$321, c$$156, d$$129, e$$140) {
    var v23247 = !!a$$321;
    if (v23247) {
      v23247 = a$$321.nodeType !== 3;
    }
    var v17883 = v23247;
    if (v17883) {
      v17883 = a$$321.nodeType !== 8;
    }
    var v12278 = v17883;
    if (v12278) {
      v12278 = !!a$$321.style;
    }
    if (v12278) {
      var g$$77;
      var h$$67;
      var i$$137 = JAM.call(f$$4.camelCase, f$$4, [c$$156], JAM.policy.p3);
      var j$$54 = a$$321.style;
      var k$$32 = f$$4.cssHooks[i$$137];
      var v5281 = f$$4.cssProps[i$$137];
      if (!v5281) {
        v5281 = i$$137;
      }
      c$$156 = v5281;
      if (d$$129 === b$$9) {
        var v17885 = k$$32;
        if (v17885) {
          v17885 = "get" in k$$32;
        }
        var v12281 = v17885;
        if (v12281) {
          v12281 = (g$$77 = JAM.call(k$$32.get, k$$32, [a$$321, !1, e$$140], JAM.policy.p3)) !== b$$9;
        }
        if (v12281) {
          return g$$77;
        }
        return j$$54[c$$156];
      }
      h$$67 = typeof d$$129;
      var v17887 = h$$67 === "string";
      if (v17887) {
        v17887 = g$$77 = JAM.call(bu.exec, bu, [d$$129], JAM.policy.p3);
      }
      var v12282 = v17887;
      if (v12282) {
        d$$129 = +(g$$77[1] + 1) * +g$$77[2] + parseFloat(JAM.call(f$$4.css, f$$4, [a$$321, c$$156], JAM.policy.p3));
        h$$67 = "number";
      }
      var v12283 = d$$129 == null;
      if (!v12283) {
        var v17888 = h$$67 === "number";
        if (v17888) {
          v17888 = isNaN(d$$129);
        }
        v12283 = v17888;
      }
      if (v12283) {
        return;
      }
      var v12284 = h$$67 === "number";
      if (v12284) {
        v12284 = !f$$4.cssNumber[i$$137];
      }
      var v5285 = v12284;
      if (v5285) {
        d$$129 = d$$129 + "px";
      }
      var v17891 = !k$$32;
      if (!v17891) {
        v17891 = !("set" in k$$32);
      }
      var v12285 = v17891;
      if (!v12285) {
        v12285 = (d$$129 = JAM.call(k$$32.set, k$$32, [a$$321, d$$129], JAM.policy.p3)) !== b$$9;
      }
      if (v12285) {
        try {
          introspect(JAM.policy.p2) {
            j$$54[c$$156] = d$$129;
          }
        } catch (l$$44) {
        }
      }
    }
    return;
  }
  function v978(a$$320, b$$203) {
    if (b$$203) {
      var c$$155 = JAM.call(by, null, [a$$320, "opacity"], JAM.policy.p3);
      var v5288;
      if (c$$155 === "") {
        v5288 = "1";
      } else {
        v5288 = c$$155;
      }
      return v5288;
    }
    return a$$320.style.opacity;
  }
  function v977(a$$318, c$$153) {
    function v976(a$$319, c$$154, d$$128) {
      var v5290;
      if (d$$128 !== b$$9) {
        v5290 = JAM.call(f$$4.style, f$$4, [a$$319, c$$154, d$$128], JAM.policy.p3);
      } else {
        v5290 = JAM.call(f$$4.css, f$$4, [a$$319, c$$154], JAM.policy.p3);
      }
      return v5290;
    }
    return JAM.call(f$$4.access, f$$4, [this, v976, a$$318, c$$153, arguments.length > 1], JAM.policy.p3);
  }
  function v975(a$$317) {
    var b$$202;
    var c$$152;
    var d$$127 = f$$4.cache;
    var e$$139 = f$$4.event.special;
    var g$$76 = f$$4.support.deleteExpando;
    var h$$66 = 0;
    var i$$136;
    var v5300 = (i$$136 = a$$317[h$$66]) != null;
    for (;v5300;) {
      var v12290 = i$$136.nodeName;
      if (v12290) {
        var v17894 = f$$4.noData;
        var v23256 = i$$136.nodeName;
        v12290 = v17894[JAM.call(v23256.toLowerCase, v23256, [], JAM.policy.p3)];
      }
      if (v12290) {
        h$$66++;
        v5300 = (i$$136 = a$$317[h$$66]) != null;
        continue;
      }
      c$$152 = i$$136[f$$4.expando];
      if (c$$152) {
        b$$202 = d$$127[c$$152];
        var v12292 = b$$202;
        if (v12292) {
          v12292 = b$$202.events;
        }
        if (v12292) {
          var j$$53;
          for (j$$53 in b$$202.events) {
            var v5296;
            if (e$$139[j$$53]) {
              var v12293 = f$$4.event;
              v5296 = JAM.call(v12293.remove, v12293, [i$$136, j$$53], JAM.policy.p3);
            } else {
              v5296 = JAM.call(f$$4.removeEvent, f$$4, [i$$136, j$$53, b$$202.handle], JAM.policy.p3);
            }
            v5296;
          }
          var v5298 = b$$202.handle;
          if (v5298) {
            b$$202.handle.elem = null;
          }
        }
        var v12297;
        if (g$$76) {
          v12297 = delete i$$136[f$$4.expando];
        } else {
          var v17897 = i$$136.removeAttribute;
          if (v17897) {
            v17897 = JAM.call(i$$136.removeAttribute, i$$136, [f$$4.expando], JAM.policy.p3);
          }
          v12297 = v17897;
        }
        v12297;
        delete d$$127[c$$152];
      }
      h$$66++;
      v5300 = (i$$136 = a$$317[h$$66]) != null;
    }
    return;
  }
  function v974(a$$315, b$$201, d$$126, e$$138) {
    function v973(a$$316) {
      var v5301 = !a$$316.type;
      if (!v5301) {
        v5301 = JAM.call(be.test, be, [a$$316.type], JAM.policy.p3);
      }
      return v5301;
    }
    var g$$75;
    var h$$65;
    var i$$135;
    var j$$52 = [];
    b$$201 = b$$201 || c$$5;
    var v12302 = typeof b$$201.createElement == "undefined";
    if (v12302) {
      var v23259 = b$$201.ownerDocument;
      if (!v23259) {
        var v25782 = b$$201[0];
        if (v25782) {
          v25782 = b$$201[0].ownerDocument;
        }
        v23259 = v25782;
      }
      var v17899 = v23259;
      if (!v17899) {
        v17899 = c$$5;
      }
      b$$201 = v17899;
    }
    var k$$31 = 0;
    var l$$43;
    var v5319 = (l$$43 = a$$315[k$$31]) != null;
    for (;v5319;) {
      var v5302 = typeof l$$43 == "number";
      if (v5302) {
        l$$43 = l$$43 + "";
      }
      if (!l$$43) {
        k$$31++;
        v5319 = (l$$43 = a$$315[k$$31]) != null;
        continue;
      }
      if (typeof l$$43 == "string") {
        if (!JAM.call(_$$1.test, _$$1, [l$$43], JAM.policy.p3)) {
          l$$43 = JAM.call(b$$201.createTextNode, b$$201, [l$$43], JAM.policy.p3);
        } else {
          l$$43 = JAM.call(l$$43.replace, l$$43, [Y, "<$1></$2>"], JAM.policy.p3);
          var v17900 = JAM.call(Z.exec, Z, [l$$43], JAM.policy.p3);
          if (!v17900) {
            v17900 = ["", ""];
          }
          var v5304 = v17900[1];
          var m$$21 = JAM.call(v5304.toLowerCase, v5304, [], JAM.policy.p3);
          var v5305 = bg[m$$21];
          if (!v5305) {
            v5305 = bg._default;
          }
          var n$$73 = v5305;
          var o$$11 = n$$73[0];
          var p$$34 = JAM.call(b$$201.createElement, b$$201, ["div"], JAM.policy.p3);
          var q$$12 = bh.childNodes;
          var r$$14;
          var v12310;
          if (b$$201 === c$$5) {
            v12310 = JAM.call(bh.appendChild, bh, [p$$34], JAM.policy.p3);
          } else {
            var v17901 = U(b$$201);
            v12310 = JAM.call(v17901.appendChild, v17901, [p$$34], JAM.policy.p3);
          }
          v12310;
          JAM.set(p$$34, "innerHTML", n$$73[1] + l$$43 + n$$73[2]);
          var v5306 = o$$11;
          o$$11 = o$$11 - 1;
          for (;v5306;) {
            p$$34 = p$$34.lastChild;
            v5306 = o$$11;
            o$$11 = o$$11 - 1;
          }
          if (!f$$4.support.tbody) {
            var s$$24 = JAM.call($$$2.test, $$$2, [l$$43], JAM.policy.p3);
            var v5307;
            var v17905 = m$$21 === "table";
            if (v17905) {
              v17905 = !s$$24;
            }
            if (v17905) {
              var v12314 = p$$34.firstChild;
              if (v12314) {
                v12314 = p$$34.firstChild.childNodes;
              }
              v5307 = v12314;
            } else {
              var v12315;
              var v23262 = n$$73[1] === "<table>";
              if (v23262) {
                v23262 = !s$$24;
              }
              if (v23262) {
                v12315 = p$$34.childNodes;
              } else {
                v12315 = [];
              }
              v5307 = v12315;
            }
            var t$$9 = v5307;
            i$$135 = t$$9.length - 1;
            var v5310 = i$$135 >= 0;
            for (;v5310;) {
              var v12317 = JAM.call(f$$4.nodeName, f$$4, [t$$9[i$$135], "tbody"], JAM.policy.p3);
              if (v12317) {
                v12317 = !t$$9[i$$135].childNodes.length;
              }
              var v5309 = v12317;
              if (v5309) {
                var v12318 = t$$9[i$$135].parentNode;
                JAM.call(v12318.removeChild, v12318, [t$$9[i$$135]], JAM.policy.p3);
              }
              --i$$135;
              v5310 = i$$135 >= 0;
            }
          }
          var v23264 = !f$$4.support.leadingWhitespace;
          if (v23264) {
            v23264 = JAM.call(X.test, X, [l$$43], JAM.policy.p3);
          }
          var v17911 = v23264;
          if (v17911) {
            JAM.call(p$$34.insertBefore, p$$34, [JAM.call(b$$201.createTextNode, b$$201, [JAM.call(X.exec, X, [l$$43], JAM.policy.p3)[0]], JAM.policy.p3), p$$34.firstChild], JAM.policy.p3);
          }
          l$$43 = p$$34.childNodes;
          if (p$$34) {
            var v23267 = p$$34.parentNode;
            JAM.call(v23267.removeChild, v23267, [p$$34], JAM.policy.p3);
            var v23268 = q$$12.length > 0;
            if (v23268) {
              r$$14 = q$$12[q$$12.length - 1];
              var v28537 = r$$14;
              if (v28537) {
                v28537 = r$$14.parentNode;
              }
              var v27475 = v28537;
              if (v27475) {
                var v28538 = r$$14.parentNode;
                JAM.call(v28538.removeChild, v28538, [r$$14], JAM.policy.p3);
              }
            }
          }
        }
      }
      var u$$7;
      if (!f$$4.support.appendChecked) {
        var v12321 = l$$43[0];
        if (v12321) {
          v12321 = typeof(u$$7 = l$$43.length) == "number";
        }
        if (v12321) {
          i$$135 = 0;
          var v5315 = i$$135 < u$$7;
          for (;v5315;) {
            bn(l$$43[i$$135]);
            i$$135++;
            v5315 = i$$135 < u$$7;
          }
        } else {
          bn(l$$43);
        }
      }
      var v5318;
      if (l$$43.nodeType) {
        v5318 = JAM.call(j$$52.push, j$$52, [l$$43], JAM.policy.p3);
      } else {
        v5318 = j$$52 = JAM.call(f$$4.merge, f$$4, [j$$52, l$$43], JAM.policy.p3);
      }
      v5318;
      k$$31++;
      v5319 = (l$$43 = a$$315[k$$31]) != null;
    }
    if (d$$126) {
      g$$75 = v973;
      k$$31 = 0;
      var v5326 = j$$52[k$$31];
      for (;v5326;) {
        h$$65 = j$$52[k$$31];
        var v17914 = e$$138;
        if (v17914) {
          v17914 = JAM.call(f$$4.nodeName, f$$4, [h$$65, "script"], JAM.policy.p3);
        }
        var v12324 = v17914;
        if (v12324) {
          var v17915 = !h$$65.type;
          if (!v17915) {
            v17915 = JAM.call(be.test, be, [h$$65.type], JAM.policy.p3);
          }
          v12324 = v17915;
        }
        if (v12324) {
          var v12325;
          if (h$$65.parentNode) {
            var v17916 = h$$65.parentNode;
            v12325 = JAM.call(v17916.removeChild, v17916, [h$$65], JAM.policy.p3);
          } else {
            v12325 = h$$65;
          }
          JAM.call(e$$138.push, e$$138, [v12325], JAM.policy.p3);
        } else {
          if (h$$65.nodeType === 1) {
            var v$$8 = JAM.call(f$$4.grep, f$$4, [JAM.call(h$$65.getElementsByTagName, h$$65, ["script"], JAM.policy.p3), g$$75], JAM.policy.p3);
            var v5322 = j$$52.splice;
            var v12327 = [k$$31 + 1, 0];
            JAM.call(v5322.apply, v5322, [j$$52, JAM.call(v12327.concat, v12327, [v$$8], JAM.policy.p3)], JAM.policy.p3);
          }
          JAM.call(d$$126.appendChild, d$$126, [h$$65], JAM.policy.p3);
        }
        k$$31++;
        v5326 = j$$52[k$$31];
      }
    }
    return j$$52;
  }
  function v972(a$$314, b$$200, c$$151) {
    var d$$125;
    var e$$137;
    var g$$74;
    var JSCompiler_temp$$3;
    var v17919 = f$$4.support.html5Clone;
    if (!v17919) {
      v17919 = JAM.call(f$$4.isXMLDoc, f$$4, [a$$314], JAM.policy.p3);
    }
    var v12328 = v17919;
    if (!v12328) {
      v12328 = !JAM.call(bc.test, bc, ["<" + a$$314.nodeName + ">"], JAM.policy.p3);
    }
    if (v12328) {
      JSCompiler_temp$$3 = JAM.call(a$$314.cloneNode, a$$314, [!0], JAM.policy.p3);
    } else {
      var a$$inline_29 = a$$314;
      var b$$inline_30 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      JAM.call(bh.appendChild, bh, [b$$inline_30], JAM.policy.p3);
      JAM.set(b$$inline_30, "innerHTML", a$$inline_29.outerHTML);
      JSCompiler_temp$$3 = b$$inline_30.firstChild;
    }
    var h$$64 = JSCompiler_temp$$3;
    var v23276 = !f$$4.support.noCloneEvent;
    if (!v23276) {
      v23276 = !f$$4.support.noCloneChecked;
    }
    var v17922 = v23276;
    if (v17922) {
      var v23277 = a$$314.nodeType === 1;
      if (!v23277) {
        v23277 = a$$314.nodeType === 11;
      }
      v17922 = v23277;
    }
    var v12329 = v17922;
    if (v12329) {
      v12329 = !JAM.call(f$$4.isXMLDoc, f$$4, [a$$314], JAM.policy.p3);
    }
    if (v12329) {
      bk(a$$314, h$$64);
      d$$125 = bl(a$$314);
      e$$137 = bl(h$$64);
      g$$74 = 0;
      var v5330 = d$$125[g$$74];
      for (;v5330;) {
        var v5329 = e$$137[g$$74];
        if (v5329) {
          bk(d$$125[g$$74], e$$137[g$$74]);
        }
        ++g$$74;
        v5330 = d$$125[g$$74];
      }
    }
    if (b$$200) {
      bj(a$$314, h$$64);
      if (c$$151) {
        d$$125 = bl(a$$314);
        e$$137 = bl(h$$64);
        g$$74 = 0;
        var v5334 = d$$125[g$$74];
        for (;v5334;) {
          bj(d$$125[g$$74], e$$137[g$$74]);
          ++g$$74;
          v5334 = d$$125[g$$74];
        }
      }
    }
    d$$125 = e$$137 = null;
    return h$$64;
  }
  function v971(a$$313, b$$199) {
    function v970(c$$150) {
      var d$$124 = [];
      var e$$136 = JAM.call(f$$4, null, [c$$150], JAM.policy.p3);
      var v5335 = this.length === 1;
      if (v5335) {
        v5335 = this[0].parentNode;
      }
      var g$$73 = v5335;
      var v23278 = g$$73;
      if (v23278) {
        v23278 = g$$73.nodeType === 11;
      }
      var v17924 = v23278;
      if (v17924) {
        v17924 = g$$73.childNodes.length === 1;
      }
      var v12334 = v17924;
      if (v12334) {
        v12334 = e$$136.length === 1;
      }
      if (v12334) {
        JAM.call(e$$136[b$$199], e$$136, [this[0]], JAM.policy.p3);
        return this;
      }
      var h$$63 = 0;
      var i$$134 = e$$136.length;
      var v5339 = h$$63 < i$$134;
      for (;v5339;) {
        var v12335;
        if (h$$63 > 0) {
          v12335 = JAM.call(this.clone, this, [!0], JAM.policy.p3);
        } else {
          v12335 = this;
        }
        var v5338 = v12335;
        var j$$51 = JAM.call(v5338.get, v5338, [], JAM.policy.p3);
        var v12336 = JAM.call(f$$4, null, [e$$136[h$$63]], JAM.policy.p3);
        JAM.call(v12336[b$$199], v12336, [j$$51], JAM.policy.p3);
        d$$124 = JAM.call(d$$124.concat, d$$124, [j$$51], JAM.policy.p3);
        h$$63++;
        v5339 = h$$63 < i$$134;
      }
      return JAM.call(this.pushStack, this, [d$$124, a$$313, e$$136.selector], JAM.policy.p3);
    }
    var v5341 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v5341[a$$313] = v970;
    }
    return;
  }
  function v969(a$$312, b$$198, d$$123) {
    var e$$135;
    var g$$72;
    var h$$62;
    var i$$133;
    var j$$50 = a$$312[0];
    var v27479 = b$$198;
    if (v27479) {
      v27479 = b$$198[0];
    }
    var v25798 = v27479;
    if (v25798) {
      var v27480 = b$$198[0].ownerDocument;
      if (!v27480) {
        v27480 = b$$198[0];
      }
      i$$133 = v27480;
    }
    var v25799 = i$$133.createDocumentFragment;
    if (!v25799) {
      i$$133 = c$$5;
    }
    var v30189 = a$$312.length === 1;
    if (v30189) {
      v30189 = typeof j$$50 == "string";
    }
    var v29943 = v30189;
    if (v29943) {
      v29943 = j$$50.length < 512;
    }
    var v29658 = v29943;
    if (v29658) {
      v29658 = i$$133 === c$$5;
    }
    var v29217 = v29658;
    if (v29217) {
      v29217 = JAM.call(j$$50.charAt, j$$50, [0], JAM.policy.p3) === "<";
    }
    var v28541 = v29217;
    if (v28541) {
      v28541 = !JAM.call(bb.test, bb, [j$$50], JAM.policy.p3);
    }
    var v27482 = v28541;
    if (v27482) {
      var v28542 = f$$4.support.checkClone;
      if (!v28542) {
        v28542 = !JAM.call(bd.test, bd, [j$$50], JAM.policy.p3);
      }
      v27482 = v28542;
    }
    var v25800 = v27482;
    if (v25800) {
      var v27483 = f$$4.support.html5Clone;
      if (!v27483) {
        v27483 = !JAM.call(bc.test, bc, [j$$50], JAM.policy.p3);
      }
      v25800 = v27483;
    }
    var v23280 = v25800;
    if (v23280) {
      g$$72 = !0;
      h$$62 = f$$4.fragments[j$$50];
      var v28547 = h$$62;
      if (v28547) {
        v28547 = h$$62 !== 1;
      }
      var v27484 = v28547;
      if (v27484) {
        e$$135 = h$$62;
      }
    }
    if (!e$$135) {
      e$$135 = JAM.call(i$$133.createDocumentFragment, i$$133, [], JAM.policy.p3);
      JAM.call(f$$4.clean, f$$4, [a$$312, i$$133, e$$135, d$$123], JAM.policy.p3);
    }
    if (g$$72) {
      var v17929 = f$$4.fragments;
      var v23282;
      if (h$$62) {
        v23282 = e$$135;
      } else {
        v23282 = 1;
      }
      introspect(JAM.policy.p2) {
        v17929[j$$50] = v23282;
      }
    }
    return {fragment:e$$135, cacheable:g$$72};
  }
  function v968(a$$310, c$$149, d$$122) {
    function v967(a$$311, b$$197) {
      var v12337;
      if (b$$197.src) {
        v12337 = JAM.call(f$$4.ajax, f$$4, [{type:"GET", global:!1, url:b$$197.src, async:!1, dataType:"script"}], JAM.policy.p3);
      } else {
        var v28548 = b$$197.text;
        if (!v28548) {
          v28548 = b$$197.textContent;
        }
        var v27485 = v28548;
        if (!v27485) {
          v27485 = b$$197.innerHTML;
        }
        var v25801 = v27485;
        if (!v25801) {
          v25801 = "";
        }
        var v23286 = v25801;
        v12337 = JAM.call(f$$4.globalEval, f$$4, [JAM.call(v23286.replace, v23286, [bf, "/*$0*/"], JAM.policy.p3)], JAM.policy.p3);
      }
      v12337;
      var v12338 = b$$197.parentNode;
      if (v12338) {
        var v17933 = b$$197.parentNode;
        JAM.call(v17933.removeChild, v17933, [b$$197], JAM.policy.p3);
      }
      return;
    }
    function v966(e$$134) {
      var g$$71 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var v12339 = a$$310;
      var v23287;
      if (c$$149) {
        v23287 = JAM.call(g$$71.html, g$$71, [], JAM.policy.p3);
      } else {
        v23287 = b$$9;
      }
      var v31123 = JAM.call(j$$49.call, j$$49, [this, e$$134, v23287], JAM.policy.p3);
      v12339[0] = v31123;
      JAM.call(g$$71.domManip, g$$71, [a$$310, c$$149, d$$122], JAM.policy.p3);
      return;
    }
    function v965() {
      var v5342 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5342.domManip, v5342, [a$$310, c$$149, d$$122, !0], JAM.policy.p3);
      return;
    }
    var e$$133;
    var g$$70;
    var h$$61;
    var i$$132;
    var j$$49 = a$$310[0];
    var k$$30 = [];
    var v23288 = !f$$4.support.checkClone;
    if (v23288) {
      v23288 = arguments.length === 3;
    }
    var v17935 = v23288;
    if (v17935) {
      v17935 = typeof j$$49 == "string";
    }
    var v12340 = v17935;
    if (v12340) {
      v12340 = JAM.call(bd.test, bd, [j$$49], JAM.policy.p3);
    }
    if (v12340) {
      return JAM.call(this.each, this, [v965], JAM.policy.p3);
    }
    if (JAM.call(f$$4.isFunction, f$$4, [j$$49], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v966], JAM.policy.p3);
    }
    if (this[0]) {
      var v23290 = j$$49;
      if (v23290) {
        v23290 = j$$49.parentNode;
      }
      i$$132 = v23290;
      var v23291;
      var v29223 = f$$4.support.parentNode;
      if (v29223) {
        v29223 = i$$132;
      }
      var v28550 = v29223;
      if (v28550) {
        v28550 = i$$132.nodeType === 11;
      }
      var v27488 = v28550;
      if (v27488) {
        v27488 = i$$132.childNodes.length === this.length;
      }
      if (v27488) {
        v23291 = e$$133 = {fragment:i$$132};
      } else {
        v23291 = e$$133 = JAM.call(f$$4.buildFragment, f$$4, [a$$310, this, k$$30], JAM.policy.p3);
      }
      v23291;
      h$$61 = e$$133.fragment;
      var v12341;
      if (h$$61.childNodes.length === 1) {
        v12341 = g$$70 = h$$61 = h$$61.firstChild;
      } else {
        v12341 = g$$70 = h$$61.firstChild;
      }
      v12341;
      if (g$$70) {
        var v5346 = c$$149;
        if (v5346) {
          v5346 = JAM.call(f$$4.nodeName, f$$4, [g$$70, "tr"], JAM.policy.p3);
        }
        c$$149 = v5346;
        var l$$42 = 0;
        var m$$20 = this.length;
        var n$$72 = m$$20 - 1;
        var v5349 = l$$42 < m$$20;
        for (;v5349;) {
          var v12342;
          if (c$$149) {
            v12342 = bi(this[l$$42], g$$70);
          } else {
            v12342 = this[l$$42];
          }
          var v5347 = v12342;
          var v12343;
          var v23293 = e$$133.cacheable;
          if (!v23293) {
            var v25806 = m$$20 > 1;
            if (v25806) {
              v25806 = l$$42 < n$$72;
            }
            v23293 = v25806;
          }
          if (v23293) {
            v12343 = JAM.call(f$$4.clone, f$$4, [h$$61, !0, !0], JAM.policy.p3);
          } else {
            v12343 = h$$61;
          }
          JAM.call(d$$122.call, d$$122, [v5347, v12343], JAM.policy.p3);
          l$$42++;
          v5349 = l$$42 < m$$20;
        }
      }
      var v5350 = k$$30.length;
      if (v5350) {
        JAM.call(f$$4.each, f$$4, [k$$30, v967], JAM.policy.p3);
      }
    }
    return this;
  }
  function v964(a$$309) {
    return JAM.call(this.remove, this, [a$$309, !0], JAM.policy.p3);
  }
  function v963(a$$308) {
    function v962() {
      var b$$196 = this.nextSibling;
      var c$$148 = this.parentNode;
      var v12344 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v12344.remove, v12344, [], JAM.policy.p3);
      var v12345;
      if (b$$196) {
        var v17941 = JAM.call(f$$4, null, [b$$196], JAM.policy.p3);
        v12345 = JAM.call(v17941.before, v17941, [a$$308], JAM.policy.p3);
      } else {
        var v17942 = JAM.call(f$$4, null, [c$$148], JAM.policy.p3);
        v12345 = JAM.call(v17942.append, v17942, [a$$308], JAM.policy.p3);
      }
      v12345;
      return;
    }
    function v961(b$$195) {
      var c$$147 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var d$$121 = JAM.call(c$$147.html, c$$147, [], JAM.policy.p3);
      JAM.call(c$$147.replaceWith, c$$147, [JAM.call(a$$308.call, a$$308, [this, b$$195, d$$121], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var v12346 = this[0];
    if (v12346) {
      v12346 = this[0].parentNode;
    }
    if (v12346) {
      if (JAM.call(f$$4.isFunction, f$$4, [a$$308], JAM.policy.p3)) {
        return JAM.call(this.each, this, [v961], JAM.policy.p3);
      }
      var v5355 = typeof a$$308 != "string";
      if (v5355) {
        var v12348 = JAM.call(f$$4, null, [a$$308], JAM.policy.p3);
        a$$308 = JAM.call(v12348.detach, v12348, [], JAM.policy.p3);
      }
      return JAM.call(this.each, this, [v962], JAM.policy.p3);
    }
    var v5357;
    if (this.length) {
      var v23294;
      if (JAM.call(f$$4.isFunction, f$$4, [a$$308], JAM.policy.p3)) {
        v23294 = JAM.call(a$$308, null, [], JAM.policy.p3);
      } else {
        v23294 = a$$308;
      }
      v5357 = JAM.call(this.pushStack, this, [JAM.call(f$$4, null, [v23294], JAM.policy.p3), "replaceWith", a$$308], JAM.policy.p3);
    } else {
      v5357 = this;
    }
    return v5357;
  }
  function v960(a$$306) {
    function v959(a$$307) {
      var v5358 = this[0];
      if (!v5358) {
        v5358 = {};
      }
      var c$$146 = v5358;
      var d$$120 = 0;
      var e$$132 = this.length;
      if (a$$307 === b$$9) {
        var v5359;
        if (c$$146.nodeType === 1) {
          var v12352 = c$$146.innerHTML;
          v5359 = JAM.call(v12352.replace, v12352, [W, ""], JAM.policy.p3);
        } else {
          v5359 = null;
        }
        return v5359;
      }
      var v23295 = typeof a$$307 == "string";
      if (v23295) {
        v23295 = !JAM.call(ba.test, ba, [a$$307], JAM.policy.p3);
      }
      var v17946 = v23295;
      if (v17946) {
        var v23296 = f$$4.support.leadingWhitespace;
        if (!v23296) {
          v23296 = !JAM.call(X.test, X, [a$$307], JAM.policy.p3);
        }
        v17946 = v23296;
      }
      var v12354 = v17946;
      if (v12354) {
        var v23297 = bg;
        var v28553 = JAM.call(Z.exec, Z, [a$$307], JAM.policy.p3);
        if (!v28553) {
          v28553 = ["", ""];
        }
        var v25814 = v28553[1];
        v12354 = !v23297[JAM.call(v25814.toLowerCase, v25814, [], JAM.policy.p3)];
      }
      if (v12354) {
        a$$307 = JAM.call(a$$307.replace, a$$307, [Y, "<$1></$2>"], JAM.policy.p3);
        try {
          var v5361 = d$$120 < e$$132;
          for (;v5361;) {
            var v12355 = this[d$$120];
            if (!v12355) {
              v12355 = {};
            }
            c$$146 = v12355;
            var v12356 = c$$146.nodeType === 1;
            if (v12356) {
              JAM.call(f$$4.cleanData, f$$4, [JAM.call(c$$146.getElementsByTagName, c$$146, ["*"], JAM.policy.p3)], JAM.policy.p3);
              JAM.set(c$$146, "innerHTML", a$$307);
            }
            d$$120++;
            v5361 = d$$120 < e$$132;
          }
          c$$146 = 0;
        } catch (g$$69) {
        }
      }
      if (c$$146) {
        var v12357 = JAM.call(this.empty, this, [], JAM.policy.p3);
        JAM.call(v12357.append, v12357, [a$$307], JAM.policy.p3);
      }
      return;
    }
    return JAM.call(f$$4.access, f$$4, [this, v959, null, a$$306, arguments.length], JAM.policy.p3);
  }
  function v958(a$$305, b$$194) {
    function v957() {
      return JAM.call(f$$4.clone, f$$4, [this, a$$305, b$$194], JAM.policy.p3);
    }
    var v12358;
    if (a$$305 == null) {
      v12358 = !1;
    } else {
      v12358 = a$$305;
    }
    a$$305 = v12358;
    var v12359;
    if (b$$194 == null) {
      v12359 = a$$305;
    } else {
      v12359 = b$$194;
    }
    b$$194 = v12359;
    return JAM.call(this.map, this, [v957], JAM.policy.p3);
  }
  function v956() {
    var a$$304 = 0;
    var b$$193;
    var v5367 = (b$$193 = this[a$$304]) != null;
    for (;v5367;) {
      var v5364 = b$$193.nodeType === 1;
      if (v5364) {
        JAM.call(f$$4.cleanData, f$$4, [JAM.call(b$$193.getElementsByTagName, b$$193, ["*"], JAM.policy.p3)], JAM.policy.p3);
      }
      var v5366 = b$$193.firstChild;
      for (;v5366;) {
        JAM.call(b$$193.removeChild, b$$193, [b$$193.firstChild], JAM.policy.p3);
        v5366 = b$$193.firstChild;
      }
      a$$304++;
      v5367 = (b$$193 = this[a$$304]) != null;
    }
    return this;
  }
  function v955(a$$303, b$$192) {
    var c$$145 = 0;
    var d$$119;
    var v5369 = (d$$119 = this[c$$145]) != null;
    for (;v5369;) {
      var v12365 = !a$$303;
      if (!v12365) {
        v12365 = JAM.call(f$$4.filter, f$$4, [a$$303, [d$$119]], JAM.policy.p3).length;
      }
      if (v12365) {
        var v17954 = !b$$192;
        if (v17954) {
          v17954 = d$$119.nodeType === 1;
        }
        var v12366 = v17954;
        if (v12366) {
          JAM.call(f$$4.cleanData, f$$4, [JAM.call(d$$119.getElementsByTagName, d$$119, ["*"], JAM.policy.p3)], JAM.policy.p3);
          JAM.call(f$$4.cleanData, f$$4, [[d$$119]], JAM.policy.p3);
        }
        var v12367 = d$$119.parentNode;
        if (v12367) {
          var v17955 = d$$119.parentNode;
          JAM.call(v17955.removeChild, v17955, [d$$119], JAM.policy.p3);
        }
      }
      c$$145++;
      v5369 = (d$$119 = this[c$$145]) != null;
    }
    return this;
  }
  function v954() {
    function v953(a$$302) {
      var v5370 = this.parentNode;
      JAM.call(v5370.insertBefore, v5370, [a$$302, this.nextSibling], JAM.policy.p3);
      return;
    }
    var v12369 = this[0];
    if (v12369) {
      v12369 = this[0].parentNode;
    }
    if (v12369) {
      return JAM.call(this.domManip, this, [arguments, !1, v953], JAM.policy.p3);
    }
    if (arguments.length) {
      var a$$301 = JAM.call(this.pushStack, this, [this, "after", arguments], JAM.policy.p3);
      var v5374 = a$$301.push;
      JAM.call(v5374.apply, v5374, [a$$301, JAM.call(f$$4.clean, f$$4, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return a$$301;
    }
    return;
  }
  function v952() {
    function v951(a$$300) {
      var v5377 = this.parentNode;
      JAM.call(v5377.insertBefore, v5377, [a$$300, this], JAM.policy.p3);
      return;
    }
    var v12370 = this[0];
    if (v12370) {
      v12370 = this[0].parentNode;
    }
    if (v12370) {
      return JAM.call(this.domManip, this, [arguments, !1, v951], JAM.policy.p3);
    }
    if (arguments.length) {
      var a$$299 = JAM.call(f$$4.clean, f$$4, [arguments], JAM.policy.p3);
      var v5380 = a$$299.push;
      JAM.call(v5380.apply, v5380, [a$$299, JAM.call(this.toArray, this, [], JAM.policy.p3)], JAM.policy.p3);
      return JAM.call(this.pushStack, this, [a$$299, "before", arguments], JAM.policy.p3);
    }
    return;
  }
  function v950() {
    function v949(a$$298) {
      var v5383 = this.nodeType === 1;
      if (v5383) {
        JAM.call(this.insertBefore, this, [a$$298, this.firstChild], JAM.policy.p3);
      }
      return;
    }
    return JAM.call(this.domManip, this, [arguments, !0, v949], JAM.policy.p3);
  }
  function v948() {
    function v947(a$$297) {
      var v5385 = this.nodeType === 1;
      if (v5385) {
        JAM.call(this.appendChild, this, [a$$297], JAM.policy.p3);
      }
      return;
    }
    return JAM.call(this.domManip, this, [arguments, !0, v947], JAM.policy.p3);
  }
  function v946() {
    function v945() {
      var v5387 = JAM.call(f$$4.nodeName, f$$4, [this, "body"], JAM.policy.p3);
      if (!v5387) {
        var v12374 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        JAM.call(v12374.replaceWith, v12374, [this.childNodes], JAM.policy.p3);
      }
      return;
    }
    var v12377 = JAM.call(this.parent, this, [], JAM.policy.p3);
    var v5388 = JAM.call(v12377.each, v12377, [v945], JAM.policy.p3);
    return JAM.call(v5388.end, v5388, [], JAM.policy.p3);
  }
  function v944(a$$296) {
    function v943(c$$144) {
      var v5389 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var v12378;
      if (b$$191) {
        v12378 = JAM.call(a$$296.call, a$$296, [this, c$$144], JAM.policy.p3);
      } else {
        v12378 = a$$296;
      }
      JAM.call(v5389.wrapAll, v5389, [v12378], JAM.policy.p3);
      return;
    }
    var b$$191 = JAM.call(f$$4.isFunction, f$$4, [a$$296], JAM.policy.p3);
    return JAM.call(this.each, this, [v943], JAM.policy.p3);
  }
  function v942(a$$295) {
    function v941() {
      var b$$190 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var c$$143 = JAM.call(b$$190.contents, b$$190, [], JAM.policy.p3);
      var v5391;
      if (c$$143.length) {
        v5391 = JAM.call(c$$143.wrapAll, c$$143, [a$$295], JAM.policy.p3);
      } else {
        v5391 = JAM.call(b$$190.append, b$$190, [a$$295], JAM.policy.p3);
      }
      v5391;
      return;
    }
    function v940(b$$189) {
      var v5392 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5392.wrapInner, v5392, [JAM.call(a$$295.call, a$$295, [this, b$$189], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    if (JAM.call(f$$4.isFunction, f$$4, [a$$295], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v940], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v941], JAM.policy.p3);
  }
  function v939(a$$293) {
    function v938() {
      var a$$294 = this;
      var v12380 = a$$294.firstChild;
      if (v12380) {
        v12380 = a$$294.firstChild.nodeType === 1;
      }
      var v5395 = v12380;
      for (;v5395;) {
        a$$294 = a$$294.firstChild;
        var v12381 = a$$294.firstChild;
        if (v12381) {
          v12381 = a$$294.firstChild.nodeType === 1;
        }
        v5395 = v12381;
      }
      return a$$294;
    }
    function v937(b$$188) {
      var v5396 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5396.wrapAll, v5396, [JAM.call(a$$293.call, a$$293, [this, b$$188], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    if (JAM.call(f$$4.isFunction, f$$4, [a$$293], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v937], JAM.policy.p3);
    }
    if (this[0]) {
      var v12382 = JAM.call(f$$4, null, [a$$293, this[0].ownerDocument], JAM.policy.p3);
      var v5399 = JAM.call(v12382.eq, v12382, [0], JAM.policy.p3);
      var b$$187 = JAM.call(v5399.clone, v5399, [!0], JAM.policy.p3);
      var v12383 = this[0].parentNode;
      if (v12383) {
        JAM.call(b$$187.insertBefore, b$$187, [this[0]], JAM.policy.p3);
      }
      var v12384 = JAM.call(b$$187.map, b$$187, [v938], JAM.policy.p3);
      JAM.call(v12384.append, v12384, [this], JAM.policy.p3);
    }
    return this;
  }
  function v936(a$$291) {
    function v935(a$$292) {
      var v5402;
      if (a$$292 === b$$9) {
        v5402 = JAM.call(f$$4.text, f$$4, [this], JAM.policy.p3);
      } else {
        var v12385 = JAM.call(this.empty, this, [], JAM.policy.p3);
        var v25815 = this[0];
        if (v25815) {
          v25815 = this[0].ownerDocument;
        }
        var v23307 = v25815;
        if (!v23307) {
          v23307 = c$$5;
        }
        var v17963 = v23307;
        v5402 = JAM.call(v12385.append, v12385, [JAM.call(v17963.createTextNode, v17963, [a$$292], JAM.policy.p3)], JAM.policy.p3);
      }
      return v5402;
    }
    return JAM.call(f$$4.access, f$$4, [this, v935, null, a$$291, arguments.length], JAM.policy.p3);
  }
  function v934(a$$290, b$$186) {
    var c$$142 = [];
    for (;a$$290;) {
      var v12388 = a$$290.nodeType === 1;
      if (v12388) {
        v12388 = a$$290 !== b$$186;
      }
      var v5404 = v12388;
      if (v5404) {
        JAM.call(c$$142.push, c$$142, [a$$290], JAM.policy.p3);
      }
      a$$290 = a$$290.nextSibling;
    }
    return c$$142;
  }
  function v933(a$$289, b$$185, c$$141, d$$118) {
    b$$185 = b$$185 || 1;
    var e$$131 = 0;
    for (;a$$289;) {
      var v12389 = a$$289.nodeType === 1;
      if (v12389) {
        v12389 = (e$$131 = e$$131 + 1) === b$$185;
      }
      if (v12389) {
        break;
      }
      a$$289 = a$$289[c$$141];
    }
    return a$$289;
  }
  function v932(a$$288, c$$140, d$$117) {
    var e$$130 = [];
    var g$$68 = a$$288[c$$140];
    var v17967 = g$$68;
    if (v17967) {
      v17967 = g$$68.nodeType !== 9;
    }
    var v12390 = v17967;
    if (v12390) {
      var v23309 = d$$117 === b$$9;
      if (!v23309) {
        v23309 = g$$68.nodeType !== 1;
      }
      var v17968 = v23309;
      if (!v17968) {
        var v25819 = JAM.call(f$$4, null, [g$$68], JAM.policy.p3);
        v17968 = !JAM.call(v25819.is, v25819, [d$$117], JAM.policy.p3);
      }
      v12390 = v17968;
    }
    var v5406 = v12390;
    for (;v5406;) {
      var v12391 = g$$68.nodeType === 1;
      if (v12391) {
        JAM.call(e$$130.push, e$$130, [g$$68], JAM.policy.p3);
      }
      g$$68 = g$$68[c$$140];
      var v17970 = g$$68;
      if (v17970) {
        v17970 = g$$68.nodeType !== 9;
      }
      var v12392 = v17970;
      if (v12392) {
        var v23313 = d$$117 === b$$9;
        if (!v23313) {
          v23313 = g$$68.nodeType !== 1;
        }
        var v17971 = v23313;
        if (!v17971) {
          var v25822 = JAM.call(f$$4, null, [g$$68], JAM.policy.p3);
          v17971 = !JAM.call(v25822.is, v25822, [d$$117], JAM.policy.p3);
        }
        v12392 = v17971;
      }
      v5406 = v12392;
    }
    return e$$130;
  }
  function v931(a$$287, b$$184, c$$139) {
    if (c$$139) {
      a$$287 = ":not(" + a$$287 + ")";
    }
    var v5407;
    if (b$$184.length === 1) {
      var v12394;
      var v23316 = f$$4.find;
      if (JAM.call(v23316.matchesSelector, v23316, [b$$184[0], a$$287], JAM.policy.p3)) {
        v12394 = [b$$184[0]];
      } else {
        v12394 = [];
      }
      v5407 = v12394;
    } else {
      var v12395 = f$$4.find;
      v5407 = JAM.call(v12395.matches, v12395, [a$$287, b$$184], JAM.policy.p3);
    }
    return v5407;
  }
  function v930(a$$286, b$$183) {
    function v929(c$$138, d$$116) {
      var e$$129 = JAM.call(f$$4.map, f$$4, [this, b$$183, c$$138], JAM.policy.p3);
      var v23318 = JAM.call(L.test, L, [a$$286], JAM.policy.p3);
      if (!v23318) {
        d$$116 = c$$138;
      }
      var v25824 = d$$116;
      if (v25824) {
        v25824 = typeof d$$116 == "string";
      }
      var v23319 = v25824;
      if (v23319) {
        e$$129 = JAM.call(f$$4.filter, f$$4, [d$$116, e$$129], JAM.policy.p3);
      }
      var v17975;
      var v25825 = this.length > 1;
      if (v25825) {
        v25825 = !R[a$$286];
      }
      if (v25825) {
        v17975 = JAM.call(f$$4.unique, f$$4, [e$$129], JAM.policy.p3);
      } else {
        v17975 = e$$129;
      }
      e$$129 = v17975;
      var v23321 = this.length > 1;
      if (!v23321) {
        v23321 = JAM.call(N.test, N, [d$$116], JAM.policy.p3);
      }
      var v17976 = v23321;
      if (v17976) {
        v17976 = JAM.call(M.test, M, [a$$286], JAM.policy.p3);
      }
      var v12397 = v17976;
      if (v12397) {
        e$$129 = JAM.call(e$$129.reverse, e$$129, [], JAM.policy.p3);
      }
      var v12398 = JAM.call(P.call, P, [arguments], JAM.policy.p3);
      return JAM.call(this.pushStack, this, [e$$129, a$$286, JAM.call(v12398.join, v12398, [","], JAM.policy.p3)], JAM.policy.p3);
    }
    var v5409 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v5409[a$$286] = v929;
    }
    return;
  }
  function v928(a$$285) {
    var v5410;
    if (JAM.call(f$$4.nodeName, f$$4, [a$$285, "iframe"], JAM.policy.p3)) {
      var v12399 = a$$285.contentDocument;
      if (!v12399) {
        v12399 = a$$285.contentWindow.document;
      }
      v5410 = v12399;
    } else {
      v5410 = JAM.call(f$$4.makeArray, f$$4, [a$$285.childNodes], JAM.policy.p3);
    }
    return v5410;
  }
  function v927(a$$284) {
    return JAM.call(f$$4.sibling, f$$4, [a$$284.firstChild], JAM.policy.p3);
  }
  function v926(a$$283) {
    var v17979 = a$$283.parentNode;
    if (!v17979) {
      v17979 = {};
    }
    return JAM.call(f$$4.sibling, f$$4, [v17979.firstChild, a$$283], JAM.policy.p3);
  }
  function v925(a$$282, b$$182, c$$137) {
    return JAM.call(f$$4.dir, f$$4, [a$$282, "previousSibling", c$$137], JAM.policy.p3);
  }
  function v924(a$$281, b$$181, c$$136) {
    return JAM.call(f$$4.dir, f$$4, [a$$281, "nextSibling", c$$136], JAM.policy.p3);
  }
  function v923(a$$280) {
    return JAM.call(f$$4.dir, f$$4, [a$$280, "previousSibling"], JAM.policy.p3);
  }
  function v922(a$$279) {
    return JAM.call(f$$4.dir, f$$4, [a$$279, "nextSibling"], JAM.policy.p3);
  }
  function v921(a$$278) {
    return JAM.call(f$$4.nth, f$$4, [a$$278, 2, "previousSibling"], JAM.policy.p3);
  }
  function v920(a$$277) {
    return JAM.call(f$$4.nth, f$$4, [a$$277, 2, "nextSibling"], JAM.policy.p3);
  }
  function v919(a$$276, b$$180, c$$135) {
    return JAM.call(f$$4.dir, f$$4, [a$$276, "parentNode", c$$135], JAM.policy.p3);
  }
  function v918(a$$275) {
    return JAM.call(f$$4.dir, f$$4, [a$$275, "parentNode"], JAM.policy.p3);
  }
  function v917(a$$274) {
    var b$$179 = a$$274.parentNode;
    var v5413;
    var v17980 = b$$179;
    if (v17980) {
      v17980 = b$$179.nodeType !== 11;
    }
    if (v17980) {
      v5413 = b$$179;
    } else {
      v5413 = null;
    }
    return v5413;
  }
  function v916() {
    return JAM.call(this.add, this, [this.prevObject], JAM.policy.p3);
  }
  function v915(a$$273, b$$178) {
    var v5415;
    if (typeof a$$273 == "string") {
      v5415 = JAM.call(f$$4, null, [a$$273, b$$178], JAM.policy.p3);
    } else {
      var v17982;
      var v25828 = a$$273;
      if (v25828) {
        v25828 = a$$273.nodeType;
      }
      if (v25828) {
        v17982 = [a$$273];
      } else {
        v17982 = a$$273;
      }
      v5415 = JAM.call(f$$4.makeArray, f$$4, [v17982], JAM.policy.p3);
    }
    var c$$134 = v5415;
    var d$$115 = JAM.call(f$$4.merge, f$$4, [JAM.call(this.get, this, [], JAM.policy.p3), c$$134], JAM.policy.p3);
    var v12406;
    var v23325 = S(c$$134[0]);
    if (!v23325) {
      v23325 = S(d$$115[0]);
    }
    if (v23325) {
      v12406 = d$$115;
    } else {
      v12406 = JAM.call(f$$4.unique, f$$4, [d$$115], JAM.policy.p3);
    }
    return JAM.call(this.pushStack, this, [v12406], JAM.policy.p3);
  }
  function v914(a$$272) {
    if (!a$$272) {
      var v5418;
      var v17984 = this[0];
      if (v17984) {
        v17984 = this[0].parentNode;
      }
      if (v17984) {
        v5418 = JAM.call(this.prevAll, this, [], JAM.policy.p3).length;
      } else {
        v5418 = -1;
      }
      return v5418;
    }
    if (typeof a$$272 == "string") {
      return JAM.call(f$$4.inArray, f$$4, [this[0], JAM.call(f$$4, null, [a$$272], JAM.policy.p3)], JAM.policy.p3);
    }
    var v12410;
    if (a$$272.jquery) {
      v12410 = a$$272[0];
    } else {
      v12410 = a$$272;
    }
    return JAM.call(f$$4.inArray, f$$4, [v12410, this], JAM.policy.p3);
  }
  function v913(a$$271, b$$177) {
    var c$$133 = [];
    var d$$114;
    var e$$128;
    var g$$67 = this[0];
    if (JAM.call(f$$4.isArray, f$$4, [a$$271], JAM.policy.p3)) {
      var h$$60 = 1;
      var v17986 = g$$67;
      if (v17986) {
        v17986 = g$$67.ownerDocument;
      }
      var v12411 = v17986;
      if (v12411) {
        v12411 = g$$67 !== b$$177;
      }
      var v5426 = v12411;
      for (;v5426;) {
        d$$114 = 0;
        var v5425 = d$$114 < a$$271.length;
        for (;v5425;) {
          var v12413 = JAM.call(f$$4, null, [g$$67], JAM.policy.p3);
          var v5424 = JAM.call(v12413.is, v12413, [a$$271[d$$114]], JAM.policy.p3);
          if (v5424) {
            JAM.call(c$$133.push, c$$133, [{selector:a$$271[d$$114], elem:g$$67, level:h$$60}], JAM.policy.p3);
          }
          d$$114++;
          v5425 = d$$114 < a$$271.length;
        }
        g$$67 = g$$67.parentNode;
        h$$60++;
        var v17988 = g$$67;
        if (v17988) {
          v17988 = g$$67.ownerDocument;
        }
        var v12417 = v17988;
        if (v12417) {
          v12417 = g$$67 !== b$$177;
        }
        v5426 = v12417;
      }
      return c$$133;
    }
    var v5428;
    var v17989 = JAM.call(Q.test, Q, [a$$271], JAM.policy.p3);
    if (!v17989) {
      v17989 = typeof a$$271 != "string";
    }
    if (v17989) {
      var v17990 = b$$177;
      if (!v17990) {
        v17990 = this.context;
      }
      v5428 = JAM.call(f$$4, null, [a$$271, v17990], JAM.policy.p3);
    } else {
      v5428 = 0;
    }
    var i$$131 = v5428;
    d$$114 = 0;
    e$$128 = this.length;
    var v5431 = d$$114 < e$$128;
    for (;v5431;) {
      g$$67 = this[d$$114];
      for (;g$$67;) {
        var v12420;
        if (i$$131) {
          v12420 = JAM.call(i$$131.index, i$$131, [g$$67], JAM.policy.p3) > -1;
        } else {
          var v17992 = f$$4.find;
          v12420 = JAM.call(v17992.matchesSelector, v17992, [g$$67, a$$271], JAM.policy.p3);
        }
        if (v12420) {
          JAM.call(c$$133.push, c$$133, [g$$67], JAM.policy.p3);
          break;
        }
        g$$67 = g$$67.parentNode;
        var v23330 = !g$$67;
        if (!v23330) {
          v23330 = !g$$67.ownerDocument;
        }
        var v17993 = v23330;
        if (!v17993) {
          v17993 = g$$67 === b$$177;
        }
        var v12421 = v17993;
        if (!v12421) {
          v12421 = g$$67.nodeType === 11;
        }
        if (v12421) {
          break;
        }
      }
      d$$114++;
      v5431 = d$$114 < e$$128;
    }
    var v5432;
    if (c$$133.length > 1) {
      v5432 = JAM.call(f$$4.unique, f$$4, [c$$133], JAM.policy.p3);
    } else {
      v5432 = c$$133;
    }
    c$$133 = v5432;
    return JAM.call(this.pushStack, this, [c$$133, "closest", a$$271], JAM.policy.p3);
  }
  function v912(a$$270) {
    var v5433 = !!a$$270;
    if (v5433) {
      var v12424;
      if (typeof a$$270 == "string") {
        var v17997;
        if (JAM.call(Q.test, Q, [a$$270], JAM.policy.p3)) {
          var v25834 = JAM.call(f$$4, null, [a$$270, this.context], JAM.policy.p3);
          v17997 = JAM.call(v25834.index, v25834, [this[0]], JAM.policy.p3) >= 0;
        } else {
          v17997 = JAM.call(f$$4.filter, f$$4, [a$$270, this], JAM.policy.p3).length > 0;
        }
        v12424 = v17997;
      } else {
        v12424 = JAM.call(this.filter, this, [a$$270], JAM.policy.p3).length > 0;
      }
      v5433 = v12424;
    }
    return v5433;
  }
  function v911(a$$269) {
    return JAM.call(this.pushStack, this, [T$$2(this, a$$269, !0), "filter", a$$269], JAM.policy.p3);
  }
  function v910(a$$268) {
    return JAM.call(this.pushStack, this, [T$$2(this, a$$268, !1), "not", a$$268], JAM.policy.p3);
  }
  function v909(a$$266) {
    function v908() {
      var a$$267 = 0;
      var c$$132 = b$$176.length;
      var v5437 = a$$267 < c$$132;
      for (;v5437;) {
        if (JAM.call(f$$4.contains, f$$4, [this, b$$176[a$$267]], JAM.policy.p3)) {
          return !0;
        }
        a$$267++;
        v5437 = a$$267 < c$$132;
      }
      return;
    }
    var b$$176 = JAM.call(f$$4, null, [a$$266], JAM.policy.p3);
    return JAM.call(this.filter, this, [v908], JAM.policy.p3);
  }
  function v907(a$$265) {
    function v906() {
      c$$131 = 0;
      d$$113 = b$$175.length;
      var v5439 = c$$131 < d$$113;
      for (;v5439;) {
        if (JAM.call(f$$4.contains, f$$4, [b$$175[c$$131], this], JAM.policy.p3)) {
          return !0;
        }
        c$$131++;
        v5439 = c$$131 < d$$113;
      }
      return;
    }
    var b$$175 = this;
    var c$$131;
    var d$$113;
    if (typeof a$$265 != "string") {
      var v5440 = JAM.call(f$$4, null, [a$$265], JAM.policy.p3);
      return JAM.call(v5440.filter, v5440, [v906], JAM.policy.p3);
    }
    var e$$127 = JAM.call(this.pushStack, this, ["", "find", a$$265], JAM.policy.p3);
    var g$$66;
    var h$$59;
    var i$$130;
    c$$131 = 0;
    d$$113 = this.length;
    var v5447 = c$$131 < d$$113;
    for (;v5447;) {
      g$$66 = e$$127.length;
      JAM.call(f$$4.find, f$$4, [a$$265, this[c$$131], e$$127], JAM.policy.p3);
      if (c$$131 > 0) {
        h$$59 = g$$66;
        var v5445 = h$$59 < e$$127.length;
        for (;v5445;) {
          i$$130 = 0;
          var v5444 = i$$130 < g$$66;
          for (;v5444;) {
            if (e$$127[i$$130] === e$$127[h$$59]) {
              var v5442 = h$$59;
              h$$59 = h$$59 - 1;
              JAM.call(e$$127.splice, e$$127, [v5442, 1], JAM.policy.p3);
              break;
            }
            i$$130++;
            v5444 = i$$130 < g$$66;
          }
          h$$59++;
          v5445 = h$$59 < e$$127.length;
        }
      }
      c$$131++;
      v5447 = c$$131 < d$$113;
    }
    return e$$127;
  }
  function v905() {
    function v904(a$$263) {
      var v12435;
      if (a$$263) {
        var v18000 = a$$263.ownerDocument;
        if (!v18000) {
          v18000 = a$$263;
        }
        v12435 = v18000;
      } else {
        v12435 = 0;
      }
      var b$$173 = v12435.documentElement;
      var v5449;
      if (b$$173) {
        v5449 = b$$173.nodeName !== "HTML";
      } else {
        v5449 = !1;
      }
      return v5449;
    }
    function v903() {
      return !1;
    }
    function v902(a$$262, b$$172) {
      return !!(JAM.call(a$$262.compareDocumentPosition, a$$262, [b$$172], JAM.policy.p3) & 16);
    }
    function v901(a$$261, b$$171) {
      var v5451 = a$$261 !== b$$171;
      if (v5451) {
        var v12438;
        if (a$$261.contains) {
          v12438 = JAM.call(a$$261.contains, a$$261, [b$$171], JAM.policy.p3);
        } else {
          v12438 = !0;
        }
        v5451 = v12438;
      }
      return v5451;
    }
    function v900() {
      function v899(a$$260, b$$170, c$$129) {
        var v12439 = typeof b$$170.getElementsByClassName != "undefined";
        if (v12439) {
          v12439 = !c$$129;
        }
        if (v12439) {
          return JAM.call(b$$170.getElementsByClassName, b$$170, [a$$260[1]], JAM.policy.p3);
        }
        return;
      }
      var a$$259 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      JAM.set(a$$259, "innerHTML", "<div class='test e'></div><div class='test'></div>");
      var v12440 = !!a$$259.getElementsByClassName;
      if (v12440) {
        v12440 = JAM.call(a$$259.getElementsByClassName, a$$259, ["e"], JAM.policy.p3).length !== 0;
      }
      if (v12440) {
        a$$259.lastChild.className = "e";
        if (JAM.call(a$$259.getElementsByClassName, a$$259, ["e"], JAM.policy.p3).length === 1) {
          return;
        }
        var v18007 = o$$10.order;
        JAM.call(v18007.splice, v18007, [1, 0, "CLASS"], JAM.policy.p3);
        o$$10.find.CLASS = v899;
        a$$259 = null;
      }
      return;
    }
    function v898() {
      function v897(a$$258, c$$128) {
        c$$128 = JAM.call(c$$128.replace, c$$128, [/\=\s*([^'"\]]*)\s*\]/g, "='$1']"], JAM.policy.p3);
        if (!JAM.call(m$$19.isXML, m$$19, [a$$258], JAM.policy.p3)) {
          try {
            var v12443 = e$$125;
            if (!v12443) {
              var v25837 = o$$10.match.PSEUDO;
              var v18009 = !JAM.call(v25837.test, v25837, [c$$128], JAM.policy.p3);
              if (v18009) {
                v18009 = !JAM.call(/!=/.test, /!=/, [c$$128], JAM.policy.p3);
              }
              v12443 = v18009;
            }
            if (v12443) {
              var f$$41 = JAM.call(b$$169.call, b$$169, [a$$258, c$$128], JAM.policy.p3);
              var v18011 = f$$41;
              if (!v18011) {
                v18011 = !d$$111;
              }
              var v12444 = v18011;
              if (!v12444) {
                var v18012 = a$$258.document;
                if (v18012) {
                  v18012 = a$$258.document.nodeType !== 11;
                }
                v12444 = v18012;
              }
              if (v12444) {
                return f$$41;
              }
            }
          } catch (g$$64) {
          }
        }
        return JAM.call(m$$19, null, [c$$128, null, null, [a$$258]], JAM.policy.p3).length > 0;
      }
      var a$$257 = c$$5.documentElement;
      var v18015 = a$$257.matchesSelector;
      if (!v18015) {
        v18015 = a$$257.mozMatchesSelector;
      }
      var v12446 = v18015;
      if (!v12446) {
        v12446 = a$$257.webkitMatchesSelector;
      }
      var v5461 = v12446;
      if (!v5461) {
        v5461 = a$$257.msMatchesSelector;
      }
      var b$$169 = v5461;
      if (b$$169) {
        var d$$111 = !JAM.call(b$$169.call, b$$169, [JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3), "div"], JAM.policy.p3);
        var e$$125 = !1;
        try {
          JAM.call(b$$169.call, b$$169, [c$$5.documentElement, "[test!='']:sizzle"], JAM.policy.p3);
        } catch (f$$40) {
          e$$125 = !0;
        }
        m$$19.matchesSelector = v897;
      }
      return;
    }
    function v896() {
      function v895(b$$168, e$$124, f$$39, g$$63) {
        e$$124 = e$$124 || c$$5;
        var v12449 = !g$$63;
        if (v12449) {
          v12449 = !JAM.call(m$$19.isXML, m$$19, [e$$124], JAM.policy.p3);
        }
        if (v12449) {
          var h$$57 = JAM.call(/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec, /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/, [b$$168], JAM.policy.p3);
          var v12450 = h$$57;
          if (v12450) {
            var v18018 = e$$124.nodeType === 1;
            if (!v18018) {
              v18018 = e$$124.nodeType === 9;
            }
            v12450 = v18018;
          }
          if (v12450) {
            if (h$$57[1]) {
              return JAM.call(s$$22, null, [JAM.call(e$$124.getElementsByTagName, e$$124, [b$$168], JAM.policy.p3), f$$39], JAM.policy.p3);
            }
            var v18019 = h$$57[2];
            if (v18019) {
              v18019 = o$$10.find.CLASS;
            }
            var v12451 = v18019;
            if (v12451) {
              v12451 = e$$124.getElementsByClassName;
            }
            if (v12451) {
              return JAM.call(s$$22, null, [JAM.call(e$$124.getElementsByClassName, e$$124, [h$$57[2]], JAM.policy.p3), f$$39], JAM.policy.p3);
            }
          }
          if (e$$124.nodeType === 9) {
            var v12454 = b$$168 === "body";
            if (v12454) {
              v12454 = e$$124.body;
            }
            if (v12454) {
              return JAM.call(s$$22, null, [[e$$124.body], f$$39], JAM.policy.p3);
            }
            var v12456 = h$$57;
            if (v12456) {
              v12456 = h$$57[3];
            }
            if (v12456) {
              var i$$128 = JAM.call(e$$124.getElementById, e$$124, [h$$57[3]], JAM.policy.p3);
              var v12457 = !i$$128;
              if (!v12457) {
                v12457 = !i$$128.parentNode;
              }
              if (v12457) {
                return JAM.call(s$$22, null, [[], f$$39], JAM.policy.p3);
              }
              if (i$$128.id === h$$57[3]) {
                return JAM.call(s$$22, null, [[i$$128], f$$39], JAM.policy.p3);
              }
            }
            try {
              return JAM.call(s$$22, null, [JAM.call(e$$124.querySelectorAll, e$$124, [b$$168], JAM.policy.p3), f$$39], JAM.policy.p3);
            } catch (j$$48) {
            }
          } else {
            var v12460 = e$$124.nodeType === 1;
            if (v12460) {
              var v23350 = e$$124.nodeName;
              v12460 = JAM.call(v23350.toLowerCase, v23350, [], JAM.policy.p3) !== "object";
            }
            if (v12460) {
              var k$$29 = e$$124;
              var l$$41 = JAM.call(e$$124.getAttribute, e$$124, ["id"], JAM.policy.p3);
              var n$$71 = l$$41 || d$$110;
              var p$$33 = e$$124.parentNode;
              var q$$11 = JAM.call(/^\s*[+~]/.test, /^\s*[+~]/, [b$$168], JAM.policy.p3);
              var v12461;
              if (l$$41) {
                v12461 = n$$71 = JAM.call(n$$71.replace, n$$71, [/'/g, "\\$&"], JAM.policy.p3);
              } else {
                v12461 = JAM.call(e$$124.setAttribute, e$$124, ["id", n$$71], JAM.policy.p3);
              }
              v12461;
              var v12462 = q$$11 && p$$33;
              if (v12462) {
                e$$124 = e$$124.parentNode;
              }
              try {
                var v12463 = !q$$11;
                if (!v12463) {
                  v12463 = p$$33;
                }
                if (v12463) {
                  return JAM.call(s$$22, null, [JAM.call(e$$124.querySelectorAll, e$$124, ["[id='" + n$$71 + "'] " + b$$168], JAM.policy.p3), f$$39], JAM.policy.p3);
                }
              } catch (r$$13) {
              } finally {
                if (!l$$41) {
                  JAM.call(k$$29.removeAttribute, k$$29, ["id"], JAM.policy.p3);
                }
              }
            }
          }
        }
        return JAM.call(a$$256, null, [b$$168, e$$124, f$$39, g$$63], JAM.policy.p3);
      }
      var a$$256 = m$$19;
      var b$$167 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      var d$$110 = "__sizzle__";
      JAM.set(b$$167, "innerHTML", "<p class='TEST'></p>");
      var v12466 = !b$$167.querySelectorAll;
      if (!v12466) {
        v12466 = JAM.call(b$$167.querySelectorAll, b$$167, [".TEST"], JAM.policy.p3).length !== 0;
      }
      if (v12466) {
        m$$19 = v895;
        var e$$123;
        for (e$$123 in a$$256) {
          introspect(JAM.policy.p2) {
            m$$19[e$$123] = a$$256[e$$123];
          }
        }
        b$$167 = null;
      }
      return;
    }
    function v894() {
      function v893(a$$255) {
        return JAM.call(a$$255.getAttribute, a$$255, ["href", 2], JAM.policy.p3);
      }
      function v892(a$$254, b$$166) {
        var c$$127 = JAM.call(b$$166.getElementsByTagName, b$$166, [a$$254[1]], JAM.policy.p3);
        if (a$$254[1] === "*") {
          var d$$109 = [];
          var e$$122 = 0;
          var v5485 = c$$127[e$$122];
          for (;v5485;) {
            var v5484 = c$$127[e$$122].nodeType === 1;
            if (v5484) {
              JAM.call(d$$109.push, d$$109, [c$$127[e$$122]], JAM.policy.p3);
            }
            e$$122++;
            v5485 = c$$127[e$$122];
          }
          c$$127 = d$$109;
        }
        return c$$127;
      }
      var a$$253 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      JAM.call(a$$253.appendChild, a$$253, [JAM.call(c$$5.createComment, c$$5, [""], JAM.policy.p3)], JAM.policy.p3);
      var v25840 = JAM.call(a$$253.getElementsByTagName, a$$253, ["*"], JAM.policy.p3).length > 0;
      if (v25840) {
        o$$10.find.TAG = v892;
      }
      JAM.set(a$$253, "innerHTML", "<a href='#'></a>");
      var v25841 = a$$253.firstChild;
      if (v25841) {
        v25841 = typeof a$$253.firstChild.getAttribute != "undefined";
      }
      var v23353 = v25841;
      if (v23353) {
        var v27499 = a$$253.firstChild;
        v23353 = JAM.call(v27499.getAttribute, v27499, ["href"], JAM.policy.p3) !== "#";
      }
      var v18030 = v23353;
      if (v18030) {
        o$$10.attrHandle.href = v893;
      }
      a$$253 = null;
      return;
    }
    function v891() {
      function v890(a$$252, b$$165) {
        var v5487 = typeof a$$252.getAttributeNode != "undefined";
        if (v5487) {
          v5487 = JAM.call(a$$252.getAttributeNode, a$$252, ["id"], JAM.policy.p3);
        }
        var c$$126 = v5487;
        var v12471 = a$$252.nodeType === 1;
        if (v12471) {
          v12471 = c$$126;
        }
        var v5488 = v12471;
        if (v5488) {
          v5488 = c$$126.nodeValue === b$$165;
        }
        return v5488;
      }
      function v889(a$$251, c$$125, d$$108) {
        var v12473 = typeof c$$125.getElementById != "undefined";
        if (v12473) {
          v12473 = !d$$108;
        }
        if (v12473) {
          var e$$121 = JAM.call(c$$125.getElementById, c$$125, [a$$251[1]], JAM.policy.p3);
          var v5490;
          if (e$$121) {
            var v12474;
            var v23356 = e$$121.id === a$$251[1];
            if (!v23356) {
              var v25845 = typeof e$$121.getAttributeNode != "undefined";
              if (v25845) {
                v25845 = JAM.call(e$$121.getAttributeNode, e$$121, ["id"], JAM.policy.p3).nodeValue === a$$251[1];
              }
              v23356 = v25845;
            }
            if (v23356) {
              v12474 = [e$$121];
            } else {
              v12474 = b$$9;
            }
            v5490 = v12474;
          } else {
            v5490 = [];
          }
          return v5490;
        }
        return;
      }
      var a$$250 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
      var v12475 = new Date;
      var d$$107 = "script" + JAM.call(v12475.getTime, v12475, [], JAM.policy.p3);
      var e$$120 = c$$5.documentElement;
      JAM.set(a$$250, "innerHTML", "<a name='" + d$$107 + "'/>");
      JAM.call(e$$120.insertBefore, e$$120, [a$$250, e$$120.firstChild], JAM.policy.p3);
      var v23357 = JAM.call(c$$5.getElementById, c$$5, [d$$107], JAM.policy.p3);
      if (v23357) {
        o$$10.find.ID = v889;
        o$$10.filter.ID = v890;
      }
      JAM.call(e$$120.removeChild, e$$120, [a$$250], JAM.policy.p3);
      e$$120 = a$$250 = null;
      return;
    }
    function v888(a$$249, b$$164, c$$124) {
      if (a$$249 === b$$164) {
        return c$$124;
      }
      var d$$106 = a$$249.nextSibling;
      for (;d$$106;) {
        if (d$$106 === b$$164) {
          return -1;
        }
        d$$106 = d$$106.nextSibling;
      }
      return 1;
    }
    function v887(a$$248, b$$163) {
      if (a$$248 === b$$163) {
        h$$47 = !0;
        return 0;
      }
      var v12476 = a$$248.sourceIndex;
      if (v12476) {
        v12476 = b$$163.sourceIndex;
      }
      if (v12476) {
        return a$$248.sourceIndex - b$$163.sourceIndex;
      }
      var c$$123;
      var d$$105;
      var e$$119 = [];
      var f$$38 = [];
      var g$$62 = a$$248.parentNode;
      var i$$127 = b$$163.parentNode;
      var j$$47 = g$$62;
      if (g$$62 === i$$127) {
        return JAM.call(v$$6, null, [a$$248, b$$163], JAM.policy.p3);
      }
      if (!g$$62) {
        return -1;
      }
      if (!i$$127) {
        return 1;
      }
      for (;j$$47;) {
        JAM.call(e$$119.unshift, e$$119, [j$$47], JAM.policy.p3);
        j$$47 = j$$47.parentNode;
      }
      j$$47 = i$$127;
      for (;j$$47;) {
        JAM.call(f$$38.unshift, f$$38, [j$$47], JAM.policy.p3);
        j$$47 = j$$47.parentNode;
      }
      c$$123 = e$$119.length;
      d$$105 = f$$38.length;
      var k$$28 = 0;
      var v12477 = k$$28 < c$$123;
      if (v12477) {
        v12477 = k$$28 < d$$105;
      }
      var v5505 = v12477;
      for (;v5505;) {
        if (e$$119[k$$28] !== f$$38[k$$28]) {
          return JAM.call(v$$6, null, [e$$119[k$$28], f$$38[k$$28]], JAM.policy.p3);
        }
        k$$28++;
        var v12480 = k$$28 < c$$123;
        if (v12480) {
          v12480 = k$$28 < d$$105;
        }
        v5505 = v12480;
      }
      var v5506;
      if (k$$28 === c$$123) {
        v5506 = JAM.call(v$$6, null, [a$$248, f$$38[k$$28], -1], JAM.policy.p3);
      } else {
        v5506 = JAM.call(v$$6, null, [e$$119[k$$28], b$$163, 1], JAM.policy.p3);
      }
      return v5506;
    }
    function v886(a$$247, b$$162) {
      if (a$$247 === b$$162) {
        h$$47 = !0;
        return 0;
      }
      var v12484 = !a$$247.compareDocumentPosition;
      if (!v12484) {
        v12484 = !b$$162.compareDocumentPosition;
      }
      if (v12484) {
        var v5508;
        if (a$$247.compareDocumentPosition) {
          v5508 = -1;
        } else {
          v5508 = 1;
        }
        return v5508;
      }
      var v5510;
      if (JAM.call(a$$247.compareDocumentPosition, a$$247, [b$$162], JAM.policy.p3) & 4) {
        v5510 = -1;
      } else {
        v5510 = 1;
      }
      return v5510;
    }
    function v885(a$$246, b$$161) {
      var c$$122 = 0;
      var d$$104 = b$$161 || [];
      if (JAM.call(g$$47.call, g$$47, [a$$246], JAM.policy.p3) === "[object Array]") {
        var v5511 = Array.prototype.push;
        JAM.call(v5511.apply, v5511, [d$$104, a$$246], JAM.policy.p3);
      } else {
        if (typeof a$$246.length == "number") {
          var e$$118 = a$$246.length;
          var v5513 = c$$122 < e$$118;
          for (;v5513;) {
            JAM.call(d$$104.push, d$$104, [a$$246[c$$122]], JAM.policy.p3);
            c$$122++;
            v5513 = c$$122 < e$$118;
          }
        } else {
          var v5515 = a$$246[c$$122];
          for (;v5515;) {
            JAM.call(d$$104.push, d$$104, [a$$246[c$$122]], JAM.policy.p3);
            c$$122++;
            v5515 = a$$246[c$$122];
          }
        }
      }
      return d$$104;
    }
    function v884(a$$243, b$$158, c$$121, d$$103) {
      var e$$117 = b$$158[2];
      var f$$37 = o$$10.setFilters[e$$117];
      if (f$$37) {
        return JAM.call(f$$37, null, [a$$243, c$$121, b$$158, d$$103], JAM.policy.p3);
      }
      return;
    }
    function v883(a$$242, b$$157) {
      var c$$120 = b$$157[1];
      var v5519;
      if (m$$19.attr) {
        v5519 = JAM.call(m$$19.attr, m$$19, [a$$242, c$$120], JAM.policy.p3);
      } else {
        var v12490;
        if (o$$10.attrHandle[c$$120]) {
          var v18040 = o$$10.attrHandle;
          v12490 = JAM.call(v18040[c$$120], v18040, [a$$242], JAM.policy.p3);
        } else {
          var v18041;
          if (a$$242[c$$120] != null) {
            v18041 = a$$242[c$$120];
          } else {
            v18041 = JAM.call(a$$242.getAttribute, a$$242, [c$$120], JAM.policy.p3);
          }
          v12490 = v18041;
        }
        v5519 = v12490;
      }
      var d$$102 = v5519;
      var e$$116 = d$$102 + "";
      var f$$36 = b$$157[2];
      var g$$61 = b$$157[4];
      var v5520;
      if (d$$102 == null) {
        v5520 = f$$36 === "!=";
      } else {
        var v12492;
        var v23360 = !f$$36;
        if (v23360) {
          v23360 = m$$19.attr;
        }
        if (v23360) {
          v12492 = d$$102 != null;
        } else {
          var v18043;
          if (f$$36 === "=") {
            v18043 = e$$116 === g$$61;
          } else {
            var v23361;
            if (f$$36 === "*=") {
              v23361 = JAM.call(e$$116.indexOf, e$$116, [g$$61], JAM.policy.p3) >= 0;
            } else {
              var v25851;
              if (f$$36 === "~=") {
                var v28558 = " " + e$$116 + " ";
                v25851 = JAM.call(v28558.indexOf, v28558, [g$$61], JAM.policy.p3) >= 0;
              } else {
                var v27506;
                if (g$$61) {
                  var v28559;
                  if (f$$36 === "!=") {
                    v28559 = e$$116 !== g$$61;
                  } else {
                    var v29229;
                    if (f$$36 === "^=") {
                      v29229 = JAM.call(e$$116.indexOf, e$$116, [g$$61], JAM.policy.p3) === 0;
                    } else {
                      var v29662;
                      if (f$$36 === "$=") {
                        v29662 = JAM.call(e$$116.substr, e$$116, [e$$116.length - g$$61.length], JAM.policy.p3) === g$$61;
                      } else {
                        var v29945;
                        if (f$$36 === "|=") {
                          var v30192 = e$$116 === g$$61;
                          if (!v30192) {
                            v30192 = JAM.call(e$$116.substr, e$$116, [0, g$$61.length + 1], JAM.policy.p3) === g$$61 + "-";
                          }
                          v29945 = v30192;
                        } else {
                          v29945 = !1;
                        }
                        v29662 = v29945;
                      }
                      v29229 = v29662;
                    }
                    v28559 = v29229;
                  }
                  v27506 = v28559;
                } else {
                  var v28560 = e$$116;
                  if (v28560) {
                    v28560 = d$$102 !== !1;
                  }
                  v27506 = v28560;
                }
                v25851 = v27506;
              }
              v23361 = v25851;
            }
            v18043 = v23361;
          }
          v12492 = v18043;
        }
        v5520 = v12492;
      }
      return v5520;
    }
    function v882(a$$241, b$$156) {
      var v25853 = a$$241.className;
      if (!v25853) {
        v25853 = JAM.call(a$$241.getAttribute, a$$241, ["class"], JAM.policy.p3);
      }
      var v12494 = " " + v25853 + " ";
      return JAM.call(v12494.indexOf, v12494, [b$$156], JAM.policy.p3) > -1;
    }
    function v881(a$$240, b$$155) {
      var v12495 = b$$155 === "*";
      if (v12495) {
        v12495 = a$$240.nodeType === 1;
      }
      var v5522 = v12495;
      if (!v5522) {
        var v12496 = !!a$$240.nodeName;
        if (v12496) {
          var v23365 = a$$240.nodeName;
          v12496 = JAM.call(v23365.toLowerCase, v23365, [], JAM.policy.p3) === b$$155;
        }
        v5522 = v12496;
      }
      return v5522;
    }
    function v880(a$$239, b$$154) {
      var v5523 = a$$239.nodeType === 1;
      if (v5523) {
        v5523 = JAM.call(a$$239.getAttribute, a$$239, ["id"], JAM.policy.p3) === b$$154;
      }
      return v5523;
    }
    function v879(a$$238, b$$153) {
      var c$$119;
      var e$$115;
      var f$$35;
      var g$$60;
      var h$$56;
      var i$$126;
      var j$$46;
      var k$$27 = b$$153[1];
      var l$$40 = a$$238;
      switch(k$$27) {
        case "only":
        ;
        case "first":
          var v5525 = l$$40 = l$$40.previousSibling;
          for (;v5525;) {
            if (l$$40.nodeType === 1) {
              return !1;
            }
            v5525 = l$$40 = l$$40.previousSibling;
          }
          if (k$$27 === "first") {
            return !0;
          }
          l$$40 = a$$238;
        case "last":
          var v5528 = l$$40 = l$$40.nextSibling;
          for (;v5528;) {
            if (l$$40.nodeType === 1) {
              return !1;
            }
            v5528 = l$$40 = l$$40.nextSibling;
          }
          return !0;
        case "nth":
          c$$119 = b$$153[2];
          e$$115 = b$$153[3];
          var v12502 = c$$119 === 1;
          if (v12502) {
            v12502 = e$$115 === 0;
          }
          if (v12502) {
            return !0;
          }
          f$$35 = b$$153[0];
          g$$60 = a$$238.parentNode;
          var v12503 = g$$60;
          if (v12503) {
            var v18049 = g$$60[d$$86] !== f$$35;
            if (!v18049) {
              v18049 = !a$$238.nodeIndex;
            }
            v12503 = v18049;
          }
          if (v12503) {
            i$$126 = 0;
            l$$40 = g$$60.firstChild;
            for (;l$$40;) {
              var v5530 = l$$40.nodeType === 1;
              if (v5530) {
                l$$40.nodeIndex = i$$126 = i$$126 + 1;
              }
              l$$40 = l$$40.nextSibling;
            }
            introspect(JAM.policy.p2) {
              g$$60[d$$86] = f$$35;
            }
          }
          j$$46 = a$$238.nodeIndex - e$$115;
          var v5533;
          if (c$$119 === 0) {
            v5533 = j$$46 === 0;
          } else {
            var v12505 = j$$46 % c$$119 === 0;
            if (v12505) {
              v12505 = j$$46 / c$$119 >= 0;
            }
            v5533 = v12505;
          }
          return v5533;
      }
      return;
    }
    function v878(a$$237, b$$152, c$$118, d$$101) {
      var e$$114 = b$$152[1];
      var f$$34 = o$$10.filters[e$$114];
      if (f$$34) {
        return JAM.call(f$$34, null, [a$$237, c$$118, b$$152, d$$101], JAM.policy.p3);
      }
      if (e$$114 === "contains") {
        var v25854 = a$$237.textContent;
        if (!v25854) {
          v25854 = a$$237.innerText;
        }
        var v23369 = v25854;
        if (!v23369) {
          v23369 = JAM.call(n$$68, null, [[a$$237]], JAM.policy.p3);
        }
        var v18052 = v23369;
        if (!v18052) {
          v18052 = "";
        }
        var v12507 = v18052;
        return JAM.call(v12507.indexOf, v12507, [b$$152[3]], JAM.policy.p3) >= 0;
      }
      if (e$$114 === "not") {
        var g$$59 = b$$152[3];
        var h$$55 = 0;
        var i$$125 = g$$59.length;
        var v5538 = h$$55 < i$$125;
        for (;v5538;) {
          if (g$$59[h$$55] === a$$237) {
            return !1;
          }
          h$$55++;
          v5538 = h$$55 < i$$125;
        }
        return !0;
      }
      JAM.call(m$$19.error, m$$19, [e$$114], JAM.policy.p3);
      return;
    }
    function v877(a$$236, b$$151, c$$117) {
      return c$$117[3] - 0 === b$$151;
    }
    function v876(a$$235, b$$150, c$$116) {
      return c$$116[3] - 0 === b$$150;
    }
    function v875(a$$234, b$$149, c$$115) {
      return b$$149 > c$$115[3] - 0;
    }
    function v874(a$$233, b$$148, c$$114) {
      return b$$148 < c$$114[3] - 0;
    }
    function v873(a$$232, b$$147) {
      return b$$147 % 2 === 1;
    }
    function v872(a$$231, b$$146) {
      return b$$146 % 2 === 0;
    }
    function v871(a$$230, b$$145, c$$113, d$$100) {
      return b$$145 === d$$100.length - 1;
    }
    function v870(a$$229, b$$144) {
      return b$$144 === 0;
    }
    function v869(a$$228) {
      return a$$228 === a$$228.ownerDocument.activeElement;
    }
    function v868(a$$227) {
      return JAM.call(/input|select|textarea|button/i.test, /input|select|textarea|button/i, [a$$227.nodeName], JAM.policy.p3);
    }
    function v867(a$$226) {
      var v5549 = a$$226.nodeName;
      var b$$143 = JAM.call(v5549.toLowerCase, v5549, [], JAM.policy.p3);
      var v12516 = b$$143 === "input";
      if (v12516) {
        v12516 = "button" === a$$226.type;
      }
      var v5550 = v12516;
      if (!v5550) {
        v5550 = b$$143 === "button";
      }
      return v5550;
    }
    function v866(a$$225) {
      var v5551 = a$$225.nodeName;
      var b$$142 = JAM.call(v5551.toLowerCase, v5551, [], JAM.policy.p3);
      var v12518 = b$$142 === "input";
      if (!v12518) {
        v12518 = b$$142 === "button";
      }
      var v5552 = v12518;
      if (v5552) {
        v5552 = "reset" === a$$225.type;
      }
      return v5552;
    }
    function v865(a$$224) {
      var v18055 = a$$224.nodeName;
      var v5553 = JAM.call(v18055.toLowerCase, v18055, [], JAM.policy.p3) === "input";
      if (v5553) {
        v5553 = "image" === a$$224.type;
      }
      return v5553;
    }
    function v864(a$$223) {
      var v5554 = a$$223.nodeName;
      var b$$141 = JAM.call(v5554.toLowerCase, v5554, [], JAM.policy.p3);
      var v12522 = b$$141 === "input";
      if (!v12522) {
        v12522 = b$$141 === "button";
      }
      var v5555 = v12522;
      if (v5555) {
        v5555 = "submit" === a$$223.type;
      }
      return v5555;
    }
    function v863(a$$222) {
      var v18057 = a$$222.nodeName;
      var v5556 = JAM.call(v18057.toLowerCase, v18057, [], JAM.policy.p3) === "input";
      if (v5556) {
        v5556 = "password" === a$$222.type;
      }
      return v5556;
    }
    function v862(a$$221) {
      var v18058 = a$$221.nodeName;
      var v5557 = JAM.call(v18058.toLowerCase, v18058, [], JAM.policy.p3) === "input";
      if (v5557) {
        v5557 = "file" === a$$221.type;
      }
      return v5557;
    }
    function v861(a$$220) {
      var v18059 = a$$220.nodeName;
      var v5558 = JAM.call(v18059.toLowerCase, v18059, [], JAM.policy.p3) === "input";
      if (v5558) {
        v5558 = "checkbox" === a$$220.type;
      }
      return v5558;
    }
    function v860(a$$219) {
      var v18060 = a$$219.nodeName;
      var v5559 = JAM.call(v18060.toLowerCase, v18060, [], JAM.policy.p3) === "input";
      if (v5559) {
        v5559 = "radio" === a$$219.type;
      }
      return v5559;
    }
    function v859(a$$218) {
      var b$$140 = JAM.call(a$$218.getAttribute, a$$218, ["type"], JAM.policy.p3);
      var c$$112 = a$$218.type;
      var v23371 = a$$218.nodeName;
      var v12532 = JAM.call(v23371.toLowerCase, v23371, [], JAM.policy.p3) === "input";
      if (v12532) {
        v12532 = "text" === c$$112;
      }
      var v5560 = v12532;
      if (v5560) {
        var v12533 = b$$140 === c$$112;
        if (!v12533) {
          v12533 = b$$140 === null;
        }
        v5560 = v12533;
      }
      return v5560;
    }
    function v858(a$$217) {
      return JAM.call(/h\d/i.test, /h\d/i, [a$$217.nodeName], JAM.policy.p3);
    }
    function v857(a$$216, b$$139, c$$111) {
      return !!JAM.call(m$$19, null, [c$$111[3], a$$216], JAM.policy.p3).length;
    }
    function v856(a$$215) {
      return !a$$215.firstChild;
    }
    function v855(a$$214) {
      return !!a$$214.firstChild;
    }
    function v854(a$$213) {
      return a$$213.selected === !0;
    }
    function v853(a$$212) {
      return a$$212.checked === !0;
    }
    function v852(a$$211) {
      return a$$211.disabled === !0;
    }
    function v851(a$$210) {
      var v5571 = a$$210.disabled === !1;
      if (v5571) {
        v5571 = a$$210.type !== "hidden";
      }
      return v5571;
    }
    function v850(a$$209) {
      JAM.call(a$$209.unshift, a$$209, [!0], JAM.policy.p3);
      return a$$209;
    }
    function v849(b$$138, c$$110, d$$99, e$$113, f$$33) {
      if (b$$138[1] === "not") {
        var v25857 = JAM.call(a$$185.exec, a$$185, [b$$138[3]], JAM.policy.p3);
        if (!v25857) {
          v25857 = "";
        }
        var v12540 = v25857.length > 1;
        if (!v12540) {
          v12540 = JAM.call(/^\w/.test, /^\w/, [b$$138[3]], JAM.policy.p3);
        }
        if (v12540) {
          var v31124 = JAM.call(m$$19, null, [b$$138[3], null, null, c$$110], JAM.policy.p3);
          b$$138[3] = v31124;
        } else {
          var g$$58 = JAM.call(m$$19.filter, m$$19, [b$$138[3], c$$110, d$$99, !0 ^ f$$33], JAM.policy.p3);
          if (!d$$99) {
            var v12542 = e$$113.push;
            JAM.call(v12542.apply, v12542, [e$$113, g$$58], JAM.policy.p3);
          }
          return !1;
        }
      } else {
        var v18067 = o$$10.match.POS;
        var v12544 = JAM.call(v18067.test, v18067, [b$$138[0]], JAM.policy.p3);
        if (!v12544) {
          var v18069 = o$$10.match.CHILD;
          v12544 = JAM.call(v18069.test, v18069, [b$$138[0]], JAM.policy.p3);
        }
        if (v12544) {
          return !0;
        }
      }
      return b$$138;
    }
    function v848(a$$208, b$$137, c$$109, d$$98, e$$112, f$$32) {
      var v5579 = a$$208[1];
      var v31125 = JAM.call(v5579.replace, v5579, [j$$41, ""], JAM.policy.p3);
      var g$$57 = a$$208[1] = v31125;
      var v23376 = !f$$32;
      if (v23376) {
        v23376 = o$$10.attrMap[g$$57];
      }
      var v18072 = v23376;
      if (v18072) {
        a$$208[1] = o$$10.attrMap[g$$57];
      }
      var v25859 = a$$208[4];
      if (!v25859) {
        v25859 = a$$208[5];
      }
      var v23378 = v25859;
      if (!v23378) {
        v23378 = "";
      }
      var v18073 = v23378;
      var v31126 = JAM.call(v18073.replace, v18073, [j$$41, ""], JAM.policy.p3);
      a$$208[4] = v31126;
      var v12545 = a$$208[2] === "~=";
      if (v12545) {
        a$$208[4] = " " + a$$208[4] + " ";
      }
      return a$$208;
    }
    function v847(a$$207) {
      if (a$$207[1] === "nth") {
        var v12547 = a$$207[2];
        if (!v12547) {
          JAM.call(m$$19.error, m$$19, [a$$207[0]], JAM.policy.p3);
        }
        var v12548 = a$$207[2];
        var v31127 = JAM.call(v12548.replace, v12548, [/^\+|\s*/g, ""], JAM.policy.p3);
        a$$207[2] = v31127;
        var v25861 = a$$207[2] === "even";
        if (v25861) {
          v25861 = "2n";
        }
        var v23380 = v25861;
        if (!v23380) {
          var v25862 = a$$207[2] === "odd";
          if (v25862) {
            v25862 = "2n+1";
          }
          v23380 = v25862;
        }
        var v18078 = v23380;
        if (!v18078) {
          var v23381 = !JAM.call(/\D/.test, /\D/, [a$$207[2]], JAM.policy.p3);
          if (v23381) {
            v23381 = "0n+" + a$$207[2];
          }
          v18078 = v23381;
        }
        var v12549 = v18078;
        if (!v12549) {
          v12549 = a$$207[2];
        }
        var b$$136 = JAM.call(/(-?)(\d*)(?:n([+\-]?\d*))?/.exec, /(-?)(\d*)(?:n([+\-]?\d*))?/, [v12549], JAM.policy.p3);
        var v18080 = b$$136[1];
        var v23383 = b$$136[2];
        if (!v23383) {
          v23383 = 1;
        }
        a$$207[2] = v18080 + v23383 - 0;
        a$$207[3] = b$$136[3] - 0;
      } else {
        var v5581 = a$$207[2];
        if (v5581) {
          JAM.call(m$$19.error, m$$19, [a$$207[0]], JAM.policy.p3);
        }
      }
      a$$207[0] = e$$101;
      e$$101 = e$$101 + 1;
      return a$$207;
    }
    function v846(a$$206, b$$135) {
      var v12553 = a$$206[1];
      var v5583 = JAM.call(v12553.replace, v12553, [j$$41, ""], JAM.policy.p3);
      return JAM.call(v5583.toLowerCase, v5583, [], JAM.policy.p3);
    }
    function v845(a$$205) {
      var v5584 = a$$205[1];
      return JAM.call(v5584.replace, v5584, [j$$41, ""], JAM.policy.p3);
    }
    function v844(a$$204, b$$134, c$$108, d$$97, e$$111, f$$31) {
      var v18082 = a$$204[1];
      a$$204 = " " + JAM.call(v18082.replace, v18082, [j$$41, ""], JAM.policy.p3) + " ";
      if (f$$31) {
        return a$$204;
      }
      var g$$56 = 0;
      var h$$54;
      var v5586 = (h$$54 = b$$134[g$$56]) != null;
      for (;v5586;) {
        if (h$$54) {
          var v12556;
          var v25867 = h$$54.className;
          if (v25867) {
            var v29232 = " " + h$$54.className + " ";
            var v28561 = JAM.call(v29232.replace, v29232, [/[\t\n\r]/g, " "], JAM.policy.p3);
            v25867 = JAM.call(v28561.indexOf, v28561, [a$$204], JAM.policy.p3) >= 0;
          }
          if (e$$111 ^ v25867) {
            var v18083 = c$$108;
            if (!v18083) {
              v18083 = JAM.call(d$$97.push, d$$97, [h$$54], JAM.policy.p3);
            }
            v12556 = v18083;
          } else {
            var v18084 = c$$108;
            if (v18084) {
              v18084 = b$$134[g$$56] = !1;
            }
            v12556 = v18084;
          }
          v12556;
        }
        g$$56++;
        v5586 = (h$$54 = b$$134[g$$56]) != null;
      }
      return !1;
    }
    function v843(a$$203, b$$133) {
      if (typeof b$$133.getElementsByTagName != "undefined") {
        return JAM.call(b$$133.getElementsByTagName, b$$133, [a$$203[1]], JAM.policy.p3);
      }
      return;
    }
    function v842(a$$202, b$$132) {
      if (typeof b$$132.getElementsByName != "undefined") {
        var c$$107 = [];
        var d$$96 = JAM.call(b$$132.getElementsByName, b$$132, [a$$202[1]], JAM.policy.p3);
        var e$$110 = 0;
        var f$$30 = d$$96.length;
        var v5591 = e$$110 < f$$30;
        for (;v5591;) {
          var v18088 = d$$96[e$$110];
          var v5590 = JAM.call(v18088.getAttribute, v18088, ["name"], JAM.policy.p3) === a$$202[1];
          if (v5590) {
            JAM.call(c$$107.push, c$$107, [d$$96[e$$110]], JAM.policy.p3);
          }
          e$$110++;
          v5591 = e$$110 < f$$30;
        }
        var v5592;
        if (c$$107.length === 0) {
          v5592 = null;
        } else {
          v5592 = c$$107;
        }
        return v5592;
      }
      return;
    }
    function v841(a$$201, b$$131, c$$106) {
      var v12564 = typeof b$$131.getElementById != "undefined";
      if (v12564) {
        v12564 = !c$$106;
      }
      if (v12564) {
        var d$$95 = JAM.call(b$$131.getElementById, b$$131, [a$$201[1]], JAM.policy.p3);
        var v5595;
        var v18091 = d$$95;
        if (v18091) {
          v18091 = d$$95.parentNode;
        }
        if (v18091) {
          v5595 = [d$$95];
        } else {
          v5595 = [];
        }
        return v5595;
      }
      return;
    }
    function v840(a$$200, b$$130, c$$105) {
      var d$$94;
      var f$$29 = e$$101;
      e$$101 = e$$101 + 1;
      var g$$55 = x$$69;
      var v18092 = typeof b$$130 == "string";
      if (v18092) {
        v18092 = !JAM.call(l$$37.test, l$$37, [b$$130], JAM.policy.p3);
      }
      var v12566 = v18092;
      if (v12566) {
        b$$130 = JAM.call(b$$130.toLowerCase, b$$130, [], JAM.policy.p3);
        d$$94 = b$$130;
        g$$55 = w$$13;
      }
      JAM.call(g$$55, null, ["previousSibling", b$$130, f$$29, a$$200, d$$94, c$$105], JAM.policy.p3);
      return;
    }
    function v839(a$$199, b$$129, c$$104) {
      var d$$93;
      var f$$28 = e$$101;
      e$$101 = e$$101 + 1;
      var g$$54 = x$$69;
      var v18093 = typeof b$$129 == "string";
      if (v18093) {
        v18093 = !JAM.call(l$$37.test, l$$37, [b$$129], JAM.policy.p3);
      }
      var v12567 = v18093;
      if (v12567) {
        b$$129 = JAM.call(b$$129.toLowerCase, b$$129, [], JAM.policy.p3);
        d$$93 = b$$129;
        g$$54 = w$$13;
      }
      JAM.call(g$$54, null, ["parentNode", b$$129, f$$28, a$$199, d$$93, c$$104], JAM.policy.p3);
      return;
    }
    function v838(a$$198, b$$128) {
      var c$$103;
      var d$$92 = typeof b$$128 == "string";
      var e$$109 = 0;
      var f$$27 = a$$198.length;
      var v12568 = d$$92;
      if (v12568) {
        v12568 = !JAM.call(l$$37.test, l$$37, [b$$128], JAM.policy.p3);
      }
      if (v12568) {
        b$$128 = JAM.call(b$$128.toLowerCase, b$$128, [], JAM.policy.p3);
        var v5599 = e$$109 < f$$27;
        for (;v5599;) {
          c$$103 = a$$198[e$$109];
          if (c$$103) {
            var g$$53 = c$$103.parentNode;
            var v5598;
            var v23391 = g$$53.nodeName;
            if (JAM.call(v23391.toLowerCase, v23391, [], JAM.policy.p3) === b$$128) {
              v5598 = g$$53;
            } else {
              v5598 = !1;
            }
            a$$198[e$$109] = v5598;
          }
          e$$109++;
          v5599 = e$$109 < f$$27;
        }
      } else {
        var v5600 = e$$109 < f$$27;
        for (;v5600;) {
          c$$103 = a$$198[e$$109];
          if (c$$103) {
            var v18096;
            if (d$$92) {
              v18096 = c$$103.parentNode;
            } else {
              v18096 = c$$103.parentNode === b$$128;
            }
            a$$198[e$$109] = v18096;
          }
          e$$109++;
          v5600 = e$$109 < f$$27;
        }
        if (d$$92) {
          JAM.call(m$$19.filter, m$$19, [b$$128, a$$198, !0], JAM.policy.p3);
        }
      }
      return;
    }
    function v837(a$$197, b$$127) {
      var c$$102 = typeof b$$127 == "string";
      var v5603 = c$$102;
      if (v5603) {
        v5603 = !JAM.call(l$$37.test, l$$37, [b$$127], JAM.policy.p3);
      }
      var d$$91 = v5603;
      var v5604 = c$$102;
      if (v5604) {
        v5604 = !d$$91;
      }
      var e$$108 = v5604;
      if (d$$91) {
        b$$127 = JAM.call(b$$127.toLowerCase, b$$127, [], JAM.policy.p3);
      }
      var f$$26 = 0;
      var g$$52 = a$$197.length;
      var h$$53;
      var v5608 = f$$26 < g$$52;
      for (;v5608;) {
        if (h$$53 = a$$197[f$$26]) {
          var v12572 = h$$53 = h$$53.previousSibling;
          if (v12572) {
            v12572 = h$$53.nodeType !== 1;
          }
          var v5605 = v12572;
          for (;v5605;) {
            var v12573 = h$$53 = h$$53.previousSibling;
            if (v12573) {
              v12573 = h$$53.nodeType !== 1;
            }
            v5605 = v12573;
          }
          var v5606;
          var v18099 = e$$108;
          if (!v18099) {
            var v23393 = h$$53;
            if (v23393) {
              var v27517 = h$$53.nodeName;
              v23393 = JAM.call(v27517.toLowerCase, v27517, [], JAM.policy.p3) === b$$127;
            }
            v18099 = v23393;
          }
          if (v18099) {
            var v12574 = h$$53;
            if (!v12574) {
              v12574 = !1;
            }
            v5606 = v12574;
          } else {
            v5606 = h$$53 === b$$127;
          }
          a$$197[f$$26] = v5606;
        }
        f$$26++;
        v5608 = f$$26 < g$$52;
      }
      if (e$$108) {
        JAM.call(m$$19.filter, m$$19, [b$$127, a$$197, !0], JAM.policy.p3);
      }
      return;
    }
    function v836(a$$196) {
      return JAM.call(a$$196.getAttribute, a$$196, ["type"], JAM.policy.p3);
    }
    function v835(a$$195) {
      return JAM.call(a$$195.getAttribute, a$$195, ["href"], JAM.policy.p3);
    }
    function v834(a$$194) {
      var b$$126;
      var c$$101;
      var d$$90 = a$$194.nodeType;
      var e$$107 = "";
      if (d$$90) {
        var v18101 = d$$90 === 1;
        if (!v18101) {
          v18101 = d$$90 === 9;
        }
        var v12577 = v18101;
        if (!v12577) {
          v12577 = d$$90 === 11;
        }
        if (v12577) {
          if (typeof a$$194.textContent == "string") {
            return a$$194.textContent;
          }
          if (typeof a$$194.innerText == "string") {
            var v5610 = a$$194.innerText;
            return JAM.call(v5610.replace, v5610, [k$$22, ""], JAM.policy.p3);
          }
          a$$194 = a$$194.firstChild;
          for (;a$$194;) {
            e$$107 = e$$107 + JAM.call(n$$68, null, [a$$194], JAM.policy.p3);
            a$$194 = a$$194.nextSibling;
          }
        } else {
          var v12581 = d$$90 === 3;
          if (!v12581) {
            v12581 = d$$90 === 4;
          }
          if (v12581) {
            return a$$194.nodeValue;
          }
        }
      } else {
        b$$126 = 0;
        var v5615 = c$$101 = a$$194[b$$126];
        for (;v5615;) {
          var v5614 = c$$101.nodeType !== 8;
          if (v5614) {
            e$$107 = e$$107 + JAM.call(n$$68, null, [c$$101], JAM.policy.p3);
          }
          b$$126++;
          v5615 = c$$101 = a$$194[b$$126];
        }
      }
      return e$$107;
    }
    function v833(a$$193) {
      throw new Error("Syntax error, unrecognized expression: " + a$$193);
    }
    function v832(a$$192, c$$100, d$$89, e$$106) {
      var f$$25;
      var g$$51;
      var h$$52;
      var i$$124;
      var j$$45;
      var k$$26;
      var l$$39;
      var n$$70;
      var p$$32;
      var q$$10 = a$$192;
      var r$$12 = [];
      var s$$23 = c$$100;
      var v12583 = c$$100;
      if (v12583) {
        v12583 = c$$100[0];
      }
      var v5617 = v12583;
      if (v5617) {
        v5617 = JAM.call(m$$19.isXML, m$$19, [c$$100[0]], JAM.policy.p3);
      }
      var t$$7 = v5617;
      var v12585 = a$$192;
      if (v12585) {
        v12585 = c$$100.length;
      }
      var v5631 = v12585;
      for (;v5631;) {
        for (h$$52 in o$$10.filter) {
          var v23396 = o$$10.leftMatch[h$$52];
          var v12586 = (f$$25 = JAM.call(v23396.exec, v23396, [a$$192], JAM.policy.p3)) != null;
          if (v12586) {
            v12586 = f$$25[2];
          }
          if (v12586) {
            k$$26 = o$$10.filter[h$$52];
            l$$39 = f$$25[1];
            g$$51 = !1;
            JAM.call(f$$25.splice, f$$25, [1, 1], JAM.policy.p3);
            if (JAM.call(l$$39.substr, l$$39, [l$$39.length - 1], JAM.policy.p3) === "\\") {
              continue;
            }
            var v5619 = s$$23 === r$$12;
            if (v5619) {
              r$$12 = [];
            }
            if (o$$10.preFilter[h$$52]) {
              var v5620 = o$$10.preFilter;
              f$$25 = JAM.call(v5620[h$$52], v5620, [f$$25, s$$23, d$$89, r$$12, e$$106, t$$7], JAM.policy.p3);
              if (!f$$25) {
                g$$51 = i$$124 = !0;
              } else {
                if (f$$25 === !0) {
                  continue;
                }
              }
            }
            if (f$$25) {
              n$$70 = 0;
              var v5624 = (j$$45 = s$$23[n$$70]) != null;
              for (;v5624;) {
                if (j$$45) {
                  i$$124 = JAM.call(k$$26, null, [j$$45, f$$25, n$$70, s$$23], JAM.policy.p3);
                  p$$32 = e$$106 ^ i$$124;
                  var v18109;
                  var v25870 = d$$89;
                  if (v25870) {
                    v25870 = i$$124 != null;
                  }
                  if (v25870) {
                    var v23399;
                    if (p$$32) {
                      v23399 = g$$51 = !0;
                    } else {
                      introspect(JAM.policy.p2) {
                        v23399 = s$$23[n$$70] = !1;
                      }
                    }
                    v18109 = v23399;
                  } else {
                    var v23400 = p$$32;
                    if (v23400) {
                      JAM.call(r$$12.push, r$$12, [j$$45], JAM.policy.p3);
                      v23400 = g$$51 = !0;
                    }
                    v18109 = v23400;
                  }
                  v18109;
                }
                n$$70++;
                v5624 = (j$$45 = s$$23[n$$70]) != null;
              }
            }
            if (i$$124 !== b$$9) {
              if (!d$$89) {
                s$$23 = r$$12;
              }
              a$$192 = JAM.call(a$$192.replace, a$$192, [o$$10.match[h$$52], ""], JAM.policy.p3);
              if (!g$$51) {
                return [];
              }
              break;
            }
          }
        }
        if (a$$192 === q$$10) {
          if (g$$51 == null) {
            JAM.call(m$$19.error, m$$19, [a$$192], JAM.policy.p3);
          } else {
            break;
          }
        }
        q$$10 = a$$192;
        var v12593 = a$$192;
        if (v12593) {
          v12593 = c$$100.length;
        }
        v5631 = v12593;
      }
      return s$$23;
    }
    function v831(a$$191, b$$125, c$$99) {
      var d$$88;
      var e$$105;
      var f$$24;
      var g$$50;
      var h$$51;
      var i$$123;
      if (!a$$191) {
        return [];
      }
      e$$105 = 0;
      f$$24 = o$$10.order.length;
      var v5638 = e$$105 < f$$24;
      for (;v5638;) {
        h$$51 = o$$10.order[e$$105];
        var v12595 = o$$10.leftMatch[h$$51];
        if (g$$50 = JAM.call(v12595.exec, v12595, [a$$191], JAM.policy.p3)) {
          i$$123 = g$$50[1];
          JAM.call(g$$50.splice, g$$50, [1, 1], JAM.policy.p3);
          if (JAM.call(i$$123.substr, i$$123, [i$$123.length - 1], JAM.policy.p3) !== "\\") {
            var v18114 = g$$50[1];
            if (!v18114) {
              v18114 = "";
            }
            var v12597 = v18114;
            var v31128 = JAM.call(v12597.replace, v12597, [j$$41, ""], JAM.policy.p3);
            g$$50[1] = v31128;
            var v12598 = o$$10.find;
            d$$88 = JAM.call(v12598[h$$51], v12598, [g$$50, b$$125, c$$99], JAM.policy.p3);
            if (d$$88 != null) {
              a$$191 = JAM.call(a$$191.replace, a$$191, [o$$10.match[h$$51], ""], JAM.policy.p3);
              break;
            }
          }
        }
        e$$105++;
        v5638 = e$$105 < f$$24;
      }
      if (!d$$88) {
        var v12600;
        if (typeof b$$125.getElementsByTagName != "undefined") {
          v12600 = JAM.call(b$$125.getElementsByTagName, b$$125, ["*"], JAM.policy.p3);
        } else {
          v12600 = [];
        }
        d$$88 = v12600;
      }
      return {set:d$$88, expr:a$$191};
    }
    function v830(a$$190, b$$124) {
      return JAM.call(m$$19, null, [b$$124, null, null, [a$$190]], JAM.policy.p3).length > 0;
    }
    function v829(a$$189, b$$123) {
      return JAM.call(m$$19, null, [a$$189, null, null, b$$123], JAM.policy.p3);
    }
    function v828(a$$188) {
      if (u$$5) {
        h$$47 = i$$119;
        JAM.call(a$$188.sort, a$$188, [u$$5], JAM.policy.p3);
        if (h$$47) {
          var b$$122 = 1;
          var v5641 = b$$122 < a$$188.length;
          for (;v5641;) {
            var v5640 = a$$188[b$$122] === a$$188[b$$122 - 1];
            if (v5640) {
              var v12606 = b$$122;
              b$$122 = b$$122 - 1;
              JAM.call(a$$188.splice, a$$188, [v12606, 1], JAM.policy.p3);
            }
            b$$122++;
            v5641 = b$$122 < a$$188.length;
          }
        }
      }
      return a$$188;
    }
    function v827() {
      i$$119 = !1;
      return 0;
    }
    function y$$51(a$$264, b$$174, c$$130) {
      var d$$112;
      var e$$126 = [];
      var f$$42 = "";
      var v5642;
      if (b$$174.nodeType) {
        v5642 = [b$$174];
      } else {
        v5642 = b$$174;
      }
      var g$$65 = v5642;
      var v12609 = o$$10.match.PSEUDO;
      var v5643 = d$$112 = JAM.call(v12609.exec, v12609, [a$$264], JAM.policy.p3);
      for (;v5643;) {
        f$$42 = f$$42 + d$$112[0];
        a$$264 = JAM.call(a$$264.replace, a$$264, [o$$10.match.PSEUDO, ""], JAM.policy.p3);
        var v12611 = o$$10.match.PSEUDO;
        v5643 = d$$112 = JAM.call(v12611.exec, v12611, [a$$264], JAM.policy.p3);
      }
      var v5644;
      if (o$$10.relative[a$$264]) {
        v5644 = a$$264 + "*";
      } else {
        v5644 = a$$264;
      }
      a$$264 = v5644;
      var h$$58 = 0;
      var i$$129 = g$$65.length;
      var v5646 = h$$58 < i$$129;
      for (;v5646;) {
        JAM.call(m$$19, null, [a$$264, g$$65[h$$58], e$$126, c$$130], JAM.policy.p3);
        h$$58++;
        v5646 = h$$58 < i$$129;
      }
      return JAM.call(m$$19.filter, m$$19, [f$$42, e$$126], JAM.policy.p3);
    }
    function s$$22(a$$245, b$$160) {
      var v5647 = Array.prototype.slice;
      a$$245 = JAM.call(v5647.call, v5647, [a$$245, 0], JAM.policy.p3);
      if (b$$160) {
        var v5648 = b$$160.push;
        JAM.call(v5648.apply, v5648, [b$$160, a$$245], JAM.policy.p3);
        return b$$160;
      }
      return a$$245;
    }
    function q$$8(a$$244, b$$159) {
      return "\\" + (b$$159 - 0 + 1);
    }
    function m$$19(b$$121, d$$87, e$$104, f$$23) {
      e$$104 = e$$104 || [];
      d$$87 = d$$87 || c$$5;
      var h$$50 = d$$87;
      var v12615 = d$$87.nodeType !== 1;
      if (v12615) {
        v12615 = d$$87.nodeType !== 9;
      }
      if (v12615) {
        return [];
      }
      var v12616 = !b$$121;
      if (!v12616) {
        v12616 = typeof b$$121 != "string";
      }
      if (v12616) {
        return e$$104;
      }
      var i$$122;
      var j$$44;
      var k$$25;
      var l$$38;
      var n$$69;
      var q$$9;
      var r$$11;
      var t$$6;
      var u$$6 = !0;
      var v$$7 = JAM.call(m$$19.isXML, m$$19, [d$$87], JAM.policy.p3);
      var w$$14 = [];
      var x$$70 = b$$121;
      do {
        JAM.call(a$$185.exec, a$$185, [""], JAM.policy.p3);
        i$$122 = JAM.call(a$$185.exec, a$$185, [x$$70], JAM.policy.p3);
        if (i$$122) {
          x$$70 = i$$122[3];
          JAM.call(w$$14.push, w$$14, [i$$122[1]], JAM.policy.p3);
          if (i$$122[2]) {
            l$$38 = i$$122[3];
            break;
          }
        }
      } while (i$$122);
      var v12618 = w$$14.length > 1;
      if (v12618) {
        v12618 = JAM.call(p$$31.exec, p$$31, [b$$121], JAM.policy.p3);
      }
      if (v12618) {
        var v12619 = w$$14.length === 2;
        if (v12619) {
          v12619 = o$$10.relative[w$$14[0]];
        }
        if (v12619) {
          j$$44 = y$$51(w$$14[0] + w$$14[1], d$$87, f$$23);
        } else {
          var v5654;
          if (o$$10.relative[w$$14[0]]) {
            v5654 = [d$$87];
          } else {
            v5654 = JAM.call(m$$19, null, [JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3), d$$87], JAM.policy.p3);
          }
          j$$44 = v5654;
          var v5655 = w$$14.length;
          for (;v5655;) {
            b$$121 = JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3);
            var v18133 = o$$10.relative[b$$121];
            if (v18133) {
              b$$121 = b$$121 + JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3);
            }
            j$$44 = y$$51(b$$121, j$$44, f$$23);
            v5655 = w$$14.length;
          }
        }
      } else {
        var v27518 = !f$$23;
        if (v27518) {
          v27518 = w$$14.length > 1;
        }
        var v25873 = v27518;
        if (v25873) {
          v25873 = d$$87.nodeType === 9;
        }
        var v23406 = v25873;
        if (v23406) {
          v23406 = !v$$7;
        }
        var v18134 = v23406;
        if (v18134) {
          var v23407 = o$$10.match.ID;
          v18134 = JAM.call(v23407.test, v23407, [w$$14[0]], JAM.policy.p3);
        }
        var v12624 = v18134;
        if (v12624) {
          var v23409 = o$$10.match.ID;
          v12624 = !JAM.call(v23409.test, v23409, [w$$14[w$$14.length - 1]], JAM.policy.p3);
        }
        var v5657 = v12624;
        if (v5657) {
          n$$69 = JAM.call(m$$19.find, m$$19, [JAM.call(w$$14.shift, w$$14, [], JAM.policy.p3), d$$87, v$$7], JAM.policy.p3);
          var v18137;
          if (n$$69.expr) {
            v18137 = JAM.call(m$$19.filter, m$$19, [n$$69.expr, n$$69.set], JAM.policy.p3)[0];
          } else {
            v18137 = n$$69.set[0];
          }
          d$$87 = v18137;
        }
        if (d$$87) {
          var v18138;
          if (f$$23) {
            v18138 = {expr:JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3), set:JAM.call(s$$22, null, [f$$23], JAM.policy.p3)};
          } else {
            var v23416 = JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3);
            var v25879;
            var v29233 = w$$14.length === 1;
            if (v29233) {
              var v29666 = w$$14[0] === "~";
              if (!v29666) {
                v29666 = w$$14[0] === "+";
              }
              v29233 = v29666;
            }
            var v28563 = v29233;
            if (v28563) {
              v28563 = d$$87.parentNode;
            }
            if (v28563) {
              v25879 = d$$87.parentNode;
            } else {
              v25879 = d$$87;
            }
            v18138 = JAM.call(m$$19.find, m$$19, [v23416, v25879, v$$7], JAM.policy.p3);
          }
          n$$69 = v18138;
          var v18139;
          if (n$$69.expr) {
            v18139 = JAM.call(m$$19.filter, m$$19, [n$$69.expr, n$$69.set], JAM.policy.p3);
          } else {
            v18139 = n$$69.set;
          }
          j$$44 = v18139;
          var v12625;
          if (w$$14.length > 0) {
            v12625 = k$$25 = JAM.call(s$$22, null, [j$$44], JAM.policy.p3);
          } else {
            v12625 = u$$6 = !1;
          }
          v12625;
          var v5658 = w$$14.length;
          for (;v5658;) {
            q$$9 = JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3);
            r$$11 = q$$9;
            var v23422;
            if (o$$10.relative[q$$9]) {
              v23422 = r$$11 = JAM.call(w$$14.pop, w$$14, [], JAM.policy.p3);
            } else {
              v23422 = q$$9 = "";
            }
            v23422;
            var v18141 = r$$11 == null;
            if (v18141) {
              r$$11 = d$$87;
            }
            var v12626 = o$$10.relative;
            JAM.call(v12626[q$$9], v12626, [k$$25, r$$11, v$$7], JAM.policy.p3);
            v5658 = w$$14.length;
          }
        } else {
          k$$25 = w$$14 = [];
        }
      }
      if (!k$$25) {
        k$$25 = j$$44;
      }
      if (!k$$25) {
        JAM.call(m$$19.error, m$$19, [q$$9 || b$$121], JAM.policy.p3);
      }
      if (JAM.call(g$$47.call, g$$47, [k$$25], JAM.policy.p3) === "[object Array]") {
        if (!u$$6) {
          var v5660 = e$$104.push;
          JAM.call(v5660.apply, v5660, [e$$104, k$$25], JAM.policy.p3);
        } else {
          var v12628 = d$$87;
          if (v12628) {
            v12628 = d$$87.nodeType === 1;
          }
          if (v12628) {
            t$$6 = 0;
            var v5662 = k$$25[t$$6] != null;
            for (;v5662;) {
              var v12630 = k$$25[t$$6];
              if (v12630) {
                var v18146 = k$$25[t$$6] === !0;
                if (!v18146) {
                  var v23425 = k$$25[t$$6].nodeType === 1;
                  if (v23425) {
                    v23425 = JAM.call(m$$19.contains, m$$19, [d$$87, k$$25[t$$6]], JAM.policy.p3);
                  }
                  v18146 = v23425;
                }
                v12630 = v18146;
              }
              var v5661 = v12630;
              if (v5661) {
                JAM.call(e$$104.push, e$$104, [j$$44[t$$6]], JAM.policy.p3);
              }
              t$$6++;
              v5662 = k$$25[t$$6] != null;
            }
          } else {
            t$$6 = 0;
            var v5664 = k$$25[t$$6] != null;
            for (;v5664;) {
              var v12634 = k$$25[t$$6];
              if (v12634) {
                v12634 = k$$25[t$$6].nodeType === 1;
              }
              var v5663 = v12634;
              if (v5663) {
                JAM.call(e$$104.push, e$$104, [j$$44[t$$6]], JAM.policy.p3);
              }
              t$$6++;
              v5664 = k$$25[t$$6] != null;
            }
          }
        }
      } else {
        JAM.call(s$$22, null, [k$$25, e$$104], JAM.policy.p3);
      }
      if (l$$38) {
        JAM.call(m$$19, null, [l$$38, h$$50, e$$104, f$$23], JAM.policy.p3);
        JAM.call(m$$19.uniqueSort, m$$19, [e$$104], JAM.policy.p3);
      }
      return e$$104;
    }
    function x$$69(a$$186, b$$119, c$$97, e$$102, f$$21, g$$48) {
      var h$$48 = 0;
      var i$$120 = e$$102.length;
      var v5674 = h$$48 < i$$120;
      for (;v5674;) {
        var j$$42 = e$$102[h$$48];
        if (j$$42) {
          var k$$23 = !1;
          j$$42 = j$$42[a$$186];
          for (;j$$42;) {
            if (j$$42[d$$86] === c$$97) {
              k$$23 = e$$102[j$$42.sizset];
              break;
            }
            if (j$$42.nodeType === 1) {
              if (!g$$48) {
                introspect(JAM.policy.p2) {
                  j$$42[d$$86] = c$$97;
                }
                j$$42.sizset = h$$48;
              }
              if (typeof b$$119 != "string") {
                if (j$$42 === b$$119) {
                  k$$23 = !0;
                  break;
                }
              } else {
                if (JAM.call(m$$19.filter, m$$19, [b$$119, [j$$42]], JAM.policy.p3).length > 0) {
                  k$$23 = j$$42;
                  break;
                }
              }
            }
            j$$42 = j$$42[a$$186];
          }
          e$$102[h$$48] = k$$23;
        }
        h$$48++;
        v5674 = h$$48 < i$$120;
      }
      return;
    }
    function w$$13(a$$187, b$$120, c$$98, e$$103, f$$22, g$$49) {
      var h$$49 = 0;
      var i$$121 = e$$103.length;
      var v5679 = h$$49 < i$$121;
      for (;v5679;) {
        var j$$43 = e$$103[h$$49];
        if (j$$43) {
          var k$$24 = !1;
          j$$43 = j$$43[a$$187];
          for (;j$$43;) {
            if (j$$43[d$$86] === c$$98) {
              k$$24 = e$$103[j$$43.sizset];
              break;
            }
            var v12643 = j$$43.nodeType === 1;
            if (v12643) {
              v12643 = !g$$49;
            }
            var v5677 = v12643;
            if (v5677) {
              introspect(JAM.policy.p2) {
                j$$43[d$$86] = c$$98;
              }
              j$$43.sizset = h$$49;
            }
            var v18150 = j$$43.nodeName;
            if (JAM.call(v18150.toLowerCase, v18150, [], JAM.policy.p3) === b$$120) {
              k$$24 = j$$43;
              break;
            }
            j$$43 = j$$43[a$$187];
          }
          e$$103[h$$49] = k$$24;
        }
        h$$49++;
        v5679 = h$$49 < i$$121;
      }
      return;
    }
    var a$$185 = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g;
    var v12645 = JAM.call(Math.random, Math, [], JAM.policy.p3) + "";
    var d$$86 = "sizcache" + JAM.call(v12645.replace, v12645, [".", ""], JAM.policy.p3);
    var e$$101 = 0;
    var g$$47 = Object.prototype.toString;
    var h$$47 = !1;
    var i$$119 = !0;
    var j$$41 = /\\/g;
    var k$$22 = /\r\n/g;
    var l$$37 = /\W/;
    var v5682 = [0, 0];
    JAM.call(v5682.sort, v5682, [v827], JAM.policy.p3);
    m$$19.uniqueSort = v828;
    m$$19.matches = v829;
    m$$19.matchesSelector = v830;
    m$$19.find = v831;
    m$$19.filter = v832;
    m$$19.error = v833;
    var n$$68 = m$$19.getText = v834;
    var o$$10 = m$$19.selectors = {order:["ID", "NAME", "TAG"], match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/, ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/, TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/, CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/, POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/, 
    PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/}, leftMatch:{}, attrMap:{"class":"className", "for":"htmlFor"}, attrHandle:{href:v835, type:v836}, relative:{"+":v837, ">":v838, "":v839, "~":v840}, find:{ID:v841, NAME:v842, TAG:v843}, preFilter:{CLASS:v844, ID:v845, TAG:v846, CHILD:v847, ATTR:v848, PSEUDO:v849, POS:v850}, filters:{enabled:v851, disabled:v852, checked:v853, selected:v854, parent:v855, empty:v856, has:v857, header:v858, text:v859, radio:v860, 
    checkbox:v861, file:v862, password:v863, submit:v864, image:v865, reset:v866, button:v867, input:v868, focus:v869}, setFilters:{first:v870, last:v871, even:v872, odd:v873, lt:v874, gt:v875, nth:v876, eq:v877}, filter:{PSEUDO:v878, CHILD:v879, ID:v880, TAG:v881, CLASS:v882, ATTR:v883, POS:v884}};
    var p$$31 = o$$10.match.POS;
    var r$$10;
    for (r$$10 in o$$10.match) {
      var v12646 = o$$10.match;
      var v12647 = r$$10;
      var v31129 = new RegExp(o$$10.match[r$$10].source + /(?![^\[]*\])(?![^\(]*\))/.source);
      introspect(JAM.policy.p2) {
        v12646[v12647] = v31129;
      }
      var v12648 = o$$10.leftMatch;
      var v12649 = r$$10;
      var v23431 = /(^(?:.|\r|\n)*?)/.source;
      var v25884 = o$$10.match[r$$10].source;
      var v31130 = new RegExp(v23431 + JAM.call(v25884.replace, v25884, [/\\(\d+)/g, q$$8], JAM.policy.p3));
      introspect(JAM.policy.p2) {
        v12648[v12649] = v31130;
      }
    }
    o$$10.match.globalPOS = p$$31;
    try {
      var v18154 = Array.prototype.slice;
      JAM.call(v18154.call, v18154, [c$$5.documentElement.childNodes, 0], JAM.policy.p3)[0].nodeType;
    } catch (t$$8) {
      s$$22 = v885;
    }
    var u$$5;
    var v$$6;
    var v29234;
    if (c$$5.documentElement.compareDocumentPosition) {
      v29234 = u$$5 = v886;
    } else {
      u$$5 = v887;
      v29234 = v$$6 = v888;
    }
    v29234;
    v891();
    v894();
    var v27526 = c$$5.querySelectorAll;
    if (v27526) {
      v896();
    }
    v898();
    v900();
    var v18156;
    if (c$$5.documentElement.contains) {
      v18156 = m$$19.contains = v901;
    } else {
      var v23435;
      if (c$$5.documentElement.compareDocumentPosition) {
        v23435 = m$$19.contains = v902;
      } else {
        v23435 = m$$19.contains = v903;
      }
      v18156 = v23435;
    }
    v18156;
    m$$19.isXML = v904;
    m$$19.attr = f$$4.attr;
    m$$19.selectors.attrMap = {};
    f$$4.find = m$$19;
    f$$4.expr = m$$19.selectors;
    f$$4.expr[":"] = f$$4.expr.filters;
    f$$4.unique = m$$19.uniqueSort;
    f$$4.text = m$$19.getText;
    f$$4.isXMLDoc = m$$19.isXML;
    f$$4.contains = m$$19.contains;
    return;
  }
  function v826(a$$183, b$$118) {
    function v825(a$$184, c$$96) {
      var v5697 = c$$96 == null;
      if (v5697) {
        c$$96 = a$$184;
        a$$184 = null;
      }
      var v5698;
      if (arguments.length > 0) {
        v5698 = JAM.call(this.on, this, [b$$118, null, a$$184, c$$96], JAM.policy.p3);
      } else {
        v5698 = JAM.call(this.trigger, this, [b$$118], JAM.policy.p3);
      }
      return v5698;
    }
    var v23437 = f$$4.fn;
    introspect(JAM.policy.p2) {
      v23437[b$$118] = v825;
    }
    var v23438 = f$$4.attrFn;
    if (v23438) {
      var v25887 = f$$4.attrFn;
      introspect(JAM.policy.p2) {
        v25887[b$$118] = !0;
      }
    }
    var v18158 = JAM.call(C.test, C, [b$$118], JAM.policy.p3);
    if (v18158) {
      var v23439 = f$$4.event.fixHooks;
      var v25889 = f$$4.event;
      introspect(JAM.policy.p2) {
        v23439[b$$118] = v25889.keyHooks;
      }
    }
    var v12652 = JAM.call(D.test, D, [b$$118], JAM.policy.p3);
    if (v12652) {
      var v18159 = f$$4.event.fixHooks;
      var v23441 = f$$4.event;
      introspect(JAM.policy.p2) {
        v18159[b$$118] = v23441.mouseHooks;
      }
    }
    return;
  }
  function v824(a$$182, b$$117) {
    var v5699 = JAM.call(this.mouseenter, this, [a$$182], JAM.policy.p3);
    return JAM.call(v5699.mouseleave, v5699, [b$$117 || a$$182], JAM.policy.p3);
  }
  function v823(a$$181) {
    function e$$99(c$$95) {
      var v12653 = JAM.call(f$$4._data, f$$4, [this, "lastToggle" + a$$181.guid], JAM.policy.p3);
      if (!v12653) {
        v12653 = 0;
      }
      var e$$100 = v12653 % d$$85;
      JAM.call(f$$4._data, f$$4, [this, "lastToggle" + a$$181.guid, e$$100 + 1], JAM.policy.p3);
      JAM.call(c$$95.preventDefault, c$$95, [], JAM.policy.p3);
      var v12656 = b$$116[e$$100];
      var v5702 = JAM.call(v12656.apply, v12656, [this, arguments], JAM.policy.p3);
      if (!v5702) {
        v5702 = !1;
      }
      return v5702;
    }
    var b$$116 = arguments;
    var v5703 = a$$181.guid;
    if (!v5703) {
      v5703 = f$$4.guid;
      f$$4.guid = f$$4.guid + 1;
    }
    var c$$94 = v5703;
    var d$$85 = 0;
    e$$99.guid = c$$94;
    var v5705 = d$$85 < b$$116.length;
    for (;v5705;) {
      var v12660 = d$$85;
      d$$85 = d$$85 + 1;
      b$$116[v12660].guid = c$$94;
      v5705 = d$$85 < b$$116.length;
    }
    return JAM.call(this.click, this, [e$$99], JAM.policy.p3);
  }
  function v822(a$$180, b$$115) {
    if (this[0]) {
      var v5706 = f$$4.event;
      return JAM.call(v5706.trigger, v5706, [a$$180, b$$115, this[0], !0], JAM.policy.p3);
    }
    return;
  }
  function v821(a$$179, b$$114) {
    function v820() {
      var v5710 = f$$4.event;
      JAM.call(v5710.trigger, v5710, [a$$179, b$$114, this], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v820], JAM.policy.p3);
  }
  function v819(a$$178, b$$113, c$$93) {
    var v5711;
    if (arguments.length == 1) {
      v5711 = JAM.call(this.off, this, [a$$178, "**"], JAM.policy.p3);
    } else {
      v5711 = JAM.call(this.off, this, [b$$113, a$$178, c$$93], JAM.policy.p3);
    }
    return v5711;
  }
  function v818(a$$177, b$$112, c$$92, d$$84) {
    return JAM.call(this.on, this, [b$$112, a$$177, c$$92, d$$84], JAM.policy.p3);
  }
  function v817(a$$176, b$$111) {
    var v5712 = JAM.call(f$$4, null, [this.context], JAM.policy.p3);
    var v12664 = this.selector;
    if (!v12664) {
      v12664 = "**";
    }
    JAM.call(v5712.off, v5712, [a$$176, v12664, b$$111], JAM.policy.p3);
    return this;
  }
  function v816(a$$175, b$$110, c$$91) {
    var v5714 = JAM.call(f$$4, null, [this.context], JAM.policy.p3);
    JAM.call(v5714.on, v5714, [a$$175, this.selector, b$$110, c$$91], JAM.policy.p3);
    return this;
  }
  function v815(a$$174, b$$109) {
    return JAM.call(this.off, this, [a$$174, null, b$$109], JAM.policy.p3);
  }
  function v814(a$$173, b$$108, c$$90) {
    return JAM.call(this.on, this, [a$$173, null, b$$108, c$$90], JAM.policy.p3);
  }
  function v813(a$$172, c$$89, d$$83) {
    function v812() {
      var v5716 = f$$4.event;
      JAM.call(v5716.remove, v5716, [this, a$$172, d$$83, c$$89], JAM.policy.p3);
      return;
    }
    var v18166 = a$$172;
    if (v18166) {
      v18166 = a$$172.preventDefault;
    }
    var v12666 = v18166;
    if (v12666) {
      v12666 = a$$172.handleObj;
    }
    if (v12666) {
      var e$$98 = a$$172.handleObj;
      var v5717 = JAM.call(f$$4, null, [a$$172.delegateTarget], JAM.policy.p3);
      var v12668;
      if (e$$98.namespace) {
        v12668 = e$$98.origType + "." + e$$98.namespace;
      } else {
        v12668 = e$$98.origType;
      }
      JAM.call(v5717.off, v5717, [v12668, e$$98.selector, e$$98.handler], JAM.policy.p3);
      return this;
    }
    if (typeof a$$172 == "object") {
      var g$$46;
      for (g$$46 in a$$172) {
        JAM.call(this.off, this, [g$$46, c$$89, a$$172[g$$46]], JAM.policy.p3);
      }
      return this;
    }
    var v12670 = c$$89 === !1;
    if (!v12670) {
      v12670 = typeof c$$89 == "function";
    }
    if (v12670) {
      d$$83 = c$$89;
      c$$89 = b$$9;
    }
    var v5725 = d$$83 === !1;
    if (v5725) {
      d$$83 = J;
    }
    return JAM.call(this.each, this, [v812], JAM.policy.p3);
  }
  function v811(a$$171, b$$107, c$$88, d$$82) {
    return JAM.call(this.on, this, [a$$171, b$$107, c$$88, d$$82, 1], JAM.policy.p3);
  }
  function v810(a$$169, c$$87, d$$81, e$$97, g$$45) {
    function v809() {
      var v5726 = f$$4.event;
      JAM.call(v5726.add, v5726, [this, a$$169, e$$97, d$$81, c$$87], JAM.policy.p3);
      return;
    }
    function v808(a$$170) {
      var v5727 = JAM.call(f$$4, null, [], JAM.policy.p3);
      JAM.call(v5727.off, v5727, [a$$170], JAM.policy.p3);
      return JAM.call(h$$46.apply, h$$46, [this, arguments], JAM.policy.p3);
    }
    var h$$46;
    var i$$118;
    if (typeof a$$169 == "object") {
      var v5728 = typeof c$$87 != "string";
      if (v5728) {
        d$$81 = d$$81 || c$$87;
        c$$87 = b$$9;
      }
      for (i$$118 in a$$169) {
        JAM.call(this.on, this, [i$$118, c$$87, d$$81, a$$169[i$$118], g$$45], JAM.policy.p3);
      }
      return this;
    }
    var v5731;
    var v18173 = d$$81 == null;
    if (v18173) {
      v18173 = e$$97 == null;
    }
    if (v18173) {
      e$$97 = c$$87;
      v5731 = d$$81 = c$$87 = b$$9;
    } else {
      var v12674 = e$$97 == null;
      if (v12674) {
        var v18174;
        if (typeof c$$87 == "string") {
          e$$97 = d$$81;
          v18174 = d$$81 = b$$9;
        } else {
          e$$97 = d$$81;
          d$$81 = c$$87;
          v18174 = c$$87 = b$$9;
        }
        v12674 = v18174;
      }
      v5731 = v12674;
    }
    v5731;
    if (e$$97 === !1) {
      e$$97 = J;
    } else {
      if (!e$$97) {
        return this;
      }
    }
    var v5734 = g$$45 === 1;
    if (v5734) {
      h$$46 = e$$97;
      e$$97 = v808;
      var v18175 = h$$46.guid;
      if (!v18175) {
        v18175 = h$$46.guid = f$$4.guid;
        f$$4.guid = f$$4.guid + 1;
      }
      e$$97.guid = v18175;
    }
    return JAM.call(this.each, this, [v809], JAM.policy.p3);
  }
  function v807(a$$167, b$$106) {
    function v806() {
      var v5735 = (d$$80 = d$$80 - 1) === 0;
      if (v5735) {
        JAM.call(c$$5.removeEventListener, c$$5, [a$$167, e$$96, !0], JAM.policy.p3);
      }
      return;
    }
    function v805() {
      var v12679 = d$$80;
      d$$80 = d$$80 + 1;
      var v5736 = v12679 === 0;
      if (v5736) {
        JAM.call(c$$5.addEventListener, c$$5, [a$$167, e$$96, !0], JAM.policy.p3);
      }
      return;
    }
    function e$$96(a$$168) {
      var v5737 = f$$4.event;
      var v5738 = a$$168.target;
      var v12681 = f$$4.event;
      JAM.call(v5737.simulate, v5737, [b$$106, v5738, JAM.call(v12681.fix, v12681, [a$$168], JAM.policy.p3), !0], JAM.policy.p3);
      return;
    }
    var d$$80 = 0;
    var v5741 = f$$4.event.special;
    introspect(JAM.policy.p2) {
      v5741[b$$106] = {setup:v805, teardown:v806};
    }
    return;
  }
  function v804() {
    var v5742 = f$$4.event;
    JAM.call(v5742.remove, v5742, [this, "._change"], JAM.policy.p3);
    return JAM.call(z$$2.test, z$$2, [this.nodeName], JAM.policy.p3);
  }
  function v803(a$$166) {
    var b$$105 = a$$166.target;
    var v23446 = this !== b$$105;
    if (!v23446) {
      v23446 = a$$166.isSimulated;
    }
    var v18176 = v23446;
    if (!v18176) {
      v18176 = a$$166.isTrigger;
    }
    var v12683 = v18176;
    if (!v12683) {
      var v18177 = b$$105.type !== "radio";
      if (v18177) {
        v18177 = b$$105.type !== "checkbox";
      }
      v12683 = v18177;
    }
    if (v12683) {
      var v5744 = a$$166.handleObj.handler;
      return JAM.call(v5744.apply, v5744, [this, arguments], JAM.policy.p3);
    }
    return;
  }
  function v802() {
    function v801(a$$164) {
      function v800(a$$165) {
        var v18179 = this.parentNode;
        if (v18179) {
          v18179 = !a$$165.isSimulated;
        }
        var v12685 = v18179;
        if (v12685) {
          v12685 = !a$$165.isTrigger;
        }
        var v5746 = v12685;
        if (v5746) {
          var v12686 = f$$4.event;
          JAM.call(v12686.simulate, v12686, ["change", this.parentNode, a$$165, !0], JAM.policy.p3);
        }
        return;
      }
      var b$$104 = a$$164.target;
      var v12689 = JAM.call(z$$2.test, z$$2, [b$$104.nodeName], JAM.policy.p3);
      if (v12689) {
        v12689 = !b$$104._change_attached;
      }
      var v5747 = v12689;
      if (v5747) {
        var v18183 = f$$4.event;
        JAM.call(v18183.add, v18183, [b$$104, "change._change", v800], JAM.policy.p3);
        b$$104._change_attached = !0;
      }
      return;
    }
    function v799(a$$163) {
      var v12690 = this._just_changed;
      if (v12690) {
        v12690 = !a$$163.isTrigger;
      }
      var v5748 = v12690;
      if (v5748) {
        this._just_changed = !1;
        var v18185 = f$$4.event;
        JAM.call(v18185.simulate, v18185, ["change", this, a$$163, !0], JAM.policy.p3);
      }
      return;
    }
    function v798(a$$162) {
      var v5749 = a$$162.originalEvent.propertyName === "checked";
      if (v5749) {
        this._just_changed = !0;
      }
      return;
    }
    if (JAM.call(z$$2.test, z$$2, [this.nodeName], JAM.policy.p3)) {
      var v12693 = this.type === "checkbox";
      if (!v12693) {
        v12693 = this.type === "radio";
      }
      if (v12693) {
        var v12694 = f$$4.event;
        JAM.call(v12694.add, v12694, [this, "propertychange._change", v798], JAM.policy.p3);
        var v12695 = f$$4.event;
        JAM.call(v12695.add, v12695, [this, "click._change", v799], JAM.policy.p3);
      }
      return !1;
    }
    var v5752 = f$$4.event;
    JAM.call(v5752.add, v5752, [this, "beforeactivate._change", v801], JAM.policy.p3);
    return;
  }
  function v797() {
    if (JAM.call(f$$4.nodeName, f$$4, [this, "form"], JAM.policy.p3)) {
      return !1;
    }
    var v5754 = f$$4.event;
    JAM.call(v5754.remove, v5754, [this, "._submit"], JAM.policy.p3);
    return;
  }
  function v796(a$$161) {
    var v5755 = a$$161._submit_bubble;
    if (v5755) {
      delete a$$161._submit_bubble;
      var v23451 = this.parentNode;
      if (v23451) {
        v23451 = !a$$161.isTrigger;
      }
      var v18191 = v23451;
      if (v18191) {
        var v23452 = f$$4.event;
        JAM.call(v23452.simulate, v23452, ["submit", this.parentNode, a$$161, !0], JAM.policy.p3);
      }
    }
    return;
  }
  function v795() {
    function v794(a$$159) {
      function v793(a$$160) {
        a$$160._submit_bubble = !0;
        return;
      }
      var c$$86 = a$$159.target;
      var v5756;
      var v18192 = JAM.call(f$$4.nodeName, f$$4, [c$$86, "input"], JAM.policy.p3);
      if (!v18192) {
        v18192 = JAM.call(f$$4.nodeName, f$$4, [c$$86, "button"], JAM.policy.p3);
      }
      if (v18192) {
        v5756 = c$$86.form;
      } else {
        v5756 = b$$9;
      }
      var d$$79 = v5756;
      var v12697 = d$$79;
      if (v12697) {
        v12697 = !d$$79._submit_attached;
      }
      var v5757 = v12697;
      if (v5757) {
        var v18194 = f$$4.event;
        JAM.call(v18194.add, v18194, [d$$79, "submit._submit", v793], JAM.policy.p3);
        d$$79._submit_attached = !0;
      }
      return;
    }
    if (JAM.call(f$$4.nodeName, f$$4, [this, "form"], JAM.policy.p3)) {
      return !1;
    }
    var v5759 = f$$4.event;
    JAM.call(v5759.add, v5759, [this, "click._submit keypress._submit", v794], JAM.policy.p3);
    return;
  }
  function v792(a$$157, b$$103) {
    function v791(a$$158) {
      var c$$85 = this;
      var d$$78 = a$$158.relatedTarget;
      var e$$95 = a$$158.handleObj;
      var g$$44 = e$$95.selector;
      var h$$45;
      var v12698 = !d$$78;
      if (!v12698) {
        var v18195 = d$$78 !== c$$85;
        if (v18195) {
          v18195 = !JAM.call(f$$4.contains, f$$4, [c$$85, d$$78], JAM.policy.p3);
        }
        v12698 = v18195;
      }
      if (v12698) {
        a$$158.type = e$$95.origType;
        var v18197 = e$$95.handler;
        h$$45 = JAM.call(v18197.apply, v18197, [this, arguments], JAM.policy.p3);
        a$$158.type = b$$103;
      }
      return h$$45;
    }
    var v5761 = f$$4.event.special;
    introspect(JAM.policy.p2) {
      v5761[a$$157] = {delegateType:b$$103, bindType:b$$103, handle:v791};
    }
    return;
  }
  function v790() {
    this.isImmediatePropagationStopped = K;
    JAM.call(this.stopPropagation, this, [], JAM.policy.p3);
    return;
  }
  function v789() {
    this.isPropagationStopped = K;
    var a$$156 = this.originalEvent;
    var v5762 = !a$$156;
    if (!v5762) {
      var v18198 = a$$156.stopPropagation;
      if (v18198) {
        JAM.call(a$$156.stopPropagation, a$$156, [], JAM.policy.p3);
      }
      a$$156.cancelBubble = !0;
    }
    return;
  }
  function v788() {
    this.isDefaultPrevented = K;
    var a$$155 = this.originalEvent;
    var v5763 = !a$$155;
    if (!v5763) {
      var v12701;
      if (a$$155.preventDefault) {
        v12701 = JAM.call(a$$155.preventDefault, a$$155, [], JAM.policy.p3);
      } else {
        v12701 = a$$155.returnValue = !1;
      }
      v12701;
    }
    return;
  }
  function v787(a$$154, b$$102) {
    if (!(this instanceof f$$4.Event)) {
      return JAM.new(f$$4.Event, [a$$154, b$$102]);
    }
    var v23457;
    var v27529 = a$$154;
    if (v27529) {
      v27529 = a$$154.type;
    }
    if (v27529) {
      this.originalEvent = a$$154;
      this.type = a$$154.type;
      var v27530;
      var v29669 = a$$154.defaultPrevented;
      if (!v29669) {
        v29669 = a$$154.returnValue === !1;
      }
      var v29235 = v29669;
      if (!v29235) {
        var v29670 = a$$154.getPreventDefault;
        if (v29670) {
          v29670 = JAM.call(a$$154.getPreventDefault, a$$154, [], JAM.policy.p3);
        }
        v29235 = v29670;
      }
      if (v29235) {
        v27530 = K;
      } else {
        v27530 = J;
      }
      v23457 = this.isDefaultPrevented = v27530;
    } else {
      v23457 = this.type = a$$154;
    }
    v23457;
    if (b$$102) {
      JAM.call(f$$4.extend, f$$4, [this, b$$102], JAM.policy.p3);
    }
    var v23458 = a$$154;
    if (v23458) {
      v23458 = a$$154.timeStamp;
    }
    var v18201 = v23458;
    if (!v18201) {
      v18201 = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
    }
    this.timeStamp = v18201;
    var v12704 = f$$4.expando;
    introspect(JAM.policy.p2) {
      this[v12704] = !0;
    }
    return;
  }
  function v786(a$$153, b$$101, c$$84) {
    var v5766 = a$$153.detachEvent;
    if (v5766) {
      JAM.call(a$$153.detachEvent, a$$153, ["on" + b$$101, c$$84], JAM.policy.p3);
    }
    return;
  }
  function v785(a$$152, b$$100, c$$83) {
    var v5767 = a$$152.removeEventListener;
    if (v5767) {
      JAM.call(a$$152.removeEventListener, a$$152, [b$$100, c$$83, !1], JAM.policy.p3);
    }
    return;
  }
  function v784(a$$151, b$$99, c$$82, d$$77) {
    var e$$94 = JAM.call(f$$4.extend, f$$4, [new f$$4.Event, c$$82, {type:a$$151, isSimulated:!0, originalEvent:{}}], JAM.policy.p3);
    var v12709;
    if (d$$77) {
      var v18202 = f$$4.event;
      v12709 = JAM.call(v18202.trigger, v18202, [e$$94, null, b$$99], JAM.policy.p3);
    } else {
      var v18203 = f$$4.event.dispatch;
      v12709 = JAM.call(v18203.call, v18203, [b$$99, e$$94], JAM.policy.p3);
    }
    v12709;
    var v12710 = JAM.call(e$$94.isDefaultPrevented, e$$94, [], JAM.policy.p3);
    if (v12710) {
      JAM.call(c$$82.preventDefault, c$$82, [], JAM.policy.p3);
    }
    return;
  }
  function v783(a$$150, b$$98) {
    var v5770 = this.onbeforeunload === b$$98;
    if (v5770) {
      JAM.set(this, "onbeforeunload", null);
    }
    return;
  }
  function v782(a$$149, b$$97, c$$81) {
    var v5771 = JAM.call(f$$4.isWindow, f$$4, [this], JAM.policy.p3);
    if (v5771) {
      JAM.set(this, "onbeforeunload", c$$81);
    }
    return;
  }
  function v781(a$$148) {
    if (a$$148[f$$4.expando]) {
      return a$$148;
    }
    var d$$76;
    var e$$93;
    var g$$43 = a$$148;
    var v5773 = f$$4.event.fixHooks[a$$148.type];
    if (!v5773) {
      v5773 = {};
    }
    var h$$44 = v5773;
    var v5774;
    if (h$$44.props) {
      var v12716 = this.props;
      v5774 = JAM.call(v12716.concat, v12716, [h$$44.props], JAM.policy.p3);
    } else {
      v5774 = this.props;
    }
    var i$$117 = v5774;
    a$$148 = JAM.call(f$$4.Event, f$$4, [g$$43], JAM.policy.p3);
    d$$76 = i$$117.length;
    for (;d$$76;) {
      e$$93 = i$$117[d$$76 = d$$76 - 1];
      introspect(JAM.policy.p2) {
        a$$148[e$$93] = g$$43[e$$93];
      }
    }
    var v18205 = a$$148.target;
    if (!v18205) {
      var v23461 = g$$43.srcElement;
      if (!v23461) {
        v23461 = c$$5;
      }
      a$$148.target = v23461;
    }
    var v18206 = a$$148.target.nodeType === 3;
    if (v18206) {
      a$$148.target = a$$148.target.parentNode;
    }
    var v12720 = a$$148.metaKey === b$$9;
    if (v12720) {
      a$$148.metaKey = a$$148.ctrlKey;
    }
    var v5775;
    if (h$$44.filter) {
      v5775 = JAM.call(h$$44.filter, h$$44, [a$$148, g$$43], JAM.policy.p3);
    } else {
      v5775 = a$$148;
    }
    return v5775;
  }
  function v780(a$$147, d$$75) {
    var e$$92;
    var f$$20;
    var g$$42;
    var h$$43 = d$$75.button;
    var i$$116 = d$$75.fromElement;
    var v23465 = a$$147.pageX == null;
    if (v23465) {
      v23465 = d$$75.clientX != null;
    }
    var v18208 = v23465;
    if (v18208) {
      var v29236 = a$$147.target.ownerDocument;
      if (!v29236) {
        v29236 = c$$5;
      }
      e$$92 = v29236;
      f$$20 = e$$92.documentElement;
      g$$42 = e$$92.body;
      var v28567 = d$$75.clientX;
      var v29955 = f$$20;
      if (v29955) {
        v29955 = f$$20.scrollLeft;
      }
      var v29674 = v29955;
      if (!v29674) {
        var v29956 = g$$42;
        if (v29956) {
          v29956 = g$$42.scrollLeft;
        }
        v29674 = v29956;
      }
      var v29237 = v29674;
      if (!v29237) {
        v29237 = 0;
      }
      var v27531 = v28567 + v29237;
      var v29676 = f$$20;
      if (v29676) {
        v29676 = f$$20.clientLeft;
      }
      var v29238 = v29676;
      if (!v29238) {
        var v29677 = g$$42;
        if (v29677) {
          v29677 = g$$42.clientLeft;
        }
        v29238 = v29677;
      }
      var v28569 = v29238;
      if (!v28569) {
        v28569 = 0;
      }
      a$$147.pageX = v27531 - v28569;
      var v27533 = d$$75.clientY;
      var v29679 = f$$20;
      if (v29679) {
        v29679 = f$$20.scrollTop;
      }
      var v29240 = v29679;
      if (!v29240) {
        var v29680 = g$$42;
        if (v29680) {
          v29680 = g$$42.scrollTop;
        }
        v29240 = v29680;
      }
      var v28570 = v29240;
      if (!v28570) {
        v28570 = 0;
      }
      var v25899 = v27533 + v28570;
      var v29242 = f$$20;
      if (v29242) {
        v29242 = f$$20.clientTop;
      }
      var v28571 = v29242;
      if (!v28571) {
        var v29243 = g$$42;
        if (v29243) {
          v29243 = g$$42.clientTop;
        }
        v28571 = v29243;
      }
      var v27535 = v28571;
      if (!v27535) {
        v27535 = 0;
      }
      a$$147.pageY = v25899 - v27535;
    }
    var v23466 = !a$$147.relatedTarget;
    if (v23466) {
      v23466 = i$$116;
    }
    var v18209 = v23466;
    if (v18209) {
      var v23467;
      if (i$$116 === a$$147.target) {
        v23467 = d$$75.toElement;
      } else {
        v23467 = i$$116;
      }
      a$$147.relatedTarget = v23467;
    }
    var v18210 = !a$$147.which;
    if (v18210) {
      v18210 = h$$43 !== b$$9;
    }
    var v12722 = v18210;
    if (v12722) {
      var v18211;
      if (h$$43 & 1) {
        v18211 = 1;
      } else {
        var v23469;
        if (h$$43 & 2) {
          v23469 = 3;
        } else {
          var v25903;
          if (h$$43 & 4) {
            v25903 = 2;
          } else {
            v25903 = 0;
          }
          v23469 = v25903;
        }
        v18211 = v23469;
      }
      a$$147.which = v18211;
    }
    return a$$147;
  }
  function v779(a$$146, b$$96) {
    var v5776 = a$$146.which == null;
    if (v5776) {
      var v12724;
      if (b$$96.charCode != null) {
        v12724 = b$$96.charCode;
      } else {
        v12724 = b$$96.keyCode;
      }
      a$$146.which = v12724;
    }
    return a$$146;
  }
  function v778(c$$80) {
    var v5777 = f$$4.event;
    var v12725 = c$$80;
    if (!v12725) {
      v12725 = a$$13.event;
    }
    c$$80 = JAM.call(v5777.fix, v5777, [v12725], JAM.policy.p3);
    var v18214 = JAM.call(f$$4._data, f$$4, [this, "events"], JAM.policy.p3);
    if (!v18214) {
      v18214 = {};
    }
    var v5779 = v18214[c$$80.type];
    if (!v5779) {
      v5779 = [];
    }
    var d$$74 = v5779;
    var e$$91 = d$$74.delegateCount;
    var v5780 = [].slice;
    var g$$41 = JAM.call(v5780.call, v5780, [arguments, 0], JAM.policy.p3);
    var v5781 = !c$$80.exclusive;
    if (v5781) {
      v5781 = !c$$80.namespace;
    }
    var h$$42 = v5781;
    var v5782 = f$$4.event.special[c$$80.type];
    if (!v5782) {
      v5782 = {};
    }
    var i$$115 = v5782;
    var j$$40 = [];
    var k$$21;
    var l$$36;
    var m$$18;
    var n$$67;
    var o$$9;
    var p$$30;
    var q$$7;
    var r$$9;
    var s$$21;
    var t$$5;
    var u$$4;
    g$$41[0] = c$$80;
    c$$80.delegateTarget = this;
    var v12734 = !i$$115.preDispatch;
    if (!v12734) {
      var v23473 = i$$115.preDispatch;
      v12734 = JAM.call(v23473.call, v23473, [this, c$$80], JAM.policy.p3) !== !1;
    }
    if (v12734) {
      var v12735 = e$$91;
      if (v12735) {
        var v18220 = !c$$80.button;
        if (!v18220) {
          v18220 = c$$80.type !== "click";
        }
        v12735 = v18220;
      }
      if (v12735) {
        n$$67 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        var v12736 = this.ownerDocument;
        if (!v12736) {
          v12736 = this;
        }
        n$$67.context = v12736;
        m$$18 = c$$80.target;
        var v5790 = m$$18 != this;
        for (;v5790;) {
          if (m$$18.disabled !== !0) {
            p$$30 = {};
            r$$9 = [];
            n$$67[0] = m$$18;
            k$$21 = 0;
            var v5787 = k$$21 < e$$91;
            for (;v5787;) {
              s$$21 = d$$74[k$$21];
              var JSCompiler_temp_const$$4 = t$$5 = s$$21.selector;
              var JSCompiler_temp$$5;
              if (JSCompiler_temp$$5 = p$$30[t$$5] === b$$9) {
                var JSCompiler_temp_const$$7 = p$$30;
                var JSCompiler_temp_const$$6 = t$$5;
                var JSCompiler_temp$$8;
                if (s$$21.quick) {
                  var b$$inline_26 = s$$21.quick;
                  var v5783 = m$$18.attributes;
                  if (!v5783) {
                    v5783 = {};
                  }
                  var c$$inline_27 = v5783;
                  var v18222 = !b$$inline_26[1];
                  if (!v18222) {
                    var v25905 = m$$18.nodeName;
                    v18222 = JAM.call(v25905.toLowerCase, v25905, [], JAM.policy.p3) === b$$inline_26[1];
                  }
                  var v12741 = v18222;
                  if (v12741) {
                    var v18223 = !b$$inline_26[2];
                    if (!v18223) {
                      var v27538 = c$$inline_27.id;
                      if (!v27538) {
                        v27538 = {};
                      }
                      v18223 = v27538.value === b$$inline_26[2];
                    }
                    v12741 = v18223;
                  }
                  var v5784 = v12741;
                  if (v5784) {
                    var v12742 = !b$$inline_26[3];
                    if (!v12742) {
                      var v18225 = b$$inline_26[3];
                      var v25907 = c$$inline_27["class"];
                      if (!v25907) {
                        v25907 = {};
                      }
                      v12742 = JAM.call(v18225.test, v18225, [v25907.value], JAM.policy.p3);
                    }
                    v5784 = v12742;
                  }
                  JSCompiler_temp$$8 = v5784;
                } else {
                  JSCompiler_temp$$8 = JAM.call(n$$67.is, n$$67, [t$$5], JAM.policy.p3);
                }
                introspect(JAM.policy.p2) {
                  JSCompiler_temp$$5 = JSCompiler_temp_const$$7[JSCompiler_temp_const$$6] = JSCompiler_temp$$8;
                }
              }
              JSCompiler_temp_const$$4;
              JSCompiler_temp$$5;
              var v12743 = p$$30[t$$5];
              if (v12743) {
                JAM.call(r$$9.push, r$$9, [s$$21], JAM.policy.p3);
              }
              k$$21++;
              v5787 = k$$21 < e$$91;
            }
            var v5788 = r$$9.length;
            if (v5788) {
              JAM.call(j$$40.push, j$$40, [{elem:m$$18, matches:r$$9}], JAM.policy.p3);
            }
          }
          var v12745 = m$$18.parentNode;
          if (!v12745) {
            v12745 = this;
          }
          m$$18 = v12745;
          v5790 = m$$18 != this;
        }
      }
      var v5792 = d$$74.length > e$$91;
      if (v5792) {
        JAM.call(j$$40.push, j$$40, [{elem:this, matches:JAM.call(d$$74.slice, d$$74, [e$$91], JAM.policy.p3)}], JAM.policy.p3);
      }
      k$$21 = 0;
      var v12748 = k$$21 < j$$40.length;
      if (v12748) {
        v12748 = !JAM.call(c$$80.isPropagationStopped, c$$80, [], JAM.policy.p3);
      }
      var v5796 = v12748;
      for (;v5796;) {
        q$$7 = j$$40[k$$21];
        c$$80.currentTarget = q$$7.elem;
        l$$36 = 0;
        var v12749 = l$$36 < q$$7.matches.length;
        if (v12749) {
          v12749 = !JAM.call(c$$80.isImmediatePropagationStopped, c$$80, [], JAM.policy.p3);
        }
        var v5795 = v12749;
        for (;v5795;) {
          s$$21 = q$$7.matches[l$$36];
          var v18234 = h$$42;
          if (!v18234) {
            var v23487 = !c$$80.namespace;
            if (v23487) {
              v23487 = !s$$21.namespace;
            }
            v18234 = v23487;
          }
          var v12750 = v18234;
          if (!v12750) {
            var v18235 = c$$80.namespace_re;
            if (v18235) {
              var v23489 = c$$80.namespace_re;
              v18235 = JAM.call(v23489.test, v23489, [s$$21.namespace], JAM.policy.p3);
            }
            v12750 = v18235;
          }
          if (v12750) {
            c$$80.data = s$$21.data;
            c$$80.handleObj = s$$21;
            var v27540 = f$$4.event.special[s$$21.origType];
            if (!v27540) {
              v27540 = {};
            }
            var v23491 = v27540.handle;
            if (!v23491) {
              v23491 = s$$21.handler;
            }
            var v18237 = v23491;
            o$$9 = JAM.call(v18237.apply, v18237, [q$$7.elem, g$$41], JAM.policy.p3);
            var v12751 = o$$9 !== b$$9;
            if (v12751) {
              c$$80.result = o$$9;
              var v23492 = o$$9 === !1;
              if (v23492) {
                JAM.call(c$$80.preventDefault, c$$80, [], JAM.policy.p3);
                JAM.call(c$$80.stopPropagation, c$$80, [], JAM.policy.p3);
              }
            }
          }
          l$$36++;
          var v12752 = l$$36 < q$$7.matches.length;
          if (v12752) {
            v12752 = !JAM.call(c$$80.isImmediatePropagationStopped, c$$80, [], JAM.policy.p3);
          }
          v5795 = v12752;
        }
        k$$21++;
        var v12753 = k$$21 < j$$40.length;
        if (v12753) {
          v12753 = !JAM.call(c$$80.isPropagationStopped, c$$80, [], JAM.policy.p3);
        }
        v5796 = v12753;
      }
      var v5797 = i$$115.postDispatch;
      if (v5797) {
        var v12754 = i$$115.postDispatch;
        JAM.call(v12754.call, v12754, [this, c$$80], JAM.policy.p3);
      }
      return c$$80.result;
    }
    return;
  }
  function v777(c$$79, d$$73, e$$90, g$$40) {
    var v12755 = !e$$90;
    if (!v12755) {
      var v18243 = e$$90.nodeType !== 3;
      if (v18243) {
        v18243 = e$$90.nodeType !== 8;
      }
      v12755 = v18243;
    }
    if (v12755) {
      var v5799 = c$$79.type;
      if (!v5799) {
        v5799 = c$$79;
      }
      var h$$41 = v5799;
      var i$$114 = [];
      var j$$39;
      var k$$20;
      var l$$35;
      var m$$17;
      var n$$66;
      var o$$8;
      var p$$29;
      var q$$6;
      var r$$8;
      var s$$20;
      if (JAM.call(E.test, E, [h$$41 + f$$4.event.triggered], JAM.policy.p3)) {
        return;
      }
      var v12758 = JAM.call(h$$41.indexOf, h$$41, ["!"], JAM.policy.p3) >= 0;
      if (v12758) {
        h$$41 = JAM.call(h$$41.slice, h$$41, [0, -1], JAM.policy.p3);
        k$$20 = !0;
      }
      var v12759 = JAM.call(h$$41.indexOf, h$$41, ["."], JAM.policy.p3) >= 0;
      if (v12759) {
        i$$114 = JAM.call(h$$41.split, h$$41, ["."], JAM.policy.p3);
        h$$41 = JAM.call(i$$114.shift, i$$114, [], JAM.policy.p3);
        JAM.call(i$$114.sort, i$$114, [], JAM.policy.p3);
      }
      var v18248 = !e$$90;
      if (!v18248) {
        v18248 = f$$4.event.customEvent[h$$41];
      }
      var v12760 = v18248;
      if (v12760) {
        v12760 = !f$$4.event.global[h$$41];
      }
      if (v12760) {
        return;
      }
      var v28577;
      if (typeof c$$79 == "object") {
        var v29246;
        if (c$$79[f$$4.expando]) {
          v29246 = c$$79;
        } else {
          v29246 = JAM.new(f$$4.Event, [h$$41, c$$79]);
        }
        v28577 = v29246;
      } else {
        v28577 = JAM.new(f$$4.Event, [h$$41]);
      }
      c$$79 = v28577;
      c$$79.type = h$$41;
      c$$79.isTrigger = !0;
      c$$79.exclusive = k$$20;
      var v31131 = JAM.call(i$$114.join, i$$114, ["."], JAM.policy.p3);
      c$$79.namespace = v31131;
      var v18250;
      if (c$$79.namespace) {
        v18250 = new RegExp("(^|\\.)" + JAM.call(i$$114.join, i$$114, ["\\.(?:.*\\.)?"], JAM.policy.p3) + "(\\.|$)");
      } else {
        v18250 = null;
      }
      c$$79.namespace_re = v18250;
      var v12761;
      if (JAM.call(h$$41.indexOf, h$$41, [":"], JAM.policy.p3) < 0) {
        v12761 = "on" + h$$41;
      } else {
        v12761 = "";
      }
      o$$8 = v12761;
      if (!e$$90) {
        j$$39 = f$$4.cache;
        for (l$$35 in j$$39) {
          var v12762 = j$$39[l$$35].events;
          if (v12762) {
            v12762 = j$$39[l$$35].events[h$$41];
          }
          var v5802 = v12762;
          if (v5802) {
            var v12763 = f$$4.event;
            JAM.call(v12763.trigger, v12763, [c$$79, d$$73, j$$39[l$$35].handle.elem, !0], JAM.policy.p3);
          }
        }
        return;
      }
      c$$79.result = b$$9;
      var v25916 = c$$79.target;
      if (!v25916) {
        c$$79.target = e$$90;
      }
      var v23505;
      if (d$$73 != null) {
        v23505 = JAM.call(f$$4.makeArray, f$$4, [d$$73], JAM.policy.p3);
      } else {
        v23505 = [];
      }
      d$$73 = v23505;
      JAM.call(d$$73.unshift, d$$73, [c$$79], JAM.policy.p3);
      var v12766 = f$$4.event.special[h$$41];
      if (!v12766) {
        v12766 = {};
      }
      p$$29 = v12766;
      var v12767 = p$$29.trigger;
      if (v12767) {
        var v23507 = p$$29.trigger;
        v12767 = JAM.call(v23507.apply, v23507, [e$$90, d$$73], JAM.policy.p3) === !1;
      }
      if (v12767) {
        return;
      }
      var v18259 = p$$29.bindType;
      if (!v18259) {
        v18259 = h$$41;
      }
      r$$8 = [[e$$90, v18259]];
      var v18260 = !g$$40;
      if (v18260) {
        v18260 = !p$$29.noBubble;
      }
      var v12769 = v18260;
      if (v12769) {
        v12769 = !JAM.call(f$$4.isWindow, f$$4, [e$$90], JAM.policy.p3);
      }
      if (v12769) {
        var v18262 = p$$29.delegateType;
        if (!v18262) {
          v18262 = h$$41;
        }
        s$$20 = v18262;
        var v18263;
        if (JAM.call(E.test, E, [s$$20 + h$$41], JAM.policy.p3)) {
          v18263 = e$$90;
        } else {
          v18263 = e$$90.parentNode;
        }
        m$$17 = v18263;
        n$$66 = null;
        for (;m$$17;) {
          JAM.call(r$$8.push, r$$8, [[m$$17, s$$20]], JAM.policy.p3);
          n$$66 = m$$17;
          m$$17 = m$$17.parentNode;
        }
        var v12771 = n$$66;
        if (v12771) {
          v12771 = n$$66 === e$$90.ownerDocument;
        }
        var v5806 = v12771;
        if (v5806) {
          var v25919 = n$$66.defaultView;
          if (!v25919) {
            v25919 = n$$66.parentWindow;
          }
          var v23512 = v25919;
          if (!v23512) {
            v23512 = a$$13;
          }
          JAM.call(r$$8.push, r$$8, [[v23512, s$$20]], JAM.policy.p3);
        }
      }
      l$$35 = 0;
      var v12773 = l$$35 < r$$8.length;
      if (v12773) {
        v12773 = !JAM.call(c$$79.isPropagationStopped, c$$79, [], JAM.policy.p3);
      }
      var v5808 = v12773;
      for (;v5808;) {
        m$$17 = r$$8[l$$35][0];
        c$$79.type = r$$8[l$$35][1];
        var v28578 = JAM.call(f$$4._data, f$$4, [m$$17, "events"], JAM.policy.p3);
        if (!v28578) {
          v28578 = {};
        }
        var v25921 = v28578[c$$79.type];
        if (v25921) {
          v25921 = JAM.call(f$$4._data, f$$4, [m$$17, "handle"], JAM.policy.p3);
        }
        q$$6 = v25921;
        if (q$$6) {
          JAM.call(q$$6.apply, q$$6, [m$$17, d$$73], JAM.policy.p3);
        }
        var v18268 = o$$8;
        if (v18268) {
          v18268 = m$$17[o$$8];
        }
        q$$6 = v18268;
        var v23513 = q$$6;
        if (v23513) {
          v23513 = JAM.call(f$$4.acceptData, f$$4, [m$$17], JAM.policy.p3);
        }
        var v18269 = v23513;
        if (v18269) {
          v18269 = JAM.call(q$$6.apply, q$$6, [m$$17, d$$73], JAM.policy.p3) === !1;
        }
        var v12774 = v18269;
        if (v12774) {
          JAM.call(c$$79.preventDefault, c$$79, [], JAM.policy.p3);
        }
        l$$35++;
        var v12775 = l$$35 < r$$8.length;
        if (v12775) {
          v12775 = !JAM.call(c$$79.isPropagationStopped, c$$79, [], JAM.policy.p3);
        }
        v5808 = v12775;
      }
      c$$79.type = h$$41;
      var v29959 = !g$$40;
      if (v29959) {
        v29959 = !JAM.call(c$$79.isDefaultPrevented, c$$79, [], JAM.policy.p3);
      }
      var v29685 = v29959;
      if (v29685) {
        var v29960 = !p$$29._default;
        if (!v29960) {
          var v30370 = p$$29._default;
          v29960 = JAM.call(v30370.apply, v30370, [e$$90.ownerDocument, d$$73], JAM.policy.p3) === !1;
        }
        v29685 = v29960;
      }
      var v29250 = v29685;
      if (v29250) {
        var v29686 = h$$41 !== "click";
        if (!v29686) {
          v29686 = !JAM.call(f$$4.nodeName, f$$4, [e$$90, "a"], JAM.policy.p3);
        }
        v29250 = v29686;
      }
      var v28579 = v29250;
      if (v28579) {
        v28579 = JAM.call(f$$4.acceptData, f$$4, [e$$90], JAM.policy.p3);
      }
      var v27548 = v28579;
      if (v27548) {
        v27548 = o$$8;
      }
      var v25922 = v27548;
      if (v25922) {
        v25922 = e$$90[h$$41];
      }
      var v23516 = v25922;
      if (v23516) {
        var v27549 = h$$41 !== "focus";
        if (v27549) {
          v27549 = h$$41 !== "blur";
        }
        var v25923 = v27549;
        if (!v25923) {
          v25923 = c$$79.target.offsetWidth !== 0;
        }
        v23516 = v25923;
      }
      var v18272 = v23516;
      if (v18272) {
        v18272 = !JAM.call(f$$4.isWindow, f$$4, [e$$90], JAM.policy.p3);
      }
      var v12776 = v18272;
      if (v12776) {
        n$$66 = e$$90[o$$8];
        if (n$$66) {
          introspect(JAM.policy.p2) {
            e$$90[o$$8] = null;
          }
        }
        f$$4.event.triggered = h$$41;
        JAM.call(e$$90[h$$41], e$$90, [], JAM.policy.p3);
        f$$4.event.triggered = b$$9;
        if (n$$66) {
          introspect(JAM.policy.p2) {
            e$$90[o$$8] = n$$66;
          }
        }
      }
      return c$$79.result;
    }
    return;
  }
  function v776(a$$145, b$$95, c$$78, d$$72, e$$89) {
    var v5810 = JAM.call(f$$4.hasData, f$$4, [a$$145], JAM.policy.p3);
    if (v5810) {
      v5810 = JAM.call(f$$4._data, f$$4, [a$$145], JAM.policy.p3);
    }
    var g$$39 = v5810;
    var h$$40;
    var i$$113;
    var j$$38;
    var k$$19;
    var l$$34;
    var m$$16;
    var n$$65;
    var o$$7;
    var p$$28;
    var q$$5;
    var r$$7;
    var s$$19;
    var v12777 = !!g$$39;
    if (v12777) {
      v12777 = !!(o$$7 = g$$39.events);
    }
    if (v12777) {
      var v5811 = JAM.call(f$$4.trim, f$$4, [I(b$$95 || "")], JAM.policy.p3);
      b$$95 = JAM.call(v5811.split, v5811, [" "], JAM.policy.p3);
      h$$40 = 0;
      var v5818 = h$$40 < b$$95.length;
      for (;v5818;) {
        var v18276 = JAM.call(A.exec, A, [b$$95[h$$40]], JAM.policy.p3);
        if (!v18276) {
          v18276 = [];
        }
        i$$113 = v18276;
        j$$38 = k$$19 = i$$113[1];
        l$$34 = i$$113[2];
        if (!j$$38) {
          for (j$$38 in o$$7) {
            var v5812 = f$$4.event;
            JAM.call(v5812.remove, v5812, [a$$145, j$$38 + b$$95[h$$40], c$$78, d$$72, !0], JAM.policy.p3);
          }
          h$$40++;
          v5818 = h$$40 < b$$95.length;
          continue;
        }
        var v25925 = f$$4.event.special[j$$38];
        if (!v25925) {
          v25925 = {};
        }
        p$$28 = v25925;
        var v27554;
        if (d$$72) {
          v27554 = p$$28.delegateType;
        } else {
          v27554 = p$$28.bindType;
        }
        var v25926 = v27554;
        if (!v25926) {
          v25926 = j$$38;
        }
        j$$38 = v25926;
        var v23521 = o$$7[j$$38];
        if (!v23521) {
          v23521 = [];
        }
        r$$7 = v23521;
        m$$16 = r$$7.length;
        var v12782;
        if (l$$34) {
          var v28583 = JAM.call(l$$34.split, l$$34, ["."], JAM.policy.p3);
          var v27556 = JAM.call(v28583.sort, v28583, [], JAM.policy.p3);
          v12782 = new RegExp("(^|\\.)" + JAM.call(v27556.join, v27556, ["\\.(?:.*\\.)?"], JAM.policy.p3) + "(\\.|$)");
        } else {
          v12782 = null;
        }
        l$$34 = v12782;
        n$$65 = 0;
        var v5816 = n$$65 < r$$7.length;
        for (;v5816;) {
          s$$19 = r$$7[n$$65];
          var v27557 = e$$89;
          if (!v27557) {
            v27557 = k$$19 === s$$19.origType;
          }
          var v25929 = v27557;
          if (v25929) {
            var v27558 = !c$$78;
            if (!v27558) {
              v27558 = c$$78.guid === s$$19.guid;
            }
            v25929 = v27558;
          }
          var v23523 = v25929;
          if (v23523) {
            var v25930 = !l$$34;
            if (!v25930) {
              v25930 = JAM.call(l$$34.test, l$$34, [s$$19.namespace], JAM.policy.p3);
            }
            v23523 = v25930;
          }
          var v18278 = v23523;
          if (v18278) {
            var v25931 = !d$$72;
            if (!v25931) {
              v25931 = d$$72 === s$$19.selector;
            }
            var v23524 = v25931;
            if (!v23524) {
              var v25932 = d$$72 === "**";
              if (v25932) {
                v25932 = s$$19.selector;
              }
              v23524 = v25932;
            }
            v18278 = v23524;
          }
          var v12784 = v18278;
          if (v12784) {
            var v25934 = n$$65;
            n$$65 = n$$65 - 1;
            JAM.call(r$$7.splice, r$$7, [v25934, 1], JAM.policy.p3);
            var v25935 = s$$19.selector;
            if (v25935) {
              r$$7.delegateCount--;
            }
            var v23525 = p$$28.remove;
            if (v23525) {
              var v25936 = p$$28.remove;
              JAM.call(v25936.call, v25936, [a$$145, s$$19], JAM.policy.p3);
            }
          }
          n$$65++;
          v5816 = n$$65 < r$$7.length;
        }
        var v12786 = r$$7.length === 0;
        if (v12786) {
          v12786 = m$$16 !== r$$7.length;
        }
        var v5817 = v12786;
        if (v5817) {
          var v23526 = !p$$28.teardown;
          if (!v23526) {
            var v27563 = p$$28.teardown;
            v23526 = JAM.call(v27563.call, v27563, [a$$145, l$$34], JAM.policy.p3) === !1;
          }
          var v18281 = v23526;
          if (v18281) {
            JAM.call(f$$4.removeEvent, f$$4, [a$$145, j$$38, g$$39.handle], JAM.policy.p3);
          }
          delete o$$7[j$$38];
        }
        h$$40++;
        v5818 = h$$40 < b$$95.length;
      }
      var v5819 = JAM.call(f$$4.isEmptyObject, f$$4, [o$$7], JAM.policy.p3);
      if (v5819) {
        q$$5 = g$$39.handle;
        if (q$$5) {
          q$$5.elem = null;
        }
        JAM.call(f$$4.removeData, f$$4, [a$$145, ["events", "handle"], !0], JAM.policy.p3);
      }
    }
    return;
  }
  function v775(a$$143, c$$77, d$$71, e$$88, g$$38) {
    function v774(a$$144) {
      var v5821;
      var v18284 = typeof f$$4 != "undefined";
      if (v18284) {
        var v23529 = !a$$144;
        if (!v23529) {
          v23529 = f$$4.event.triggered !== a$$144.type;
        }
        v18284 = v23529;
      }
      if (v18284) {
        var v12788 = f$$4.event.dispatch;
        v5821 = JAM.call(v12788.apply, v12788, [i$$112.elem, arguments], JAM.policy.p3);
      } else {
        v5821 = b$$9;
      }
      return v5821;
    }
    var h$$39;
    var i$$112;
    var j$$37;
    var k$$18;
    var l$$33;
    var m$$15;
    var n$$64;
    var o$$6;
    var p$$27;
    var q$$4;
    var r$$6;
    var s$$18;
    var v27565 = a$$143.nodeType === 3;
    if (!v27565) {
      v27565 = a$$143.nodeType === 8;
    }
    var v25944 = v27565;
    if (!v25944) {
      v25944 = !c$$77;
    }
    var v23530 = v25944;
    if (!v23530) {
      v23530 = !d$$71;
    }
    var v18286 = v23530;
    if (!v18286) {
      v18286 = !(h$$39 = JAM.call(f$$4._data, f$$4, [a$$143], JAM.policy.p3));
    }
    if (!v18286) {
      var v28592 = d$$71.handler;
      if (v28592) {
        p$$27 = d$$71;
        d$$71 = p$$27.handler;
        g$$38 = p$$27.selector;
      }
      var v28593 = d$$71.guid;
      if (!v28593) {
        d$$71.guid = f$$4.guid;
        f$$4.guid = f$$4.guid + 1;
      }
      j$$37 = h$$39.events;
      if (!j$$37) {
        h$$39.events = j$$37 = {};
      }
      i$$112 = h$$39.handle;
      if (!i$$112) {
        h$$39.handle = i$$112 = v774;
        i$$112.elem = a$$143;
      }
      var v12792 = JAM.call(f$$4.trim, f$$4, [I(c$$77)], JAM.policy.p3);
      c$$77 = JAM.call(v12792.split, v12792, [" "], JAM.policy.p3);
      k$$18 = 0;
      var v5825 = k$$18 < c$$77.length;
      for (;v5825;) {
        var v29252 = JAM.call(A.exec, A, [c$$77[k$$18]], JAM.policy.p3);
        if (!v29252) {
          v29252 = [];
        }
        l$$33 = v29252;
        m$$15 = l$$33[1];
        var v29690 = l$$33[2];
        if (!v29690) {
          v29690 = "";
        }
        var v29253 = v29690;
        var v28594 = JAM.call(v29253.split, v29253, ["."], JAM.policy.p3);
        n$$64 = JAM.call(v28594.sort, v28594, [], JAM.policy.p3);
        var v27568 = f$$4.event.special[m$$15];
        if (!v27568) {
          v27568 = {};
        }
        s$$18 = v27568;
        var v27569;
        if (g$$38) {
          v27569 = s$$18.delegateType;
        } else {
          v27569 = s$$18.bindType;
        }
        var v25946 = v27569;
        if (!v25946) {
          v25946 = m$$15;
        }
        m$$15 = v25946;
        var v23534 = f$$4.event.special[m$$15];
        if (!v23534) {
          v23534 = {};
        }
        s$$18 = v23534;
        var v23535 = l$$33[1];
        var v23536 = d$$71.guid;
        var v25949 = g$$38;
        if (v25949) {
          v25949 = G(g$$38);
        }
        o$$6 = JAM.call(f$$4.extend, f$$4, [{type:m$$15, origType:v23535, data:e$$88, handler:d$$71, guid:v23536, selector:g$$38, quick:v25949, namespace:JAM.call(n$$64.join, n$$64, ["."], JAM.policy.p3)}, p$$27], JAM.policy.p3);
        r$$6 = j$$37[m$$15];
        if (!r$$6) {
          introspect(JAM.policy.p2) {
            r$$6 = j$$37[m$$15] = [];
          }
          r$$6.delegateCount = 0;
          var v12794 = !s$$18.setup;
          if (!v12794) {
            var v23539 = s$$18.setup;
            v12794 = JAM.call(v23539.call, v23539, [a$$143, e$$88, n$$64, i$$112], JAM.policy.p3) === !1;
          }
          if (v12794) {
            var v5822;
            if (a$$143.addEventListener) {
              v5822 = JAM.call(a$$143.addEventListener, a$$143, [m$$15, i$$112, !1], JAM.policy.p3);
            } else {
              var v12796 = a$$143.attachEvent;
              if (v12796) {
                v12796 = JAM.call(a$$143.attachEvent, a$$143, ["on" + m$$15, i$$112], JAM.policy.p3);
              }
              v5822 = v12796;
            }
            v5822;
          }
        }
        var v18294 = s$$18.add;
        if (v18294) {
          var v25950 = s$$18.add;
          JAM.call(v25950.call, v25950, [a$$143, o$$6], JAM.policy.p3);
          var v25951 = o$$6.handler.guid;
          if (!v25951) {
            o$$6.handler.guid = d$$71.guid;
          }
        }
        var v18295;
        if (g$$38) {
          var v23540 = r$$6.delegateCount;
          r$$6.delegateCount = r$$6.delegateCount + 1;
          v18295 = JAM.call(r$$6.splice, r$$6, [v23540, 0, o$$6], JAM.policy.p3);
        } else {
          v18295 = JAM.call(r$$6.push, r$$6, [o$$6], JAM.policy.p3);
        }
        v18295;
        var v12798 = f$$4.event.global;
        introspect(JAM.policy.p2) {
          v12798[m$$15] = !0;
        }
        k$$18++;
        v5825 = k$$18 < c$$77.length;
      }
      a$$143 = null;
    }
    return;
  }
  function v773() {
    function v772(a$$139, b$$92) {
      if (JAM.call(f$$4.isArray, f$$4, [b$$92], JAM.policy.p3)) {
        var v18297 = JAM.call(f$$4, null, [a$$139], JAM.policy.p3);
        return a$$139.checked = JAM.call(f$$4.inArray, f$$4, [JAM.call(v18297.val, v18297, [], JAM.policy.p3), b$$92], JAM.policy.p3) >= 0;
      }
      return;
    }
    var v5829 = f$$4.valHooks;
    var v31132 = JAM.call(f$$4.extend, f$$4, [f$$4.valHooks[this], {set:v772}], JAM.policy.p3);
    introspect(JAM.policy.p2) {
      v5829[this] = v31132;
    }
    return;
  }
  function v771() {
    function v770(a$$138) {
      var v5830;
      if (JAM.call(a$$138.getAttribute, a$$138, ["value"], JAM.policy.p3) === null) {
        v5830 = "on";
      } else {
        v5830 = a$$138.value;
      }
      return v5830;
    }
    var v5831 = f$$4.valHooks;
    introspect(JAM.policy.p2) {
      v5831[this] = {get:v770};
    }
    return;
  }
  function v769(a$$137) {
    var b$$91 = a$$137.parentNode;
    return null;
  }
  function v768(a$$136, b$$90) {
    return a$$136.style.cssText = "" + b$$90;
  }
  function v767(a$$135) {
    var v12804 = a$$135.style.cssText;
    var v5833 = JAM.call(v12804.toLowerCase, v12804, [], JAM.policy.p3);
    if (!v5833) {
      v5833 = b$$9;
    }
    return v5833;
  }
  function v766(a$$133, c$$75) {
    function v765(a$$134) {
      var d$$70 = JAM.call(a$$134.getAttribute, a$$134, [c$$75, 2], JAM.policy.p3);
      var v5834;
      if (d$$70 === null) {
        v5834 = b$$9;
      } else {
        v5834 = d$$70;
      }
      return v5834;
    }
    var v5835 = f$$4.attrHooks;
    var v5836 = c$$75;
    var v31133 = JAM.call(f$$4.extend, f$$4, [f$$4.attrHooks[c$$75], {get:v765}], JAM.policy.p3);
    introspect(JAM.policy.p2) {
      v5835[v5836] = v31133;
    }
    return;
  }
  function v764(a$$132, b$$89, c$$74) {
    var v12809 = b$$89 === "";
    if (v12809) {
      b$$89 = "false";
    }
    JAM.call(w$$11.set, w$$11, [a$$132, b$$89, c$$74], JAM.policy.p3);
    return;
  }
  function v763(a$$130, b$$88) {
    function v762(a$$131, c$$73) {
      if (c$$73 === "") {
        JAM.call(a$$131.setAttribute, a$$131, [b$$88, "auto"], JAM.policy.p3);
        return c$$73;
      }
      return;
    }
    var v5838 = f$$4.attrHooks;
    var v5839 = b$$88;
    var v31134 = JAM.call(f$$4.extend, f$$4, [f$$4.attrHooks[b$$88], {set:v762}], JAM.policy.p3);
    introspect(JAM.policy.p2) {
      v5838[v5839] = v31134;
    }
    return;
  }
  function v761(a$$129, b$$87, d$$69) {
    var e$$87 = JAM.call(a$$129.getAttributeNode, a$$129, [d$$69], JAM.policy.p3);
    if (!e$$87) {
      e$$87 = JAM.call(c$$5.createAttribute, c$$5, [d$$69], JAM.policy.p3);
      JAM.call(a$$129.setAttributeNode, a$$129, [e$$87], JAM.policy.p3);
    }
    return e$$87.nodeValue = b$$87 + "";
  }
  function v760(a$$128, c$$72) {
    var d$$68;
    d$$68 = JAM.call(a$$128.getAttributeNode, a$$128, [c$$72], JAM.policy.p3);
    var v5840;
    var v18303 = d$$68;
    if (v18303) {
      var v23541;
      if (y$$49[c$$72]) {
        v23541 = d$$68.nodeValue !== "";
      } else {
        v23541 = d$$68.specified;
      }
      v18303 = v23541;
    }
    if (v18303) {
      v5840 = d$$68.nodeValue;
    } else {
      v5840 = b$$9;
    }
    return v5840;
  }
  function v759(a$$127, b$$86, c$$71) {
    var d$$67;
    var v5841;
    if (b$$86 === !1) {
      v5841 = JAM.call(f$$4.removeAttr, f$$4, [a$$127, c$$71], JAM.policy.p3);
    } else {
      var v23542 = f$$4.propFix[c$$71];
      if (!v23542) {
        v23542 = c$$71;
      }
      d$$67 = v23542;
      var v23543 = d$$67 in a$$127;
      if (v23543) {
        introspect(JAM.policy.p2) {
          a$$127[d$$67] = !0;
        }
      }
      v5841 = JAM.call(a$$127.setAttribute, a$$127, [c$$71, JAM.call(c$$71.toLowerCase, c$$71, [], JAM.policy.p3)], JAM.policy.p3);
    }
    v5841;
    return c$$71;
  }
  function v758(a$$126, c$$70) {
    var d$$66;
    var e$$86 = JAM.call(f$$4.prop, f$$4, [a$$126, c$$70], JAM.policy.p3);
    var v5842;
    var v18306 = e$$86 === !0;
    if (!v18306) {
      var v25956 = typeof e$$86 != "boolean";
      if (v25956) {
        v25956 = d$$66 = JAM.call(a$$126.getAttributeNode, a$$126, [c$$70], JAM.policy.p3);
      }
      var v23545 = v25956;
      if (v23545) {
        v23545 = d$$66.nodeValue !== !1;
      }
      v18306 = v23545;
    }
    if (v18306) {
      v5842 = JAM.call(c$$70.toLowerCase, c$$70, [], JAM.policy.p3);
    } else {
      v5842 = b$$9;
    }
    return v5842;
  }
  function v757(a$$125) {
    var c$$69 = JAM.call(a$$125.getAttributeNode, a$$125, ["tabindex"], JAM.policy.p3);
    var v5843;
    var v18307 = c$$69;
    if (v18307) {
      v18307 = c$$69.specified;
    }
    if (v18307) {
      v5843 = parseInt(c$$69.value, 10);
    } else {
      var v12817;
      var v23547 = JAM.call(s$$15.test, s$$15, [a$$125.nodeName], JAM.policy.p3);
      if (!v23547) {
        var v25960 = JAM.call(t$$2.test, t$$2, [a$$125.nodeName], JAM.policy.p3);
        if (v25960) {
          v25960 = a$$125.href;
        }
        v23547 = v25960;
      }
      if (v23547) {
        v12817 = 0;
      } else {
        v12817 = b$$9;
      }
      v5843 = v12817;
    }
    return v5843;
  }
  function v756(a$$124, c$$68, d$$65) {
    var e$$85;
    var g$$37;
    var h$$38;
    var i$$111 = a$$124.nodeType;
    var v23548 = !!a$$124;
    if (v23548) {
      v23548 = i$$111 !== 3;
    }
    var v18309 = v23548;
    if (v18309) {
      v18309 = i$$111 !== 8;
    }
    var v12819 = v18309;
    if (v12819) {
      v12819 = i$$111 !== 2;
    }
    if (v12819) {
      var v12820 = i$$111 !== 1;
      if (!v12820) {
        v12820 = !JAM.call(f$$4.isXMLDoc, f$$4, [a$$124], JAM.policy.p3);
      }
      h$$38 = v12820;
      if (h$$38) {
        var v23549 = f$$4.propFix[c$$68];
        if (!v23549) {
          v23549 = c$$68;
        }
        c$$68 = v23549;
        g$$37 = f$$4.propHooks[c$$68];
      }
      var v5844;
      if (d$$65 !== b$$9) {
        var v12821;
        var v25965 = g$$37;
        if (v25965) {
          v25965 = "set" in g$$37;
        }
        var v23551 = v25965;
        if (v23551) {
          v23551 = (e$$85 = JAM.call(g$$37.set, g$$37, [a$$124, d$$65, c$$68], JAM.policy.p3)) !== b$$9;
        }
        if (v23551) {
          v12821 = e$$85;
        } else {
          introspect(JAM.policy.p2) {
            v12821 = a$$124[c$$68] = d$$65;
          }
        }
        v5844 = v12821;
      } else {
        var v12822;
        var v25967 = g$$37;
        if (v25967) {
          v25967 = "get" in g$$37;
        }
        var v23552 = v25967;
        if (v23552) {
          v23552 = (e$$85 = JAM.call(g$$37.get, g$$37, [a$$124, c$$68], JAM.policy.p3)) !== null;
        }
        if (v23552) {
          v12822 = e$$85;
        } else {
          v12822 = a$$124[c$$68];
        }
        v5844 = v12822;
      }
      return v5844;
    }
    return;
  }
  function v755(a$$123, b$$85, c$$67) {
    var v12824 = w$$11;
    if (v12824) {
      v12824 = JAM.call(f$$4.nodeName, f$$4, [a$$123, "button"], JAM.policy.p3);
    }
    if (v12824) {
      return JAM.call(w$$11.set, w$$11, [a$$123, b$$85, c$$67], JAM.policy.p3);
    }
    a$$123.value = b$$85;
    return;
  }
  function v754(a$$122, b$$84) {
    var v12825 = w$$11;
    if (v12825) {
      v12825 = JAM.call(f$$4.nodeName, f$$4, [a$$122, "button"], JAM.policy.p3);
    }
    if (v12825) {
      return JAM.call(w$$11.get, w$$11, [a$$122, b$$84], JAM.policy.p3);
    }
    var v5848;
    if (b$$84 in a$$122) {
      v5848 = a$$122.value;
    } else {
      v5848 = null;
    }
    return v5848;
  }
  function v753(a$$121, b$$83) {
    var v12827 = JAM.call(r$$2.test, r$$2, [a$$121.nodeName], JAM.policy.p3);
    if (v12827) {
      v12827 = a$$121.parentNode;
    }
    if (v12827) {
      JAM.call(f$$4.error, f$$4, ["type property can't be changed"], JAM.policy.p3);
    } else {
      var v18315 = !f$$4.support.radioValue;
      if (v18315) {
        v18315 = b$$83 === "radio";
      }
      var v12828 = v18315;
      if (v12828) {
        v12828 = JAM.call(f$$4.nodeName, f$$4, [a$$121, "input"], JAM.policy.p3);
      }
      if (v12828) {
        var c$$66 = a$$121.value;
        JAM.call(a$$121.setAttribute, a$$121, ["type", b$$83], JAM.policy.p3);
        if (c$$66) {
          a$$121.value = c$$66;
        }
        return b$$83;
      }
    }
    return;
  }
  function v752(a$$120, b$$82) {
    var c$$65;
    var d$$64;
    var e$$84;
    var g$$36;
    var h$$37;
    var i$$110 = 0;
    var v12829 = b$$82;
    if (v12829) {
      v12829 = a$$120.nodeType === 1;
    }
    if (v12829) {
      var v12830 = JAM.call(b$$82.toLowerCase, b$$82, [], JAM.policy.p3);
      d$$64 = JAM.call(v12830.split, v12830, [p$$22], JAM.policy.p3);
      g$$36 = d$$64.length;
      var v5851 = i$$110 < g$$36;
      for (;v5851;) {
        e$$84 = d$$64[i$$110];
        if (e$$84) {
          var v28597 = f$$4.propFix[e$$84];
          if (!v28597) {
            v28597 = e$$84;
          }
          c$$65 = v28597;
          h$$37 = JAM.call(u$$1.test, u$$1, [e$$84], JAM.policy.p3);
          if (!h$$37) {
            JAM.call(f$$4.attr, f$$4, [a$$120, e$$84, ""], JAM.policy.p3);
          }
          var v27578;
          if (v$$4) {
            v27578 = e$$84;
          } else {
            v27578 = c$$65;
          }
          JAM.call(a$$120.removeAttribute, a$$120, [v27578], JAM.policy.p3);
          var v25971 = h$$37;
          if (v25971) {
            v25971 = c$$65 in a$$120;
          }
          var v23554 = v25971;
          if (v23554) {
            introspect(JAM.policy.p2) {
              a$$120[c$$65] = !1;
            }
          }
        }
        i$$110++;
        v5851 = i$$110 < g$$36;
      }
    }
    return;
  }
  function v751(a$$119, c$$64, d$$63, e$$83) {
    var g$$35;
    var h$$36;
    var i$$109;
    var j$$36 = a$$119.nodeType;
    var v23555 = !!a$$119;
    if (v23555) {
      v23555 = j$$36 !== 3;
    }
    var v18317 = v23555;
    if (v18317) {
      v18317 = j$$36 !== 8;
    }
    var v12831 = v18317;
    if (v12831) {
      v12831 = j$$36 !== 2;
    }
    if (v12831) {
      var v12832 = e$$83;
      if (v12832) {
        v12832 = c$$64 in f$$4.attrFn;
      }
      if (v12832) {
        var v5853 = JAM.call(f$$4, null, [a$$119], JAM.policy.p3);
        return JAM.call(v5853[c$$64], v5853, [d$$63], JAM.policy.p3);
      }
      if (typeof a$$119.getAttribute == "undefined") {
        return JAM.call(f$$4.prop, f$$4, [a$$119, c$$64, d$$63], JAM.policy.p3);
      }
      var v12834 = j$$36 !== 1;
      if (!v12834) {
        v12834 = !JAM.call(f$$4.isXMLDoc, f$$4, [a$$119], JAM.policy.p3);
      }
      i$$109 = v12834;
      if (i$$109) {
        c$$64 = JAM.call(c$$64.toLowerCase, c$$64, [], JAM.policy.p3);
        var v23556 = f$$4.attrHooks[c$$64];
        if (!v23556) {
          var v25974;
          if (JAM.call(u$$1.test, u$$1, [c$$64], JAM.policy.p3)) {
            v25974 = x$$67;
          } else {
            v25974 = w$$11;
          }
          v23556 = v25974;
        }
        h$$36 = v23556;
      }
      if (d$$63 !== b$$9) {
        if (d$$63 === null) {
          JAM.call(f$$4.removeAttr, f$$4, [a$$119, c$$64], JAM.policy.p3);
          return;
        }
        var v23557 = h$$36;
        if (v23557) {
          v23557 = "set" in h$$36;
        }
        var v18322 = v23557;
        if (v18322) {
          v18322 = i$$109;
        }
        var v12835 = v18322;
        if (v12835) {
          v12835 = (g$$35 = JAM.call(h$$36.set, h$$36, [a$$119, d$$63, c$$64], JAM.policy.p3)) !== b$$9;
        }
        if (v12835) {
          return g$$35;
        }
        JAM.call(a$$119.setAttribute, a$$119, [c$$64, "" + d$$63], JAM.policy.p3);
        return d$$63;
      }
      var v23558 = h$$36;
      if (v23558) {
        v23558 = "get" in h$$36;
      }
      var v18324 = v23558;
      if (v18324) {
        v18324 = i$$109;
      }
      var v12836 = v18324;
      if (v12836) {
        v12836 = (g$$35 = JAM.call(h$$36.get, h$$36, [a$$119, c$$64], JAM.policy.p3)) !== null;
      }
      if (v12836) {
        return g$$35;
      }
      g$$35 = JAM.call(a$$119.getAttribute, a$$119, [c$$64], JAM.policy.p3);
      var v5861;
      if (g$$35 === null) {
        v5861 = b$$9;
      } else {
        v5861 = g$$35;
      }
      return v5861;
    }
    return;
  }
  function v750(a$$118, b$$81) {
    function v749() {
      var v18326 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      this.selected = JAM.call(f$$4.inArray, f$$4, [JAM.call(v18326.val, v18326, [], JAM.policy.p3), c$$63], JAM.policy.p3) >= 0;
      return;
    }
    var c$$63 = JAM.call(f$$4.makeArray, f$$4, [b$$81], JAM.policy.p3);
    var v18327 = JAM.call(f$$4, null, [a$$118], JAM.policy.p3);
    var v12839 = JAM.call(v18327.find, v18327, ["option"], JAM.policy.p3);
    JAM.call(v12839.each, v12839, [v749], JAM.policy.p3);
    var v12840 = c$$63.length;
    if (!v12840) {
      a$$118.selectedIndex = -1;
    }
    return c$$63;
  }
  function v748(a$$117) {
    var b$$80;
    var c$$62;
    var d$$62;
    var e$$82;
    var g$$34 = a$$117.selectedIndex;
    var h$$35 = [];
    var i$$108 = a$$117.options;
    var j$$35 = a$$117.type === "select-one";
    if (g$$34 < 0) {
      return null;
    }
    var v12841;
    if (j$$35) {
      v12841 = g$$34;
    } else {
      v12841 = 0;
    }
    c$$62 = v12841;
    var v12842;
    if (j$$35) {
      v12842 = g$$34 + 1;
    } else {
      v12842 = i$$108.length;
    }
    d$$62 = v12842;
    var v5868 = c$$62 < d$$62;
    for (;v5868;) {
      e$$82 = i$$108[c$$62];
      var v18329 = e$$82.selected;
      if (v18329) {
        var v23559;
        if (f$$4.support.optDisabled) {
          v23559 = !e$$82.disabled;
        } else {
          v23559 = JAM.call(e$$82.getAttribute, e$$82, ["disabled"], JAM.policy.p3) === null;
        }
        v18329 = v23559;
      }
      var v12843 = v18329;
      if (v12843) {
        var v18330 = !e$$82.parentNode.disabled;
        if (!v18330) {
          v18330 = !JAM.call(f$$4.nodeName, f$$4, [e$$82.parentNode, "optgroup"], JAM.policy.p3);
        }
        v12843 = v18330;
      }
      if (v12843) {
        var v5866 = JAM.call(f$$4, null, [e$$82], JAM.policy.p3);
        b$$80 = JAM.call(v5866.val, v5866, [], JAM.policy.p3);
        if (j$$35) {
          return b$$80;
        }
        JAM.call(h$$35.push, h$$35, [b$$80], JAM.policy.p3);
      }
      c$$62++;
      v5868 = c$$62 < d$$62;
    }
    var v18331 = j$$35;
    if (v18331) {
      v18331 = !h$$35.length;
    }
    var v12844 = v18331;
    if (v12844) {
      v12844 = i$$108.length;
    }
    if (v12844) {
      var v5869 = JAM.call(f$$4, null, [i$$108[g$$34]], JAM.policy.p3);
      return JAM.call(v5869.val, v5869, [], JAM.policy.p3);
    }
    return h$$35;
  }
  function v747(a$$116) {
    var b$$79 = a$$116.attributes.value;
    var v5872;
    var v18332 = !b$$79;
    if (!v18332) {
      v18332 = b$$79.specified;
    }
    if (v18332) {
      v5872 = a$$116.value;
    } else {
      v5872 = a$$116.text;
    }
    return v5872;
  }
  function v746(a$$114) {
    function v745(d$$61) {
      function v744(a$$115) {
        var v5873;
        if (a$$115 == null) {
          v5873 = "";
        } else {
          v5873 = a$$115 + "";
        }
        return v5873;
      }
      var g$$33 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      var h$$34;
      if (this.nodeType === 1) {
        var v18333;
        if (e$$81) {
          v18333 = h$$34 = JAM.call(a$$114.call, a$$114, [this, d$$61, JAM.call(g$$33.val, g$$33, [], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v18333 = h$$34 = a$$114;
        }
        v18333;
        var v18334;
        if (h$$34 == null) {
          v18334 = h$$34 = "";
        } else {
          var v23566;
          if (typeof h$$34 == "number") {
            v23566 = h$$34 = h$$34 + "";
          } else {
            var v25981 = JAM.call(f$$4.isArray, f$$4, [h$$34], JAM.policy.p3);
            if (v25981) {
              v25981 = h$$34 = JAM.call(f$$4.map, f$$4, [h$$34, v744], JAM.policy.p3);
            }
            v23566 = v25981;
          }
          v18334 = v23566;
        }
        v18334;
        var v12849 = f$$4.valHooks[this.type];
        if (!v12849) {
          var v18337 = f$$4.valHooks;
          var v23568 = this.nodeName;
          v12849 = v18337[JAM.call(v23568.toLowerCase, v23568, [], JAM.policy.p3)];
        }
        c$$61 = v12849;
        var v18340 = !c$$61;
        if (!v18340) {
          v18340 = !("set" in c$$61);
        }
        var v12850 = v18340;
        if (!v12850) {
          v12850 = JAM.call(c$$61.set, c$$61, [this, h$$34, "value"], JAM.policy.p3) === b$$9;
        }
        if (v12850) {
          this.value = h$$34;
        }
      }
      return;
    }
    var c$$61;
    var d$$60;
    var e$$81;
    var g$$32 = this[0];
    if (!!arguments.length) {
      e$$81 = JAM.call(f$$4.isFunction, f$$4, [a$$114], JAM.policy.p3);
      return JAM.call(this.each, this, [v745], JAM.policy.p3);
    }
    if (g$$32) {
      var v5877 = f$$4.valHooks[g$$32.type];
      if (!v5877) {
        var v12854 = f$$4.valHooks;
        var v18344 = g$$32.nodeName;
        v5877 = v12854[JAM.call(v18344.toLowerCase, v18344, [], JAM.policy.p3)];
      }
      c$$61 = v5877;
      var v18345 = c$$61;
      if (v18345) {
        v18345 = "get" in c$$61;
      }
      var v12857 = v18345;
      if (v12857) {
        v12857 = (d$$60 = JAM.call(c$$61.get, c$$61, [g$$32, "value"], JAM.policy.p3)) !== b$$9;
      }
      if (v12857) {
        return d$$60;
      }
      d$$60 = g$$32.value;
      var v5879;
      if (typeof d$$60 == "string") {
        v5879 = JAM.call(d$$60.replace, d$$60, [q, ""], JAM.policy.p3);
      } else {
        var v12858;
        if (d$$60 == null) {
          v12858 = "";
        } else {
          v12858 = d$$60;
        }
        v5879 = v12858;
      }
      return v5879;
    }
    return;
  }
  function v743(a$$113) {
    var b$$78 = " " + a$$113 + " ";
    var c$$60 = 0;
    var d$$59 = this.length;
    var v5882 = c$$60 < d$$59;
    for (;v5882;) {
      var v12860 = this[c$$60].nodeType === 1;
      if (v12860) {
        var v25983 = " " + this[c$$60].className + " ";
        var v23572 = JAM.call(v25983.replace, v25983, [o, " "], JAM.policy.p3);
        v12860 = JAM.call(v23572.indexOf, v23572, [b$$78], JAM.policy.p3) > -1;
      }
      if (v12860) {
        return !0;
      }
      c$$60++;
      v5882 = c$$60 < d$$59;
    }
    return !1;
  }
  function v742(a$$112, b$$77) {
    function v741() {
      if (c$$58 === "string") {
        var e$$80;
        var g$$31 = 0;
        var h$$33 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        var i$$107 = b$$77;
        var j$$34 = JAM.call(a$$112.split, a$$112, [p$$22], JAM.policy.p3);
        var v12861 = g$$31;
        g$$31 = g$$31 + 1;
        var v5883 = e$$80 = j$$34[v12861];
        for (;v5883;) {
          var v12862;
          if (d$$58) {
            v12862 = i$$107;
          } else {
            v12862 = !JAM.call(h$$33.hasClass, h$$33, [e$$80], JAM.policy.p3);
          }
          i$$107 = v12862;
          var v18352;
          if (i$$107) {
            v18352 = "addClass";
          } else {
            v18352 = "removeClass";
          }
          JAM.call(h$$33[v18352], h$$33, [e$$80], JAM.policy.p3);
          var v12864 = g$$31;
          g$$31 = g$$31 + 1;
          v5883 = e$$80 = j$$34[v12864];
        }
      } else {
        var v12865 = c$$58 === "undefined";
        if (!v12865) {
          v12865 = c$$58 === "boolean";
        }
        if (v12865) {
          var v12866 = this.className;
          if (v12866) {
            JAM.call(f$$4._data, f$$4, [this, "__className__", this.className], JAM.policy.p3);
          }
          var v12867;
          var v23573 = this.className;
          if (!v23573) {
            v23573 = a$$112 === !1;
          }
          if (v23573) {
            v12867 = "";
          } else {
            var v18355 = JAM.call(f$$4._data, f$$4, [this, "__className__"], JAM.policy.p3);
            if (!v18355) {
              v18355 = "";
            }
            v12867 = v18355;
          }
          this.className = v12867;
        }
      }
      return;
    }
    function v740(c$$59) {
      var v5886 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5886.toggleClass, v5886, [JAM.call(a$$112.call, a$$112, [this, c$$59, this.className, b$$77], JAM.policy.p3), b$$77], JAM.policy.p3);
      return;
    }
    var c$$58 = typeof a$$112;
    var d$$58 = typeof b$$77 == "boolean";
    if (JAM.call(f$$4.isFunction, f$$4, [a$$112], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v740], JAM.policy.p3);
    }
    return JAM.call(this.each, this, [v741], JAM.policy.p3);
  }
  function v739(a$$111) {
    function v738(b$$76) {
      var v5890 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5890.removeClass, v5890, [JAM.call(a$$111.call, a$$111, [this, b$$76, this.className], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var c$$57;
    var d$$57;
    var e$$79;
    var g$$30;
    var h$$32;
    var i$$106;
    var j$$33;
    if (JAM.call(f$$4.isFunction, f$$4, [a$$111], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v738], JAM.policy.p3);
    }
    var v18357 = a$$111;
    if (v18357) {
      v18357 = typeof a$$111 == "string";
    }
    var v12870 = v18357;
    if (!v12870) {
      v12870 = a$$111 === b$$9;
    }
    if (v12870) {
      var v5893 = a$$111 || "";
      c$$57 = JAM.call(v5893.split, v5893, [p$$22], JAM.policy.p3);
      d$$57 = 0;
      e$$79 = this.length;
      var v5899 = d$$57 < e$$79;
      for (;v5899;) {
        g$$30 = this[d$$57];
        var v12871 = g$$30.nodeType === 1;
        if (v12871) {
          v12871 = g$$30.className;
        }
        if (v12871) {
          if (a$$111) {
            var v5894 = " " + g$$30.className + " ";
            h$$32 = JAM.call(v5894.replace, v5894, [o, " "], JAM.policy.p3);
            i$$106 = 0;
            j$$33 = c$$57.length;
            var v5896 = i$$106 < j$$33;
            for (;v5896;) {
              h$$32 = JAM.call(h$$32.replace, h$$32, [" " + c$$57[i$$106] + " ", " "], JAM.policy.p3);
              i$$106++;
              v5896 = i$$106 < j$$33;
            }
            var v5897 = g$$30;
            var v31135 = JAM.call(f$$4.trim, f$$4, [h$$32], JAM.policy.p3);
            v5897.className = v31135;
          } else {
            g$$30.className = "";
          }
        }
        d$$57++;
        v5899 = d$$57 < e$$79;
      }
    }
    return this;
  }
  function v737(a$$110) {
    function v736(b$$75) {
      var v5901 = JAM.call(f$$4, null, [this], JAM.policy.p3);
      JAM.call(v5901.addClass, v5901, [JAM.call(a$$110.call, a$$110, [this, b$$75, this.className], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var b$$74;
    var c$$56;
    var d$$56;
    var e$$78;
    var g$$29;
    var h$$31;
    var i$$105;
    if (JAM.call(f$$4.isFunction, f$$4, [a$$110], JAM.policy.p3)) {
      return JAM.call(this.each, this, [v736], JAM.policy.p3);
    }
    var v12875 = a$$110;
    if (v12875) {
      v12875 = typeof a$$110 == "string";
    }
    if (v12875) {
      b$$74 = JAM.call(a$$110.split, a$$110, [p$$22], JAM.policy.p3);
      c$$56 = 0;
      d$$56 = this.length;
      var v5910 = c$$56 < d$$56;
      for (;v5910;) {
        e$$78 = this[c$$56];
        if (e$$78.nodeType === 1) {
          var v12877 = !e$$78.className;
          if (v12877) {
            v12877 = b$$74.length === 1;
          }
          if (v12877) {
            e$$78.className = a$$110;
          } else {
            g$$29 = " " + e$$78.className + " ";
            h$$31 = 0;
            i$$105 = b$$74.length;
            var v5906 = h$$31 < i$$105;
            for (;v5906;) {
              var v5905 = ~JAM.call(g$$29.indexOf, g$$29, [" " + b$$74[h$$31] + " "], JAM.policy.p3);
              if (!v5905) {
                g$$29 = g$$29 + (b$$74[h$$31] + " ");
              }
              h$$31++;
              v5906 = h$$31 < i$$105;
            }
            var v5907 = e$$78;
            var v31136 = JAM.call(f$$4.trim, f$$4, [g$$29], JAM.policy.p3);
            v5907.className = v31136;
          }
        }
        c$$56++;
        v5910 = c$$56 < d$$56;
      }
    }
    return this;
  }
  function v735(a$$109) {
    function v734() {
      try {
        introspect(JAM.policy.p2) {
          this[a$$109] = b$$9;
        }
        delete this[a$$109];
      } catch (c$$55) {
      }
      return;
    }
    var v5912 = f$$4.propFix[a$$109];
    if (!v5912) {
      v5912 = a$$109;
    }
    a$$109 = v5912;
    return JAM.call(this.each, this, [v734], JAM.policy.p3);
  }
  function v733(a$$108, b$$73) {
    return JAM.call(f$$4.access, f$$4, [this, f$$4.prop, a$$108, b$$73, arguments.length > 1], JAM.policy.p3);
  }
  function v732(a$$107) {
    function v731() {
      JAM.call(f$$4.removeAttr, f$$4, [this, a$$107], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v731], JAM.policy.p3);
  }
  function v730(a$$106, b$$72) {
    return JAM.call(f$$4.access, f$$4, [this, f$$4.attr, a$$106, b$$72, arguments.length > 1], JAM.policy.p3);
  }
  function v729(a$$105, c$$54) {
    function m$$14() {
      var v5917 = h$$30 = h$$30 - 1;
      if (!v5917) {
        JAM.call(d$$55.resolveWith, d$$55, [e$$77, [e$$77]], JAM.policy.p3);
      }
      return;
    }
    var v12887 = typeof a$$105 != "string";
    if (v12887) {
      c$$54 = a$$105;
      a$$105 = b$$9;
    }
    a$$105 = a$$105 || "fx";
    var d$$55 = JAM.call(f$$4.Deferred, f$$4, [], JAM.policy.p3);
    var e$$77 = this;
    var g$$28 = e$$77.length;
    var h$$30 = 1;
    var i$$104 = a$$105 + "defer";
    var j$$32 = a$$105 + "queue";
    var k$$17 = a$$105 + "mark";
    var l$$32;
    var v5919 = g$$28;
    g$$28 = g$$28 - 1;
    for (;v5919;) {
      var v12888 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], i$$104, b$$9, !0], JAM.policy.p3);
      if (!v12888) {
        var v23578 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], j$$32, b$$9, !0], JAM.policy.p3);
        if (!v23578) {
          v23578 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], k$$17, b$$9, !0], JAM.policy.p3);
        }
        var v18370 = v23578;
        if (v18370) {
          v18370 = JAM.call(f$$4.data, f$$4, [e$$77[g$$28], i$$104, JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3), !0], JAM.policy.p3);
        }
        v12888 = v18370;
      }
      if (l$$32 = v12888) {
        h$$30++;
        JAM.call(l$$32.add, l$$32, [m$$14], JAM.policy.p3);
      }
      v5919 = g$$28;
      g$$28 = g$$28 - 1;
    }
    m$$14();
    return JAM.call(d$$55.promise, d$$55, [c$$54], JAM.policy.p3);
  }
  function v728(a$$104) {
    return JAM.call(this.queue, this, [a$$104 || "fx", []], JAM.policy.p3);
  }
  function v727(a$$103, b$$70) {
    function v726(b$$71, c$$53) {
      function v725() {
        clearTimeout(d$$54);
        return;
      }
      var d$$54 = JAM.call(setTimeout, null, [b$$71, a$$103]);
      c$$53.stop = v725;
      return;
    }
    var v12889;
    if (f$$4.fx) {
      var v18372 = f$$4.fx.speeds[a$$103];
      if (!v18372) {
        v18372 = a$$103;
      }
      v12889 = v18372;
    } else {
      v12889 = a$$103;
    }
    a$$103 = v12889;
    b$$70 = b$$70 || "fx";
    return JAM.call(this.queue, this, [b$$70, v726], JAM.policy.p3);
  }
  function v724(a$$102) {
    function v723() {
      JAM.call(f$$4.dequeue, f$$4, [this, a$$102], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v723], JAM.policy.p3);
  }
  function v722(a$$101, c$$52) {
    function v721() {
      var b$$69 = JAM.call(f$$4.queue, f$$4, [this, a$$101, c$$52], JAM.policy.p3);
      var v12890 = a$$101 === "fx";
      if (v12890) {
        v12890 = b$$69[0] !== "inprogress";
      }
      var v5921 = v12890;
      if (v5921) {
        JAM.call(f$$4.dequeue, f$$4, [this, a$$101], JAM.policy.p3);
      }
      return;
    }
    var d$$53 = 2;
    var v5922 = typeof a$$101 != "string";
    if (v5922) {
      c$$52 = a$$101;
      a$$101 = "fx";
      d$$53--;
    }
    if (arguments.length < d$$53) {
      return JAM.call(f$$4.queue, f$$4, [this[0], a$$101], JAM.policy.p3);
    }
    var v5925;
    if (c$$52 === b$$9) {
      v5925 = this;
    } else {
      v5925 = JAM.call(this.each, this, [v721], JAM.policy.p3);
    }
    return v5925;
  }
  function v720(a$$100, b$$68) {
    function v719() {
      JAM.call(f$$4.dequeue, f$$4, [a$$100, b$$68], JAM.policy.p3);
      return;
    }
    b$$68 = b$$68 || "fx";
    var c$$51 = JAM.call(f$$4.queue, f$$4, [a$$100, b$$68], JAM.policy.p3);
    var d$$52 = JAM.call(c$$51.shift, c$$51, [], JAM.policy.p3);
    var e$$76 = {};
    var v18375 = d$$52 === "inprogress";
    if (v18375) {
      d$$52 = JAM.call(c$$51.shift, c$$51, [], JAM.policy.p3);
    }
    if (d$$52) {
      var v27583 = b$$68 === "fx";
      if (v27583) {
        JAM.call(c$$51.unshift, c$$51, ["inprogress"], JAM.policy.p3);
      }
      JAM.call(f$$4._data, f$$4, [a$$100, b$$68 + ".run", e$$76], JAM.policy.p3);
      JAM.call(d$$52.call, d$$52, [a$$100, v719, e$$76], JAM.policy.p3);
    }
    var v12894 = c$$51.length;
    if (!v12894) {
      JAM.call(f$$4.removeData, f$$4, [a$$100, b$$68 + "queue " + b$$68 + ".run", !0], JAM.policy.p3);
      n$$57(a$$100, b$$68, "queue");
    }
    return;
  }
  function v718(a$$99, b$$67, c$$50) {
    var d$$51;
    if (a$$99) {
      b$$67 = (b$$67 || "fx") + "queue";
      d$$51 = JAM.call(f$$4._data, f$$4, [a$$99, b$$67], JAM.policy.p3);
      if (c$$50) {
        var v18378;
        var v25994 = !d$$51;
        if (!v25994) {
          v25994 = JAM.call(f$$4.isArray, f$$4, [c$$50], JAM.policy.p3);
        }
        if (v25994) {
          v18378 = d$$51 = JAM.call(f$$4._data, f$$4, [a$$99, b$$67, JAM.call(f$$4.makeArray, f$$4, [c$$50], JAM.policy.p3)], JAM.policy.p3);
        } else {
          v18378 = JAM.call(d$$51.push, d$$51, [c$$50], JAM.policy.p3);
        }
        v18378;
      }
      return d$$51 || [];
    }
    return;
  }
  function v717(a$$98, b$$66, c$$49) {
    var v5926 = a$$98 !== !0;
    if (v5926) {
      c$$49 = b$$66;
      b$$66 = a$$98;
      a$$98 = !1;
    }
    if (b$$66) {
      c$$49 = c$$49 || "fx";
      var d$$50 = c$$49 + "mark";
      var v5927;
      if (a$$98) {
        v5927 = 0;
      } else {
        var v18379 = JAM.call(f$$4._data, f$$4, [b$$66, d$$50], JAM.policy.p3);
        if (!v18379) {
          v18379 = 1;
        }
        v5927 = v18379 - 1;
      }
      var e$$75 = v5927;
      var v5928;
      if (e$$75) {
        v5928 = JAM.call(f$$4._data, f$$4, [b$$66, d$$50, e$$75], JAM.policy.p3);
      } else {
        JAM.call(f$$4.removeData, f$$4, [b$$66, d$$50, !0], JAM.policy.p3);
        v5928 = n$$57(b$$66, c$$49, "mark");
      }
      v5928;
    }
    return;
  }
  function v716(a$$97, b$$65) {
    if (a$$97) {
      b$$65 = (b$$65 || "fx") + "mark";
      var v25995 = JAM.call(f$$4._data, f$$4, [a$$97, b$$65], JAM.policy.p3);
      if (!v25995) {
        v25995 = 0;
      }
      JAM.call(f$$4._data, f$$4, [a$$97, b$$65, v25995 + 1], JAM.policy.p3);
    }
    return;
  }
  function v715(a$$96) {
    function v714() {
      JAM.call(f$$4.removeData, f$$4, [this, a$$96], JAM.policy.p3);
      return;
    }
    return JAM.call(this.each, this, [v714], JAM.policy.p3);
  }
  function v713(a$$95, c$$47) {
    function v712(c$$48) {
      function v711() {
        var b$$64 = JAM.call(f$$4, null, [this], JAM.policy.p3);
        JAM.call(b$$64.triggerHandler, b$$64, ["setData" + e$$74, d$$49], JAM.policy.p3);
        JAM.call(f$$4.data, f$$4, [this, a$$95, c$$48], JAM.policy.p3);
        JAM.call(b$$64.triggerHandler, b$$64, ["changeData" + e$$74, d$$49], JAM.policy.p3);
        return;
      }
      if (c$$48 === b$$9) {
        m$$13 = JAM.call(this.triggerHandler, this, ["getData" + e$$74, [d$$49[0]]], JAM.policy.p3);
        var v18385 = m$$13 === b$$9;
        if (v18385) {
          v18385 = j$$31;
        }
        var v12900 = v18385;
        if (v12900) {
          m$$13 = JAM.call(f$$4.data, f$$4, [j$$31, a$$95], JAM.policy.p3);
          m$$13 = l$$21(j$$31, a$$95, m$$13);
        }
        var v5929;
        var v18386 = m$$13 === b$$9;
        if (v18386) {
          v18386 = d$$49[1];
        }
        if (v18386) {
          v5929 = JAM.call(this.data, this, [d$$49[0]], JAM.policy.p3);
        } else {
          v5929 = m$$13;
        }
        return v5929;
      }
      d$$49[1] = c$$48;
      JAM.call(this.each, this, [v711], JAM.policy.p3);
      return;
    }
    function v710() {
      JAM.call(f$$4.data, f$$4, [this, a$$95], JAM.policy.p3);
      return;
    }
    var d$$49;
    var e$$74;
    var g$$27;
    var h$$29;
    var i$$103;
    var j$$31 = this[0];
    var k$$16 = 0;
    var m$$13 = null;
    if (a$$95 === b$$9) {
      if (this.length) {
        m$$13 = JAM.call(f$$4.data, f$$4, [j$$31], JAM.policy.p3);
        var v12903 = j$$31.nodeType === 1;
        if (v12903) {
          v12903 = !JAM.call(f$$4._data, f$$4, [j$$31, "parsedAttrs"], JAM.policy.p3);
        }
        if (v12903) {
          g$$27 = j$$31.attributes;
          i$$103 = g$$27.length;
          var v5931 = k$$16 < i$$103;
          for (;v5931;) {
            h$$29 = g$$27[k$$16].name;
            var v12905 = JAM.call(h$$29.indexOf, h$$29, ["data-"], JAM.policy.p3) === 0;
            if (v12905) {
              h$$29 = JAM.call(f$$4.camelCase, f$$4, [JAM.call(h$$29.substring, h$$29, [5], JAM.policy.p3)], JAM.policy.p3);
              l$$21(j$$31, h$$29, m$$13[h$$29]);
            }
            k$$16++;
            v5931 = k$$16 < i$$103;
          }
          JAM.call(f$$4._data, f$$4, [j$$31, "parsedAttrs", !0], JAM.policy.p3);
        }
      }
      return m$$13;
    }
    if (typeof a$$95 == "object") {
      return JAM.call(this.each, this, [v710], JAM.policy.p3);
    }
    d$$49 = JAM.call(a$$95.split, a$$95, [".", 2], JAM.policy.p3);
    var v18390;
    if (d$$49[1]) {
      v18390 = "." + d$$49[1];
    } else {
      v18390 = "";
    }
    d$$49[1] = v18390;
    e$$74 = d$$49[1] + "!";
    return JAM.call(f$$4.access, f$$4, [this, v712, null, c$$47, arguments.length > 1, null, !1], JAM.policy.p3);
  }
  function v709(a$$94) {
    if (a$$94.nodeName) {
      var v5939 = f$$4.noData;
      var v12909 = a$$94.nodeName;
      var b$$63 = v5939[JAM.call(v12909.toLowerCase, v12909, [], JAM.policy.p3)];
      if (b$$63) {
        var v5941 = b$$63 !== !0;
        if (v5941) {
          v5941 = JAM.call(a$$94.getAttribute, a$$94, ["classid"], JAM.policy.p3) === b$$63;
        }
        return v5941;
      }
    }
    return !0;
  }
  function v708(a$$93, b$$62, c$$46) {
    return JAM.call(f$$4.data, f$$4, [a$$93, b$$62, c$$46, !0], JAM.policy.p3);
  }
  function v707(a$$92, b$$61, c$$45) {
    if (!!JAM.call(f$$4.acceptData, f$$4, [a$$92], JAM.policy.p3)) {
      var d$$48;
      var e$$73;
      var g$$26;
      var h$$28 = f$$4.expando;
      var i$$102 = a$$92.nodeType;
      var v5944;
      if (i$$102) {
        v5944 = f$$4.cache;
      } else {
        v5944 = a$$92;
      }
      var j$$30 = v5944;
      var v5945;
      if (i$$102) {
        v5945 = a$$92[h$$28];
      } else {
        v5945 = h$$28;
      }
      var k$$15 = v5945;
      if (!j$$30[k$$15]) {
        return;
      }
      if (b$$61) {
        var v5947;
        if (c$$45) {
          v5947 = j$$30[k$$15];
        } else {
          v5947 = j$$30[k$$15].data;
        }
        d$$48 = v5947;
        if (d$$48) {
          var v5948 = JAM.call(f$$4.isArray, f$$4, [b$$61], JAM.policy.p3);
          if (!v5948) {
            var v12915;
            if (b$$61 in d$$48) {
              v12915 = b$$61 = [b$$61];
            } else {
              b$$61 = JAM.call(f$$4.camelCase, f$$4, [b$$61], JAM.policy.p3);
              var v23594;
              if (b$$61 in d$$48) {
                v23594 = b$$61 = [b$$61];
              } else {
                v23594 = b$$61 = JAM.call(b$$61.split, b$$61, [" "], JAM.policy.p3);
              }
              v12915 = v23594;
            }
            v12915;
          }
          e$$73 = 0;
          g$$26 = b$$61.length;
          var v5950 = e$$73 < g$$26;
          for (;v5950;) {
            delete d$$48[b$$61[e$$73]];
            e$$73++;
            v5950 = e$$73 < g$$26;
          }
          var v23595;
          if (c$$45) {
            v23595 = m$$4;
          } else {
            v23595 = f$$4.isEmptyObject;
          }
          if (!JAM.call(v23595, null, [d$$48], JAM.policy.p3)) {
            return;
          }
        }
      }
      if (!c$$45) {
        delete j$$30[k$$15].data;
        if (!m$$4(j$$30[k$$15])) {
          return;
        }
      }
      var v12919;
      var v23596 = f$$4.support.deleteExpando;
      if (!v23596) {
        v23596 = !j$$30.setInterval;
      }
      if (v23596) {
        v12919 = delete j$$30[k$$15];
      } else {
        introspect(JAM.policy.p2) {
          v12919 = j$$30[k$$15] = null;
        }
      }
      v12919;
      if (i$$102) {
        var v18396;
        if (f$$4.support.deleteExpando) {
          v18396 = delete a$$92[h$$28];
        } else {
          var v23597;
          if (a$$92.removeAttribute) {
            v23597 = JAM.call(a$$92.removeAttribute, a$$92, [h$$28], JAM.policy.p3);
          } else {
            introspect(JAM.policy.p2) {
              v23597 = a$$92[h$$28] = null;
            }
          }
          v18396 = v23597;
        }
        v18396;
      }
    }
    return;
  }
  function v706(a$$91, c$$44, d$$47, e$$72) {
    if (!!JAM.call(f$$4.acceptData, f$$4, [a$$91], JAM.policy.p3)) {
      var g$$25;
      var h$$27;
      var i$$101;
      var j$$29 = f$$4.expando;
      var k$$14 = typeof c$$44 == "string";
      var l$$31 = a$$91.nodeType;
      var v5957;
      if (l$$31) {
        v5957 = f$$4.cache;
      } else {
        v5957 = a$$91;
      }
      var m$$12 = v5957;
      var v5958;
      if (l$$31) {
        v5958 = a$$91[j$$29];
      } else {
        var v12921 = a$$91[j$$29];
        if (v12921) {
          v12921 = j$$29;
        }
        v5958 = v12921;
      }
      var n$$63 = v5958;
      var o$$5 = c$$44 === "events";
      var v26002 = !n$$63;
      if (!v26002) {
        v26002 = !m$$12[n$$63];
      }
      var v23599 = v26002;
      if (!v23599) {
        var v27590 = !o$$5;
        if (v27590) {
          v27590 = !e$$72;
        }
        var v26003 = v27590;
        if (v26003) {
          v26003 = !m$$12[n$$63].data;
        }
        v23599 = v26003;
      }
      var v18398 = v23599;
      if (v18398) {
        v18398 = k$$14;
      }
      var v12922 = v18398;
      if (v12922) {
        v12922 = d$$47 === b$$9;
      }
      if (v12922) {
        return;
      }
      if (!n$$63) {
        var v18399;
        if (l$$31) {
          var v26005 = f$$4.uuid;
          introspect(JAM.policy.p2) {
            v18399 = a$$91[j$$29] = n$$63 = f$$4.uuid = v26005 + 1;
          }
        } else {
          v18399 = n$$63 = j$$29;
        }
        v18399;
      }
      var v12923 = m$$12[n$$63];
      if (!v12923) {
        introspect(JAM.policy.p2) {
          m$$12[n$$63] = {};
        }
        if (!l$$31) {
          m$$12[n$$63].toJSON = f$$4.noop;
        }
      }
      var v12924 = typeof c$$44 == "object";
      if (!v12924) {
        v12924 = typeof c$$44 == "function";
      }
      if (v12924) {
        var v5960;
        if (e$$72) {
          var v31137 = JAM.call(f$$4.extend, f$$4, [m$$12[n$$63], c$$44], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            v5960 = m$$12[n$$63] = v31137;
          }
        } else {
          var v12926 = m$$12[n$$63];
          var v31138 = JAM.call(f$$4.extend, f$$4, [m$$12[n$$63].data, c$$44], JAM.policy.p3);
          v5960 = v12926.data = v31138;
        }
        v5960;
      }
      g$$25 = h$$27 = m$$12[n$$63];
      if (!e$$72) {
        var v26008 = h$$27.data;
        if (!v26008) {
          h$$27.data = {};
        }
        h$$27 = h$$27.data;
      }
      var v12927 = d$$47 !== b$$9;
      if (v12927) {
        var v18406 = JAM.call(f$$4.camelCase, f$$4, [c$$44], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          h$$27[v18406] = d$$47;
        }
      }
      var v12928 = o$$5;
      if (v12928) {
        v12928 = !h$$27[c$$44];
      }
      if (v12928) {
        return g$$25.events;
      }
      var v5963;
      if (k$$14) {
        i$$101 = h$$27[c$$44];
        var v18408 = i$$101 == null;
        if (v18408) {
          v18408 = i$$101 = h$$27[JAM.call(f$$4.camelCase, f$$4, [c$$44], JAM.policy.p3)];
        }
        v5963 = v18408;
      } else {
        v5963 = i$$101 = h$$27;
      }
      v5963;
      return i$$101;
    }
    return;
  }
  function v705(a$$90) {
    var v5965;
    if (a$$90.nodeType) {
      v5965 = f$$4.cache[a$$90[f$$4.expando]];
    } else {
      v5965 = a$$90[f$$4.expando];
    }
    a$$90 = v5965;
    var v5966 = !!a$$90;
    if (v5966) {
      v5966 = !m$$4(a$$90);
    }
    return v5966;
  }
  function v704() {
    function v703() {
      var d$$46;
      var e$$71;
      var g$$24;
      var h$$26;
      var i$$100;
      var j$$28;
      var l$$30;
      var m$$11;
      var n$$62;
      var q$$3;
      var r$$5;
      var s$$17;
      var t$$4;
      var u$$3 = JAM.call(c$$5.getElementsByTagName, c$$5, ["body"], JAM.policy.p3)[0];
      var v5968 = !u$$3;
      if (!v5968) {
        m$$11 = 1;
        t$$4 = "padding:0;margin:0;border:";
        r$$5 = "position:absolute;top:0;left:0;width:1px;height:1px;";
        s$$17 = t$$4 + "0;visibility:hidden;";
        n$$62 = "style='" + r$$5 + t$$4 + "5px solid #000;";
        q$$3 = "<div " + n$$62 + "display:block;'><div style='" + t$$4 + "0;display:block;overflow:hidden;'></div></div>" + "<table " + n$$62 + "' cellpadding='0' cellspacing='0'>" + "<tr><td></td></tr></table>";
        d$$46 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
        d$$46.style.cssText = s$$17 + "width:0;height:0;position:static;top:0;margin-top:" + m$$11 + "px";
        JAM.call(u$$3.insertBefore, u$$3, [d$$46, u$$3.firstChild], JAM.policy.p3);
        p$$26 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
        JAM.call(d$$46.appendChild, d$$46, [p$$26], JAM.policy.p3);
        JAM.set(p$$26, "innerHTML", "<table><tr><td style='" + t$$4 + "0;display:none'></td><td>t</td></tr></table>");
        k$$13 = JAM.call(p$$26.getElementsByTagName, p$$26, ["td"], JAM.policy.p3);
        o$$4 = k$$13[0].offsetHeight === 0;
        k$$13[0].style.display = "";
        k$$13[1].style.display = "none";
        var v30863 = o$$4;
        if (v30863) {
          v30863 = k$$13[0].offsetHeight === 0;
        }
        b$$60.reliableHiddenOffsets = v30863;
        var v30861 = a$$13.getComputedStyle;
        if (v30861) {
          JAM.set(p$$26, "innerHTML", "");
          l$$30 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
          l$$30.style.width = "0";
          l$$30.style.marginRight = "0";
          p$$26.style.width = "2px";
          JAM.call(p$$26.appendChild, p$$26, [l$$30], JAM.policy.p3);
          var v30868 = b$$60;
          var v30891 = JAM.call(a$$13.getComputedStyle, a$$13, [l$$30, null], JAM.policy.p3);
          if (!v30891) {
            v30891 = {marginRight:0};
          }
          var v30880 = parseInt(v30891.marginRight, 10);
          if (!v30880) {
            v30880 = 0;
          }
          v30868.reliableMarginRight = v30880 === 0;
        }
        var v30859 = typeof p$$26.style.zoom != "undefined";
        if (v30859) {
          JAM.set(p$$26, "innerHTML", "");
          p$$26.style.width = p$$26.style.padding = "1px";
          p$$26.style.border = 0;
          p$$26.style.overflow = "hidden";
          p$$26.style.display = "inline";
          p$$26.style.zoom = 1;
          b$$60.inlineBlockNeedsLayout = p$$26.offsetWidth === 3;
          p$$26.style.display = "block";
          p$$26.style.overflow = "visible";
          JAM.set(p$$26, "innerHTML", "<div style='width:5px;'></div>");
          b$$60.shrinkWrapBlocks = p$$26.offsetWidth !== 3;
        }
        p$$26.style.cssText = r$$5 + s$$17;
        JAM.set(p$$26, "innerHTML", q$$3);
        e$$71 = p$$26.firstChild;
        g$$24 = e$$71.firstChild;
        i$$100 = e$$71.nextSibling.firstChild.firstChild;
        j$$28 = {doesNotAddBorder:g$$24.offsetTop !== 5, doesAddBorderForTableAndCells:i$$100.offsetTop === 5};
        g$$24.style.position = "fixed";
        g$$24.style.top = "20px";
        var v30500 = g$$24.offsetTop === 20;
        if (!v30500) {
          v30500 = g$$24.offsetTop === 15;
        }
        j$$28.fixedPosition = v30500;
        g$$24.style.position = g$$24.style.top = "";
        e$$71.style.overflow = "hidden";
        e$$71.style.position = "relative";
        j$$28.subtractsBorderForOverflowNotVisible = g$$24.offsetTop === -5;
        j$$28.doesNotIncludeMarginInBodyOffset = u$$3.offsetTop !== m$$11;
        var v28601 = a$$13.getComputedStyle;
        if (v28601) {
          p$$26.style.marginTop = "1%";
          var v29693 = b$$60;
          var v30373 = JAM.call(a$$13.getComputedStyle, a$$13, [p$$26, null], JAM.policy.p3);
          if (!v30373) {
            v30373 = {marginTop:0};
          }
          v29693.pixelMargin = v30373.marginTop !== "1%";
        }
        var v27593 = typeof d$$46.style.zoom != "undefined";
        if (v27593) {
          d$$46.style.zoom = 1;
        }
        JAM.call(u$$3.removeChild, u$$3, [d$$46], JAM.policy.p3);
        l$$30 = p$$26 = d$$46 = null;
        JAM.call(f$$4.extend, f$$4, [b$$60, j$$28], JAM.policy.p3);
      }
      return;
    }
    function v702() {
      b$$60.noCloneEvent = !1;
      return;
    }
    var b$$60;
    var d$$45;
    var e$$70;
    var g$$23;
    var h$$25;
    var i$$99;
    var j$$27;
    var k$$13;
    var l$$29;
    var m$$10;
    var n$$61;
    var o$$4;
    var p$$26 = JAM.call(c$$5.createElement, c$$5, ["div"], JAM.policy.p3);
    var q$$2 = c$$5.documentElement;
    JAM.call(p$$26.setAttribute, p$$26, ["className", "t"], JAM.policy.p3);
    JAM.set(p$$26, "innerHTML", "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>");
    d$$45 = JAM.call(p$$26.getElementsByTagName, p$$26, ["*"], JAM.policy.p3);
    e$$70 = JAM.call(p$$26.getElementsByTagName, p$$26, ["a"], JAM.policy.p3)[0];
    var v18410 = !d$$45;
    if (!v18410) {
      v18410 = !d$$45.length;
    }
    var v12937 = v18410;
    if (!v12937) {
      v12937 = !e$$70;
    }
    if (v12937) {
      return {};
    }
    g$$23 = JAM.call(c$$5.createElement, c$$5, ["select"], JAM.policy.p3);
    h$$25 = JAM.call(g$$23.appendChild, g$$23, [JAM.call(c$$5.createElement, c$$5, ["option"], JAM.policy.p3)], JAM.policy.p3);
    i$$99 = JAM.call(p$$26.getElementsByTagName, p$$26, ["input"], JAM.policy.p3)[0];
    var v28604 = p$$26.firstChild.nodeType === 3;
    var v28605 = !JAM.call(p$$26.getElementsByTagName, p$$26, ["tbody"], JAM.policy.p3).length;
    var v28606 = !!JAM.call(p$$26.getElementsByTagName, p$$26, ["link"], JAM.policy.p3).length;
    var v28607 = JAM.call(/top/.test, /top/, [JAM.call(e$$70.getAttribute, e$$70, ["style"], JAM.policy.p3)], JAM.policy.p3);
    var v28608 = JAM.call(e$$70.getAttribute, e$$70, ["href"], JAM.policy.p3) === "/a";
    var v28609 = JAM.call(/^0.55/.test, /^0.55/, [e$$70.style.opacity], JAM.policy.p3);
    var v28610 = !!e$$70.style.cssFloat;
    var v28611 = i$$99.value === "on";
    var v28612 = h$$25.selected;
    var v28613 = p$$26.className !== "t";
    var v28614 = !!JAM.call(c$$5.createElement, c$$5, ["form"], JAM.policy.p3).enctype;
    var v29969 = JAM.call(c$$5.createElement, c$$5, ["nav"], JAM.policy.p3);
    b$$60 = {leadingWhitespace:v28604, tbody:v28605, htmlSerialize:v28606, style:v28607, hrefNormalized:v28608, opacity:v28609, cssFloat:v28610, checkOn:v28611, optSelected:v28612, getSetAttribute:v28613, enctype:v28614, html5Clone:JAM.call(v29969.cloneNode, v29969, [!0], JAM.policy.p3).outerHTML !== "<:nav></:nav>", submitBubbles:!0, changeBubbles:!0, focusinBubbles:!1, deleteExpando:!0, noCloneEvent:!0, inlineBlockNeedsLayout:!1, shrinkWrapBlocks:!1, reliableMarginRight:!0, pixelMargin:!0};
    f$$4.boxModel = b$$60.boxModel = c$$5.compatMode === "CSS1Compat";
    i$$99.checked = !0;
    b$$60.noCloneChecked = JAM.call(i$$99.cloneNode, i$$99, [!0], JAM.policy.p3).checked;
    g$$23.disabled = !0;
    b$$60.optDisabled = !h$$25.disabled;
    try {
      delete p$$26.test;
    } catch (r$$4) {
      b$$60.deleteExpando = !1;
    }
    var v30744 = !p$$26.addEventListener;
    if (v30744) {
      v30744 = p$$26.attachEvent;
    }
    var v30696 = v30744;
    if (v30696) {
      v30696 = p$$26.fireEvent;
    }
    var v30623 = v30696;
    if (v30623) {
      JAM.call(p$$26.attachEvent, p$$26, ["onclick", v702], JAM.policy.p3);
      var v30745 = JAM.call(p$$26.cloneNode, p$$26, [!0], JAM.policy.p3);
      JAM.call(v30745.fireEvent, v30745, ["onclick"], JAM.policy.p3);
    }
    i$$99 = JAM.call(c$$5.createElement, c$$5, ["input"], JAM.policy.p3);
    i$$99.value = "t";
    JAM.call(i$$99.setAttribute, i$$99, ["type", "radio"], JAM.policy.p3);
    b$$60.radioValue = i$$99.value === "t";
    JAM.call(i$$99.setAttribute, i$$99, ["checked", "checked"], JAM.policy.p3);
    JAM.call(i$$99.setAttribute, i$$99, ["name", "t"], JAM.policy.p3);
    JAM.call(p$$26.appendChild, p$$26, [i$$99], JAM.policy.p3);
    j$$27 = JAM.call(c$$5.createDocumentFragment, c$$5, [], JAM.policy.p3);
    JAM.call(j$$27.appendChild, j$$27, [p$$26.lastChild], JAM.policy.p3);
    var v26010 = b$$60;
    var v29272 = JAM.call(j$$27.cloneNode, j$$27, [!0], JAM.policy.p3);
    v26010.checkClone = JAM.call(v29272.cloneNode, v29272, [!0], JAM.policy.p3).lastChild.checked;
    b$$60.appendChecked = i$$99.checked;
    JAM.call(j$$27.removeChild, j$$27, [i$$99], JAM.policy.p3);
    JAM.call(j$$27.appendChild, j$$27, [p$$26], JAM.policy.p3);
    if (p$$26.attachEvent) {
      for (n$$61 in{submit:1, change:1, focusin:1}) {
        m$$10 = "on" + n$$61;
        o$$4 = m$$10 in p$$26;
        if (!o$$4) {
          JAM.call(p$$26.setAttribute, p$$26, [m$$10, "return;"], JAM.policy.p3);
          o$$4 = typeof p$$26[m$$10] == "function";
        }
        var v12939 = n$$61 + "Bubbles";
        introspect(JAM.policy.p2) {
          b$$60[v12939] = o$$4;
        }
      }
    }
    JAM.call(j$$27.removeChild, j$$27, [p$$26], JAM.policy.p3);
    j$$27 = g$$23 = h$$25 = p$$26 = i$$99 = null;
    JAM.call(f$$4, null, [v703], JAM.policy.p3);
    return b$$60;
  }
  function v701(a$$87) {
    function m$$9(a$$88) {
      function v699(b$$59) {
        var v12940 = e$$69;
        var v12941 = a$$88;
        var v18412;
        if (arguments.length > 1) {
          v18412 = JAM.call(i$$85.call, i$$85, [arguments, 0], JAM.policy.p3);
        } else {
          v18412 = b$$59;
        }
        introspect(JAM.policy.p2) {
          v12940[v12941] = v18412;
        }
        JAM.call(j$$26.notifyWith, j$$26, [k$$12, e$$69], JAM.policy.p3);
        return;
      }
      return v699;
    }
    function l$$28(a$$89) {
      function v700(c$$43) {
        var v12942 = b$$58;
        var v12943 = a$$89;
        var v18413;
        if (arguments.length > 1) {
          v18413 = JAM.call(i$$85.call, i$$85, [arguments, 0], JAM.policy.p3);
        } else {
          v18413 = c$$43;
        }
        introspect(JAM.policy.p2) {
          v12942[v12943] = v18413;
        }
        var v12944 = g$$22 = g$$22 - 1;
        if (!v12944) {
          JAM.call(j$$26.resolveWith, j$$26, [j$$26, b$$58], JAM.policy.p3);
        }
        return;
      }
      return v700;
    }
    var b$$58 = JAM.call(i$$85.call, i$$85, [arguments, 0], JAM.policy.p3);
    var c$$42 = 0;
    var d$$44 = b$$58.length;
    var e$$69 = Array(d$$44);
    var g$$22 = d$$44;
    var h$$24 = d$$44;
    var v5972;
    var v23609 = d$$44 <= 1;
    if (v23609) {
      v23609 = a$$87;
    }
    var v18415 = v23609;
    if (v18415) {
      v18415 = JAM.call(f$$4.isFunction, f$$4, [a$$87.promise], JAM.policy.p3);
    }
    if (v18415) {
      v5972 = a$$87;
    } else {
      v5972 = JAM.call(f$$4.Deferred, f$$4, [], JAM.policy.p3);
    }
    var j$$26 = v5972;
    var k$$12 = JAM.call(j$$26.promise, j$$26, [], JAM.policy.p3);
    if (d$$44 > 1) {
      var v5974 = c$$42 < d$$44;
      for (;v5974;) {
        var v5973;
        var v23611 = b$$58[c$$42];
        if (v23611) {
          v23611 = b$$58[c$$42].promise;
        }
        var v18416 = v23611;
        if (v18416) {
          v18416 = JAM.call(f$$4.isFunction, f$$4, [b$$58[c$$42].promise], JAM.policy.p3);
        }
        if (v18416) {
          var v18417 = b$$58[c$$42];
          var v12946 = JAM.call(v18417.promise, v18417, [], JAM.policy.p3);
          v5973 = JAM.call(v12946.then, v12946, [l$$28(c$$42), j$$26.reject, m$$9(c$$42)], JAM.policy.p3);
        } else {
          v5973 = g$$22 = g$$22 - 1;
        }
        v5973;
        c$$42++;
        v5974 = c$$42 < d$$44;
      }
      if (!g$$22) {
        JAM.call(j$$26.resolveWith, j$$26, [j$$26, b$$58], JAM.policy.p3);
      }
    } else {
      var v5975 = j$$26 !== a$$87;
      if (v5975) {
        var v18418;
        if (d$$44) {
          v18418 = [a$$87];
        } else {
          v18418 = [];
        }
        JAM.call(j$$26.resolveWith, j$$26, [j$$26, v18418], JAM.policy.p3);
      }
    }
    return k$$12;
  }
  function v698(a$$82) {
    function v697() {
      e$$67 = "rejected";
      return;
    }
    function v696() {
      e$$67 = "resolved";
      return;
    }
    function v695(a$$86) {
      if (a$$86 == null) {
        a$$86 = h$$23;
      } else {
        var b$$57;
        for (b$$57 in h$$23) {
          introspect(JAM.policy.p2) {
            a$$86[b$$57] = h$$23[b$$57];
          }
        }
      }
      return a$$86;
    }
    function v694(a$$84, b$$55, c$$40) {
      function v693(d$$43) {
        function v692(a$$85, b$$56) {
          function v691() {
            g$$21 = JAM.call(c$$41.apply, c$$41, [this, arguments], JAM.policy.p3);
            var v12953;
            var v23613 = g$$21;
            if (v23613) {
              v23613 = JAM.call(f$$4.isFunction, f$$4, [g$$21.promise], JAM.policy.p3);
            }
            if (v23613) {
              var v18419 = JAM.call(g$$21.promise, g$$21, [], JAM.policy.p3);
              v12953 = JAM.call(v18419.then, v18419, [d$$43.resolve, d$$43.reject, d$$43.notify], JAM.policy.p3);
            } else {
              var v18423 = e$$68 + "With";
              var v23614;
              if (this === i$$98) {
                v23614 = d$$43;
              } else {
                v23614 = this;
              }
              v12953 = JAM.call(d$$43[v18423], d$$43, [v23614, [g$$21]], JAM.policy.p3);
            }
            v12953;
            return;
          }
          var c$$41 = b$$56[0];
          var e$$68 = b$$56[1];
          var g$$21;
          var v5978;
          if (JAM.call(f$$4.isFunction, f$$4, [c$$41], JAM.policy.p3)) {
            v5978 = JAM.call(i$$98[a$$85], i$$98, [v691], JAM.policy.p3);
          } else {
            v5978 = JAM.call(i$$98[a$$85], i$$98, [d$$43[e$$68]], JAM.policy.p3);
          }
          v5978;
          return;
        }
        JAM.call(f$$4.each, f$$4, [{done:[a$$84, "resolve"], fail:[b$$55, "reject"], progress:[c$$40, "notify"]}, v692], JAM.policy.p3);
        return;
      }
      var v5980 = JAM.call(f$$4.Deferred, f$$4, [v693], JAM.policy.p3);
      return JAM.call(v5980.promise, v5980, [], JAM.policy.p3);
    }
    function v690() {
      var v18427 = i$$98.done;
      var v5981 = JAM.call(v18427.apply, v18427, [i$$98, arguments], JAM.policy.p3).fail;
      JAM.call(v5981.apply, v5981, [i$$98, arguments], JAM.policy.p3);
      return this;
    }
    function v689(a$$83, b$$54, c$$39) {
      var v12960 = JAM.call(i$$98.done, i$$98, [a$$83], JAM.policy.p3);
      var v5982 = JAM.call(v12960.fail, v12960, [b$$54], JAM.policy.p3);
      JAM.call(v5982.progress, v5982, [c$$39], JAM.policy.p3);
      return this;
    }
    function v688() {
      return e$$67;
    }
    var b$$53 = JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3);
    var c$$38 = JAM.call(f$$4.Callbacks, f$$4, ["once memory"], JAM.policy.p3);
    var d$$42 = JAM.call(f$$4.Callbacks, f$$4, ["memory"], JAM.policy.p3);
    var e$$67 = "pending";
    var g$$20 = {resolve:b$$53, reject:c$$38, notify:d$$42};
    var h$$23 = {done:b$$53.add, fail:c$$38.add, progress:d$$42.add, state:v688, isResolved:b$$53.fired, isRejected:c$$38.fired, then:v689, always:v690, pipe:v694, promise:v695};
    var i$$98 = JAM.call(h$$23.promise, h$$23, [{}], JAM.policy.p3);
    var j$$25;
    for (j$$25 in g$$20) {
      var v12961 = g$$20[j$$25];
      introspect(JAM.policy.p2) {
        i$$98[j$$25] = v12961.fire;
      }
      var v12962 = j$$25 + "With";
      var v18428 = g$$20[j$$25];
      introspect(JAM.policy.p2) {
        i$$98[v12962] = v18428.fireWith;
      }
    }
    var v12963 = JAM.call(i$$98.done, i$$98, [v696, c$$38.disable, d$$42.lock], JAM.policy.p3);
    JAM.call(v12963.fail, v12963, [v697, b$$53.disable, d$$42.lock], JAM.policy.p3);
    if (a$$82) {
      JAM.call(a$$82.call, a$$82, [i$$98, i$$98], JAM.policy.p3);
    }
    return i$$98;
  }
  function v687(a$$79) {
    function v686() {
      return !!i$$96;
    }
    function v685() {
      JAM.call(p$$25.fireWith, p$$25, [this, arguments], JAM.policy.p3);
      return this;
    }
    function v684(b$$52, c$$37) {
      if (d$$38) {
        var v12966;
        if (j$$24) {
          var v18431 = a$$79.once;
          if (!v18431) {
            v18431 = JAM.call(d$$38.push, d$$38, [[b$$52, c$$37]], JAM.policy.p3);
          }
          v12966 = v18431;
        } else {
          var v23617 = !a$$79.once;
          if (!v23617) {
            v23617 = !e$$64;
          }
          var v18432 = v23617;
          if (v18432) {
            v18432 = o$$3(b$$52, c$$37);
          }
          v12966 = v18432;
        }
        v12966;
      }
      return this;
    }
    function v683() {
      return !d$$38;
    }
    function v682() {
      d$$38 = b$$9;
      var v18433 = !e$$64;
      if (!v18433) {
        v18433 = e$$64 === !0;
      }
      var v12967 = v18433;
      if (v12967) {
        JAM.call(p$$25.disable, p$$25, [], JAM.policy.p3);
      }
      return this;
    }
    function v681() {
      return !c$$36;
    }
    function v680() {
      c$$36 = d$$38 = e$$64 = b$$9;
      return this;
    }
    function v679() {
      c$$36 = [];
      return this;
    }
    function v678(a$$81) {
      if (c$$36) {
        var b$$51 = 0;
        var d$$41 = c$$36.length;
        var v5990 = b$$51 < d$$41;
        for (;v5990;) {
          if (a$$81 === c$$36[b$$51]) {
            return !0;
          }
          b$$51++;
          v5990 = b$$51 < d$$41;
        }
      }
      return !1;
    }
    function v677() {
      if (c$$36) {
        var b$$50 = arguments;
        var d$$40 = 0;
        var e$$66 = b$$50.length;
        var v5994 = d$$40 < e$$66;
        for (;v5994;) {
          var f$$19 = 0;
          var v5993 = f$$19 < c$$36.length;
          for (;v5993;) {
            if (b$$50[d$$40] === c$$36[f$$19]) {
              var v18434 = j$$24;
              if (v18434) {
                v18434 = f$$19 <= l$$27;
              }
              var v12972 = v18434;
              if (v12972) {
                l$$27--;
                var v23620 = f$$19 <= m$$8;
                if (v23620) {
                  m$$8--;
                }
              }
              var v12973 = f$$19;
              f$$19 = f$$19 - 1;
              JAM.call(c$$36.splice, c$$36, [v12973, 1], JAM.policy.p3);
              if (a$$79.unique) {
                break;
              }
            }
            f$$19++;
            v5993 = f$$19 < c$$36.length;
          }
          d$$40++;
          v5994 = d$$40 < e$$66;
        }
      }
      return this;
    }
    function v676() {
      if (c$$36) {
        var a$$80 = c$$36.length;
        n$$60(arguments);
        var v12975;
        if (j$$24) {
          v12975 = l$$27 = c$$36.length;
        } else {
          var v23621 = e$$64;
          if (v23621) {
            v23621 = e$$64 !== !0;
          }
          var v18435 = v23621;
          if (v18435) {
            k$$11 = a$$80;
            v18435 = o$$3(e$$64[0], e$$64[1]);
          }
          v12975 = v18435;
        }
        v12975;
      }
      return this;
    }
    function o$$3(b$$49, f$$18) {
      f$$18 = f$$18 || [];
      var v28626 = !a$$79.memory;
      if (!v28626) {
        v28626 = [b$$49, f$$18];
      }
      e$$64 = v28626;
      i$$96 = !0;
      j$$24 = !0;
      m$$8 = k$$11 || 0;
      k$$11 = 0;
      l$$27 = c$$36.length;
      var v12976 = c$$36;
      if (v12976) {
        v12976 = m$$8 < l$$27;
      }
      var v5996 = v12976;
      for (;v5996;) {
        var v23622 = c$$36[m$$8];
        var v12977 = JAM.call(v23622.apply, v23622, [b$$49, f$$18], JAM.policy.p3) === !1;
        if (v12977) {
          v12977 = a$$79.stopOnFalse;
        }
        if (v12977) {
          e$$64 = !0;
          break;
        }
        m$$8++;
        var v12978 = c$$36;
        if (v12978) {
          v12978 = m$$8 < l$$27;
        }
        v5996 = v12978;
      }
      j$$24 = !1;
      if (c$$36) {
        var v18438;
        if (a$$79.once) {
          var v23623;
          if (e$$64 === !0) {
            v23623 = JAM.call(p$$25.disable, p$$25, [], JAM.policy.p3);
          } else {
            v23623 = c$$36 = [];
          }
          v18438 = v23623;
        } else {
          var v26024 = d$$38;
          if (v26024) {
            v26024 = d$$38.length;
          }
          var v23624 = v26024;
          if (v23624) {
            e$$64 = JAM.call(d$$38.shift, d$$38, [], JAM.policy.p3);
            v23624 = JAM.call(p$$25.fireWith, p$$25, [e$$64[0], e$$64[1]], JAM.policy.p3);
          }
          v18438 = v23624;
        }
        v18438;
      }
      return;
    }
    function n$$60(b$$48) {
      var d$$39;
      var e$$65;
      var g$$19;
      var h$$22;
      var i$$97;
      d$$39 = 0;
      e$$65 = b$$48.length;
      var v5997 = d$$39 < e$$65;
      for (;v5997;) {
        g$$19 = b$$48[d$$39];
        h$$22 = JAM.call(f$$4.type, f$$4, [g$$19], JAM.policy.p3);
        var v12979;
        if (h$$22 === "array") {
          v12979 = n$$60(g$$19);
        } else {
          var v23626 = h$$22 === "function";
          if (v23626) {
            var v26025 = !a$$79.unique;
            if (!v26025) {
              v26025 = !JAM.call(p$$25.has, p$$25, [g$$19], JAM.policy.p3);
            }
            v23626 = v26025;
          }
          var v18439 = v23626;
          if (v18439) {
            v18439 = JAM.call(c$$36.push, c$$36, [g$$19], JAM.policy.p3);
          }
          v12979 = v18439;
        }
        v12979;
        d$$39++;
        v5997 = d$$39 < e$$65;
      }
      return;
    }
    var v5998;
    if (a$$79) {
      var v12980 = g[a$$79];
      if (!v12980) {
        v12980 = h$$9(a$$79);
      }
      v5998 = v12980;
    } else {
      v5998 = {};
    }
    a$$79 = v5998;
    var c$$36 = [];
    var d$$38 = [];
    var e$$64;
    var i$$96;
    var j$$24;
    var k$$11;
    var l$$27;
    var m$$8;
    var p$$25 = {add:v676, remove:v677, has:v678, empty:v679, disable:v680, disabled:v681, lock:v682, locked:v683, fireWith:v684, fire:v685, fired:v686};
    return p$$25;
  }
  function v675() {
    function v674() {
      var v5999 = c$$5.readyState === "complete";
      if (v5999) {
        JAM.call(c$$5.detachEvent, c$$5, ["onreadystatechange", B$$1], JAM.policy.p3);
        JAM.call(e$$61.ready, e$$61, [], JAM.policy.p3);
      }
      return;
    }
    function v673() {
      JAM.call(c$$5.removeEventListener, c$$5, ["DOMContentLoaded", B$$1, !1], JAM.policy.p3);
      JAM.call(e$$61.ready, e$$61, [], JAM.policy.p3);
      return;
    }
    function v672(a$$78, b$$47) {
      var v6000 = I$$1;
      var v6001 = "[object " + b$$47 + "]";
      var v31139 = JAM.call(b$$47.toLowerCase, b$$47, [], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v6000[v6001] = v31139;
      }
      return;
    }
    function v671() {
      function v670(d$$37, f$$17) {
        var v18442 = f$$17;
        if (v18442) {
          v18442 = f$$17 instanceof e$$61;
        }
        var v12984 = v18442;
        if (v12984) {
          v12984 = !(f$$17 instanceof a$$77);
        }
        var v6002 = v12984;
        if (v6002) {
          f$$17 = a$$77(f$$17);
        }
        var v6003 = e$$61.fn.init;
        return JAM.call(v6003.call, v6003, [this, d$$37, f$$17, b$$45], JAM.policy.p3);
      }
      function a$$77(b$$46, c$$35) {
        return JAM.new(a$$77.fn.init, [b$$46, c$$35]);
      }
      JAM.call(e$$61.extend, e$$61, [!0, a$$77, this], JAM.policy.p3);
      a$$77.superclass = this;
      var v27605 = a$$77;
      var v28628 = a$$77;
      var v31140 = JAM.call(this, null, [], JAM.policy.p3);
      v27605.fn = v28628.prototype = v31140;
      a$$77.fn.constructor = a$$77;
      a$$77.sub = this.sub;
      a$$77.fn.init = v670;
      a$$77.fn.init.prototype = a$$77.fn;
      var b$$45 = a$$77(c$$5);
      return a$$77;
    }
    function v669(a$$76) {
      a$$76 = JAM.call(a$$76.toLowerCase, a$$76, [], JAM.policy.p3);
      var v23627 = JAM.call(r$$3.exec, r$$3, [a$$76], JAM.policy.p3);
      if (!v23627) {
        v23627 = JAM.call(s$$16.exec, s$$16, [a$$76], JAM.policy.p3);
      }
      var v18446 = v23627;
      if (!v18446) {
        v18446 = JAM.call(t$$3.exec, t$$3, [a$$76], JAM.policy.p3);
      }
      var v12988 = v18446;
      if (!v12988) {
        var v18447 = JAM.call(a$$76.indexOf, a$$76, ["compatible"], JAM.policy.p3) < 0;
        if (v18447) {
          v18447 = JAM.call(u$$2.exec, u$$2, [a$$76], JAM.policy.p3);
        }
        v12988 = v18447;
      }
      var v6005 = v12988;
      if (!v6005) {
        v6005 = [];
      }
      var b$$44 = v6005;
      var v12990 = b$$44[1];
      if (!v12990) {
        v12990 = "";
      }
      var v6006 = v12990;
      var v12991 = b$$44[2];
      if (!v12991) {
        v12991 = "0";
      }
      return {browser:v6006, version:v12991};
    }
    function v668() {
      var v6008 = new Date;
      return JAM.call(v6008.getTime, v6008, [], JAM.policy.p3);
    }
    function v667(a$$74, c$$33, d$$36, f$$16, g$$18, h$$21, i$$95) {
      function v666(a$$75, b$$43, c$$34) {
        return JAM.call(j$$23.call, j$$23, [e$$61(a$$75), c$$34], JAM.policy.p3);
      }
      var j$$23;
      var k$$10 = d$$36 == null;
      var l$$26 = 0;
      var m$$7 = a$$74.length;
      var v12992 = d$$36;
      if (v12992) {
        v12992 = typeof d$$36 == "object";
      }
      if (v12992) {
        for (l$$26 in d$$36) {
          JAM.call(e$$61.access, e$$61, [a$$74, c$$33, l$$26, d$$36[l$$26], 1, h$$21, f$$16], JAM.policy.p3);
        }
        g$$18 = 1;
      } else {
        if (f$$16 !== b$$9) {
          var v12993 = i$$95 === b$$9;
          if (v12993) {
            v12993 = JAM.call(e$$61.isFunction, e$$61, [f$$16], JAM.policy.p3);
          }
          j$$23 = v12993;
          if (k$$10) {
            var v18452;
            if (j$$23) {
              j$$23 = c$$33;
              v18452 = c$$33 = v666;
            } else {
              JAM.call(c$$33.call, c$$33, [a$$74, f$$16], JAM.policy.p3);
              v18452 = c$$33 = null;
            }
            v18452;
          }
          if (c$$33) {
            var v6013 = l$$26 < m$$7;
            for (;v6013;) {
              var v6011 = a$$74[l$$26];
              var v12994;
              if (j$$23) {
                v12994 = JAM.call(f$$16.call, f$$16, [a$$74[l$$26], l$$26, JAM.call(c$$33, null, [a$$74[l$$26], d$$36], JAM.policy.p3)], JAM.policy.p3);
              } else {
                v12994 = f$$16;
              }
              JAM.call(c$$33, null, [v6011, d$$36, v12994, i$$95], JAM.policy.p3);
              l$$26++;
              v6013 = l$$26 < m$$7;
            }
          }
          g$$18 = 1;
        }
      }
      var v6016;
      if (g$$18) {
        v6016 = a$$74;
      } else {
        var v12995;
        if (k$$10) {
          v12995 = JAM.call(c$$33.call, c$$33, [a$$74], JAM.policy.p3);
        } else {
          var v18455;
          if (m$$7) {
            v18455 = JAM.call(c$$33, null, [a$$74[0], d$$36], JAM.policy.p3);
          } else {
            v18455 = h$$21;
          }
          v12995 = v18455;
        }
        v6016 = v12995;
      }
      return v6016;
    }
    function v665(a$$73, c$$32) {
      function g$$17() {
        return JAM.call(a$$73.apply, a$$73, [c$$32, JAM.call(f$$15.concat, f$$15, [JAM.call(F$$1.call, F$$1, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
      }
      if (typeof c$$32 == "string") {
        var d$$35 = a$$73[c$$32];
        c$$32 = a$$73;
        a$$73 = d$$35;
      }
      if (!JAM.call(e$$61.isFunction, e$$61, [a$$73], JAM.policy.p3)) {
        return b$$9;
      }
      var f$$15 = JAM.call(F$$1.call, F$$1, [arguments, 2], JAM.policy.p3);
      var v12999 = a$$73.guid;
      if (!v12999) {
        v12999 = g$$17.guid;
      }
      var v6020 = v12999;
      if (!v6020) {
        v6020 = e$$61.guid;
        e$$61.guid = e$$61.guid + 1;
      }
      g$$17.guid = a$$73.guid = v6020;
      return g$$17;
    }
    function v664(a$$72, c$$31, d$$34) {
      var f$$14;
      var g$$16;
      var h$$20 = [];
      var i$$94 = 0;
      var j$$22 = a$$72.length;
      var v6021 = a$$72 instanceof e$$61;
      if (!v6021) {
        var v18458 = j$$22 !== b$$9;
        if (v18458) {
          v18458 = typeof j$$22 == "number";
        }
        var v13001 = v18458;
        if (v13001) {
          var v27606 = j$$22 > 0;
          if (v27606) {
            v27606 = a$$72[0];
          }
          var v26028 = v27606;
          if (v26028) {
            v26028 = a$$72[j$$22 - 1];
          }
          var v23633 = v26028;
          if (!v23633) {
            v23633 = j$$22 === 0;
          }
          var v18459 = v23633;
          if (!v18459) {
            v18459 = JAM.call(e$$61.isArray, e$$61, [a$$72], JAM.policy.p3);
          }
          v13001 = v18459;
        }
        v6021 = v13001;
      }
      var k$$9 = v6021;
      if (k$$9) {
        var v6022 = i$$94 < j$$22;
        for (;v6022;) {
          f$$14 = JAM.call(c$$31, null, [a$$72[i$$94], i$$94, d$$34], JAM.policy.p3);
          var v13004 = f$$14 != null;
          if (v13004) {
            h$$20[h$$20.length] = f$$14;
          }
          i$$94++;
          v6022 = i$$94 < j$$22;
        }
      } else {
        for (g$$16 in a$$72) {
          f$$14 = JAM.call(c$$31, null, [a$$72[g$$16], g$$16, d$$34], JAM.policy.p3);
          var v13006 = f$$14 != null;
          if (v13006) {
            h$$20[h$$20.length] = f$$14;
          }
        }
      }
      var v6023 = h$$20.concat;
      return JAM.call(v6023.apply, v6023, [[], h$$20], JAM.policy.p3);
    }
    function v663(a$$71, b$$42, c$$30) {
      var d$$33 = [];
      var e$$63;
      c$$30 = !!c$$30;
      var f$$13 = 0;
      var g$$15 = a$$71.length;
      var v6025 = f$$13 < g$$15;
      for (;v6025;) {
        e$$63 = !!JAM.call(b$$42, null, [a$$71[f$$13], f$$13], JAM.policy.p3);
        var v13008 = c$$30 !== e$$63;
        if (v13008) {
          JAM.call(d$$33.push, d$$33, [a$$71[f$$13]], JAM.policy.p3);
        }
        f$$13++;
        v6025 = f$$13 < g$$15;
      }
      return d$$33;
    }
    function v662(a$$70, c$$29) {
      var d$$32 = a$$70.length;
      var e$$62 = 0;
      if (typeof c$$29.length == "number") {
        var f$$12 = c$$29.length;
        var v6027 = e$$62 < f$$12;
        for (;v6027;) {
          var v6026 = d$$32;
          d$$32 = d$$32 + 1;
          introspect(JAM.policy.p2) {
            a$$70[v6026] = c$$29[e$$62];
          }
          e$$62++;
          v6027 = e$$62 < f$$12;
        }
      } else {
        var v6029 = c$$29[e$$62] !== b$$9;
        for (;v6029;) {
          var v6028 = d$$32;
          d$$32 = d$$32 + 1;
          var v13011 = e$$62;
          e$$62 = e$$62 + 1;
          introspect(JAM.policy.p2) {
            a$$70[v6028] = c$$29[v13011];
          }
          v6029 = c$$29[e$$62] !== b$$9;
        }
      }
      a$$70.length = d$$32;
      return a$$70;
    }
    function v661(a$$69, b$$41, c$$28) {
      var d$$31;
      if (b$$41) {
        if (H$$1) {
          return JAM.call(H$$1.call, H$$1, [b$$41, a$$69, c$$28], JAM.policy.p3);
        }
        d$$31 = b$$41.length;
        var v13013;
        if (c$$28) {
          var v18465;
          if (c$$28 < 0) {
            v18465 = JAM.call(Math.max, Math, [0, d$$31 + c$$28], JAM.policy.p3);
          } else {
            v18465 = c$$28;
          }
          v13013 = v18465;
        } else {
          v13013 = 0;
        }
        c$$28 = v13013;
        var v6032 = c$$28 < d$$31;
        for (;v6032;) {
          var v13014 = c$$28 in b$$41;
          if (v13014) {
            v13014 = b$$41[c$$28] === a$$69;
          }
          if (v13014) {
            return c$$28;
          }
          c$$28++;
          v6032 = c$$28 < d$$31;
        }
      }
      return -1;
    }
    function v660(a$$68, b$$40) {
      var c$$27 = b$$40 || [];
      if (a$$68 != null) {
        var d$$30 = JAM.call(e$$61.type, e$$61, [a$$68], JAM.policy.p3);
        var v6033;
        var v27608 = a$$68.length == null;
        if (!v27608) {
          v27608 = d$$30 === "string";
        }
        var v26030 = v27608;
        if (!v26030) {
          v26030 = d$$30 === "function";
        }
        var v23638 = v26030;
        if (!v23638) {
          v23638 = d$$30 === "regexp";
        }
        var v18467 = v23638;
        if (!v18467) {
          v18467 = JAM.call(e$$61.isWindow, e$$61, [a$$68], JAM.policy.p3);
        }
        if (v18467) {
          v6033 = JAM.call(E$$1.call, E$$1, [c$$27, a$$68], JAM.policy.p3);
        } else {
          v6033 = JAM.call(e$$61.merge, e$$61, [c$$27, a$$68], JAM.policy.p3);
        }
        v6033;
      }
      return c$$27;
    }
    function v659(a$$67) {
      var v6035;
      if (a$$67 == null) {
        v6035 = "";
      } else {
        var v18468 = a$$67 + "";
        var v13016 = JAM.call(v18468.replace, v18468, [k$$6, ""], JAM.policy.p3);
        v6035 = JAM.call(v13016.replace, v13016, [l$$24, ""], JAM.policy.p3);
      }
      return v6035;
    }
    function v658(a$$66) {
      var v6036;
      if (a$$66 == null) {
        v6036 = "";
      } else {
        v6036 = JAM.call(G$$1.call, G$$1, [a$$66], JAM.policy.p3);
      }
      return v6036;
    }
    function v657(a$$65, c$$26, d$$29) {
      var f$$11;
      var g$$14 = 0;
      var h$$19 = a$$65.length;
      var v6037 = h$$19 === b$$9;
      if (!v6037) {
        v6037 = JAM.call(e$$61.isFunction, e$$61, [a$$65], JAM.policy.p3);
      }
      var i$$93 = v6037;
      if (d$$29) {
        if (i$$93) {
          for (f$$11 in a$$65) {
            if (JAM.call(c$$26.apply, c$$26, [a$$65[f$$11], d$$29], JAM.policy.p3) === !1) {
              break;
            }
          }
        } else {
          var v6040 = g$$14 < h$$19;
          for (;v6040;) {
            var v23640 = g$$14;
            g$$14 = g$$14 + 1;
            if (JAM.call(c$$26.apply, c$$26, [a$$65[v23640], d$$29], JAM.policy.p3) === !1) {
              break;
            }
            v6040 = g$$14 < h$$19;
          }
        }
      } else {
        if (i$$93) {
          for (f$$11 in a$$65) {
            if (JAM.call(c$$26.call, c$$26, [a$$65[f$$11], f$$11, a$$65[f$$11]], JAM.policy.p3) === !1) {
              break;
            }
          }
        } else {
          var v6043 = g$$14 < h$$19;
          for (;v6043;) {
            var v18473 = a$$65[g$$14];
            var v23641 = g$$14;
            g$$14 = g$$14 + 1;
            if (JAM.call(c$$26.call, c$$26, [v18473, g$$14, a$$65[v23641]], JAM.policy.p3) === !1) {
              break;
            }
            v6043 = g$$14 < h$$19;
          }
        }
      }
      return a$$65;
    }
    function v656(a$$64, b$$39) {
      var v6044 = a$$64.nodeName;
      if (v6044) {
        var v18475 = a$$64.nodeName;
        v6044 = JAM.call(v18475.toUpperCase, v18475, [], JAM.policy.p3) === JAM.call(b$$39.toUpperCase, b$$39, [], JAM.policy.p3);
      }
      return v6044;
    }
    function v655(a$$63) {
      var v6045 = JAM.call(a$$63.replace, a$$63, [w$$12, "ms-"], JAM.policy.p3);
      return JAM.call(v6045.replace, v6045, [v$$5, x$$68], JAM.policy.p3);
    }
    function v654(b$$37) {
      function v653(b$$38) {
        var v6046 = a$$13.eval;
        JAM.call(v6046.call, v6046, [a$$13, b$$38], JAM.policy.p3);
        return;
      }
      var v13030 = b$$37;
      if (v13030) {
        v13030 = JAM.call(j$$19.test, j$$19, [b$$37], JAM.policy.p3);
      }
      var v6047 = v13030;
      if (v6047) {
        var v18476 = a$$13.execScript;
        if (!v18476) {
          v18476 = v653;
        }
        JAM.call(v18476, null, [b$$37], JAM.policy.p3);
      }
      return;
    }
    function v652() {
      return;
    }
    function v651(c$$25) {
      var v13032 = typeof c$$25 != "string";
      if (!v13032) {
        v13032 = !c$$25;
      }
      if (v13032) {
        return null;
      }
      var d$$28;
      var f$$10;
      try {
        var v6049;
        if (a$$13.DOMParser) {
          f$$10 = new DOMParser;
          v6049 = d$$28 = JAM.call(f$$10.parseFromString, f$$10, [c$$25, "text/xml"], JAM.policy.p3);
        } else {
          d$$28 = new ActiveXObject("Microsoft.XMLDOM");
          d$$28.async = "false";
          v6049 = JAM.call(d$$28.loadXML, d$$28, [c$$25], JAM.policy.p3);
        }
        v6049;
      } catch (g$$13) {
        d$$28 = b$$9;
      }
      var v18479 = !d$$28;
      if (!v18479) {
        v18479 = !d$$28.documentElement;
      }
      var v13034 = v18479;
      if (!v13034) {
        v13034 = JAM.call(d$$28.getElementsByTagName, d$$28, ["parsererror"], JAM.policy.p3).length;
      }
      var v6050 = v13034;
      if (v6050) {
        JAM.call(e$$61.error, e$$61, ["Invalid XML: " + c$$25], JAM.policy.p3);
      }
      return d$$28;
    }
    function v650(b$$36) {
      var v13036 = typeof b$$36 != "string";
      if (!v13036) {
        v13036 = !b$$36;
      }
      if (v13036) {
        return null;
      }
      b$$36 = JAM.call(e$$61.trim, e$$61, [b$$36], JAM.policy.p3);
      var v13037 = a$$13.JSON;
      if (v13037) {
        v13037 = a$$13.JSON.parse;
      }
      if (v13037) {
        var v6052 = a$$13.JSON;
        return JAM.call(v6052.parse, v6052, [b$$36], JAM.policy.p3);
      }
      var v23645 = JAM.call(b$$36.replace, b$$36, [o$$2, "@"], JAM.policy.p3);
      var v18485 = JAM.call(v23645.replace, v23645, [p$$24, "]"], JAM.policy.p3);
      if (JAM.call(n$$59.test, n$$59, [JAM.call(v18485.replace, v18485, [q$$1, ""], JAM.policy.p3)], JAM.policy.p3)) {
        return JAM.call(JAM.new(Function, ["return " + b$$36]), null, [], JAM.policy.p3);
      }
      JAM.call(e$$61.error, e$$61, ["Invalid JSON: " + b$$36], JAM.policy.p3);
      return;
    }
    function v649(a$$62) {
      throw new Error(a$$62);
    }
    function v648(a$$61) {
      var b$$35;
      for (b$$35 in a$$61) {
        return !1;
      }
      return !0;
    }
    function v647(a$$60) {
      var v23646 = !a$$60;
      if (!v23646) {
        v23646 = JAM.call(e$$61.type, e$$61, [a$$60], JAM.policy.p3) !== "object";
      }
      var v18486 = v23646;
      if (!v18486) {
        v18486 = a$$60.nodeType;
      }
      var v13040 = v18486;
      if (!v13040) {
        v13040 = JAM.call(e$$61.isWindow, e$$61, [a$$60], JAM.policy.p3);
      }
      if (v13040) {
        return !1;
      }
      try {
        var v18488 = a$$60.constructor;
        if (v18488) {
          v18488 = !JAM.call(D$$1.call, D$$1, [a$$60, "constructor"], JAM.policy.p3);
        }
        var v13041 = v18488;
        if (v13041) {
          v13041 = !JAM.call(D$$1.call, D$$1, [a$$60.constructor.prototype, "isPrototypeOf"], JAM.policy.p3);
        }
        if (v13041) {
          return !1;
        }
      } catch (c$$24) {
        return !1;
      }
      var d$$27;
      for (d$$27 in a$$60) {
      }
      var v6059 = d$$27 === b$$9;
      if (!v6059) {
        v6059 = JAM.call(D$$1.call, D$$1, [a$$60, d$$27], JAM.policy.p3);
      }
      return v6059;
    }
    function v646(a$$59) {
      var v6060;
      if (a$$59 == null) {
        v6060 = String(a$$59);
      } else {
        var v13043 = I$$1[JAM.call(C$$1.call, C$$1, [a$$59], JAM.policy.p3)];
        if (!v13043) {
          v13043 = "object";
        }
        v6060 = v13043;
      }
      return v6060;
    }
    function v645(a$$58) {
      var v6061 = !isNaN(parseFloat(a$$58));
      if (v6061) {
        v6061 = isFinite(a$$58);
      }
      return v6061;
    }
    function v644(a$$57) {
      var v6062 = a$$57 != null;
      if (v6062) {
        v6062 = a$$57 == a$$57.window;
      }
      return v6062;
    }
    function v643(a$$56) {
      return JAM.call(e$$61.type, e$$61, [a$$56], JAM.policy.p3) === "array";
    }
    function v642(a$$55) {
      return JAM.call(e$$61.type, e$$61, [a$$55], JAM.policy.p3) === "function";
    }
    function v641() {
      if (!A$$1) {
        A$$1 = JAM.call(e$$61.Callbacks, e$$61, ["once memory"], JAM.policy.p3);
        if (c$$5.readyState === "complete") {
          return JAM.call(setTimeout, null, [e$$61.ready, 1]);
        }
        if (c$$5.addEventListener) {
          JAM.call(c$$5.addEventListener, c$$5, ["DOMContentLoaded", B$$1, !1], JAM.policy.p3);
          JAM.call(a$$13.addEventListener, a$$13, ["load", e$$61.ready, !1], JAM.policy.p3);
        } else {
          if (c$$5.attachEvent) {
            JAM.call(c$$5.attachEvent, c$$5, ["onreadystatechange", B$$1], JAM.policy.p3);
            JAM.call(a$$13.attachEvent, a$$13, ["onload", e$$61.ready], JAM.policy.p3);
            var b$$34 = !1;
            try {
              b$$34 = a$$13.frameElement == null;
            } catch (d$$26) {
            }
            var v13052 = c$$5.documentElement.doScroll;
            if (v13052) {
              v13052 = b$$34;
            }
            var v6068 = v13052;
            if (v6068) {
              J$$1();
            }
          }
        }
      }
      return;
    }
    function v640(a$$54) {
      var v18495 = a$$54 === !0;
      if (v18495) {
        v18495 = !(e$$61.readyWait = e$$61.readyWait - 1);
      }
      var v13053 = v18495;
      if (!v13053) {
        var v18496 = a$$54 !== !0;
        if (v18496) {
          v18496 = !e$$61.isReady;
        }
        v13053 = v18496;
      }
      if (v13053) {
        if (!c$$5.body) {
          return JAM.call(setTimeout, null, [e$$61.ready, 1]);
        }
        e$$61.isReady = !0;
        var v13055 = a$$54 !== !0;
        if (v13055) {
          v13055 = (e$$61.readyWait = e$$61.readyWait - 1) > 0;
        }
        if (v13055) {
          return;
        }
        JAM.call(A$$1.fireWith, A$$1, [c$$5, [e$$61]], JAM.policy.p3);
        var v13057 = e$$61.fn.trigger;
        if (v13057) {
          var v23654 = e$$61(c$$5);
          var v18501 = JAM.call(v23654.trigger, v23654, ["ready"], JAM.policy.p3);
          JAM.call(v18501.off, v18501, ["ready"], JAM.policy.p3);
        }
      }
      return;
    }
    function v639(a$$53) {
      var v6076;
      if (a$$53) {
        v6076 = e$$61.readyWait;
        e$$61.readyWait = e$$61.readyWait + 1;
      } else {
        v6076 = JAM.call(e$$61.ready, e$$61, [!0], JAM.policy.p3);
      }
      v6076;
      return;
    }
    function v638(b$$33) {
      var v13059 = a$$13.$ === e$$61;
      if (v13059) {
        a$$13.$ = g$$10;
      }
      var v18504 = b$$33;
      if (v18504) {
        v18504 = a$$13.jQuery === e$$61;
      }
      var v13060 = v18504;
      if (v13060) {
        a$$13.jQuery = f$$7;
      }
      return e$$61;
    }
    function v637() {
      var a$$52;
      var c$$23;
      var d$$25;
      var f$$9;
      var g$$12;
      var h$$18;
      var v6077 = arguments[0];
      if (!v6077) {
        v6077 = {};
      }
      var i$$92 = v6077;
      var j$$21 = 1;
      var k$$8 = arguments.length;
      var l$$25 = !1;
      var v18505 = typeof i$$92 == "boolean";
      if (v18505) {
        l$$25 = i$$92;
        var v27611 = arguments[1];
        if (!v27611) {
          v27611 = {};
        }
        i$$92 = v27611;
        j$$21 = 2;
      }
      var v23657 = typeof i$$92 != "object";
      if (v23657) {
        v23657 = !JAM.call(e$$61.isFunction, e$$61, [i$$92], JAM.policy.p3);
      }
      var v18506 = v23657;
      if (v18506) {
        i$$92 = {};
      }
      var v13062 = k$$8 === j$$21;
      if (v13062) {
        i$$92 = this;
        --j$$21;
      }
      var v6081 = j$$21 < k$$8;
      for (;v6081;) {
        if ((a$$52 = arguments[j$$21]) != null) {
          for (c$$23 in a$$52) {
            d$$25 = i$$92[c$$23];
            f$$9 = a$$52[c$$23];
            if (i$$92 === f$$9) {
              continue;
            }
            var v6079;
            var v18507 = l$$25 && f$$9;
            if (v18507) {
              var v23658 = JAM.call(e$$61.isPlainObject, e$$61, [f$$9], JAM.policy.p3);
              if (!v23658) {
                v23658 = g$$12 = JAM.call(e$$61.isArray, e$$61, [f$$9], JAM.policy.p3);
              }
              v18507 = v23658;
            }
            if (v18507) {
              var v18508;
              if (g$$12) {
                g$$12 = !1;
                var v26039;
                var v28632 = d$$25;
                if (v28632) {
                  v28632 = JAM.call(e$$61.isArray, e$$61, [d$$25], JAM.policy.p3);
                }
                if (v28632) {
                  v26039 = d$$25;
                } else {
                  v26039 = [];
                }
                v18508 = h$$18 = v26039;
              } else {
                var v23659;
                var v27613 = d$$25;
                if (v27613) {
                  v27613 = JAM.call(e$$61.isPlainObject, e$$61, [d$$25], JAM.policy.p3);
                }
                if (v27613) {
                  v23659 = d$$25;
                } else {
                  v23659 = {};
                }
                v18508 = h$$18 = v23659;
              }
              v18508;
              var v31141 = JAM.call(e$$61.extend, e$$61, [l$$25, h$$18, f$$9], JAM.policy.p3);
              introspect(JAM.policy.p2) {
                v6079 = i$$92[c$$23] = v31141;
              }
            } else {
              var v13064 = f$$9 !== b$$9;
              if (v13064) {
                introspect(JAM.policy.p2) {
                  v13064 = i$$92[c$$23] = f$$9;
                }
              }
              v6079 = v13064;
            }
            v6079;
          }
        }
        j$$21++;
        v6081 = j$$21 < k$$8;
      }
      return i$$92;
    }
    function v636() {
      var v6082 = this.prevObject;
      if (!v6082) {
        v6082 = JAM.call(this.constructor, this, [null], JAM.policy.p3);
      }
      return v6082;
    }
    function v635(a$$51) {
      function v634(b$$32, c$$22) {
        return JAM.call(a$$51.call, a$$51, [b$$32, c$$22, b$$32], JAM.policy.p3);
      }
      return JAM.call(this.pushStack, this, [JAM.call(e$$61.map, e$$61, [this, v634], JAM.policy.p3)], JAM.policy.p3);
    }
    function v633() {
      var v6084 = JAM.call(F$$1.apply, F$$1, [this, arguments], JAM.policy.p3);
      var v13067 = JAM.call(F$$1.call, F$$1, [arguments], JAM.policy.p3);
      return JAM.call(this.pushStack, this, [v6084, "slice", JAM.call(v13067.join, v13067, [","], JAM.policy.p3)], JAM.policy.p3);
    }
    function v632() {
      return JAM.call(this.eq, this, [-1], JAM.policy.p3);
    }
    function v631() {
      return JAM.call(this.eq, this, [0], JAM.policy.p3);
    }
    function v630(a$$50) {
      a$$50 = +a$$50;
      var v6086;
      if (a$$50 === -1) {
        v6086 = JAM.call(this.slice, this, [a$$50], JAM.policy.p3);
      } else {
        v6086 = JAM.call(this.slice, this, [a$$50, a$$50 + 1], JAM.policy.p3);
      }
      return v6086;
    }
    function v629(a$$49) {
      JAM.call(e$$61.bindReady, e$$61, [], JAM.policy.p3);
      JAM.call(A$$1.add, A$$1, [a$$49], JAM.policy.p3);
      return this;
    }
    function v628(a$$48, b$$31) {
      return JAM.call(e$$61.each, e$$61, [this, a$$48, b$$31], JAM.policy.p3);
    }
    function v627(a$$47, b$$30, c$$21) {
      var d$$24 = JAM.call(this.constructor, this, [], JAM.policy.p3);
      var v23660;
      if (JAM.call(e$$61.isArray, e$$61, [a$$47], JAM.policy.p3)) {
        v23660 = JAM.call(E$$1.apply, E$$1, [d$$24, a$$47], JAM.policy.p3);
      } else {
        v23660 = JAM.call(e$$61.merge, e$$61, [d$$24, a$$47], JAM.policy.p3);
      }
      v23660;
      d$$24.prevObject = this;
      d$$24.context = this.context;
      var v13070;
      if (b$$30 === "find") {
        var v23661 = this.selector;
        var v26042;
        if (this.selector) {
          v26042 = " ";
        } else {
          v26042 = "";
        }
        v13070 = d$$24.selector = v23661 + v26042 + c$$21;
      } else {
        var v18510 = b$$30;
        if (v18510) {
          v18510 = d$$24.selector = this.selector + "." + b$$30 + "(" + c$$21 + ")";
        }
        v13070 = v18510;
      }
      v13070;
      return d$$24;
    }
    function v626(a$$46) {
      var v6087;
      if (a$$46 == null) {
        v6087 = JAM.call(this.toArray, this, [], JAM.policy.p3);
      } else {
        var v13071;
        if (a$$46 < 0) {
          v13071 = this[this.length + a$$46];
        } else {
          v13071 = this[a$$46];
        }
        v6087 = v13071;
      }
      return v6087;
    }
    function v625() {
      return JAM.call(F$$1.call, F$$1, [this, 0], JAM.policy.p3);
    }
    function v624() {
      return this.length;
    }
    function v623(a$$45, d$$23, f$$8) {
      var g$$11;
      var h$$17;
      var j$$20;
      var k$$7;
      if (!a$$45) {
        return this;
      }
      if (a$$45.nodeType) {
        this.context = this[0] = a$$45;
        this.length = 1;
        return this;
      }
      var v18514 = a$$45 === "body";
      if (v18514) {
        v18514 = !d$$23;
      }
      var v13073 = v18514;
      if (v13073) {
        v13073 = c$$5.body;
      }
      if (v13073) {
        this.context = c$$5;
        this[0] = c$$5.body;
        this.selector = a$$45;
        this.length = 1;
        return this;
      }
      if (typeof a$$45 == "string") {
        var v6091;
        var v23665 = JAM.call(a$$45.charAt, a$$45, [0], JAM.policy.p3) !== "<";
        if (!v23665) {
          v23665 = JAM.call(a$$45.charAt, a$$45, [a$$45.length - 1], JAM.policy.p3) !== ">";
        }
        var v18515 = v23665;
        if (!v18515) {
          v18515 = a$$45.length < 3;
        }
        if (v18515) {
          v6091 = g$$11 = JAM.call(i$$91.exec, i$$91, [a$$45], JAM.policy.p3);
        } else {
          v6091 = g$$11 = [null, a$$45, null];
        }
        v6091;
        var v13076 = g$$11;
        if (v13076) {
          var v18516 = g$$11[1];
          if (!v18516) {
            v18516 = !d$$23;
          }
          v13076 = v18516;
        }
        if (v13076) {
          if (g$$11[1]) {
            var v23669;
            if (d$$23 instanceof e$$61) {
              v23669 = d$$23[0];
            } else {
              v23669 = d$$23;
            }
            d$$23 = v23669;
            var v23670;
            if (d$$23) {
              var v26048 = d$$23.ownerDocument;
              if (!v26048) {
                v26048 = d$$23;
              }
              v23670 = v26048;
            } else {
              v23670 = c$$5;
            }
            k$$7 = v23670;
            j$$20 = JAM.call(m$$6.exec, m$$6, [a$$45], JAM.policy.p3);
            var v13077;
            if (j$$20) {
              var v18517;
              if (JAM.call(e$$61.isPlainObject, e$$61, [d$$23], JAM.policy.p3)) {
                a$$45 = [JAM.call(c$$5.createElement, c$$5, [j$$20[1]], JAM.policy.p3)];
                var v26050 = e$$61.fn.attr;
                v18517 = JAM.call(v26050.call, v26050, [a$$45, d$$23, !0], JAM.policy.p3);
              } else {
                v18517 = a$$45 = [JAM.call(k$$7.createElement, k$$7, [j$$20[1]], JAM.policy.p3)];
              }
              v13077 = v18517;
            } else {
              j$$20 = JAM.call(e$$61.buildFragment, e$$61, [[g$$11[1]], [k$$7]], JAM.policy.p3);
              var v26054;
              if (j$$20.cacheable) {
                v26054 = JAM.call(e$$61.clone, e$$61, [j$$20.fragment], JAM.policy.p3);
              } else {
                v26054 = j$$20.fragment;
              }
              v13077 = a$$45 = v26054.childNodes;
            }
            v13077;
            return JAM.call(e$$61.merge, e$$61, [this, a$$45], JAM.policy.p3);
          }
          h$$17 = JAM.call(c$$5.getElementById, c$$5, [g$$11[2]], JAM.policy.p3);
          var v13078 = h$$17;
          if (v13078) {
            v13078 = h$$17.parentNode;
          }
          if (v13078) {
            if (h$$17.id !== g$$11[2]) {
              return JAM.call(f$$8.find, f$$8, [a$$45], JAM.policy.p3);
            }
            this.length = 1;
            this[0] = h$$17;
          }
          this.context = c$$5;
          this.selector = a$$45;
          return this;
        }
        var v6097;
        var v18518 = !d$$23;
        if (!v18518) {
          v18518 = d$$23.jquery;
        }
        if (v18518) {
          var v13081 = d$$23 || f$$8;
          v6097 = JAM.call(v13081.find, v13081, [a$$45], JAM.policy.p3);
        } else {
          var v13082 = JAM.call(this.constructor, this, [d$$23], JAM.policy.p3);
          v6097 = JAM.call(v13082.find, v13082, [a$$45], JAM.policy.p3);
        }
        return v6097;
      }
      if (JAM.call(e$$61.isFunction, e$$61, [a$$45], JAM.policy.p3)) {
        return JAM.call(f$$8.ready, f$$8, [a$$45], JAM.policy.p3);
      }
      var v6100 = a$$45.selector !== b$$9;
      if (v6100) {
        this.selector = a$$45.selector;
        this.context = a$$45.context;
      }
      return JAM.call(e$$61.makeArray, e$$61, [a$$45, this], JAM.policy.p3);
    }
    function x$$68(a$$44, b$$29) {
      var v6101 = b$$29 + "";
      return JAM.call(v6101.toUpperCase, v6101, [], JAM.policy.p3);
    }
    function e$$61(a$$43, b$$28) {
      return JAM.new(e$$61.fn.init, [a$$43, b$$28, h$$16]);
    }
    function J$$1() {
      if (!e$$61.isReady) {
        try {
          var v6103 = c$$5.documentElement;
          JAM.call(v6103.doScroll, v6103, ["left"], JAM.policy.p3);
        } catch (a$$42) {
          JAM.call(setTimeout, null, [J$$1, 1]);
          return;
        }
        JAM.call(e$$61.ready, e$$61, [], JAM.policy.p3);
      }
      return;
    }
    var f$$7 = a$$13.jQuery;
    var g$$10 = a$$13.$;
    var h$$16;
    var i$$91 = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;
    var j$$19 = /\S/;
    var k$$6 = /^\s+/;
    var l$$24 = /\s+$/;
    var m$$6 = /^<(\w+)\s*\/?>(?:<\/\1>)?$/;
    var n$$59 = /^[\],:{}\s]*$/;
    var o$$2 = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
    var p$$24 = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
    var q$$1 = /(?:^|:|,)(?:\s*\[)+/g;
    var r$$3 = /(webkit)[ \/]([\w.]+)/;
    var s$$16 = /(opera)(?:.*version)?[ \/]([\w.]+)/;
    var t$$3 = /(msie) ([\w.]+)/;
    var u$$2 = /(mozilla)(?:.*? rv:([\w.]+))?/;
    var v$$5 = /-([a-z]|[0-9])/ig;
    var w$$12 = /^-ms-/;
    var y$$50 = d$$6.userAgent;
    var z$$3;
    var A$$1;
    var B$$1;
    var C$$1 = Object.prototype.toString;
    var D$$1 = Object.prototype.hasOwnProperty;
    var E$$1 = Array.prototype.push;
    var F$$1 = Array.prototype.slice;
    var G$$1 = String.prototype.trim;
    var H$$1 = Array.prototype.indexOf;
    var I$$1 = {};
    e$$61.fn = e$$61.prototype = {constructor:e$$61, init:v623, selector:"", jquery:"1.7.2", length:0, size:v624, toArray:v625, get:v626, pushStack:v627, each:v628, ready:v629, eq:v630, first:v631, last:v632, slice:v633, map:v635, end:v636, push:E$$1, sort:[].sort, splice:[].splice};
    e$$61.fn.init.prototype = e$$61.fn;
    e$$61.extend = e$$61.fn.extend = v637;
    var v29972 = !1;
    var v30205 = Array.isArray;
    if (!v30205) {
      v30205 = v643;
    }
    var v29973 = v30205;
    var v30206;
    if (G$$1) {
      v30206 = v658;
    } else {
      v30206 = v659;
    }
    JAM.call(e$$61.extend, e$$61, [{noConflict:v638, isReady:v29972, readyWait:1, holdReady:v639, ready:v640, bindReady:v641, isFunction:v642, isArray:v29973, isWindow:v644, isNumeric:v645, type:v646, isPlainObject:v647, isEmptyObject:v648, error:v649, parseJSON:v650, parseXML:v651, noop:v652, globalEval:v654, camelCase:v655, nodeName:v656, each:v657, trim:v30206, makeArray:v660, inArray:v661, merge:v662, grep:v663, map:v664, guid:1, proxy:v665, access:v667, now:v668, uaMatch:v669, sub:v671, browser:{}}], 
    JAM.policy.p3);
    JAM.call(e$$61.each, e$$61, [JAM.call("Boolean Number String Function Array Date RegExp Object".split, "Boolean Number String Function Array Date RegExp Object", [" "], JAM.policy.p3), v672], JAM.policy.p3);
    z$$3 = JAM.call(e$$61.uaMatch, e$$61, [y$$50], JAM.policy.p3);
    var v27622 = z$$3.browser;
    if (v27622) {
      var v29278 = e$$61.browser;
      var v29279 = z$$3.browser;
      introspect(JAM.policy.p2) {
        v29278[v29279] = !0;
      }
      e$$61.browser.version = z$$3.version;
    }
    var v26055 = e$$61.browser.webkit;
    if (v26055) {
      e$$61.browser.safari = !0;
    }
    var v23677 = JAM.call(j$$19.test, j$$19, ["\u00a0"], JAM.policy.p3);
    if (v23677) {
      k$$6 = /^[\s\xA0]+/;
      l$$24 = /[\s\xA0]+$/;
    }
    h$$16 = e$$61(c$$5);
    var v13087;
    if (c$$5.addEventListener) {
      v13087 = B$$1 = v673;
    } else {
      var v18519 = c$$5.attachEvent;
      if (v18519) {
        v18519 = B$$1 = v674;
      }
      v13087 = v18519;
    }
    v13087;
    return e$$61;
  }
  function I(a$$142) {
    var v6111;
    if (f$$4.event.special.hover) {
      v6111 = a$$142;
    } else {
      v6111 = JAM.call(a$$142.replace, a$$142, [B, "mouseenter$1 mouseleave$1"], JAM.policy.p3);
    }
    return v6111;
  }
  function G(a$$140) {
    var b$$93 = JAM.call(F.exec, F, [a$$140], JAM.policy.p3);
    if (b$$93) {
      var v23679 = b$$93[1];
      if (!v23679) {
        v23679 = "";
      }
      var v18522 = v23679;
      var v31142 = JAM.call(v18522.toLowerCase, v18522, [], JAM.policy.p3);
      b$$93[1] = v31142;
      var v18523 = b$$93[3];
      if (v18523) {
        v18523 = new RegExp("(?:^|\\s)" + b$$93[3] + "(?:\\s|$)");
      }
      b$$93[3] = v18523;
    }
    return b$$93;
  }
  function cy(a$$14) {
    var v6112;
    if (JAM.call(f$$4.isWindow, f$$4, [a$$14], JAM.policy.p3)) {
      v6112 = a$$14;
    } else {
      var v13089;
      if (a$$14.nodeType === 9) {
        var v18524 = a$$14.defaultView;
        if (!v18524) {
          v18524 = a$$14.parentWindow;
        }
        v13089 = v18524;
      } else {
        v13089 = !1;
      }
      v6112 = v13089;
    }
    return v6112;
  }
  function cu(a$$15) {
    if (!cj[a$$15]) {
      var b$$10 = c$$5.body;
      var v6113 = JAM.call(f$$4, null, ["<" + a$$15 + ">"], JAM.policy.p3);
      var d$$7 = JAM.call(v6113.appendTo, v6113, [b$$10], JAM.policy.p3);
      var e$$48 = JAM.call(d$$7.css, d$$7, ["display"], JAM.policy.p3);
      JAM.call(d$$7.remove, d$$7, [], JAM.policy.p3);
      var v13093 = e$$48 === "none";
      if (!v13093) {
        v13093 = e$$48 === "";
      }
      if (v13093) {
        if (!ck) {
          ck = JAM.call(c$$5.createElement, c$$5, ["iframe"], JAM.policy.p3);
          ck.frameBorder = ck.width = ck.height = 0;
        }
        JAM.call(b$$10.appendChild, b$$10, [ck], JAM.policy.p3);
        var v13094 = !cl;
        if (!v13094) {
          v13094 = !ck.createElement;
        }
        if (v13094) {
          var v23683 = ck.contentWindow;
          if (!v23683) {
            v23683 = ck.contentDocument;
          }
          cl = v23683.document;
          var v26059;
          if (f$$4.support.boxModel) {
            v26059 = "<!doctype html>";
          } else {
            v26059 = "";
          }
          JAM.call(cl.write, cl, [v26059 + "<html><body>"], JAM.policy.p3);
          JAM.call(cl.close, cl, [], JAM.policy.p3);
        }
        d$$7 = JAM.call(cl.createElement, cl, [a$$15], JAM.policy.p3);
        var v23685 = cl.body;
        JAM.call(v23685.appendChild, v23685, [d$$7], JAM.policy.p3);
        e$$48 = JAM.call(f$$4.css, f$$4, [d$$7, "display"], JAM.policy.p3);
        JAM.call(b$$10.removeChild, b$$10, [ck], JAM.policy.p3);
      }
      introspect(JAM.policy.p2) {
        cj[a$$15] = e$$48;
      }
    }
    return cj[a$$15];
  }
  function ct(a$$16, b$$11) {
    function v615() {
      introspect(JAM.policy.p2) {
        c$$6[this] = a$$16;
      }
      return;
    }
    var c$$6 = {};
    var v13095 = cp.concat;
    JAM.call(f$$4.each, f$$4, [JAM.call(v13095.apply, v13095, [[], JAM.call(cp.slice, cp, [0, b$$11], JAM.policy.p3)], JAM.policy.p3), v615], JAM.policy.p3);
    return c$$6;
  }
  function cs() {
    cq = b$$9;
    return;
  }
  function cr() {
    JAM.call(setTimeout, null, [cs, 0]);
    return cq = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
  }
  function ch$$14() {
    try {
      return new a$$13.XMLHttpRequest;
    } catch (b$$13) {
    }
    return;
  }
  function b_(a$$19, b$$14, c$$9, d$$10) {
    function v616(b$$15, e$$52) {
      var v6119;
      var v18533 = c$$9;
      if (!v18533) {
        v18533 = JAM.call(bD.test, bD, [a$$19], JAM.policy.p3);
      }
      if (v18533) {
        v6119 = JAM.call(d$$10, null, [a$$19, e$$52], JAM.policy.p3);
      } else {
        var v23687 = a$$19 + "[";
        var v26060;
        if (typeof e$$52 == "object") {
          v26060 = b$$15;
        } else {
          v26060 = "";
        }
        v6119 = b_(v23687 + v26060 + "]", e$$52, c$$9, d$$10);
      }
      v6119;
      return;
    }
    if (JAM.call(f$$4.isArray, f$$4, [b$$14], JAM.policy.p3)) {
      JAM.call(f$$4.each, f$$4, [b$$14, v616], JAM.policy.p3);
    } else {
      var v13099 = !c$$9;
      if (v13099) {
        v13099 = JAM.call(f$$4.type, f$$4, [b$$14], JAM.policy.p3) === "object";
      }
      if (v13099) {
        var e$$51;
        for (e$$51 in b$$14) {
          b_(a$$19 + "[" + e$$51 + "]", b$$14[e$$51], c$$9, d$$10);
        }
      } else {
        JAM.call(d$$10, null, [a$$19, b$$14], JAM.policy.p3);
      }
    }
    return;
  }
  function b$(a$$20, c$$10) {
    var d$$11;
    var e$$53;
    var v6124 = f$$4.ajaxSettings.flatOptions;
    if (!v6124) {
      v6124 = {};
    }
    var g$$3 = v6124;
    for (d$$11 in c$$10) {
      var v6125 = c$$10[d$$11] !== b$$9;
      if (v6125) {
        var v18537;
        if (g$$3[d$$11]) {
          v18537 = a$$20;
        } else {
          var v23689 = e$$53;
          if (!v23689) {
            v23689 = e$$53 = {};
          }
          v18537 = v23689;
        }
        var v13104 = v18537;
        introspect(JAM.policy.p2) {
          v13104[d$$11] = c$$10[d$$11];
        }
      }
    }
    if (e$$53) {
      JAM.call(f$$4.extend, f$$4, [!0, a$$20, e$$53], JAM.policy.p3);
    }
    return;
  }
  function bZ(a$$21, c$$11, d$$12, e$$54, f$$6, g$$4) {
    var v18538 = f$$6;
    if (!v18538) {
      v18538 = c$$11.dataTypes[0];
    }
    f$$6 = v18538;
    g$$4 = g$$4 || {};
    introspect(JAM.policy.p2) {
      g$$4[f$$6] = !0;
    }
    var h$$12 = a$$21[f$$6];
    var i$$88 = 0;
    var v6126;
    if (h$$12) {
      v6126 = h$$12.length;
    } else {
      v6126 = 0;
    }
    var j$$17 = v6126;
    var k$$5 = a$$21 === bS;
    var l$$23;
    var v13106 = i$$88 < j$$17;
    if (v13106) {
      var v18539 = k$$5;
      if (!v18539) {
        v18539 = !l$$23;
      }
      v13106 = v18539;
    }
    var v6127 = v13106;
    for (;v6127;) {
      l$$23 = JAM.call(h$$12[i$$88], h$$12, [c$$11, d$$12, e$$54], JAM.policy.p3);
      var v13107 = typeof l$$23 == "string";
      if (v13107) {
        var v18541;
        var v26062 = !k$$5;
        if (!v26062) {
          v26062 = g$$4[l$$23];
        }
        if (v26062) {
          v18541 = l$$23 = b$$9;
        } else {
          var v26063 = c$$11.dataTypes;
          JAM.call(v26063.unshift, v26063, [l$$23], JAM.policy.p3);
          v18541 = l$$23 = bZ(a$$21, c$$11, d$$12, e$$54, l$$23, g$$4);
        }
        v18541;
      }
      i$$88++;
      var v13108 = i$$88 < j$$17;
      if (v13108) {
        var v18542 = k$$5;
        if (!v18542) {
          v18542 = !l$$23;
        }
        v13108 = v18542;
      }
      v6127 = v13108;
    }
    var v18543 = k$$5;
    if (!v18543) {
      v18543 = !l$$23;
    }
    var v13109 = v18543;
    if (v13109) {
      v13109 = !g$$4["*"];
    }
    var v6128 = v13109;
    if (v6128) {
      l$$23 = bZ(a$$21, c$$11, d$$12, e$$54, "*", g$$4);
    }
    return l$$23;
  }
  function bY(a$$22) {
    function v617(b$$16, c$$12) {
      var v6129 = typeof b$$16 != "string";
      if (v6129) {
        c$$12 = b$$16;
        b$$16 = "*";
      }
      if (JAM.call(f$$4.isFunction, f$$4, [c$$12], JAM.policy.p3)) {
        var v6130 = JAM.call(b$$16.toLowerCase, b$$16, [], JAM.policy.p3);
        var d$$13 = JAM.call(v6130.split, v6130, [bO], JAM.policy.p3);
        var e$$55 = 0;
        var g$$5 = d$$13.length;
        var h$$13;
        var i$$89;
        var j$$18;
        var v6131 = e$$55 < g$$5;
        for (;v6131;) {
          h$$13 = d$$13[e$$55];
          j$$18 = JAM.call(/^\+/.test, /^\+/, [h$$13], JAM.policy.p3);
          if (j$$18) {
            var v26064 = JAM.call(h$$13.substr, h$$13, [1], JAM.policy.p3);
            if (!v26064) {
              v26064 = "*";
            }
            h$$13 = v26064;
          }
          var v18545 = a$$22[h$$13];
          if (!v18545) {
            v18545 = [];
          }
          introspect(JAM.policy.p2) {
            i$$89 = a$$22[h$$13] = v18545;
          }
          var v18546;
          if (j$$18) {
            v18546 = "unshift";
          } else {
            v18546 = "push";
          }
          JAM.call(i$$89[v18546], i$$89, [c$$12], JAM.policy.p3);
          e$$55++;
          v6131 = e$$55 < g$$5;
        }
      }
      return;
    }
    return v617;
  }
  function bB(a$$23, b$$17, c$$13) {
    var v6133;
    if (b$$17 === "width") {
      v6133 = a$$23.offsetWidth;
    } else {
      v6133 = a$$23.offsetHeight;
    }
    var d$$14 = v6133;
    var v6134;
    if (b$$17 === "width") {
      v6134 = 1;
    } else {
      v6134 = 0;
    }
    var e$$56 = v6134;
    var g$$6 = 4;
    if (d$$14 > 0) {
      if (c$$13 !== "border") {
        var v6135 = e$$56 < g$$6;
        for (;v6135;) {
          if (!c$$13) {
            var v26065 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, "padding" + bx[e$$56]], JAM.policy.p3));
            if (!v26065) {
              v26065 = 0;
            }
            d$$14 = d$$14 - v26065;
          }
          var v13114;
          if (c$$13 === "margin") {
            var v26066 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, c$$13 + bx[e$$56]], JAM.policy.p3));
            if (!v26066) {
              v26066 = 0;
            }
            v13114 = d$$14 = d$$14 + v26066;
          } else {
            var v26067 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, "border" + bx[e$$56] + "Width"], JAM.policy.p3));
            if (!v26067) {
              v26067 = 0;
            }
            v13114 = d$$14 = d$$14 - v26067;
          }
          v13114;
          e$$56 = e$$56 + 2;
          v6135 = e$$56 < g$$6;
        }
      }
      return d$$14 + "px";
    }
    d$$14 = JAM.call(by, null, [a$$23, b$$17], JAM.policy.p3);
    var v13115 = d$$14 < 0;
    if (!v13115) {
      v13115 = d$$14 == null;
    }
    if (v13115) {
      d$$14 = a$$23.style[b$$17];
    }
    if (JAM.call(bt.test, bt, [d$$14], JAM.policy.p3)) {
      return d$$14;
    }
    var v6141 = parseFloat(d$$14);
    if (!v6141) {
      v6141 = 0;
    }
    d$$14 = v6141;
    if (c$$13) {
      var v6142 = e$$56 < g$$6;
      for (;v6142;) {
        var v26068 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, "padding" + bx[e$$56]], JAM.policy.p3));
        if (!v26068) {
          v26068 = 0;
        }
        d$$14 = d$$14 + v26068;
        var v18550 = c$$13 !== "padding";
        if (v18550) {
          var v27638 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, "border" + bx[e$$56] + "Width"], JAM.policy.p3));
          if (!v27638) {
            v27638 = 0;
          }
          d$$14 = d$$14 + v27638;
        }
        var v13117 = c$$13 === "margin";
        if (v13117) {
          var v26070 = parseFloat(JAM.call(f$$4.css, f$$4, [a$$23, c$$13 + bx[e$$56]], JAM.policy.p3));
          if (!v26070) {
            v26070 = 0;
          }
          d$$14 = d$$14 + v26070;
        }
        e$$56 = e$$56 + 2;
        v6142 = e$$56 < g$$6;
      }
    }
    return d$$14 + "px";
  }
  function bn(a$$25) {
    var v13118 = a$$25.nodeName;
    if (!v13118) {
      v13118 = "";
    }
    var v6143 = v13118;
    var b$$19 = JAM.call(v6143.toLowerCase, v6143, [], JAM.policy.p3);
    var v6144;
    if (b$$19 === "input") {
      v6144 = bm(a$$25);
    } else {
      var v18552 = b$$19 !== "script";
      if (v18552) {
        v18552 = typeof a$$25.getElementsByTagName != "undefined";
      }
      var v13119 = v18552;
      if (v13119) {
        v13119 = JAM.call(f$$4.grep, f$$4, [JAM.call(a$$25.getElementsByTagName, a$$25, ["input"], JAM.policy.p3), bm], JAM.policy.p3);
      }
      v6144 = v13119;
    }
    v6144;
    return;
  }
  function bm(a$$26) {
    var v13121 = a$$26.type === "checkbox";
    if (!v13121) {
      v13121 = a$$26.type === "radio";
    }
    if (v13121) {
      a$$26.defaultChecked = a$$26.checked;
    }
    return;
  }
  function bl(a$$27) {
    var v6146;
    if (typeof a$$27.getElementsByTagName != "undefined") {
      v6146 = JAM.call(a$$27.getElementsByTagName, a$$27, ["*"], JAM.policy.p3);
    } else {
      var v13122;
      if (typeof a$$27.querySelectorAll != "undefined") {
        v13122 = JAM.call(a$$27.querySelectorAll, a$$27, ["*"], JAM.policy.p3);
      } else {
        v13122 = [];
      }
      v6146 = v13122;
    }
    return v6146;
  }
  function bk(a$$28, b$$20) {
    var c$$14;
    var v6147 = b$$20.nodeType === 1;
    if (v6147) {
      var v29287 = b$$20.clearAttributes;
      if (v29287) {
        JAM.call(b$$20.clearAttributes, b$$20, [], JAM.policy.p3);
      }
      var v29288 = b$$20.mergeAttributes;
      if (v29288) {
        JAM.call(b$$20.mergeAttributes, b$$20, [a$$28], JAM.policy.p3);
      }
      var v28644 = b$$20.nodeName;
      c$$14 = JAM.call(v28644.toLowerCase, v28644, [], JAM.policy.p3);
      var v27641;
      if (c$$14 === "object") {
        v27641 = JAM.set(b$$20, "outerHTML", a$$28.outerHTML);
      } else {
        var v28645;
        var v29707 = c$$14 !== "input";
        if (!v29707) {
          var v29976 = a$$28.type !== "checkbox";
          if (v29976) {
            v29976 = a$$28.type !== "radio";
          }
          v29707 = v29976;
        }
        if (v29707) {
          var v29289;
          if (c$$14 === "option") {
            v29289 = b$$20.selected = a$$28.defaultSelected;
          } else {
            var v29708;
            var v30209 = c$$14 === "input";
            if (!v30209) {
              v30209 = c$$14 === "textarea";
            }
            if (v30209) {
              v29708 = b$$20.defaultValue = a$$28.defaultValue;
            } else {
              var v30210 = c$$14 === "script";
              if (v30210) {
                v30210 = b$$20.text !== a$$28.text;
              }
              var v29978 = v30210;
              if (v29978) {
                v29978 = b$$20.text = a$$28.text;
              }
              v29708 = v29978;
            }
            v29289 = v29708;
          }
          v28645 = v29289;
        } else {
          var v29710 = a$$28.checked;
          if (v29710) {
            b$$20.defaultChecked = b$$20.checked = a$$28.checked;
          }
          var v29711 = b$$20.value !== a$$28.value;
          if (v29711) {
            v29711 = b$$20.value = a$$28.value;
          }
          v28645 = v29711;
        }
        v27641 = v28645;
      }
      v27641;
      JAM.call(b$$20.removeAttribute, b$$20, [f$$4.expando], JAM.policy.p3);
      JAM.call(b$$20.removeAttribute, b$$20, ["_submit_attached"], JAM.policy.p3);
      JAM.call(b$$20.removeAttribute, b$$20, ["_change_attached"], JAM.policy.p3);
    }
    return;
  }
  function bj(a$$29, b$$21) {
    var v13125 = b$$21.nodeType === 1;
    if (v13125) {
      v13125 = !!JAM.call(f$$4.hasData, f$$4, [a$$29], JAM.policy.p3);
    }
    if (v13125) {
      var c$$15;
      var d$$15;
      var e$$57;
      var g$$7 = JAM.call(f$$4._data, f$$4, [a$$29], JAM.policy.p3);
      var h$$14 = JAM.call(f$$4._data, f$$4, [b$$21, g$$7], JAM.policy.p3);
      var i$$90 = g$$7.events;
      if (i$$90) {
        delete h$$14.handle;
        h$$14.events = {};
        for (c$$15 in i$$90) {
          d$$15 = 0;
          e$$57 = i$$90[c$$15].length;
          var v6150 = d$$15 < e$$57;
          for (;v6150;) {
            var v6148 = f$$4.event;
            JAM.call(v6148.add, v6148, [b$$21, c$$15, i$$90[c$$15][d$$15]], JAM.policy.p3);
            d$$15++;
            v6150 = d$$15 < e$$57;
          }
        }
      }
      var v6151 = h$$14.data;
      if (v6151) {
        var v31143 = JAM.call(f$$4.extend, f$$4, [{}, h$$14.data], JAM.policy.p3);
        h$$14.data = v31143;
      }
    }
    return;
  }
  function bi(a$$30, b$$22) {
    var v6153;
    if (JAM.call(f$$4.nodeName, f$$4, [a$$30, "table"], JAM.policy.p3)) {
      var v13129 = JAM.call(a$$30.getElementsByTagName, a$$30, ["tbody"], JAM.policy.p3)[0];
      if (!v13129) {
        var v23707 = a$$30.ownerDocument;
        v13129 = JAM.call(a$$30.appendChild, a$$30, [JAM.call(v23707.createElement, v23707, ["tbody"], JAM.policy.p3)], JAM.policy.p3);
      }
      v6153 = v13129;
    } else {
      v6153 = a$$30;
    }
    return v6153;
  }
  function U(a$$31) {
    var b$$23 = JAM.call(V.split, V, ["|"], JAM.policy.p3);
    var c$$16 = JAM.call(a$$31.createDocumentFragment, a$$31, [], JAM.policy.p3);
    if (c$$16.createElement) {
      var v6155 = b$$23.length;
      for (;v6155;) {
        JAM.call(c$$16.createElement, c$$16, [JAM.call(b$$23.pop, b$$23, [], JAM.policy.p3)], JAM.policy.p3);
        v6155 = b$$23.length;
      }
    }
    return c$$16;
  }
  function T$$2(a$$32, b$$24, c$$17) {
    function v621(a$$36, d$$19) {
      return JAM.call(f$$4.inArray, f$$4, [a$$36, b$$24], JAM.policy.p3) >= 0 === c$$17;
    }
    function v620(a$$35) {
      return a$$35.nodeType === 1;
    }
    function v619(a$$34, d$$18) {
      return a$$34 === b$$24 === c$$17;
    }
    function v618(a$$33, d$$17) {
      var e$$58 = !!JAM.call(b$$24.call, b$$24, [a$$33, d$$17, a$$33], JAM.policy.p3);
      return e$$58 === c$$17;
    }
    b$$24 = b$$24 || 0;
    if (JAM.call(f$$4.isFunction, f$$4, [b$$24], JAM.policy.p3)) {
      return JAM.call(f$$4.grep, f$$4, [a$$32, v618], JAM.policy.p3);
    }
    if (b$$24.nodeType) {
      return JAM.call(f$$4.grep, f$$4, [a$$32, v619], JAM.policy.p3);
    }
    if (typeof b$$24 == "string") {
      var d$$16 = JAM.call(f$$4.grep, f$$4, [a$$32, v620], JAM.policy.p3);
      if (JAM.call(O.test, O, [b$$24], JAM.policy.p3)) {
        return JAM.call(f$$4.filter, f$$4, [b$$24, d$$16, !c$$17], JAM.policy.p3);
      }
      b$$24 = JAM.call(f$$4.filter, f$$4, [b$$24, d$$16], JAM.policy.p3);
    }
    return JAM.call(f$$4.grep, f$$4, [a$$32, v621], JAM.policy.p3);
  }
  function S(a$$37) {
    var v13134 = !a$$37;
    if (!v13134) {
      v13134 = !a$$37.parentNode;
    }
    var v6166 = v13134;
    if (!v6166) {
      v6166 = a$$37.parentNode.nodeType === 11;
    }
    return v6166;
  }
  function K() {
    return !0;
  }
  function J() {
    return !1;
  }
  function n$$57(a$$38, b$$25, c$$18) {
    function v622() {
      var v13137 = !JAM.call(f$$4._data, f$$4, [a$$38, e$$59], JAM.policy.p3);
      if (v13137) {
        v13137 = !JAM.call(f$$4._data, f$$4, [a$$38, g$$8], JAM.policy.p3);
      }
      var v6167 = v13137;
      if (v6167) {
        JAM.call(f$$4.removeData, f$$4, [a$$38, d$$20, !0], JAM.policy.p3);
        JAM.call(h$$15.fire, h$$15, [], JAM.policy.p3);
      }
      return;
    }
    var d$$20 = b$$25 + "defer";
    var e$$59 = b$$25 + "queue";
    var g$$8 = b$$25 + "mark";
    var h$$15 = JAM.call(f$$4._data, f$$4, [a$$38, d$$20], JAM.policy.p3);
    var v18570 = h$$15;
    if (v18570) {
      var v23708 = c$$18 === "queue";
      if (!v23708) {
        v23708 = !JAM.call(f$$4._data, f$$4, [a$$38, e$$59], JAM.policy.p3);
      }
      v18570 = v23708;
    }
    var v13138 = v18570;
    if (v13138) {
      var v18571 = c$$18 === "mark";
      if (!v18571) {
        v18571 = !JAM.call(f$$4._data, f$$4, [a$$38, g$$8], JAM.policy.p3);
      }
      v13138 = v18571;
    }
    var v6168 = v13138;
    if (v6168) {
      JAM.call(setTimeout, null, [v622, 0]);
    }
    return;
  }
  function m$$4(a$$39) {
    var b$$26;
    for (b$$26 in a$$39) {
      var v13139 = b$$26 === "data";
      if (v13139) {
        v13139 = JAM.call(f$$4.isEmptyObject, f$$4, [a$$39[b$$26]], JAM.policy.p3);
      }
      if (v13139) {
        continue;
      }
      if (b$$26 !== "toJSON") {
        return !1;
      }
    }
    return !0;
  }
  function l$$21(a$$40, c$$19, d$$21) {
    var v13140 = d$$21 === b$$9;
    if (v13140) {
      v13140 = a$$40.nodeType === 1;
    }
    if (v13140) {
      var v13141 = JAM.call(c$$19.replace, c$$19, [k$$2, "-$1"], JAM.policy.p3);
      var e$$60 = "data-" + JAM.call(v13141.toLowerCase, v13141, [], JAM.policy.p3);
      d$$21 = JAM.call(a$$40.getAttribute, a$$40, [e$$60], JAM.policy.p3);
      if (typeof d$$21 == "string") {
        try {
          var v6172;
          if (d$$21 === "true") {
            v6172 = !0;
          } else {
            var v13143;
            if (d$$21 === "false") {
              v13143 = !1;
            } else {
              var v18574;
              if (d$$21 === "null") {
                v18574 = null;
              } else {
                var v23711;
                if (JAM.call(f$$4.isNumeric, f$$4, [d$$21], JAM.policy.p3)) {
                  v23711 = +d$$21;
                } else {
                  var v26076;
                  if (JAM.call(j$$14.test, j$$14, [d$$21], JAM.policy.p3)) {
                    v26076 = JAM.call(f$$4.parseJSON, f$$4, [d$$21], JAM.policy.p3);
                  } else {
                    v26076 = d$$21;
                  }
                  v23711 = v26076;
                }
                v18574 = v23711;
              }
              v13143 = v18574;
            }
            v6172 = v13143;
          }
          d$$21 = v6172;
        } catch (g$$9) {
        }
        JAM.call(f$$4.data, f$$4, [a$$40, c$$19, d$$21], JAM.policy.p3);
      } else {
        d$$21 = b$$9;
      }
    }
    return d$$21;
  }
  function h$$9(a$$41) {
    introspect(JAM.policy.p2) {
      var b$$27 = g[a$$41] = {}
    }
    var c$$20;
    var d$$22;
    a$$41 = JAM.call(a$$41.split, a$$41, [/\s+/], JAM.policy.p3);
    c$$20 = 0;
    d$$22 = a$$41.length;
    var v6176 = c$$20 < d$$22;
    for (;v6176;) {
      var v6175 = a$$41[c$$20];
      introspect(JAM.policy.p2) {
        b$$27[v6175] = !0;
      }
      c$$20++;
      v6176 = c$$20 < d$$22;
    }
    return b$$27;
  }
  var c$$5 = a$$13.document;
  var d$$6 = a$$13.navigator;
  var e$$47 = a$$13.location;
  var f$$4 = v675();
  var g = {};
  f$$4.Callbacks = v687;
  var i$$85 = [].slice;
  JAM.call(f$$4.extend, f$$4, [{Deferred:v698, when:v701}], JAM.policy.p3);
  var v13146 = f$$4;
  var v31144 = v704();
  v13146.support = v31144;
  var j$$14 = /^(?:\{.*\}|\[.*\])$/;
  var k$$2 = /([A-Z])/g;
  var v28647 = f$$4.fn.jquery + JAM.call(Math.random, Math, [], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{cache:{}, uuid:0, expando:"jQuery" + JAM.call(v28647.replace, v28647, [/\D/g, ""], JAM.policy.p3), noData:{embed:!0, object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", applet:!0}, hasData:v705, data:v706, removeData:v707, _data:v708, acceptData:v709}], JAM.policy.p3);
  var v23714 = f$$4.fn;
  JAM.call(v23714.extend, v23714, [{data:v713, removeData:v715}], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{_mark:v716, _unmark:v717, queue:v718, dequeue:v720}], JAM.policy.p3);
  var v13147 = f$$4.fn;
  JAM.call(v13147.extend, v13147, [{queue:v722, dequeue:v724, delay:v727, clearQueue:v728, promise:v729}], JAM.policy.p3);
  var o = /[\n\t\r]/g;
  var p$$22 = /\s+/;
  var q = /\r/g;
  var r$$2 = /^(?:button|input)$/i;
  var s$$15 = /^(?:button|input|object|select|textarea)$/i;
  var t$$2 = /^a(?:rea)?$/i;
  var u$$1 = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;
  var v$$4 = f$$4.support.getSetAttribute;
  var w$$11;
  var x$$67;
  var y$$49;
  var v30211 = f$$4.fn;
  JAM.call(v30211.extend, v30211, [{attr:v730, removeAttr:v732, prop:v733, removeProp:v735, addClass:v737, removeClass:v739, toggleClass:v742, hasClass:v743, val:v746}], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{valHooks:{option:{get:v747}, select:{get:v748, set:v750}}, attrFn:{val:!0, css:!0, html:!0, text:!0, data:!0, width:!0, height:!0, offset:!0}, attr:v751, removeAttr:v752, attrHooks:{type:{set:v753}, value:{get:v754, set:v755}}, propFix:{tabindex:"tabIndex", readonly:"readOnly", "for":"htmlFor", "class":"className", maxlength:"maxLength", cellspacing:"cellSpacing", cellpadding:"cellPadding", rowspan:"rowSpan", colspan:"colSpan", usemap:"useMap", frameborder:"frameBorder", 
  contenteditable:"contentEditable"}, prop:v756, propHooks:{tabIndex:{get:v757}}}], JAM.policy.p3);
  f$$4.attrHooks.tabindex = f$$4.propHooks.tabIndex;
  x$$67 = {get:v758, set:v759};
  if (!v$$4) {
    y$$49 = {name:!0, id:!0, coords:!0};
    w$$11 = f$$4.valHooks.button = {get:v760, set:v761};
    f$$4.attrHooks.tabindex.set = w$$11.set;
    JAM.call(f$$4.each, f$$4, [["width", "height"], v763], JAM.policy.p3);
    f$$4.attrHooks.contenteditable = {get:w$$11.get, set:v764};
  }
  var v28648 = f$$4.support.hrefNormalized;
  if (!v28648) {
    JAM.call(f$$4.each, f$$4, [["href", "src", "width", "height"], v766], JAM.policy.p3);
  }
  var v27646 = f$$4.support.style;
  if (!v27646) {
    f$$4.attrHooks.style = {get:v767, set:v768};
  }
  var v26080 = f$$4.support.optSelected;
  if (!v26080) {
    var v27648 = f$$4.propHooks;
    var v31145 = JAM.call(f$$4.extend, f$$4, [f$$4.propHooks.selected, {get:v769}], JAM.policy.p3);
    v27648.selected = v31145;
  }
  var v23716 = f$$4.support.enctype;
  if (!v23716) {
    f$$4.propFix.enctype = "encoding";
  }
  var v18577 = f$$4.support.checkOn;
  if (!v18577) {
    JAM.call(f$$4.each, f$$4, [["radio", "checkbox"], v771], JAM.policy.p3);
  }
  JAM.call(f$$4.each, f$$4, [["radio", "checkbox"], v773], JAM.policy.p3);
  var z$$2 = /^(?:textarea|input|select)$/i;
  var A = /^([^\.]*)?(?:\.(.+))?$/;
  var B = /(?:^|\s)hover(\.\S+)?\b/;
  var C = /^key/;
  var D = /^(?:mouse|contextmenu)|click/;
  var E = /^(?:focusinfocus|focusoutblur)$/;
  var F = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/;
  f$$4.event = {add:v775, global:{}, remove:v776, customEvent:{getData:!0, setData:!0, changeData:!0}, trigger:v777, dispatch:v778, props:JAM.call("attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split, "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which", [" "], JAM.policy.p3), 
  fixHooks:{}, keyHooks:{props:JAM.call("char charCode key keyCode".split, "char charCode key keyCode", [" "], JAM.policy.p3), filter:v779}, mouseHooks:{props:JAM.call("button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split, "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement", [" "], JAM.policy.p3), filter:v780}, fix:v781, special:{ready:{setup:f$$4.bindReady}, load:{noBubble:!0}, focus:{delegateType:"focusin"}, 
  blur:{delegateType:"focusout"}, beforeunload:{setup:v782, teardown:v783}}, simulate:v784};
  f$$4.event.handle = f$$4.event.dispatch;
  var v30217;
  if (c$$5.removeEventListener) {
    v30217 = v785;
  } else {
    v30217 = v786;
  }
  f$$4.removeEvent = v30217;
  f$$4.Event = v787;
  f$$4.Event.prototype = {preventDefault:v788, stopPropagation:v789, stopImmediatePropagation:v790, isDefaultPrevented:J, isPropagationStopped:J, isImmediatePropagationStopped:J};
  JAM.call(f$$4.each, f$$4, [{mouseenter:"mouseover", mouseleave:"mouseout"}, v792], JAM.policy.p3);
  var v28654 = f$$4.support.submitBubbles;
  if (!v28654) {
    f$$4.event.special.submit = {setup:v795, postDispatch:v796, teardown:v797};
  }
  var v27650 = f$$4.support.changeBubbles;
  if (!v27650) {
    f$$4.event.special.change = {setup:v802, handle:v803, teardown:v804};
  }
  var v26084 = f$$4.support.focusinBubbles;
  if (!v26084) {
    JAM.call(f$$4.each, f$$4, [{focus:"focusin", blur:"focusout"}, v807], JAM.policy.p3);
  }
  var v23720 = f$$4.fn;
  JAM.call(v23720.extend, v23720, [{on:v810, one:v811, off:v813, bind:v814, unbind:v815, live:v816, die:v817, delegate:v818, undelegate:v819, trigger:v821, triggerHandler:v822, toggle:v823, hover:v824}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [JAM.call("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split, "blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu", [" "], JAM.policy.p3), v826], JAM.policy.p3);
  v905();
  var L = /Until$/;
  var M = /^(?:parents|prevUntil|prevAll)/;
  var N = /,/;
  var O = /^.[^:#\[\.,]*$/;
  var P = Array.prototype.slice;
  var Q = f$$4.expr.match.globalPOS;
  var R = {children:!0, contents:!0, next:!0, prev:!0};
  var v18579 = f$$4.fn;
  JAM.call(v18579.extend, v18579, [{find:v907, has:v909, not:v910, filter:v911, is:v912, closest:v913, index:v914, add:v915, andSelf:v916}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{parent:v917, parents:v918, parentsUntil:v919, next:v920, prev:v921, nextAll:v922, prevAll:v923, nextUntil:v924, prevUntil:v925, siblings:v926, children:v927, contents:v928}, v930], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{filter:v931, dir:v932, nth:v933, sibling:v934}], JAM.policy.p3);
  var V = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video";
  var W = / jQuery\d+="(?:\d+|null)"/g;
  var X = /^\s+/;
  var Y = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig;
  var Z = /<([\w:]+)/;
  var $$$2 = /<tbody/i;
  var _$$1 = /<|&#?\w+;/;
  var ba = /<(?:script|style)/i;
  var bb = /<(?:script|object|embed|option|style)/i;
  var bc = new RegExp("<(?:" + V + ")[\\s/>]", "i");
  var bd = /checked\s*(?:[^=]|=\s*.checked.)/i;
  var be = /\/(java|ecma)script/i;
  var bf = /^\s*<!(?:\[CDATA\[|\-\-)/;
  var bg = {option:[1, "<select multiple='multiple'>", "</select>"], legend:[1, "<fieldset>", "</fieldset>"], thead:[1, "<table>", "</table>"], tr:[2, "<table><tbody>", "</tbody></table>"], td:[3, "<table><tbody><tr>", "</tr></tbody></table>"], col:[2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], area:[1, "<map>", "</map>"], _default:[0, "", ""]};
  var bh = U(c$$5);
  bg.optgroup = bg.option;
  bg.tbody = bg.tfoot = bg.colgroup = bg.caption = bg.thead;
  bg.th = bg.td;
  var v28658 = f$$4.support.htmlSerialize;
  if (!v28658) {
    bg._default = [1, "div<div>", "</div>"];
  }
  var v27654 = f$$4.fn;
  JAM.call(v27654.extend, v27654, [{text:v936, wrapAll:v939, wrapInner:v942, wrap:v944, unwrap:v946, append:v948, prepend:v950, before:v952, after:v954, remove:v955, empty:v956, clone:v958, html:v960, replaceWith:v963, detach:v964, domManip:v968}], JAM.policy.p3);
  f$$4.buildFragment = v969;
  f$$4.fragments = {};
  JAM.call(f$$4.each, f$$4, [{appendTo:"append", prependTo:"prepend", insertBefore:"before", insertAfter:"after", replaceAll:"replaceWith"}, v971], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{clone:v972, clean:v974, cleanData:v975}], JAM.policy.p3);
  var bp = /alpha\([^)]*\)/i;
  var bq = /opacity=([^)]*)/;
  var br = /([A-Z]|^ms)/g;
  var bs = /^[\-+]?(?:\d*\.)?\d+$/i;
  var bt = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i;
  var bu = /^([\-+])=([\-+.\de]+)/;
  var bv = /^margin/;
  var bw = {position:"absolute", visibility:"hidden", display:"block"};
  var bx = ["Top", "Right", "Bottom", "Left"];
  var by;
  var bz;
  var bA;
  f$$4.fn.css = v977;
  var v30388 = {opacity:{get:v978}};
  var v30389 = {fillOpacity:!0, fontWeight:!0, lineHeight:!0, opacity:!0, orphans:!0, widows:!0, zIndex:!0, zoom:!0};
  var v30634;
  if (f$$4.support.cssFloat) {
    v30634 = "cssFloat";
  } else {
    v30634 = "styleFloat";
  }
  JAM.call(f$$4.extend, f$$4, [{cssHooks:v30388, cssNumber:v30389, cssProps:{"float":v30634}, style:v979, css:v980, swap:v981}], JAM.policy.p3);
  f$$4.curCSS = f$$4.css;
  var v29984 = c$$5.defaultView;
  if (v29984) {
    v29984 = c$$5.defaultView.getComputedStyle;
  }
  var v29716 = v29984;
  if (v29716) {
    bz = v982;
  }
  var v29304 = c$$5.documentElement.currentStyle;
  if (v29304) {
    bA = v983;
  }
  by = bz || bA;
  JAM.call(f$$4.each, f$$4, [["height", "width"], v987], JAM.policy.p3);
  var v26085 = f$$4.support.opacity;
  if (!v26085) {
    f$$4.cssHooks.opacity = {get:v988, set:v989};
  }
  JAM.call(f$$4, null, [v992], JAM.policy.p3);
  var v23722 = f$$4.expr;
  if (v23722) {
    v23722 = f$$4.expr.filters;
  }
  var v18583 = v23722;
  if (v18583) {
    f$$4.expr.filters.hidden = v993;
    f$$4.expr.filters.visible = v994;
  }
  JAM.call(f$$4.each, f$$4, [{margin:"", padding:"", border:"Width"}, v996], JAM.policy.p3);
  var bC = /%20/g;
  var bD = /\[\]$/;
  var bE = /\r?\n/g;
  var bF = /#.*$/;
  var bG = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg;
  var bH = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i;
  var bI = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/;
  var bJ = /^(?:GET|HEAD)$/;
  var bK = /^\/\//;
  var bL = /\?/;
  var bM = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi;
  var bN = /^(?:select|textarea)/i;
  var bO = /\s+/;
  var bP = /([?&])_=[^&]*/;
  var bQ = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/;
  var bR = f$$4.fn.load;
  var bS = {};
  var bT = {};
  var bU;
  var bV;
  var bW = ["*/"] + ["*"];
  try {
    bU = e$$47.href;
  } catch (bX) {
    bU = JAM.call(c$$5.createElement, c$$5, ["a"], JAM.policy.p3);
    bU.href = "";
    bU = bU.href;
  }
  var v27662 = JAM.call(bQ.exec, bQ, [JAM.call(bU.toLowerCase, bU, [], JAM.policy.p3)], JAM.policy.p3);
  if (!v27662) {
    v27662 = [];
  }
  bV = v27662;
  var v27663 = f$$4.fn;
  JAM.call(v27663.extend, v27663, [{load:v999, serialize:v1000, serializeArray:v1005}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [JAM.call("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split, "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend", [" "], JAM.policy.p3), v1007], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [["get", "post"], v1009], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{getScript:v1010, getJSON:v1011, ajaxSetup:v1012, ajaxSettings:{url:bU, isLocal:JAM.call(bI.test, bI, [bV[1]], JAM.policy.p3), global:!0, type:"GET", contentType:"application/x-www-form-urlencoded; charset=UTF-8", processData:!0, async:!0, accepts:{xml:"application/xml, text/xml", html:"text/html", text:"text/plain", json:"application/json, text/javascript", "*":bW}, contents:{xml:/xml/, html:/html/, json:/json/}, responseFields:{xml:"responseXML", text:"responseText"}, 
  converters:{"* text":a$$13.String, "text html":!0, "text json":f$$4.parseJSON, "text xml":f$$4.parseXML}, flatOptions:{context:!0, url:!0}}, ajaxPrefilter:bY(bS), ajaxTransport:bY(bT), ajax:v1020, param:v1022}], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{active:0, lastModified:{}, etag:{}}], JAM.policy.p3);
  var cc = JAM.call(f$$4.now, f$$4, [], JAM.policy.p3);
  var cd = /(\=)\?(&|$)|\?\?/i;
  JAM.call(f$$4.ajaxSetup, f$$4, [{jsonp:"callback", jsonpCallback:v1023}], JAM.policy.p3);
  JAM.call(f$$4.ajaxPrefilter, f$$4, ["json jsonp", v1027], JAM.policy.p3);
  JAM.call(f$$4.ajaxSetup, f$$4, [{accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"}, contents:{script:/javascript|ecmascript/}, converters:{"text script":v1028}}], JAM.policy.p3);
  JAM.call(f$$4.ajaxPrefilter, f$$4, ["script", v1029], JAM.policy.p3);
  JAM.call(f$$4.ajaxTransport, f$$4, ["script", v1033], JAM.policy.p3);
  var v6196;
  if (a$$13.ActiveXObject) {
    v6196 = v1034;
  } else {
    v6196 = !1;
  }
  var ce = v6196;
  var cf = 0;
  var cg;
  var v18585 = f$$4.ajaxSettings;
  var v23728;
  if (a$$13.ActiveXObject) {
    v23728 = v1035;
  } else {
    v23728 = ch$$14;
  }
  v18585.xhr = v23728;
  var v23729 = f$$4.ajaxSettings;
  v1036(JAM.call(v23729.xhr, v23729, [], JAM.policy.p3));
  var v13157 = f$$4.support.ajax;
  if (v13157) {
    JAM.call(f$$4.ajaxTransport, f$$4, [v1040], JAM.policy.p3);
  }
  var cj = {};
  var ck;
  var cl;
  var cm = /^(?:toggle|show|hide)$/;
  var cn = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i;
  var co;
  var cp = [["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"], ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"], ["opacity"]];
  var cq;
  var v28661 = f$$4.fn;
  JAM.call(v28661.extend, v28661, [{show:v1041, hide:v1042, _toggle:f$$4.fn.toggle, toggle:v1044, fadeTo:v1045, animate:v1046, stop:v1048}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{slideDown:ct("show", 1), slideUp:ct("hide", 1), slideToggle:ct("toggle", 1), fadeIn:{opacity:"show"}, fadeOut:{opacity:"hide"}, fadeToggle:{opacity:"toggle"}}, v1050], JAM.policy.p3);
  JAM.call(f$$4.extend, f$$4, [{speed:v1052, easing:{linear:v1053, swing:v1054}, timers:[], fx:v1055}], JAM.policy.p3);
  f$$4.fx.prototype = {update:v1056, cur:v1057, custom:v1059, show:v1060, hide:v1061, step:v1063};
  JAM.call(f$$4.extend, f$$4, [f$$4.fx, {tick:v1064, interval:13, stop:v1065, speeds:{slow:600, fast:200, _default:400}, step:{opacity:v1066, _default:v1067}}], JAM.policy.p3);
  var v23732 = cp.concat;
  JAM.call(f$$4.each, f$$4, [JAM.call(v23732.apply, v23732, [[], cp], JAM.policy.p3), v1069], JAM.policy.p3);
  var v18589 = f$$4.expr;
  if (v18589) {
    v18589 = f$$4.expr.filters;
  }
  var v13158 = v18589;
  if (v13158) {
    f$$4.expr.filters.animated = v1071;
  }
  var cv;
  var cw = /^t(?:able|d|h)$/i;
  var cx = /^(?:body|html)$/i;
  var v29312;
  if ("getBoundingClientRect" in c$$5.documentElement) {
    v29312 = cv = v1072;
  } else {
    v29312 = cv = v1073;
  }
  v29312;
  f$$4.fn.offset = v1075;
  f$$4.offset = {bodyOffset:v1076, setOffset:v1077};
  var v27673 = f$$4.fn;
  JAM.call(v27673.extend, v27673, [{position:v1078, offsetParent:v1080}], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{scrollLeft:"pageXOffset", scrollTop:"pageYOffset"}, v1083], JAM.policy.p3);
  JAM.call(f$$4.each, f$$4, [{Height:"height", Width:"width"}, v1088], JAM.policy.p3);
  a$$13.jQuery = a$$13.$ = f$$4;
  var v23736 = typeof define == "function";
  if (v23736) {
    v23736 = define.amd;
  }
  var v18591 = v23736;
  if (v18591) {
    v18591 = define.amd.jQuery;
  }
  var v13159 = v18591;
  if (v13159) {
    JAM.call(define, null, ["jquery", [], v1089], JAM.policy.p3);
  }
  return;
}
function v614() {
  function v613(x$$66, y$$48, x2$$1, y2$$1) {
    var dashArray = [4, 2];
    if (!dashArray) {
      dashArray = [10, 5];
    }
    var dashCount = dashArray.length;
    JAM.call(this.moveTo, this, [x$$66, y$$48], JAM.policy.p3);
    var dx$$5 = x2$$1 - x$$66;
    var dy$$5 = y2$$1 - y$$48;
    var slope = dy$$5 / dx$$5;
    var distRemaining = JAM.call(Math.sqrt, Math, [dx$$5 * dx$$5 + dy$$5 * dy$$5], JAM.policy.p3);
    var dashIndex = 0;
    var draw = true;
    var v6206 = distRemaining >= .1;
    for (;v6206;) {
      dashIndex = dashIndex + 1;
      var dashLength = dashArray[dashIndex % dashCount];
      if (dashLength > distRemaining) {
        dashLength = distRemaining;
      }
      var xStep = JAM.call(Math.sqrt, Math, [dashLength * dashLength / (1 + slope * slope)], JAM.policy.p3);
      x$$66 = x$$66 + xStep;
      y$$48 = y$$48 + slope * xStep;
      var v13165;
      if (draw) {
        v13165 = "lineTo";
      } else {
        v13165 = "moveTo";
      }
      JAM.call(this[v13165], this, [x$$66, y$$48], JAM.policy.p3);
      distRemaining = distRemaining - dashLength;
      draw = !draw;
      v6206 = distRemaining >= .1;
    }
    return;
  }
  function v612(npos$$11, pos$$55, dim$$24) {
    var a$$12 = new Complex(npos$$11.x, npos$$11.y);
    var b$$8 = new Complex(a$$12.x + dim$$24, npos$$11.y - dim$$24);
    var c$$4 = new Complex(b$$8.x, npos$$11.y + dim$$24);
    pos$$55 = new Complex(pos$$55.x, pos$$55.y);
    var negOne = new Complex(-1, -1);
    var v0 = new Complex(c$$4.x - a$$12.x, c$$4.y - a$$12.y);
    var v1$$2 = new Complex(b$$8.x - a$$12.x, b$$8.y - a$$12.y);
    var v2$$2 = new Complex(pos$$55.x - a$$12.x, pos$$55.y - a$$12.y);
    var dot00 = v0.x * v0.x + v0.y * v0.y;
    var dot01 = v0.x * v1$$2.x + v0.y * v1$$2.y;
    var dot02 = v0.x * v2$$2.x + v0.y * v2$$2.y;
    var dot11 = v1$$2.x * v1$$2.x + v1$$2.y * v1$$2.y;
    var dot12 = v1$$2.x * v2$$2.x + v1$$2.y * v2$$2.y;
    var inv$$1 = 1 / (dot00 * dot11 - dot01 * dot01);
    var u = (dot11 * dot02 - dot01 * dot12) * inv$$1;
    var v$$3 = (dot00 * dot12 - dot01 * dot02) * inv$$1;
    var v13207 = u > 0;
    if (v13207) {
      v13207 = v$$3 > 0;
    }
    var v6234 = v13207;
    if (v6234) {
      v6234 = u + v$$3 < 1;
    }
    return v6234;
  }
  function v611(type$$58, pos$$54, dim$$23, canvas$$53) {
    var ctx$$24 = JAM.call(canvas$$53.getCtx, canvas$$53, [], JAM.policy.p3);
    var c1x$$1 = pos$$54.x;
    var c1y$$1 = pos$$54.y;
    var c2x$$1 = c1x$$1 + dim$$23;
    var c2y$$1 = pos$$54.y - dim$$23;
    var c3x$$1 = c2x$$1;
    var c3y$$1 = pos$$54.y + dim$$23;
    JAM.call(ctx$$24.beginPath, ctx$$24, [], JAM.policy.p3);
    JAM.call(ctx$$24.moveTo, ctx$$24, [c1x$$1, c1y$$1], JAM.policy.p3);
    JAM.call(ctx$$24.lineTo, ctx$$24, [c2x$$1, c2y$$1], JAM.policy.p3);
    JAM.call(ctx$$24.lineTo, ctx$$24, [c3x$$1, c3y$$1], JAM.policy.p3);
    JAM.call(ctx$$24.closePath, ctx$$24, [], JAM.policy.p3);
    JAM.call(ctx$$24[type$$58], ctx$$24, [], JAM.policy.p3);
    return;
  }
  function v610(graph$$20, id$$36, startDepth$$1, flags$$14) {
    function v609(adj$$33) {
      var n$$56 = adj$$33.nodeTo;
      var v13209 = n$$56._flag === false;
      if (v13209) {
        v13209 = JAM.call(filter$$6, null, [n$$56], JAM.policy.p3);
      }
      if (v13209) {
        if (n$$56._depth < 0) {
          n$$56._depth = node$$115._depth + 1 + startDepth$$1;
          if (!graph$$20.depth[n$$56._depth]) {
            var v6238 = graph$$20.depth;
            var v6239 = n$$56._depth;
            introspect(JAM.policy.p2) {
              v6238[v6239] = [];
            }
          }
          var v6241 = graph$$20.depth[n$$56._depth];
          JAM.call(v6241.push, v6241, [n$$56], JAM.policy.p3);
        }
        JAM.call(queue$$2.unshift, queue$$2, [n$$56], JAM.policy.p3);
      }
      return;
    }
    function v608(elem$$60) {
      elem$$60._flag = false;
      elem$$60._depth = -1;
      return;
    }
    startDepth$$1 = startDepth$$1 || 0;
    var filter$$6 = JAM.call(this.filter, this, [flags$$14], JAM.policy.p3);
    JAM.call(this.eachNode, this, [graph$$20, v608, flags$$14], JAM.policy.p3);
    var root$$20 = JAM.call(graph$$20.getNode, graph$$20, [id$$36], JAM.policy.p3);
    root$$20._depth = startDepth$$1;
    var queue$$2 = [root$$20];
    graph$$20.depth = [];
    var that$$35 = this;
    var v6244 = queue$$2.length !== 0;
    for (;v6244;) {
      var node$$115 = JAM.call(queue$$2.pop, queue$$2, [], JAM.policy.p3);
      node$$115._flag = true;
      JAM.call(this.eachAdjacency, this, [node$$115, v609, flags$$14], JAM.policy.p3);
      v6244 = queue$$2.length !== 0;
    }
    return;
  }
  function v607(e$$46, win$$34, scroll$$4) {
    if (!this.config.zooming) {
      return;
    }
    var v6246 = $$$1.event;
    var v13218 = $$$1.event;
    JAM.call(v6246.stop, v6246, [JAM.call(v13218.get, v13218, [e$$46, win$$34], JAM.policy.p3)], JAM.policy.p3);
    var v6248 = this.viz;
    JAM.call(v6248.zoom, v6248, [scroll$$4], JAM.policy.p3);
    return;
  }
  function v606(adj$$32, pos$$53) {
    var orn$$17 = JAM.call(this.getOrientation, this, [adj$$32], JAM.policy.p3);
    var nodeFrom$$13 = adj$$32.nodeFrom;
    var nodeTo$$15 = adj$$32.nodeTo;
    var rel$$7 = nodeFrom$$13._depth < nodeTo$$15._depth;
    var v6251 = this.viz.geom;
    var v13220;
    if (rel$$7) {
      v13220 = nodeFrom$$13;
    } else {
      v13220 = nodeTo$$15;
    }
    var from$$16 = JAM.call(v6251.getEdge, v6251, [v13220, "begin", orn$$17], JAM.policy.p3);
    var v6253 = this.viz.geom;
    var v13222;
    if (rel$$7) {
      v13222 = nodeTo$$15;
    } else {
      v13222 = nodeFrom$$13;
    }
    var to$$17 = JAM.call(v6253.getEdge, v6253, [v13222, "end", orn$$17], JAM.policy.p3);
    var v6255 = this.edgeHelper.line;
    return JAM.call(v6255.contains, v6255, [from$$16, to$$17, pos$$53, this.edge.epsilon], JAM.policy.p3);
  }
  function v605(adj$$31, canvas$$52) {
    var orn$$16 = JAM.call(this.getOrientation, this, [adj$$31], JAM.policy.p3);
    var nodeFrom$$12 = adj$$31.nodeFrom;
    var nodeTo$$14 = adj$$31.nodeTo;
    var rel$$6 = nodeFrom$$12._depth < nodeTo$$14._depth;
    var v6259 = this.viz.geom;
    var v13226;
    if (rel$$6) {
      v13226 = nodeFrom$$12;
    } else {
      v13226 = nodeTo$$14;
    }
    var from$$15 = JAM.call(v6259.getEdge, v6259, [v13226, "begin", orn$$16], JAM.policy.p3);
    var v6261 = this.viz.geom;
    var v13228;
    if (rel$$6) {
      v13228 = nodeTo$$14;
    } else {
      v13228 = nodeFrom$$12;
    }
    var to$$16 = JAM.call(v6261.getEdge, v6261, [v13228, "end", orn$$16], JAM.policy.p3);
    var middle = {x:from$$15.x, y:to$$16.y};
    var v6265 = this.edgeHelper.line;
    JAM.call(v6265.render, v6265, [from$$15, middle, canvas$$52], JAM.policy.p3);
    var v6266 = this.edgeHelper.line;
    JAM.call(v6266.render, v6266, [middle, to$$16, canvas$$52], JAM.policy.p3);
    return;
  }
  function v604(adj$$30, canvas$$51) {
    var orn$$15 = JAM.call(this.getOrientation, this, [adj$$30], JAM.policy.p3);
    var nodeFrom$$11 = adj$$30.nodeFrom;
    var nodeTo$$13 = adj$$30.nodeTo;
    var rel$$5 = nodeFrom$$11._depth < nodeTo$$13._depth;
    var v6269 = this.viz.geom;
    var v13232;
    if (rel$$5) {
      v13232 = nodeFrom$$11;
    } else {
      v13232 = nodeTo$$13;
    }
    var begin$$13 = JAM.call(v6269.getEdge, v6269, [v13232, "begin", orn$$15], JAM.policy.p3);
    var v6271 = this.viz.geom;
    var v13234;
    if (rel$$5) {
      v13234 = nodeTo$$13;
    } else {
      v13234 = nodeFrom$$11;
    }
    var end$$3 = JAM.call(v6271.getEdge, v6271, [v13234, "end", orn$$15], JAM.policy.p3);
    var dim$$22 = JAM.call(adj$$30.getData, adj$$30, ["dim"], JAM.policy.p3);
    var ctx$$23 = JAM.call(canvas$$51.getCtx, canvas$$51, [], JAM.policy.p3);
    JAM.call(ctx$$23.beginPath, ctx$$23, [], JAM.policy.p3);
    JAM.call(ctx$$23.moveTo, ctx$$23, [begin$$13.x, begin$$13.y], JAM.policy.p3);
    switch(orn$$15) {
      case "left":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x + dim$$22, begin$$13.y, end$$3.x - dim$$22, end$$3.y, end$$3.x, end$$3.y], JAM.policy.p3);
        break;
      case "right":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x - dim$$22, begin$$13.y, end$$3.x + dim$$22, end$$3.y, end$$3.x, end$$3.y], JAM.policy.p3);
        break;
      case "top":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x, begin$$13.y + dim$$22, end$$3.x, end$$3.y - dim$$22, end$$3.x, end$$3.y], JAM.policy.p3);
        break;
      case "bottom":
        JAM.call(ctx$$23.bezierCurveTo, ctx$$23, [begin$$13.x, begin$$13.y - dim$$22, end$$3.x, end$$3.y + dim$$22, end$$3.x, end$$3.y], JAM.policy.p3);
    }
    JAM.call(ctx$$23.stroke, ctx$$23, [], JAM.policy.p3);
    return;
  }
  function v603(adj$$29, canvas$$50) {
    var orn$$14 = JAM.call(this.getOrientation, this, [adj$$29], JAM.policy.p3);
    var nodeFrom$$10 = adj$$29.nodeFrom;
    var nodeTo$$12 = adj$$29.nodeTo;
    var rel$$4 = nodeFrom$$10._depth < nodeTo$$12._depth;
    var v6301 = this.viz.geom;
    var v13244;
    if (rel$$4) {
      v13244 = nodeFrom$$10;
    } else {
      v13244 = nodeTo$$12;
    }
    var begin$$12 = JAM.call(v6301.getEdge, v6301, [v13244, "begin", orn$$14], JAM.policy.p3);
    var v6303 = this.viz.geom;
    var v13246;
    if (rel$$4) {
      v13246 = nodeTo$$12;
    } else {
      v13246 = nodeFrom$$10;
    }
    var end$$2 = JAM.call(v6303.getEdge, v6303, [v13246, "end", orn$$14], JAM.policy.p3);
    var dim$$21 = JAM.call(adj$$29.getData, adj$$29, ["dim"], JAM.policy.p3);
    var ctx$$22 = JAM.call(canvas$$50.getCtx, canvas$$50, [], JAM.policy.p3);
    JAM.call(ctx$$22.beginPath, ctx$$22, [], JAM.policy.p3);
    JAM.call(ctx$$22.moveTo, ctx$$22, [begin$$12.x, begin$$12.y], JAM.policy.p3);
    switch(orn$$14) {
      case "left":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x - dim$$21, end$$2.y, end$$2.x, end$$2.y], JAM.policy.p3);
        break;
      case "right":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x + dim$$21, end$$2.y, end$$2.x, end$$2.y], JAM.policy.p3);
        break;
      case "top":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x, end$$2.y - dim$$21, end$$2.x, end$$2.y], JAM.policy.p3);
        break;
      case "bottom":
        JAM.call(ctx$$22.quadraticCurveTo, ctx$$22, [end$$2.x, end$$2.y + dim$$21, end$$2.x, end$$2.y], JAM.policy.p3);
    }
    JAM.call(ctx$$22.stroke, ctx$$22, [], JAM.policy.p3);
    return;
  }
  function v602(adj$$28, canvas$$49) {
    var orn$$13 = JAM.call(this.getOrientation, this, [adj$$28], JAM.policy.p3);
    var nodeFrom$$9 = adj$$28.nodeFrom;
    var nodeTo$$11 = adj$$28.nodeTo;
    var rel$$3 = nodeFrom$$9._depth < nodeTo$$11._depth;
    var v6325 = this.viz.geom;
    var v13252;
    if (rel$$3) {
      v13252 = nodeFrom$$9;
    } else {
      v13252 = nodeTo$$11;
    }
    var begin$$11 = JAM.call(v6325.getEdge, v6325, [v13252, "begin", orn$$13], JAM.policy.p3);
    var v6327 = this.viz.geom;
    var v13254;
    if (rel$$3) {
      v13254 = nodeTo$$11;
    } else {
      v13254 = nodeFrom$$9;
    }
    var end$$1 = JAM.call(v6327.getEdge, v6327, [v13254, "end", orn$$13], JAM.policy.p3);
    var dim$$20 = JAM.call(adj$$28.getData, adj$$28, ["dim"], JAM.policy.p3);
    var ctx$$21 = JAM.call(canvas$$49.getCtx, canvas$$49, [], JAM.policy.p3);
    JAM.call(ctx$$21.beginPath, ctx$$21, [], JAM.policy.p3);
    JAM.call(ctx$$21.moveTo, ctx$$21, [begin$$11.x, begin$$11.y], JAM.policy.p3);
    switch(orn$$13) {
      case "left":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x + dim$$20, begin$$11.y, end$$1.x, end$$1.y], JAM.policy.p3);
        break;
      case "right":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x - dim$$20, begin$$11.y, end$$1.x, end$$1.y], JAM.policy.p3);
        break;
      case "top":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x, begin$$11.y + dim$$20, end$$1.x, end$$1.y], JAM.policy.p3);
        break;
      case "bottom":
        JAM.call(ctx$$21.quadraticCurveTo, ctx$$21, [begin$$11.x, begin$$11.y - dim$$20, end$$1.x, end$$1.y], JAM.policy.p3);
    }
    JAM.call(ctx$$21.stroke, ctx$$21, [], JAM.policy.p3);
    return;
  }
  function v601(adj$$27, pos$$52) {
    var orn$$12 = JAM.call(this.getOrientation, this, [adj$$27], JAM.policy.p3);
    var nodeFrom$$8 = adj$$27.nodeFrom;
    var nodeTo$$10 = adj$$27.nodeTo;
    var rel$$2 = nodeFrom$$8._depth < nodeTo$$10._depth;
    var v6349 = this.viz.geom;
    var v13260;
    if (rel$$2) {
      v13260 = nodeFrom$$8;
    } else {
      v13260 = nodeTo$$10;
    }
    var from$$14 = JAM.call(v6349.getEdge, v6349, [v13260, "begin", orn$$12], JAM.policy.p3);
    var v6351 = this.viz.geom;
    var v13262;
    if (rel$$2) {
      v13262 = nodeTo$$10;
    } else {
      v13262 = nodeFrom$$8;
    }
    var to$$15 = JAM.call(v6351.getEdge, v6351, [v13262, "end", orn$$12], JAM.policy.p3);
    var v6353 = this.edgeHelper.arrow;
    return JAM.call(v6353.contains, v6353, [from$$14, to$$15, pos$$52, this.edge.epsilon], JAM.policy.p3);
  }
  function v600(adj$$26, canvas$$48) {
    var orn$$11 = JAM.call(this.getOrientation, this, [adj$$26], JAM.policy.p3);
    var node$$114 = adj$$26.nodeFrom;
    var child$$1 = adj$$26.nodeTo;
    var dim$$19 = JAM.call(adj$$26.getData, adj$$26, ["dim"], JAM.policy.p3);
    var v6355 = this.viz.geom;
    var from$$13 = JAM.call(v6355.getEdge, v6355, [node$$114, "begin", orn$$11], JAM.policy.p3);
    var v6356 = this.viz.geom;
    var to$$14 = JAM.call(v6356.getEdge, v6356, [child$$1, "end", orn$$11], JAM.policy.p3);
    var direction$$3 = adj$$26.data.$direction;
    var v13267 = direction$$3;
    if (v13267) {
      v13267 = direction$$3.length > 1;
    }
    var v6358 = v13267;
    if (v6358) {
      v6358 = direction$$3[0] !== node$$114.id;
    }
    var inv = v6358;
    var v6359 = this.edgeHelper.arrow;
    JAM.call(v6359.render, v6359, [from$$13, to$$14, dim$$19, inv, canvas$$48], JAM.policy.p3);
    return;
  }
  function v599(adj$$25, pos$$51) {
    var orn$$10 = JAM.call(this.getOrientation, this, [adj$$25], JAM.policy.p3);
    var nodeFrom$$7 = adj$$25.nodeFrom;
    var nodeTo$$9 = adj$$25.nodeTo;
    var rel$$1 = nodeFrom$$7._depth < nodeTo$$9._depth;
    var v6362 = this.viz.geom;
    var v13272;
    if (rel$$1) {
      v13272 = nodeFrom$$7;
    } else {
      v13272 = nodeTo$$9;
    }
    var from$$12 = JAM.call(v6362.getEdge, v6362, [v13272, "begin", orn$$10], JAM.policy.p3);
    var v6364 = this.viz.geom;
    var v13274;
    if (rel$$1) {
      v13274 = nodeTo$$9;
    } else {
      v13274 = nodeFrom$$7;
    }
    var to$$13 = JAM.call(v6364.getEdge, v6364, [v13274, "end", orn$$10], JAM.policy.p3);
    var v6366 = this.edgeHelper.line;
    return JAM.call(v6366.contains, v6366, [from$$12, to$$13, pos$$51, this.edge.epsilon], JAM.policy.p3);
  }
  function v598(adj$$24, canvas$$47) {
    var orn$$9 = JAM.call(this.getOrientation, this, [adj$$24], JAM.policy.p3);
    var nodeFrom$$6 = adj$$24.nodeFrom;
    var nodeTo$$8 = adj$$24.nodeTo;
    var rel = nodeFrom$$6._depth < nodeTo$$8._depth;
    var v13277;
    if (rel) {
      v13277 = nodeFrom$$6;
    } else {
      v13277 = nodeTo$$8;
    }
    var v6370 = v13277;
    var from$$11 = JAM.call(v6370.getPos, v6370, [], JAM.policy.p3);
    var v13278;
    if (rel) {
      v13278 = nodeTo$$8;
    } else {
      v13278 = nodeFrom$$6;
    }
    var v6371 = v13278;
    var to$$12 = JAM.call(v6371.getPos, v6371, [], JAM.policy.p3);
    var JSCompiler_object_inline_x_90 = from$$11.x;
    var JSCompiler_object_inline_y_91 = from$$11.y;
    var middle2 = {x:JSCompiler_object_inline_x_90, y:to$$12.y};
    var v6373 = this.edgeHelper.line;
    JAM.call(v6373.render, v6373, [from$$11, middle2, canvas$$47], JAM.policy.p3);
    var v6374 = this.edgeHelper.line;
    JAM.call(v6374.render, v6374, [middle2, to$$12, canvas$$47], JAM.policy.p3);
    var v13281 = !JAM.call(nodeTo$$8.anySubnode, nodeTo$$8, [], JAM.policy.p3);
    if (v13281) {
      v13281 = this.config.alignName;
    }
    if (v13281) {
      var ctx$$20 = JAM.call(canvas$$47.getCtx, canvas$$47, [], JAM.policy.p3);
      JAM.call(ctx$$20.save, ctx$$20, [], JAM.policy.p3);
      ctx$$20.lineWidth = 2;
      ctx$$20.lineCap = "butt";
      ctx$$20.fillStyle = ctx$$20.strokeStyle = "#ccb";
      JAM.call(ctx$$20.beginPath, ctx$$20, [], JAM.policy.p3);
      JAM.call(ctx$$20.dashedLine, ctx$$20, [to$$12.x, to$$12.y, this.viz.graph.maxXpos, to$$12.y], JAM.policy.p3);
      JAM.call(ctx$$20.closePath, ctx$$20, [], JAM.policy.p3);
      JAM.call(ctx$$20.stroke, ctx$$20, [], JAM.policy.p3);
      JAM.call(ctx$$20.restore, ctx$$20, [], JAM.policy.p3);
    }
    return;
  }
  function v597(node$$113, pos$$50) {
    if (!node$$113.exist) {
      return false;
    }
    var width$$30 = JAM.call(node$$113.getData, node$$113, ["width"], JAM.policy.p3);
    var height$$28 = JAM.call(node$$113.getData, node$$113, ["height"], JAM.policy.p3);
    var dim$$18 = JAM.call(node$$113.getData, node$$113, ["dim"], JAM.policy.p3);
    var v13284 = node$$113.pos;
    var npos$$10 = JAM.call(this.getAlignedPos, this, [JAM.call(v13284.getc, v13284, [true], JAM.policy.p3), width$$30, height$$28], JAM.policy.p3);
    var v6382 = this.nodeHelper.triangle;
    return JAM.call(v6382.contains, v6382, [{x:npos$$10.x + width$$30 / 2, y:npos$$10.y + height$$28 / 2}, pos$$50, dim$$18], JAM.policy.p3);
  }
  function v596(node$$112, canvas$$46) {
    var width$$29 = JAM.call(node$$112.getData, node$$112, ["width"], JAM.policy.p3);
    var height$$27 = JAM.call(node$$112.getData, node$$112, ["height"], JAM.policy.p3);
    var dim$$17 = JAM.call(node$$112.getData, node$$112, ["dim"], JAM.policy.p3);
    var v13288 = node$$112.pos;
    var pos$$49 = JAM.call(this.getAlignedPos, this, [JAM.call(v13288.getc, v13288, [true], JAM.policy.p3), width$$29, height$$27], JAM.policy.p3);
    var v6385 = this.nodeHelper.triangle;
    JAM.call(v6385.render, v6385, ["fill", {x:pos$$49.x + width$$29 / 2, y:pos$$49.y + height$$27 / 2}, dim$$17, canvas$$46], JAM.policy.p3);
    return;
  }
  function v595(node$$111, pos$$48) {
    if (!node$$111.exist) {
      return false;
    }
    var width$$28 = JAM.call(node$$111.getData, node$$111, ["width"], JAM.policy.p3);
    var height$$26 = JAM.call(node$$111.getData, node$$111, ["height"], JAM.policy.p3);
    var v13293 = node$$111.pos;
    var npos$$9 = JAM.call(this.getAlignedPos, this, [JAM.call(v13293.getc, v13293, [true], JAM.policy.p3), width$$28, height$$26], JAM.policy.p3);
    var v6389 = this.nodeHelper.rectangle;
    JAM.call(v6389.contains, v6389, [{x:npos$$9.x + width$$28 / 2, y:npos$$9.y + height$$26 / 2}, pos$$48, width$$28, height$$26], JAM.policy.p3);
    return;
  }
  function v594(node$$110, canvas$$45) {
    var width$$27 = JAM.call(node$$110.getData, node$$110, ["width"], JAM.policy.p3);
    var height$$25 = JAM.call(node$$110.getData, node$$110, ["height"], JAM.policy.p3);
    var v13297 = node$$110.pos;
    var pos$$47 = JAM.call(this.getAlignedPos, this, [JAM.call(v13297.getc, v13297, [true], JAM.policy.p3), width$$27, height$$25], JAM.policy.p3);
    var v6392 = this.nodeHelper.rectangle;
    JAM.call(v6392.render, v6392, ["fill", {x:pos$$47.x + width$$27 / 2, y:pos$$47.y + height$$25 / 2}, width$$27, height$$25, canvas$$45], JAM.policy.p3);
    return;
  }
  function v593(node$$109, pos$$46) {
    if (!node$$109.exist) {
      return false;
    }
    var width$$26 = JAM.call(node$$109.getData, node$$109, ["width"], JAM.policy.p3);
    var height$$24 = JAM.call(node$$109.getData, node$$109, ["height"], JAM.policy.p3);
    var v13302 = node$$109.pos;
    var npos$$8 = JAM.call(this.getAlignedPos, this, [JAM.call(v13302.getc, v13302, [true], JAM.policy.p3), width$$26, height$$24], JAM.policy.p3);
    var v6396 = this.nodeHelper.ellipse;
    JAM.call(v6396.contains, v6396, [{x:npos$$8.x + width$$26 / 2, y:npos$$8.y + height$$24 / 2}, pos$$46, width$$26, height$$24], JAM.policy.p3);
    return;
  }
  function v592(node$$108, canvas$$44) {
    var width$$25 = JAM.call(node$$108.getData, node$$108, ["width"], JAM.policy.p3);
    var height$$23 = JAM.call(node$$108.getData, node$$108, ["height"], JAM.policy.p3);
    var v13306 = node$$108.pos;
    var pos$$45 = JAM.call(this.getAlignedPos, this, [JAM.call(v13306.getc, v13306, [true], JAM.policy.p3), width$$25, height$$23], JAM.policy.p3);
    var v6399 = this.nodeHelper.ellipse;
    JAM.call(v6399.render, v6399, ["fill", {x:pos$$45.x + width$$25 / 2, y:pos$$45.y + height$$23 / 2}, width$$25, height$$23, canvas$$44], JAM.policy.p3);
    return;
  }
  function v591(node$$107, pos$$44) {
    if (!node$$107.exist) {
      return false;
    }
    var dim$$16 = JAM.call(node$$107.getData, node$$107, ["dim"], JAM.policy.p3);
    var v13311 = node$$107.pos;
    var npos$$7 = JAM.call(this.getAlignedPos, this, [JAM.call(v13311.getc, v13311, [true], JAM.policy.p3), dim$$16, dim$$16], JAM.policy.p3);
    var dim2$$3 = dim$$16 / 2;
    var v6403 = this.nodeHelper.square;
    return JAM.call(v6403.contains, v6403, [{x:npos$$7.x, y:npos$$7.y + dim2$$3}, pos$$44, dim2$$3], JAM.policy.p3);
  }
  function v590(node$$106, canvas$$43) {
    var dim$$15 = JAM.call(node$$106.getData, node$$106, ["dim"], JAM.policy.p3);
    var dim2$$2 = dim$$15 / 2;
    var v13315 = node$$106.pos;
    var pos$$43 = JAM.call(this.getAlignedPos, this, [JAM.call(v13315.getc, v13315, [true], JAM.policy.p3), dim$$15, dim$$15], JAM.policy.p3);
    var v6406 = this.nodeHelper.square;
    JAM.call(v6406.render, v6406, ["fill", {x:pos$$43.x, y:pos$$43.y + dim2$$2}, dim2$$2, canvas$$43], JAM.policy.p3);
    return;
  }
  function v589(node$$105, pos$$42) {
    if (!node$$105.exist) {
      return false;
    }
    var dim$$14 = JAM.call(node$$105.getData, node$$105, ["dim"], JAM.policy.p3);
    var v13320 = node$$105.pos;
    var npos$$6 = JAM.call(this.getAlignedPos, this, [JAM.call(v13320.getc, v13320, [true], JAM.policy.p3), dim$$14, dim$$14], JAM.policy.p3);
    var dim2$$1 = dim$$14 / 2;
    var v6410 = this.nodeHelper.circle;
    return JAM.call(v6410.contains, v6410, [{x:npos$$6.x, y:npos$$6.y + dim2$$1}, pos$$42, dim2$$1 + 10], JAM.policy.p3);
  }
  function v588(node$$104, canvas$$42) {
    var dim$$13 = JAM.call(node$$104.getData, node$$104, ["dim"], JAM.policy.p3);
    var v13324 = node$$104.pos;
    var pos$$41 = JAM.call(this.getAlignedPos, this, [JAM.call(v13324.getc, v13324, [true], JAM.policy.p3), dim$$13, dim$$13], JAM.policy.p3);
    var dim2 = dim$$13 / 2;
    var v6414 = this.nodeHelper.circle;
    JAM.call(v6414.render, v6414, ["fill", {x:pos$$41.x, y:pos$$41.y + dim2}, dim2, canvas$$42], JAM.policy.p3);
    return;
  }
  function v587(viz$$30) {
    this.viz = viz$$30;
    return;
  }
  function v586(viz$$29) {
    this.viz = viz$$29;
    return;
  }
  function v585(tag$$4, node$$103, controller$$11) {
    var v13328 = node$$103.pos;
    var v6416 = JAM.call(v13328.getc, v13328, [true], JAM.policy.p3);
    var pos$$40 = JAM.call(v6416.clone, v6416, [], JAM.policy.p3);
    var config$$16 = this.viz.config;
    var dim$$12 = config$$16.Node;
    var canvas$$41 = this.viz.canvas;
    var w$$10 = JAM.call(node$$103.getData, node$$103, ["width"], JAM.policy.p3);
    var h$$8 = JAM.call(node$$103.getData, node$$103, ["height"], JAM.policy.p3);
    var radius$$6 = JAM.call(canvas$$41.getSize, canvas$$41, [], JAM.policy.p3);
    var labelPos;
    var orn$$8;
    if (config$$16.alignName) {
      pos$$40.x = this.viz.graph.maxXpos;
    }
    var ox$$5 = canvas$$41.translateOffsetX;
    var oy$$6 = canvas$$41.translateOffsetY;
    var sx$$6 = canvas$$41.scaleOffsetX;
    var sy$$6 = canvas$$41.scaleOffsetY;
    var posx = pos$$40.x * sx$$6 + ox$$5;
    var posy = pos$$40.y * sy$$6 + oy$$6;
    if (dim$$12.align === "left") {
      labelPos = {x:JAM.call(Math.round, Math, [posx + 10], JAM.policy.p3), y:JAM.call(Math.round, Math, [posy - h$$8 / 2], JAM.policy.p3)};
      var v13335 = !controller$$11.alignName;
      if (v13335) {
        v13335 = !node$$103.data.leaf;
      }
      if (v13335) {
        labelPos.x = labelPos.x + controller$$11.collapsedXOffset;
      }
      tag$$4.style.textAlign = "left";
    } else {
      throw "align: not implemented";
    }
    var style$$6 = tag$$4.style;
    style$$6.left = labelPos.x + "px";
    style$$6.top = labelPos.y + "px";
    var v6430;
    if (JAM.call(this.fitsInCanvas, this, [labelPos, canvas$$41], JAM.policy.p3)) {
      v6430 = "inline";
    } else {
      v6430 = "none";
    }
    style$$6.display = v6430;
    JAM.call(controller$$11.onPlaceLabel, controller$$11, [tag$$4, node$$103], JAM.policy.p3);
    return;
  }
  function v584(canvas$$40, node$$102, controller$$10) {
    var ctx$$19 = JAM.call(canvas$$40.getCtx, canvas$$40, [], JAM.policy.p3);
    var v6431 = node$$102.pos;
    var coord = JAM.call(v6431.getc, v6431, [true], JAM.policy.p3);
    var width$$24 = JAM.call(node$$102.getData, node$$102, ["width"], JAM.policy.p3);
    var height$$22 = JAM.call(node$$102.getData, node$$102, ["height"], JAM.policy.p3);
    var v6432 = this.viz.fx;
    var pos$$39 = JAM.call(v6432.getAlignedPos, v6432, [coord, width$$24, height$$22], JAM.policy.p3);
    JAM.call(ctx$$19.fillText, ctx$$19, [node$$102.name, pos$$39.x + width$$24 / 2, pos$$39.y + height$$22 / 2], JAM.policy.p3);
    return;
  }
  function v583(adj$$23) {
    var config$$15 = this.config;
    var orn$$7 = config$$15.orientation;
    if (config$$15.multitree) {
      var nodeFrom$$5 = adj$$23.nodeFrom;
      var nodeTo$$7 = adj$$23.nodeTo;
      var v13344 = "$orn" in nodeFrom$$5.data;
      if (v13344) {
        v13344 = nodeFrom$$5.data.$orn;
      }
      var v6436 = v13344;
      if (!v6436) {
        var v13345 = "$orn" in nodeTo$$7.data;
        if (v13345) {
          v13345 = nodeTo$$7.data.$orn;
        }
        v6436 = v13345;
      }
      orn$$7 = v6436;
    }
    return orn$$7;
  }
  function v582(pos$$38, width$$23, height$$21) {
    var nconfig = this.node;
    var square;
    var orn$$6;
    if (nconfig.align === "center") {
      square = {x:pos$$38.x - width$$23 / 2, y:pos$$38.y - height$$21 / 2};
    } else {
      if (nconfig.align === "left") {
        orn$$6 = this.config.orientation;
        var v13353 = orn$$6 === "bottom";
        if (!v13353) {
          v13353 = orn$$6 === "top";
        }
        if (v13353) {
          square = {x:pos$$38.x - width$$23 / 2, y:pos$$38.y};
        } else {
          square = {x:pos$$38.x, y:pos$$38.y - height$$21 / 2};
        }
      } else {
        if (nconfig.align === "right") {
          orn$$6 = this.config.orientation;
          var v13359 = orn$$6 === "bottom";
          if (!v13359) {
            v13359 = orn$$6 === "top";
          }
          if (v13359) {
            square = {x:pos$$38.x - width$$23 / 2, y:pos$$38.y - height$$21};
          } else {
            square = {x:pos$$38.x - width$$23, y:pos$$38.y - height$$21 / 2};
          }
        } else {
          throw "align: not implemented";
        }
      }
    }
    return square;
  }
  function v581(node$$101, opt$$26, scale$$1, animating$$6) {
    function v580(n$$55, ch$$13) {
      var v6455 = config$$14.multitree;
      if (v6455) {
        v6455 = !("$orn" in node$$101.data);
      }
      var root$$19 = v6455;
      var v6456 = root$$19;
      if (v6456) {
        v6456 = JAM.call(node$$101.getData, node$$101, ["orns"], JAM.policy.p3);
      }
      var orns$$3 = v6456;
      var v6457 = !root$$19;
      if (!v6457) {
        v6457 = JAM.call(orns$$3.indexOf, orns$$3, [JAM.call(node$$101.getData, node$$101, ["orn"], JAM.policy.p3)], JAM.policy.p3) > -1;
      }
      return v6457;
    }
    var viz$$28 = this.viz;
    var canvas$$39 = viz$$28.canvas;
    var config$$14 = viz$$28.config;
    scale$$1 = JAM.call(Math.min, Math, [JAM.call(Math.max, Math, [.001, scale$$1], JAM.policy.p3), 1], JAM.policy.p3);
    if (scale$$1 >= 0) {
      node$$101.drawn = false;
      var ctx$$18 = JAM.call(canvas$$39.getCtx, canvas$$39, [], JAM.policy.p3);
      var v6459 = viz$$28.geom;
      var diff$$4 = JAM.call(v6459.getScaledTreePosition, v6459, [node$$101, scale$$1], JAM.policy.p3);
      JAM.call(ctx$$18.translate, ctx$$18, [diff$$4.x, diff$$4.y], JAM.policy.p3);
      JAM.call(ctx$$18.scale, ctx$$18, [scale$$1, scale$$1], JAM.policy.p3);
    }
    JAM.call(this.plotTree, this, [node$$101, JAM.call($$$1.merge, $$$1, [opt$$26, {"withLabels":true, "hideLabels":!!scale$$1, "plotSubtree":v580}], JAM.policy.p3), animating$$6], JAM.policy.p3);
    if (scale$$1 >= 0) {
      node$$101.drawn = true;
    }
    return;
  }
  function v579(node$$100, opt$$25, animating$$5) {
    function v578(elem$$59) {
      var v18641 = JAM.call(opt$$25.plotSubtree, opt$$25, [node$$100, elem$$59], JAM.policy.p3);
      if (v18641) {
        v18641 = elem$$59.exist;
      }
      var v13370 = v18641;
      if (v13370) {
        v13370 = elem$$59.drawn;
      }
      if (v13370) {
        var adj$$22 = JAM.call(node$$100.getAdjacency, node$$100, [elem$$59.id], JAM.policy.p3);
        var v6466 = !animating$$5;
        if (v6466) {
          JAM.call(opt$$25.onBeforePlotLine, opt$$25, [adj$$22], JAM.policy.p3);
        }
        JAM.call(that$$34.plotLine, that$$34, [adj$$22, canvas$$38, animating$$5], JAM.policy.p3);
        var v6467 = !animating$$5;
        if (v6467) {
          JAM.call(opt$$25.onAfterPlotLine, opt$$25, [adj$$22], JAM.policy.p3);
        }
        JAM.call(that$$34.plotTree, that$$34, [elem$$59, opt$$25, animating$$5], JAM.policy.p3);
      }
      return;
    }
    var that$$34 = this;
    var viz$$27 = this.viz;
    var canvas$$38 = viz$$27.canvas;
    var config$$13 = this.config;
    var ctx$$17 = JAM.call(canvas$$38.getCtx, canvas$$38, [], JAM.policy.p3);
    var nodeAlpha$$2 = JAM.call(node$$100.getData, node$$100, ["alpha"], JAM.policy.p3);
    if (viz$$27.clickedNode.id === node$$100.id) {
      JAM.call(ctx$$17.save, ctx$$17, [], JAM.policy.p3);
      ctx$$17.strokeStyle = "yellow";
    }
    JAM.call(node$$100.eachSubnode, node$$100, [v578], JAM.policy.p3);
    if (node$$100.drawn) {
      var v6470 = !animating$$5;
      if (v6470) {
        JAM.call(opt$$25.onBeforePlotNode, opt$$25, [node$$100], JAM.policy.p3);
      }
      JAM.call(this.plotNode, this, [node$$100, canvas$$38, animating$$5], JAM.policy.p3);
      var v6471 = !animating$$5;
      if (v6471) {
        JAM.call(opt$$25.onAfterPlotNode, opt$$25, [node$$100], JAM.policy.p3);
      }
      var v18643 = !opt$$25.hideLabels;
      if (v18643) {
        v18643 = opt$$25.withLabels;
      }
      var v13373 = v18643;
      if (v13373) {
        v13373 = nodeAlpha$$2 >= .95;
      }
      if (v13373) {
        var v6472 = this.labels;
        JAM.call(v6472.plotLabel, v6472, [canvas$$38, node$$100, opt$$25], JAM.policy.p3);
      } else {
        var v6473 = this.labels;
        JAM.call(v6473.hideLabel, v6473, [node$$100, false], JAM.policy.p3);
      }
    } else {
      var v6475 = this.labels;
      JAM.call(v6475.hideLabel, v6475, [node$$100, true], JAM.policy.p3);
    }
    if (viz$$27.clickedNode.id === node$$100.id) {
      JAM.call(ctx$$17.restore, ctx$$17, [], JAM.policy.p3);
    }
    return;
  }
  function v577(node$$99, action$$10, flags$$13) {
    function v576(node1, node2) {
      var v6478 = node1.data;
      var v13376 = node1.data.len;
      if (!v13376) {
        v13376 = 0;
      }
      v6478.len = v13376;
      var v6479 = node2.data;
      var v13377 = node2.data.len;
      if (!v13377) {
        v13377 = 0;
      }
      v6479.len = v13377;
      return node1.data.len - node2.data.len;
    }
    var adj$$21 = node$$99.adjacencies;
    var filter$$5 = JAM.call(this.filter, this, [flags$$13], JAM.policy.p3);
    var id$$35;
    var i$$84;
    var keys = new Array;
    var nodeList$$1 = new Array;
    for (id$$35 in adj$$21) {
      JAM.call(keys.push, keys, [id$$35], JAM.policy.p3);
      if (node$$99 !== adj$$21[id$$35].nodeTo) {
        JAM.call(nodeList$$1.push, nodeList$$1, [adj$$21[id$$35].nodeTo], JAM.policy.p3);
      } else {
        JAM.call(nodeList$$1.push, nodeList$$1, [adj$$21[id$$35].nodeFrom], JAM.policy.p3);
      }
    }
    if (isLateralise()) {
      var cmp = v576;
      nodeList$$1 = JAM.call(nodeList$$1.sort, nodeList$$1, [cmp], JAM.policy.p3);
      keys = new Array;
      i$$84 = 0;
      var v6486 = i$$84 < nodeList$$1.length;
      for (;v6486;) {
        JAM.call(keys.push, keys, [nodeList$$1[i$$84].id], JAM.policy.p3);
        i$$84 = i$$84 + 1;
        v6486 = i$$84 < nodeList$$1.length;
      }
    }
    if (node$$99.data.rotate) {
      keys = JAM.call(keys.reverse, keys, [], JAM.policy.p3);
    }
    for (id$$35 in keys) {
      if (JAM.call(keys.hasOwnProperty, keys, [id$$35], JAM.policy.p3)) {
        var a$$11 = adj$$21[keys[id$$35]];
        if (JAM.call(filter$$5, null, [a$$11], JAM.policy.p3)) {
          if (a$$11.nodeFrom !== node$$99) {
            var tmp$$2 = a$$11.nodeFrom;
            a$$11.nodeFrom = a$$11.nodeTo;
            a$$11.nodeTo = tmp$$2;
          }
          JAM.call(action$$10, null, [a$$11, id$$35], JAM.policy.p3);
        }
      }
    }
    return;
  }
  function v575(node$$97, canvas$$37, level$$15) {
    function v574(level$$16, node$$98) {
      var v6493 = level$$16 === 0;
      if (!v6493) {
        v6493 = !JAM.call(node$$98.anySubnode, node$$98, [], JAM.policy.p3);
      }
      return v6493;
    }
    var csize = JAM.call(canvas$$37.getSize, canvas$$37, [], JAM.policy.p3);
    var v18650 = this.config.multitree;
    if (v18650) {
      v18650 = "$orn" in node$$97.data;
    }
    var v13390 = v18650;
    if (v13390) {
      v13390 = node$$97.data.$orn;
    }
    var v6494 = v13390;
    if (!v6494) {
      v6494 = this.config.orientation;
    }
    var s$$14 = v6494;
    var size$$10 = JAM.call(this.dispatch, this, [s$$14, csize.width, csize.height], JAM.policy.p3);
    var baseSize = JAM.call(this.getTreeBaseSize, this, [node$$97, level$$15, v574], JAM.policy.p3);
    return baseSize < size$$10;
  }
  function v573(node$$96, scale) {
    function $C$$2(a$$10, b$$7) {
      function v572() {
        var v13393 = node$$96.pos;
        var v6497 = JAM.call(v13393.add, v13393, [new Complex(a$$10, b$$7)], JAM.policy.p3);
        return JAM.call(v6497.$scale, v6497, [1 - scale], JAM.policy.p3);
      }
      return v572;
    }
    var dim$$11 = this.node;
    var w$$9 = JAM.call(node$$96.getData, node$$96, ["width"], JAM.policy.p3);
    var h$$7 = JAM.call(node$$96.getData, node$$96, ["height"], JAM.policy.p3);
    var v18652 = this.config.multitree;
    if (v18652) {
      v18652 = "$orn" in node$$96.data;
    }
    var v13395 = v18652;
    if (v13395) {
      v13395 = node$$96.data.$orn;
    }
    var v6499 = v13395;
    if (!v6499) {
      v6499 = this.config.orientation;
    }
    var s$$13 = v6499;
    if (dim$$11.align === "left") {
      return JAM.call(this.dispatch, this, [s$$13, $C$$2(0, h$$7), $C$$2(0, 0), $C$$2(0, 0), $C$$2(w$$9, 0)], JAM.policy.p3);
    } else {
      if (dim$$11.align === "center") {
        return JAM.call(this.dispatch, this, [s$$13, $C$$2(0, h$$7 / 2), $C$$2(-w$$9 / 2, 0), $C$$2(0, -h$$7 / 2), $C$$2(w$$9 / 2, 0)], JAM.policy.p3);
      } else {
        if (dim$$11.align === "right") {
          return JAM.call(this.dispatch, this, [s$$13, $C$$2(0, 0), $C$$2(-w$$9, 0), $C$$2(0, -h$$7), $C$$2(0, 0)], JAM.policy.p3);
        } else {
          throw "align: not implemented";
        }
      }
    }
    return;
  }
  function v571(node$$95, type$$57, s$$12) {
    function $C$$1(a$$9, b$$6) {
      function v570() {
        var v6515 = node$$95.pos;
        return JAM.call(v6515.add, v6515, [new Complex(a$$9, b$$6)], JAM.policy.p3);
      }
      return v570;
    }
    var dim$$10 = this.node;
    var w$$8 = JAM.call(node$$95.getData, node$$95, ["width"], JAM.policy.p3);
    var h$$6 = JAM.call(node$$95.getData, node$$95, ["height"], JAM.policy.p3);
    if (type$$57 === "begin") {
      if (dim$$10.align === "center") {
        return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, h$$6 / 2), $C$$1(-w$$8 / 2, 0), $C$$1(0, -h$$6 / 2), $C$$1(w$$8 / 2, 0)], JAM.policy.p3);
      } else {
        if (dim$$10.align === "left") {
          return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, h$$6), $C$$1(0, 0), $C$$1(0, 0), $C$$1(w$$8, 0)], JAM.policy.p3);
        } else {
          if (dim$$10.align === "right") {
            return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, 0), $C$$1(-w$$8, 0), $C$$1(0, -h$$6), $C$$1(0, 0)], JAM.policy.p3);
          } else {
            throw "align: not implemented";
          }
        }
      }
    } else {
      if (type$$57 === "end") {
        if (dim$$10.align === "center") {
          return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, -h$$6 / 2), $C$$1(w$$8 / 2, 0), $C$$1(0, h$$6 / 2), $C$$1(-w$$8 / 2, 0)], JAM.policy.p3);
        } else {
          if (dim$$10.align === "left") {
            return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, 0), $C$$1(w$$8, 0), $C$$1(0, h$$6), $C$$1(0, 0)], JAM.policy.p3);
          } else {
            if (dim$$10.align === "right") {
              return JAM.call(this.dispatch, this, [s$$12, $C$$1(0, -h$$6), $C$$1(0, 0), $C$$1(0, 0), $C$$1(-w$$8, 0)], JAM.policy.p3);
            } else {
              throw "align: not implemented";
            }
          }
        }
      }
    }
    return;
  }
  function v569(node$$94, level$$14, leaf) {
    function v568(elem$$58) {
      baseHeight = baseHeight + JAM.call(that$$33.getTreeBaseSize, that$$33, [elem$$58, level$$14 - 1, leaf], JAM.policy.p3);
      return;
    }
    var size$$9 = JAM.call(this.getSize, this, [node$$94, true], JAM.policy.p3);
    var baseHeight = 0;
    var that$$33 = this;
    if (JAM.call(leaf, null, [level$$14, node$$94], JAM.policy.p3)) {
      return size$$9;
    }
    if (level$$14 === 0) {
      return 0;
    }
    JAM.call(node$$94.eachSubnode, node$$94, [v568], JAM.policy.p3);
    var v13427;
    if (size$$9 > baseHeight) {
      v13427 = size$$9;
    } else {
      v13427 = baseHeight;
    }
    return v13427 + this.config.subtreeOffset;
  }
  function v567(n$$54, invert$$1) {
    var data$$27 = n$$54.data;
    var config$$12 = this.config;
    var siblingOffset$$1 = config$$12.siblingOffset;
    var v18662 = config$$12.multitree;
    if (v18662) {
      v18662 = "$orn" in data$$27;
    }
    var v13429 = v18662;
    if (v13429) {
      v13429 = data$$27.$orn;
    }
    var v6553 = v13429;
    if (!v6553) {
      v6553 = config$$12.orientation;
    }
    var s$$11 = v6553;
    var w$$7 = JAM.call(n$$54.getData, n$$54, ["width"], JAM.policy.p3) + siblingOffset$$1;
    var h$$5 = JAM.call(n$$54.getData, n$$54, ["height"], JAM.policy.p3) + siblingOffset$$1;
    if (!invert$$1) {
      return JAM.call(this.dispatch, this, [s$$11, h$$5, w$$7], JAM.policy.p3);
    } else {
      return JAM.call(this.dispatch, this, [s$$11, w$$7, h$$5], JAM.policy.p3);
    }
    return;
  }
  function v566() {
    function val$$6(a$$8) {
      var v6557;
      if (typeof a$$8 === "function") {
        v6557 = JAM.call(a$$8, null, [], JAM.policy.p3);
      } else {
        v6557 = a$$8;
      }
      return v6557;
    }
    var v6558 = Array.prototype.slice;
    var args$$3 = JAM.call(v6558.call, v6558, [arguments], JAM.policy.p3);
    var s$$10 = JAM.call(args$$3.shift, args$$3, [], JAM.policy.p3);
    var len$$6 = args$$3.length;
    if (len$$6 === 2) {
      var v6559;
      var v18664 = s$$10 === "top";
      if (!v18664) {
        v18664 = s$$10 === "bottom";
      }
      if (v18664) {
        v6559 = val$$6(args$$3[0]);
      } else {
        v6559 = val$$6(args$$3[1]);
      }
      return v6559;
    } else {
      if (len$$6 === 4) {
        switch(s$$10) {
          case "top":
            return val$$6(args$$3[0]);
          case "right":
            return val$$6(args$$3[1]);
          case "bottom":
            return val$$6(args$$3[2]);
          case "left":
            return val$$6(args$$3[3]);
        }
      }
    }
    return undefined;
  }
  function v565(orn$$5) {
    this.config.orientation = orn$$5;
    return;
  }
  function v564(nodes$$11) {
    function v563(n$$53) {
      function v562(sn$$1) {
        JAM.call(ans$$17.push, ans$$17, [sn$$1], JAM.policy.p3);
        return;
      }
      var par$$1 = JAM.call(n$$53.getParents, n$$53, [], JAM.policy.p3);
      if (par$$1.length === 0) {
        var v6567 = n$$53.id;
        introspect(JAM.policy.p2) {
          siblings[v6567] = [n$$53];
        }
      } else {
        var ans$$17 = [];
        var v6568 = par$$1[0];
        JAM.call(v6568.eachSubnode, v6568, [v562], JAM.policy.p3);
        var v6569 = n$$53.id;
        introspect(JAM.policy.p2) {
          siblings[v6569] = ans$$17;
        }
      }
      return;
    }
    var siblings = {};
    JAM.call($$$1.each, $$$1, [nodes$$11, v563], JAM.policy.p3);
    return siblings;
  }
  function v561(delta$$23, controller$$9, animating$$4) {
    function v560(n$$52) {
      n$$52.drawn = true;
      return;
    }
    function v559(n$$51) {
      var v18665 = root$$18 && orns$$2;
      if (v18665) {
        v18665 = JAM.call(orns$$2.indexOf, orns$$2, [n$$51.data.$orn], JAM.policy.p3) > 0;
      }
      var v13437 = v18665;
      if (v13437) {
        v13437 = n$$51.drawn;
      }
      if (v13437) {
        n$$51.drawn = false;
        var v6571 = nds[node$$93.id];
        JAM.call(v6571.push, v6571, [n$$51], JAM.policy.p3);
      } else {
        var v18666 = !root$$18;
        if (!v18666) {
          v18666 = !orns$$2;
        }
        var v13439 = v18666;
        if (v13439) {
          v13439 = n$$51.drawn;
        }
        if (v13439) {
          n$$51.drawn = false;
          var v6572 = nds[node$$93.id];
          JAM.call(v6572.push, v6572, [n$$51], JAM.policy.p3);
        }
      }
      return;
    }
    var viz$$26 = this.viz;
    var config$$11 = this.config;
    var canvas$$36 = viz$$26.canvas;
    var ctx$$16 = JAM.call(canvas$$36.getCtx, canvas$$36, [], JAM.policy.p3);
    var nodes$$10 = this.nodes;
    var i$$83;
    var node$$93;
    var nds = {};
    i$$83 = 0;
    var v6578 = i$$83 < nodes$$10.length;
    for (;v6578;) {
      node$$93 = nodes$$10[i$$83];
      var v6575 = node$$93.id;
      introspect(JAM.policy.p2) {
        nds[v6575] = [];
      }
      var v6576 = config$$11.multitree;
      if (v6576) {
        v6576 = !("$orn" in node$$93.data);
      }
      var root$$18 = v6576;
      var v6577 = root$$18;
      if (v6577) {
        v6577 = node$$93.data.$orns;
      }
      var orns$$2 = v6577;
      JAM.call(node$$93.eachSubgraph, node$$93, [v559], JAM.policy.p3);
      node$$93.drawn = true;
      i$$83 = i$$83 + 1;
      v6578 = i$$83 < nodes$$10.length;
    }
    if (nodes$$10.length > 0) {
      var v6579 = viz$$26.fx;
      JAM.call(v6579.plot, v6579, [], JAM.policy.p3);
    }
    for (i$$83 in nds) {
      JAM.call($$$1.each, $$$1, [nds[i$$83], v560], JAM.policy.p3);
    }
    i$$83 = 0;
    var v6583 = i$$83 < nodes$$10.length;
    for (;v6583;) {
      node$$93 = nodes$$10[i$$83];
      JAM.call(ctx$$16.save, ctx$$16, [], JAM.policy.p3);
      var v6582 = viz$$26.fx;
      JAM.call(v6582.plotSubtree, v6582, [node$$93, controller$$9, delta$$23, animating$$4], JAM.policy.p3);
      JAM.call(ctx$$16.restore, ctx$$16, [], JAM.policy.p3);
      i$$83 = i$$83 + 1;
      v6583 = i$$83 < nodes$$10.length;
    }
    return;
  }
  function v558(nodes$$9) {
    function v557(a$$7, b$$5) {
      return (a$$7._depth <= b$$5._depth) - (a$$7._depth >= b$$5._depth);
    }
    var ans$$16 = [];
    var config$$10 = this.config;
    var root$$17 = this.viz.root;
    var i$$82;
    var j$$13;
    var desc;
    JAM.call(nodes$$9.sort, nodes$$9, [v557], JAM.policy.p3);
    i$$82 = 0;
    var v6593 = i$$82 < nodes$$9.length;
    for (;v6593;) {
      var v13453 = nodes$$9[i$$82];
      if (JAM.call(v13453.anySubnode, v13453, ["exist"], JAM.policy.p3)) {
        j$$13 = i$$82 + 1;
        desc = false;
        var v13454 = !desc;
        if (v13454) {
          v13454 = j$$13 < nodes$$9.length;
        }
        var v6589 = v13454;
        for (;v6589;) {
          var v13455 = !config$$10.multitree;
          if (!v13455) {
            v13455 = "$orn" in nodes$$9[j$$13].data;
          }
          if (v13455) {
            var v6587 = desc;
            if (!v6587) {
              var v13456 = nodes$$9[i$$82];
              v6587 = JAM.call(v13456.isDescendantOf, v13456, [nodes$$9[j$$13].id], JAM.policy.p3);
            }
            desc = v6587;
          }
          j$$13 = j$$13 + 1;
          var v13459 = !desc;
          if (v13459) {
            v13459 = j$$13 < nodes$$9.length;
          }
          v6589 = v13459;
        }
        if (!desc) {
          JAM.call(ans$$16.push, ans$$16, [nodes$$9[i$$82]], JAM.policy.p3);
        }
      }
      i$$82 = i$$82 + 1;
      v6593 = i$$82 < nodes$$9.length;
    }
    return ans$$16;
  }
  function v556(nodes$$8) {
    var v31146 = JAM.call(this.getNodesWithChildren, this, [nodes$$8], JAM.policy.p3);
    this.nodes = v31146;
    return this.nodes;
  }
  function v555(nodes$$7) {
    function v554(n$$49) {
      function v553(n$$50) {
        if (n$$50.exist) {
          n$$50.drawn = true;
        }
        return;
      }
      function v552(ch$$12) {
        var v23749 = "$orn" in ch$$12.data;
        if (v23749) {
          v23749 = JAM.call(orns$$1.indexOf, orns$$1, [ch$$12.data.$orn], JAM.policy.p3) < 0;
        }
        var v18674 = v23749;
        if (v18674) {
          v18674 = ch$$12.exist;
        }
        var v13461 = v18674;
        if (v13461) {
          v13461 = !ch$$12.drawn;
        }
        if (v13461) {
          orns$$1 = orns$$1 + (ch$$12.data.$orn + " ");
        }
        return;
      }
      var v13463 = config$$9.multitree;
      if (v13463) {
        v13463 = !("$orn" in n$$49.data);
      }
      if (v13463) {
        delete n$$49.data.$orns;
        var orns$$1 = " ";
        JAM.call(n$$49.eachSubnode, n$$49, [v552], JAM.policy.p3);
        n$$49.data.$orns = orns$$1;
      }
      JAM.call(n$$49.eachLevel, n$$49, [0, config$$9.levelsToShow, v553], JAM.policy.p3);
      return;
    }
    var config$$9 = this.config;
    JAM.call(this.prepare, this, [nodes$$7], JAM.policy.p3);
    JAM.call($$$1.each, $$$1, [nodes$$7, v554], JAM.policy.p3);
    return;
  }
  function v551(nodes$$6, controller$$8) {
    function v550() {
      JAM.call(that$$32.plotStep, that$$32, [undefined, controller$$8, false], JAM.policy.p3);
      JAM.call(controller$$8.onComplete, controller$$8, [], JAM.policy.p3);
      return;
    }
    function v549(delta$$22) {
      JAM.call(that$$32.plotStep, that$$32, [delta$$22, controller$$8, this.$animating], JAM.policy.p3);
      this.$animating = "expand";
      return;
    }
    var that$$32 = this;
    JAM.call(this.show, this, [nodes$$6], JAM.policy.p3);
    var v13464 = this.animation;
    var v6601 = JAM.call(v13464.setOptions, v13464, [JAM.call($$$1.merge, $$$1, [controller$$8, {$animating:false, compute:v549, complete:v550}], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(v6601.start, v6601, [], JAM.policy.p3);
    return;
  }
  function v548(nodes$$5, controller$$7) {
    function v547(n$$48) {
      JAM.call(ids$$1.push, ids$$1, [n$$48.id], JAM.policy.p3);
      return;
    }
    function v546(elem$$57) {
      if (elem$$57.exist) {
        JAM.call($$$1.extend, $$$1, [elem$$57, {"drawn":false, "exist":false}], JAM.policy.p3);
      }
      return;
    }
    var viz$$25 = this.viz;
    var i$$81;
    i$$81 = 0;
    var v6611 = i$$81 < nodes$$5.length;
    for (;v6611;) {
      var v18679 = true;
      if (!v18679) {
        v18679 = !controller$$7;
      }
      var v13467 = v18679;
      if (!v13467) {
        v13467 = !controller$$7.request;
      }
      if (v13467) {
        var v6605 = nodes$$5[i$$81];
        JAM.call(v6605.eachLevel, v6605, [1, false, v546], JAM.policy.p3);
      } else {
        var ids$$1 = [];
        var v6606 = nodes$$5[i$$81];
        JAM.call(v6606.eachLevel, v6606, [1, false, v547], JAM.policy.p3);
        var v6607 = viz$$25.op;
        JAM.call(v6607.removeNode, v6607, [ids$$1, {"type":"nothing"}], JAM.policy.p3);
        var v6609 = viz$$25.labels;
        JAM.call(v6609.clearLabels, v6609, [], JAM.policy.p3);
      }
      i$$81 = i$$81 + 1;
      v6611 = i$$81 < nodes$$5.length;
    }
    JAM.call(controller$$7.onComplete, controller$$7, [], JAM.policy.p3);
    return;
  }
  function v545(nodes$$4, controller$$6) {
    function v544() {
      JAM.call(that$$31.hide, that$$31, [nodes$$4, controller$$6], JAM.policy.p3);
      return;
    }
    function v543(delta$$21) {
      if (delta$$21 === 1) {
        delta$$21 = .99;
      }
      JAM.call(that$$31.plotStep, that$$31, [1 - delta$$21, controller$$6, this.$animating], JAM.policy.p3);
      this.$animating = "contract";
      return;
    }
    var viz$$24 = this.viz;
    var that$$31 = this;
    nodes$$4 = JAM.call(this.prepare, this, [nodes$$4], JAM.policy.p3);
    var v13469 = this.animation;
    var v6615 = JAM.call(v13469.setOptions, v13469, [JAM.call($$$1.merge, $$$1, [controller$$6, {$animating:false, compute:v543, complete:v544}], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(v6615.start, v6615, [], JAM.policy.p3);
    return;
  }
  function v542(nodes$$3, controller$$5) {
    function v541(nodeId, data$$26) {
      var v13471 = data$$26;
      if (v13471) {
        v13471 = data$$26.children;
      }
      if (v13471) {
        data$$26.id = nodeId;
        var v6616 = viz$$23.op;
        JAM.call(v6616.sum, v6616, [data$$26, {type:"nothing"}], JAM.policy.p3);
      }
      if ((counter = counter + 1) === len$$5) {
        var v6619 = viz$$23.graph;
        JAM.call(v6619.computeLevels, v6619, [viz$$23.root, 0], JAM.policy.p3);
        JAM.call(controller$$5.onComplete, controller$$5, [], JAM.policy.p3);
      }
      return;
    }
    var counter = 0;
    var len$$5 = nodes$$3.length;
    var nodeSelected = {};
    var i$$80;
    var viz$$23 = this.viz;
    if (len$$5 === 0) {
      JAM.call(controller$$5.onComplete, controller$$5, [], JAM.policy.p3);
    }
    i$$80 = 0;
    var v6627 = i$$80 < len$$5;
    for (;v6627;) {
      var v6623 = nodes$$3[i$$80].id;
      introspect(JAM.policy.p2) {
        nodeSelected[v6623] = nodes$$3[i$$80];
      }
      JAM.call(controller$$5.request, controller$$5, [nodes$$3[i$$80].id, nodes$$3[i$$80]._level, {onComplete:v541}], JAM.policy.p3);
      i$$80 = i$$80 + 1;
      v6627 = i$$80 < len$$5;
    }
    return;
  }
  function v540(viz$$22) {
    this.viz = viz$$22;
    this.canvas = viz$$22.canvas;
    this.config = viz$$22.config;
    var v31147 = new Animation;
    this.animation = v31147;
    this.nodes = null;
    return;
  }
  function v539() {
    function v538(id$$34, options$$11) {
      var canvas$$35 = this.canvas;
      var that$$30 = this;
      var Geom$$3 = this.geom;
      var config$$8 = this.config;
      var v18683 = config$$8.offsetX;
      if (!v18683) {
        v18683 = 0;
      }
      var v13476 = v18683;
      var v18684 = config$$8.offsetY;
      if (!v18684) {
        v18684 = 0;
      }
      var innerController = {Move:{enable:true, offsetX:v13476, offsetY:v18684}, setRightLevelToShowConfig:false, onBeforeRequest:$$$1.empty, onBeforeContract:$$$1.empty, onBeforeMove:$$$1.empty, onBeforeExpand:$$$1.empty};
      var complete$$1 = JAM.call($$$1.merge, $$$1, [this.controller, innerController, options$$11], JAM.policy.p3);
      if (!this.busy) {
        this.busy = true;
        var v6634 = this.graph;
        var node$$92 = JAM.call(v6634.getNode, v6634, [id$$34], JAM.policy.p3);
        JAM.call(this.selectPath, this, [node$$92, this.clickedNode], JAM.policy.p3);
        this.clickedNode = node$$92;
        JAM.call(complete$$1.onBeforeCompute, complete$$1, [node$$92], JAM.policy.p3);
        JAM.call(complete$$1.onBeforeRequest, complete$$1, [node$$92], JAM.policy.p3);
        JAM.call(complete$$1.onBeforeContract, complete$$1, [node$$92], JAM.policy.p3);
        JAM.call(Geom$$3.setRightLevelToShow, Geom$$3, [node$$92, canvas$$35, complete$$1.setRightLevelToShowConfig], JAM.policy.p3);
        JAM.call(complete$$1.onBeforeMove, complete$$1, [node$$92], JAM.policy.p3);
        var nodes$$2 = JAM.call(getNodesToShow.call, getNodesToShow, [this, node$$92], JAM.policy.p3);
        var v6637 = that$$30.group;
        JAM.call(v6637.show, v6637, [nodes$$2], JAM.policy.p3);
        JAM.call(that$$30.computePositions, that$$30, [node$$92, ""], JAM.policy.p3);
        JAM.call(complete$$1.onAfterCompute, complete$$1, [id$$34], JAM.policy.p3);
        this.busy = false;
      }
      return;
    }
    function v537(id$$33, onComplete$$9) {
      function v536() {
        function v535(n$$47) {
          var v6639 = n$$47.pos;
          var pos$$37 = JAM.call(v6639.getc, v6639, [true], JAM.policy.p3);
          var v6640 = n$$47.startPos;
          JAM.call(v6640.setc, v6640, [pos$$37.x, pos$$37.y], JAM.policy.p3);
          var v6643 = n$$47.endPos;
          JAM.call(v6643.setc, v6643, [pos$$37.x, pos$$37.y], JAM.policy.p3);
          n$$47.visited = false;
          return;
        }
        JAM.call(group$$1.hide, group$$1, [JAM.call(group$$1.prepare, group$$1, [JAM.call(getNodesToHide.call, getNodesToHide, [that$$29], JAM.policy.p3)], JAM.policy.p3), complete], JAM.policy.p3);
        JAM.call(geom$$5.setRightLevelToShow, geom$$5, [node$$91, canvas$$34], JAM.policy.p3);
        JAM.call(that$$29.compute, that$$29, ["current"], JAM.policy.p3);
        var v6647 = that$$29.graph;
        JAM.call(v6647.eachNode, v6647, [v535], JAM.policy.p3);
        var offset$$11 = {x:complete.offsetX, y:complete.offsetY};
        var v6650 = that$$29.geom;
        var v18685 = node$$91.endPos;
        var v13480 = JAM.call(v18685.add, v18685, [offset$$11], JAM.policy.p3);
        JAM.call(v6650.translate, v6650, [JAM.call(v13480.$scale, v13480, [-1], JAM.policy.p3), ["start", "current", "end"]], JAM.policy.p3);
        JAM.call(group$$1.show, group$$1, [JAM.call(getNodesToShow.call, getNodesToShow, [that$$29], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(that$$29.plot, that$$29, [], JAM.policy.p3);
        JAM.call(complete.onAfterCompute, complete, [that$$29.clickedNode], JAM.policy.p3);
        JAM.call(complete.onComplete, complete, [], JAM.policy.p3);
        return;
      }
      var group$$1 = this.group;
      var geom$$5 = this.geom;
      var v6655 = this.graph;
      var node$$91 = JAM.call(v6655.getNode, v6655, [id$$33], JAM.policy.p3);
      var canvas$$34 = this.canvas;
      var v6656 = this.graph;
      var root$$16 = JAM.call(v6656.getNode, v6656, [this.root], JAM.policy.p3);
      var complete = JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$9], JAM.policy.p3);
      var that$$29 = this;
      JAM.call(complete.onBeforeCompute, complete, [node$$91], JAM.policy.p3);
      JAM.call(this.selectPath, this, [node$$91], JAM.policy.p3);
      this.clickedNode = node$$91;
      JAM.call(this.requestNodes, this, [node$$91, {onComplete:v536}], JAM.policy.p3);
      return;
    }
    function v534(id$$32, removeRoot, method$$6, onComplete$$8) {
      function v533(n$$46) {
        JAM.call(subids.push, subids, [n$$46.id], JAM.policy.p3);
        return;
      }
      var v6661 = this.graph;
      var node$$90 = JAM.call(v6661.getNode, v6661, [id$$32], JAM.policy.p3);
      var subids = [];
      JAM.call(node$$90.eachLevel, node$$90, [+!removeRoot, false, v533], JAM.policy.p3);
      if (method$$6 === "replot") {
        var v6663 = this.op;
        JAM.call(v6663.removeNode, v6663, [subids, JAM.call($$$1.extend, $$$1, [{type:"replot"}, onComplete$$8 || {}], JAM.policy.p3)], JAM.policy.p3);
      } else {
        if (method$$6 === "animate") {
          var v6665 = this.op;
          JAM.call(v6665.removeNode, v6665, [subids, JAM.call($$$1.extend, $$$1, [{type:"fade:seq"}, onComplete$$8 || {}], JAM.policy.p3)], JAM.policy.p3);
        }
      }
      return;
    }
    function v532(subtree$$2, method$$5, onComplete$$7) {
      if (method$$5 === "replot") {
        var v6669 = this.op;
        JAM.call(v6669.sum, v6669, [subtree$$2, JAM.call($$$1.extend, $$$1, [{type:"replot"}, onComplete$$7 || {}], JAM.policy.p3)], JAM.policy.p3);
      } else {
        if (method$$5 === "animate") {
          var v6671 = this.op;
          JAM.call(v6671.sum, v6671, [subtree$$2, JAM.call($$$1.extend, $$$1, [{type:"fade:seq"}, onComplete$$7 || {}], JAM.policy.p3)], JAM.policy.p3);
        }
      }
      return;
    }
    function v531(id$$31, method$$4, onComplete$$6) {
      function $setRoot() {
        function v530() {
          that$$28.busy = false;
          return;
        }
        this.root = id$$31;
        var v6675 = this.graph;
        var node$$89 = JAM.call(v6675.getNode, v6675, [id$$31], JAM.policy.p3);
        this.clickedNode = clickedNode;
        var v6676 = this.graph;
        JAM.call(v6676.computeLevels, v6676, [this.root, 0, "ignore"], JAM.policy.p3);
        node$$89.collapsed = true;
        JAM.call(this.nodesExpCol, this, [node$$89], JAM.policy.p3);
        JAM.call(this.computePositions, this, [node$$89, "end", true], JAM.policy.p3);
        var v13490 = this.graph;
        JAM.call(this.computeLeaves, this, [JAM.call(v13490.getNode, v13490, [id$$31], JAM.policy.p3), 0], JAM.policy.p3);
        var v13491 = this.graph;
        JAM.call(this.fitchParsimony, this, [JAM.call(v13491.getNode, v13491, [id$$31], JAM.policy.p3)], JAM.policy.p3);
        JAM.call(this.colorCharacter, this, [], JAM.policy.p3);
        var v6680 = this.fx;
        JAM.call(v6680.animate, v6680, [{modes:["linear", "node-property:alpha"], onComplete:v530}], JAM.policy.p3);
        return;
      }
      if (this.busy) {
        return;
      }
      this.busy = true;
      var that$$28 = this;
      var canvas$$33 = this.canvas;
      var v6683 = this.graph;
      var clickedNode = JAM.call(v6683.getNode, v6683, [id$$31], JAM.policy.p3);
      if (method$$4 === "animate") {
        JAM.call($setRoot.call, $setRoot, [this], JAM.policy.p3);
      } else {
        if (method$$4 === "replot") {
          JAM.call($setRoot.call, $setRoot, [this], JAM.policy.p3);
        }
      }
      this.zoomIndex = this.graph.depth.length - 1;
      return;
    }
    function v529(node$$87) {
      function v528(n$$45) {
        n$$45.selected = false;
        return;
      }
      function path(node$$88) {
        function v527(n$$44) {
          n$$44.exist = true;
          n$$44.drawn = true;
          return;
        }
        var v13494 = node$$88 === null;
        if (!v13494) {
          v13494 = node$$88.selected;
        }
        if (v13494) {
          return;
        }
        node$$88.selected = true;
        var v18688 = that$$27.group;
        JAM.call($$$1.each, $$$1, [JAM.call(v18688.getSiblings, v18688, [[node$$88]], JAM.policy.p3)[node$$88.id], v527], JAM.policy.p3);
        var parents = JAM.call(node$$88.getParents, node$$88, [], JAM.policy.p3);
        var v6689;
        if (parents.length > 0) {
          v6689 = parents[0];
        } else {
          v6689 = null;
        }
        parents = v6689;
        path(parents);
        return;
      }
      var that$$27 = this;
      var i$$79;
      var ns$$1;
      var v6690 = this.graph;
      JAM.call(v6690.eachNode, v6690, [v528], JAM.policy.p3);
      i$$79 = 0;
      var v13498 = [node$$87.id];
      ns$$1 = JAM.call(v13498.concat, v13498, [nodesInPath], JAM.policy.p3);
      var v6692 = i$$79 < ns$$1.length;
      for (;v6692;) {
        var v13500 = this.graph;
        path(JAM.call(v13500.getNode, v13500, [ns$$1[i$$79]], JAM.policy.p3));
        i$$79 = i$$79 + 1;
        v6692 = i$$79 < ns$$1.length;
      }
      return;
    }
    function v526(node$$86, onComplete$$5) {
      var nodeArray$$2 = JAM.call(getNodesToShow.call, getNodesToShow, [this, node$$86], JAM.policy.p3);
      var v6693 = this.group;
      JAM.call(v6693.expand, v6693, [nodeArray$$2, JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$5], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v525(node$$85, onComplete$$4) {
      JAM.call(this.compute, this, ["end", false], JAM.policy.p3);
      var move = onComplete$$4.Move;
      var JSCompiler_object_inline_x_88 = move.offsetX;
      var JSCompiler_object_inline_y_89 = move.offsetY;
      var v6695 = this.fx;
      JAM.call(v6695.animate, v6695, [JAM.call($$$1.merge, $$$1, [this.controller, {modes:["linear"]}, onComplete$$4], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v524(onComplete$$3, switched) {
      var orn$$4 = this.config.orientation;
      var Geom$$2 = this.geom;
      var Group = this.group;
      if (switched) {
        JAM.call(Geom$$2.switchOrientation, Geom$$2, [switched], JAM.policy.p3);
      }
      var nodes$$1 = JAM.call(getNodesToHide.call, getNodesToHide, [this], JAM.policy.p3);
      if (switched) {
        JAM.call(Geom$$2.switchOrientation, Geom$$2, [orn$$4], JAM.policy.p3);
      }
      JAM.call(Group.contract, Group, [nodes$$1, JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$3], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v523(node$$84, onComplete$$2) {
      function v522(n$$43) {
        var v13507 = n$$43.drawn;
        if (v13507) {
          v13507 = !JAM.call(n$$43.anySubnode, n$$43, [], JAM.policy.p3);
        }
        if (v13507) {
          JAM.call(leaves$$2.push, leaves$$2, [n$$43], JAM.policy.p3);
          n$$43._level = lev - (n$$43._depth - d$$5);
        }
        return;
      }
      var handler$$3 = JAM.call($$$1.merge, $$$1, [this.controller, onComplete$$2], JAM.policy.p3);
      var lev = this.config.levelsToShow;
      if (handler$$3.request) {
        var leaves$$2 = [];
        var d$$5 = node$$84._depth;
        JAM.call(node$$84.eachLevel, node$$84, [0, lev, v522], JAM.policy.p3);
        var v6703 = this.group;
        JAM.call(v6703.requestNodes, v6703, [leaves$$2, handler$$3], JAM.policy.p3);
      } else {
        JAM.call(handler$$3.onComplete, handler$$3, [], JAM.policy.p3);
      }
      return;
    }
    function v521() {
      function v520(n$$42) {
        if (n$$42.exist) {
          n$$42.drawn = true;
        }
        return;
      }
      var v6706 = this.graph;
      JAM.call(v6706.computeLevels, v6706, [this.root, 0, "ignore"], JAM.policy.p3);
      var v6708 = this.geom;
      JAM.call(v6708.setRightLevelToShow, v6708, [this.clickedNode, this.canvas], JAM.policy.p3);
      var v6711 = this.graph;
      JAM.call(v6711.eachNode, v6711, [v520], JAM.policy.p3);
      JAM.call(this.compute, this, ["end"], JAM.policy.p3);
      return;
    }
    function v519() {
      JAM.call(this.reposition, this, [], JAM.policy.p3);
      var v18694 = this.clickedNode;
      if (v18694) {
        v18694 = this.clickedNode.id;
      }
      var v13509 = v18694;
      if (!v13509) {
        v13509 = this.root;
      }
      JAM.call(this.select, this, [v13509], JAM.policy.p3);
      return;
    }
    function v518(id$$30) {
      nodesInPath.length = 0;
      var v18696 = this.clickedNode;
      if (v18696) {
        v18696 = this.clickedNode.id;
      }
      var v13510 = v18696;
      if (!v13510) {
        v13510 = this.root;
      }
      JAM.call(this.select, this, [v13510], JAM.policy.p3);
      return;
    }
    function v517(id$$29) {
      JAM.call(nodesInPath.push, nodesInPath, [id$$29], JAM.policy.p3);
      var v18698 = this.clickedNode;
      if (v18698) {
        v18698 = this.clickedNode.id;
      }
      var v13511 = v18698;
      if (!v13511) {
        v13511 = this.root;
      }
      JAM.call(this.select, this, [v13511], JAM.policy.p3);
      return;
    }
    function v516(align$$2, method$$3, onComplete$$1) {
      this.config.align = align$$2;
      if (method$$3 === "animate") {
        JAM.call(this.select, this, [this.clickedNode.id, onComplete$$1], JAM.policy.p3);
      } else {
        if (method$$3 === "replot") {
          JAM.call(this.onClick, this, [this.clickedNode.id, onComplete$$1], JAM.policy.p3);
        }
      }
      return;
    }
    function v515(pos$$36, method$$2, onComplete) {
      function v514() {
        JAM.call(Geom$$1.switchOrientation, Geom$$1, [pos$$36], JAM.policy.p3);
        JAM.call(that$$26.compute, that$$26, ["end", false], JAM.policy.p3);
        Plot.busy = false;
        if (method$$2 === "animate") {
          JAM.call(that$$26.onClick, that$$26, [that$$26.clickedNode.id, onComplete], JAM.policy.p3);
        } else {
          if (method$$2 === "replot") {
            JAM.call(that$$26.select, that$$26, [that$$26.clickedNode.id, onComplete], JAM.policy.p3);
          }
        }
        return;
      }
      var Geom$$1 = this.geom;
      var Plot = this.fx;
      var that$$26 = this;
      if (!Plot.busy) {
        Plot.busy = true;
        JAM.call(this.contract, this, [{onComplete:v514}, pos$$36], JAM.policy.p3);
      }
      return;
    }
    function v513(scroll$$3) {
      function v512(subn$$5) {
        var v6726;
        if (show$$2) {
          v6726 = !subn$$5.exist;
        } else {
          v6726 = subn$$5.exist;
        }
        var nodeVisible = v6726;
        if (nodeVisible) {
          subn$$5.exist = show$$2;
          subn$$5.drawn = show$$2;
        }
        return;
      }
      if (!this.busy) {
        this.busy = true;
        var v6727 = this.config;
        JAM.call(v6727.onBeforeCompute, v6727, [{name:""}], JAM.policy.p3);
        var viz$$21 = this;
        var graph$$19 = viz$$21.graph;
        var flag$$2 = true;
        var v6729 = viz$$21.graph;
        var node$$83 = JAM.call(v6729.getNode, v6729, [viz$$21.root], JAM.policy.p3);
        var step$$2 = 2;
        var min$$6 = 1;
        var max$$4 = graph$$19.depth.length - 1;
        var j$$12;
        if (typeof viz$$21.zoomIndex === "undefined") {
          viz$$21.zoomIndex = 1;
        }
        var i$$78 = viz$$21.zoomIndex;
        if (i$$78 < 1) {
          i$$78 = 1;
        } else {
          if (i$$78 > graph$$19.depth.length - 1) {
            i$$78 = graph$$19.depth.length - 1;
          }
        }
        var v6736;
        if (scroll$$3 < 0) {
          v6736 = false;
        } else {
          v6736 = true;
        }
        var show$$2 = v6736;
        step$$2 = JAM.call(Math.round, Math, [graph$$19.depth.length / 10], JAM.policy.p3);
        step$$2 = JAM.call(Math.max, Math, [step$$2, 2], JAM.policy.p3);
        var maxDepth = graph$$19.depth.length;
        var nodelist = graph$$19.depth[i$$78];
        j$$12 = nodelist.length - 1;
        var v6741 = j$$12 >= 0;
        for (;v6741;) {
          var n$$41 = nodelist[j$$12];
          JAM.call(n$$41.eachLevel, n$$41, [1, step$$2, v512], JAM.policy.p3);
          j$$12 = j$$12 - 1;
          v6741 = j$$12 >= 0;
        }
        JAM.call(viz$$21.computePositions, viz$$21, [node$$83, ""], JAM.policy.p3);
        JAM.call(viz$$21.plot, viz$$21, [], JAM.policy.p3);
        var v6742 = viz$$21.config;
        JAM.call(v6742.onAfterCompute, v6742, ["Depth " + i$$78], JAM.policy.p3);
        var v23759;
        if (show$$2) {
          v23759 = +1;
        } else {
          v23759 = -1;
        }
        i$$78 = i$$78 + v23759 * step$$2;
        viz$$21.zoomIndex = i$$78;
        this.busy = false;
      }
      return;
    }
    function v511() {
      var v6745 = this.canvas;
      var size$$8 = JAM.call(v6745.getSize, v6745, [], JAM.policy.p3);
      var key$$28;
      var i$$77;
      var overflow = false;
      var v6746 = this.clickedNode.id;
      if (!v6746) {
        v6746 = this.root;
      }
      var clicked = v6746;
      var height$$20 = 0;
      var v6747 = this.graph;
      var root$$15 = JAM.call(v6747.getNode, v6747, [clicked], JAM.policy.p3);
      var depth$$1 = this.graph.depth;
      var v6749 = this.config;
      JAM.call(v6749.onBeforeCompute, v6749, [{name:""}], JAM.policy.p3);
      for (key$$28 in depth$$1) {
        if (JAM.call(depth$$1.hasOwnProperty, depth$$1, [key$$28], JAM.policy.p3)) {
          if (depth$$1[key$$28]) {
            var nodes = depth$$1[key$$28];
            var tempHeight = 0;
            i$$77 = 0;
            var v6753 = i$$77 < nodes.length;
            for (;v6753;) {
              var node$$82 = nodes[i$$77];
              if (height$$20 < size$$8.height) {
                if (node$$82.data.leaf) {
                  tempHeight = tempHeight + (JAM.call(node$$82.getData, node$$82, ["height", "start"], JAM.policy.p3) + 8);
                } else {
                  tempHeight = tempHeight + JAM.call(node$$82.getData, node$$82, ["height", "start"], JAM.policy.p3) / 2;
                }
                node$$82.drawn = true;
                node$$82.exist = true;
              }
              i$$77 = i$$77 + 1;
              v6753 = i$$77 < nodes.length;
            }
            var v13534 = tempHeight + height$$20 < size$$8.height;
            if (v13534) {
              v13534 = !overflow;
            }
            if (v13534) {
              height$$20 = height$$20 + tempHeight;
              var v31148 = parseInt(key$$28, 10);
              this.zoomIndex = v31148;
            } else {
              i$$77 = 0;
              var v6754 = i$$77 < nodes.length;
              for (;v6754;) {
                node$$82 = nodes[i$$77];
                node$$82.exist = false;
                node$$82.drawn = false;
                node$$82.collapsed = true;
                i$$77 = i$$77 + 1;
                v6754 = i$$77 < nodes.length;
              }
              overflow = true;
            }
          }
        }
      }
      var canvas$$32 = this.canvas;
      var ox$$4 = canvas$$32.translateOffsetX;
      var oy$$5 = canvas$$32.translateOffsetY;
      var v6758 = this.canvas;
      JAM.call(v6758.translate, v6758, [-1 * ox$$4, -1 * oy$$5], JAM.policy.p3);
      var v13537 = this.graph;
      JAM.call(this.computePositions, this, [JAM.call(v13537.getNode, v13537, [this.root], JAM.policy.p3), ""], JAM.policy.p3);
      JAM.call(this.plot, this, [], JAM.policy.p3);
      var v6762 = this.config;
      JAM.call(v6762.onAfterCompute, v6762, [], JAM.policy.p3);
      return;
    }
    function v510() {
      var v6763 = this.fx;
      JAM.call(v6763.plot, v6763, [this.controller], JAM.policy.p3);
      return;
    }
    function v509(value$$42, rangeArray$$2) {
      var i$$76;
      var v13539 = typeof value$$42 === "undefined";
      if (!v13539) {
        v13539 = typeof rangeArray$$2 === "undefined";
      }
      if (v13539) {
        return;
      }
      i$$76 = 0;
      var v6767 = i$$76 < rangeArray$$2.length;
      for (;v6767;) {
        if (value$$42 <= rangeArray$$2[i$$76]) {
          break;
        }
        i$$76 = i$$76 + 1;
        v6767 = i$$76 < rangeArray$$2.length;
      }
      var v6768;
      if (i$$76 === rangeArray$$2.length) {
        v6768 = i$$76 - 1;
      } else {
        v6768 = i$$76;
      }
      return v6768;
    }
    function v508() {
      var list$$1;
      var root$$14;
      var i$$75;
      var char$$20;
      var temp$$2 = {};
      var ds = {};
      var j$$11;
      var dschar;
      var sh$$2;
      var jj;
      var shapes$$1 = this.config.shapes;
      var dsAlt = {};
      var dscharAlt;
      var color$$6 = this.config.color;
      var shapePointer = 0;
      var rangeArray$$1;
      var label$$11;
      var quantColor$$1 = this.config.quantColor;
      var quantShape = this.config.quantShape;
      var heading;
      var content;
      var v6773 = this.graph;
      root$$14 = JAM.call(v6773.getNode, v6773, [this.root], JAM.policy.p3);
      list$$1 = this.characterGroups.quali;
      if (!list$$1) {
        JAM.call(this.findAllCharTypes, this, [root$$14], JAM.policy.p3);
        list$$1 = this.characterGroups.quali;
      }
      if (list$$1) {
        i$$75 = 0;
        var v6780 = i$$75 < list$$1.length;
        for (;v6780;) {
          char$$20 = list$$1[i$$75];
          var v6778 = JAM.call(this.findDistinctCharacterStates, this, [char$$20], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            temp$$2[char$$20] = v6778.array;
          }
          var v6779 = temp$$2[char$$20];
          if (v6779) {
            var v13545 = temp$$2[char$$20];
            JAM.call(v13545.push, v13545, ["multiple"], JAM.policy.p3);
          }
          i$$75 = i$$75 + 1;
          v6780 = i$$75 < list$$1.length;
        }
      }
      for (i$$75 in temp$$2) {
        if (JAM.call(temp$$2.hasOwnProperty, temp$$2, [i$$75], JAM.policy.p3)) {
          char$$20 = temp$$2[i$$75];
          dschar = [];
          dscharAlt = {};
          j$$11 = 0;
          var v6785 = j$$11 < char$$20.length;
          for (;v6785;) {
            var v6781;
            if (color$$6.length > j$$11) {
              v6781 = j$$11;
            } else {
              v6781 = color$$6.length - 1;
            }
            jj = v6781;
            var v6782;
            if (shapes$$1.length > shapePointer) {
              v6782 = shapePointer;
            } else {
              v6782 = shapes$$1.length - 1;
            }
            sh$$2 = v6782;
            JAM.call(dschar.push, dschar, [{color:color$$6[jj], name:char$$20[j$$11], shape:shapes$$1[sh$$2]}], JAM.policy.p3);
            var v6784 = char$$20[j$$11];
            var v13555 = color$$6[jj];
            var v13556 = shapes$$1[sh$$2];
            introspect(JAM.policy.p2) {
              dscharAlt[v6784] = {color:v13555, shape:v13556};
            }
            j$$11 = j$$11 + 1;
            v6785 = j$$11 < char$$20.length;
          }
          introspect(JAM.policy.p2) {
            ds[i$$75] = dschar;
          }
          introspect(JAM.policy.p2) {
            dsAlt[i$$75] = dscharAlt;
          }
          shapePointer++;
        }
      }
      i$$75 = 0;
      var v6796 = i$$75 < this.characterGroups.quant.length;
      for (;v6796;) {
        char$$20 = this.characterGroups.quant[i$$75];
        rangeArray$$1 = this.range[char$$20];
        dschar = [];
        dscharAlt = {};
        j$$11 = 0;
        var v6795 = j$$11 < rangeArray$$1.length;
        for (;v6795;) {
          var v6789;
          if (quantColor$$1.length > j$$11) {
            v6789 = j$$11;
          } else {
            v6789 = quantColor$$1.length - 1;
          }
          jj = v6789;
          var v6790;
          if (shapes$$1.length > shapePointer) {
            v6790 = shapePointer;
          } else {
            v6790 = shapes$$1.length - 1;
          }
          sh$$2 = v6790;
          var v18717;
          if (j$$11 === 0) {
            var v23761 = this.characterMinMax[char$$20].min;
            v18717 = JAM.call(v23761.toFixed, v23761, [2], JAM.policy.p3);
          } else {
            v18717 = rangeArray$$1[j$$11 - 1];
          }
          label$$11 = v18717 + " - " + rangeArray$$1[j$$11];
          JAM.call(dschar.push, dschar, [{color:quantColor$$1[j$$11], name:label$$11, shape:quantShape}], JAM.policy.p3);
          var v6794 = quantColor$$1[j$$11];
          introspect(JAM.policy.p2) {
            dscharAlt[label$$11] = {color:v6794, shape:quantShape};
          }
          j$$11 = j$$11 + 1;
          v6795 = j$$11 < rangeArray$$1.length;
        }
        introspect(JAM.policy.p2) {
          ds[char$$20] = dschar;
        }
        introspect(JAM.policy.p2) {
          dsAlt[char$$20] = dscharAlt;
        }
        shapePointer++;
        i$$75 = i$$75 + 1;
        v6796 = i$$75 < this.characterGroups.quant.length;
      }
      heading = "";
      content = "";
      list$$1 = this.config.selectedCharacters;
      i$$75 = 0;
      var v6802 = i$$75 < list$$1.length;
      for (;v6802;) {
        label$$11 = "";
        char$$20 = list$$1[i$$75];
        if (typeof char$$20 !== "undefined") {
          var v6798 = ds[char$$20];
          if (!v6798) {
            v6798 = [];
          }
          dschar = v6798;
          heading = '<tr><th colspan="2">' + JAM.call(char$$20.replace, char$$20, [/_/g, " "], JAM.policy.p3) + "</th></tr>";
          j$$11 = 0;
          var v6800 = j$$11 < dschar.length;
          for (;v6800;) {
            sh$$2 = dschar[j$$11];
            label$$11 = label$$11 + ('<tr><td><div class ="' + sh$$2.shape + '" style="background-color:' + sh$$2.color + ';"></div></td><td>' + sh$$2.name + "</td></tr>");
            j$$11 = j$$11 + 1;
            v6800 = j$$11 < dschar.length;
          }
          if (label$$11) {
            content = content + (heading + label$$11);
          }
        }
        i$$75 = i$$75 + 1;
        v6802 = i$$75 < list$$1.length;
      }
      this.colorCoding = dsAlt;
      this.colorCodingQuali = ds;
      return content;
    }
    function v507(character$$2) {
      var i$$74;
      var result$$17 = [];
      var temp$$1 = {};
      var node$$81;
      var char$$19;
      var j$$10;
      for (i$$74 in this.graph.nodes) {
        var v13579 = this.graph.nodes;
        if (JAM.call(v13579.hasOwnProperty, v13579, [i$$74], JAM.policy.p3)) {
          node$$81 = this.graph.nodes[i$$74];
          char$$19 = node$$81.data.character[character$$2];
          var v13582 = node$$81.data.leaf;
          if (v13582) {
            v13582 = char$$19;
          }
          if (v13582) {
            j$$10 = 0;
            var v6806 = j$$10 < char$$19.length;
            for (;v6806;) {
              var v6805 = char$$19[j$$10];
              introspect(JAM.policy.p2) {
                temp$$1[v6805] = character$$2;
              }
              j$$10++;
              v6806 = j$$10 < char$$19.length;
            }
          }
        }
      }
      for (i$$74 in temp$$1) {
        if (JAM.call(temp$$1.hasOwnProperty, temp$$1, [i$$74], JAM.policy.p3)) {
          JAM.call(result$$17.push, result$$17, [i$$74], JAM.policy.p3);
        }
      }
      return {hash:temp$$1, array:result$$17};
    }
    function v506(colorOverwrite) {
      function v505(root$$13, characterColorCollection) {
        function v504(node$$80) {
          var v6811 = node$$80.data;
          var v13585 = node$$80.data.color;
          if (!v13585) {
            v13585 = {};
          }
          v6811.color = v13585;
          for (adj in node$$80.adjacencies) {
            var v13586 = node$$80.adjacencies;
            if (JAM.call(v13586.hasOwnProperty, v13586, [adj], JAM.policy.p3)) {
              currentAdj$$1 = node$$80.adjacencies[adj];
              var v6813 = currentAdj$$1.data;
              if (v6813) {
                delete currentAdj$$1.data.$color;
              }
            }
          }
          i$$73 = 0;
          var v6831 = i$$73 < that$$25.characterGroups.quali.length;
          for (;v6831;) {
            char$$18 = that$$25.characterGroups.quali[i$$73];
            charArray = node$$80.data.character[char$$18];
            var v18725 = charArray;
            if (v18725) {
              v18725 = charArray.length === 1;
            }
            var v13591 = v18725;
            if (v13591) {
              v13591 = charArray[0];
            }
            var v6818 = v13591;
            if (!v6818) {
              v6818 = "";
            }
            key$$27 = v6818;
            if (key$$27) {
              key$$27 = JAM.call(key$$27.replace, key$$27, [/ /g, ""], JAM.policy.p3);
              var v6819 = node$$80.data.color;
              var v13594 = characterColorCollection[char$$18];
              introspect(JAM.policy.p2) {
                v6819[char$$18] = v13594.color;
              }
              if (char$$18 === firstCharacter$$2) {
                for (adj in node$$80.adjacencies) {
                  var v13595 = node$$80.adjacencies;
                  if (JAM.call(v13595.hasOwnProperty, v13595, [adj], JAM.policy.p3)) {
                    currentAdj$$1 = node$$80.adjacencies[adj];
                    var nodeTo$$6 = node$$80.adjacencies[adj].nodeTo;
                    var nodeFrom$$4 = node$$80.adjacencies[adj].nodeFrom;
                    var v13598 = nodeTo$$6._depth < node$$80._depth;
                    if (!v13598) {
                      v13598 = nodeFrom$$4._depth < node$$80._depth;
                    }
                    if (v13598) {
                      if (charArray.length === 1) {
                        currentAdj$$1.data.$color = characterColorCollection[firstCharacter$$2][charArray[0]].color;
                        break;
                      } else {
                        delete currentAdj$$1.data.$color;
                      }
                    }
                  }
                }
              }
            } else {
              var v6830 = node$$80.data.color;
              var v13602 = characterColorCollection[char$$18];
              introspect(JAM.policy.p2) {
                v6830[char$$18] = v13602["multiple"];
              }
            }
            i$$73 = i$$73 + 1;
            v6831 = i$$73 < that$$25.characterGroups.quali.length;
          }
          i$$73 = 0;
          var v6847 = i$$73 < that$$25.characterGroups.quant.length;
          for (;v6847;) {
            char$$18 = that$$25.characterGroups.quant[i$$73];
            charArray = node$$80.data.character[char$$18];
            var v18735 = charArray;
            if (v18735) {
              v18735 = charArray.length === 1;
            }
            var v13607 = v18735;
            if (v13607) {
              v13607 = charArray[0];
            }
            var v6834 = v13607;
            if (!v6834) {
              v6834 = "";
            }
            key$$27 = v6834;
            if (key$$27) {
              var rangeArray = that$$25.range[char$$18];
              var index$$43 = JAM.call(that$$25.findIndex, that$$25, [key$$27, rangeArray], JAM.policy.p3);
              var v6836 = node$$80.data.color;
              introspect(JAM.policy.p2) {
                v6836[char$$18] = quantColor[index$$43];
              }
              if (char$$18 === firstCharacter$$2) {
                for (adj in node$$80.adjacencies) {
                  var v13610 = node$$80.adjacencies;
                  if (JAM.call(v13610.hasOwnProperty, v13610, [adj], JAM.policy.p3)) {
                    var currentAdj$$1 = node$$80.adjacencies[adj];
                    nodeTo$$6 = node$$80.adjacencies[adj].nodeTo;
                    nodeFrom$$4 = node$$80.adjacencies[adj].nodeFrom;
                    var v13613 = nodeTo$$6._depth < node$$80._depth;
                    if (!v13613) {
                      v13613 = nodeFrom$$4._depth < node$$80._depth;
                    }
                    if (v13613) {
                      if (charArray.length === 1) {
                        currentAdj$$1.data.$color = quantColor[index$$43];
                        break;
                      } else {
                        delete currentAdj$$1.data.$color;
                      }
                    }
                  }
                }
              }
            }
            i$$73 = i$$73 + 1;
            v6847 = i$$73 < that$$25.characterGroups.quant.length;
          }
          return;
        }
        var firstCharacter$$2 = that$$25.config.firstCharacter;
        var key$$27;
        var charArray;
        var char$$18;
        var i$$73;
        var quantColor = that$$25.config.quantColor;
        var currentAdj;
        JAM.call(root$$13.eachSubgraph, root$$13, [v504], JAM.policy.p3);
        return;
      }
      var speciesHash$$1 = this.character;
      var speciesName$$1;
      var char$$17;
      var i$$72;
      var that$$25 = this;
      var box;
      var node$$79;
      var characterValue;
      var j$$9;
      var html$$5;
      if (JAM.call(this.hasProperty, this, [speciesHash$$1], JAM.policy.p3)) {
        var $colorCharacter = v505;
        var v6850 = this.graph;
        var rootNode$$1 = JAM.call(v6850.getNode, v6850, [this.root], JAM.policy.p3);
        var string;
        var color$$5 = this.config.color;
        var distinct = {};
        var legendColorCollection = {};
        var pointer = 0;
        var legendRows = "";
        var multiple = false;
        var firstCharacter$$1;
        var firstSpecies;
        var characterKey = [];
        for (speciesName$$1 in speciesHash$$1) {
          if (JAM.call(speciesHash$$1.hasOwnProperty, speciesHash$$1, [speciesName$$1], JAM.policy.p3)) {
            for (char$$17 in speciesHash$$1[speciesName$$1]) {
              var v13616 = speciesHash$$1[speciesName$$1];
              if (JAM.call(v13616.hasOwnProperty, v13616, [char$$17], JAM.policy.p3)) {
                JAM.call(characterKey.push, characterKey, [char$$17], JAM.policy.p3);
              }
            }
            break;
          }
        }
        distinct = legendColorCollection[firstCharacter$$1];
        if (!this.config.initCharacter) {
          JAM.call(this.setCharacter, this, [this.config.firstCharacter], JAM.policy.p3);
          this.config.initCharacter = true;
        }
        var v31149 = JAM.call(this.findAllCharTypes, this, [rootNode$$1], JAM.policy.p3);
        this.characterGroups = v31149;
        JAM.call(this.fitchParsimony, this, [rootNode$$1, this.characterGroups.quali], JAM.policy.p3);
        JAM.call(this.quantParsimony, this, [rootNode$$1, this.characterGroups.quant], JAM.policy.p3);
        JAM.call(this.checkQuali, this, [this.characterGroups.quali], JAM.policy.p3);
        JAM.call(this.checkQuant, this, [this.characterGroups.quant], JAM.policy.p3);
        var v31150 = JAM.call(this.findQuantMinMax, this, [rootNode$$1, this.characterGroups.quant], JAM.policy.p3);
        this.characterMinMax = v31150;
        var v31151 = JAM.call(this.findQuantRange, this, [this.characterMinMax], JAM.policy.p3);
        this.range = v31151;
        html$$5 = JAM.call(this.createLegend, this, [], JAM.policy.p3);
        var v13624 = this.graph;
        JAM.call($colorCharacter, null, [JAM.call(v13624.getNode, v13624, [this.root], JAM.policy.p3), this.colorCoding], JAM.policy.p3);
        return html$$5;
      }
      return;
    }
    function v503(quantMinMax) {
      var result$$16 = {};
      var char$$16;
      var rangeCount = this.config.rangeCount;
      var stepsize;
      var i$$71;
      for (char$$16 in quantMinMax) {
        if (JAM.call(quantMinMax.hasOwnProperty, quantMinMax, [char$$16], JAM.policy.p3)) {
          var min$$5 = quantMinMax[char$$16].min;
          var max$$3 = quantMinMax[char$$16].max;
          stepsize = (max$$3 - min$$5) / rangeCount;
          introspect(JAM.policy.p2) {
            result$$16[char$$16] = [];
          }
          i$$71 = 1;
          var v6874 = i$$71 <= rangeCount;
          for (;v6874;) {
            var v6872 = result$$16[char$$16];
            var v13626 = min$$5 + i$$71 * stepsize;
            JAM.call(v6872.push, v6872, [JAM.call(v13626.toFixed, v13626, [2], JAM.policy.p3)], JAM.policy.p3);
            i$$71 = i$$71 + 1;
            v6874 = i$$71 <= rangeCount;
          }
        }
      }
      return result$$16;
    }
    function v502(root$$12, quantCharacters) {
      function v501(node$$78) {
        if (node$$78.data.leaf) {
          var v6876 = node$$78.data.character[char$$15];
          if (v6876) {
            v6876 = node$$78.data.character[char$$15][0];
          }
          var charState = v6876;
          if (typeof charState !== "undefined") {
            var v6877;
            if (min$$4 < charState) {
              v6877 = min$$4;
            } else {
              v6877 = charState;
            }
            min$$4 = v6877;
            var v6878;
            if (max$$2 > charState) {
              v6878 = max$$2;
            } else {
              v6878 = charState;
            }
            max$$2 = v6878;
          }
        }
        return;
      }
      var char$$15;
      var min$$4;
      var max$$2;
      var result$$15 = {};
      var i$$70;
      i$$70 = 0;
      var v6886 = i$$70 < quantCharacters.length;
      for (;v6886;) {
        char$$15 = quantCharacters[i$$70];
        var v6881 = result$$15[char$$15];
        if (!v6881) {
          v6881 = {};
        }
        introspect(JAM.policy.p2) {
          result$$15[char$$15] = v6881;
        }
        result$$15[char$$15].min = min$$4 = Number.MAX_VALUE;
        result$$15[char$$15].max = max$$2 = Number.MIN_VALUE;
        JAM.call(root$$12.eachSubgraph, root$$12, [v501], JAM.policy.p3);
        result$$15[char$$15].min = min$$4;
        result$$15[char$$15].max = max$$2;
        i$$70 = i$$70 + 1;
        v6886 = i$$70 < quantCharacters.length;
      }
      return result$$15;
    }
    function v500(root$$11) {
      function v499(node$$77) {
        if (node$$77.data.leaf) {
          i$$69 = 0;
          var v6891 = i$$69 < all.length;
          for (;v6891;) {
            key$$26 = all[i$$69];
            if (JAM.call(that$$24.characterType, that$$24, [node$$77.data.character[key$$26], "quali"], JAM.policy.p3)) {
              introspect(JAM.policy.p2) {
                quali[key$$26] = true;
              }
              var v6887 = that$$24.config.typeEnum;
              introspect(JAM.policy.p2) {
                charTypeMapping$$1[key$$26] = v6887.quali;
              }
            } else {
              if (JAM.call(that$$24.characterType, that$$24, [node$$77.data.character[key$$26], "quant"], JAM.policy.p3)) {
                introspect(JAM.policy.p2) {
                  quant[key$$26] = true;
                }
                var v6888 = that$$24.config.typeEnum;
                introspect(JAM.policy.p2) {
                  charTypeMapping$$1[key$$26] = v6888.quant;
                }
              }
            }
            i$$69 = i$$69 + 1;
            v6891 = i$$69 < all.length;
          }
        }
        return;
      }
      var type$$56 = {quant:[], quali:[]};
      var all = [];
      var quali = {};
      var quant = {};
      var key$$26;
      var that$$24 = this;
      var first$$4 = this.config.firstCharacter;
      var charTypeMapping$$1 = {};
      var i$$69;
      var v13643 = all;
      if (v13643) {
        v13643 = all.length === 0;
      }
      if (v13643) {
        all = JAM.call(this.listCharacters, this, [], JAM.policy.p3);
        if (this.config.selectedCharacters.length !== 0) {
          if (typeof this.config.selectedCharacters[0] === "undefined") {
            this.config.selectedCharacters[0] = all[0];
          }
          this.config.firstCharacter = this.config.selectedCharacters[0];
        } else {
          if (all.length !== 0) {
            this.config.selectedCharacters = [all[0]];
            this.config.firstCharacter = all[0];
          }
        }
      }
      var v13650 = all;
      if (v13650) {
        v13650 = all.length !== 0;
      }
      if (v13650) {
        JAM.call(root$$11.eachSubgraph, root$$11, [v499], JAM.policy.p3);
      }
      for (key$$26 in quali) {
        if (JAM.call(quali.hasOwnProperty, quali, [key$$26], JAM.policy.p3)) {
          var v6903 = type$$56.quali;
          JAM.call(v6903.push, v6903, [key$$26], JAM.policy.p3);
        }
      }
      for (key$$26 in quant) {
        if (JAM.call(quant.hasOwnProperty, quant, [key$$26], JAM.policy.p3)) {
          var v6905 = type$$56.quant;
          JAM.call(v6905.push, v6905, [key$$26], JAM.policy.p3);
        }
      }
      this.characterList = all;
      this.charTypeMapping = charTypeMapping$$1;
      return type$$56;
    }
    function v498() {
      var aSpecies;
      var i$$68;
      var result$$14 = [];
      for (aSpecies in this.character) {
        for (i$$68 in this.character[aSpecies]) {
          JAM.call(result$$14.push, result$$14, [i$$68], JAM.policy.p3);
        }
        return result$$14;
      }
      return;
    }
    function v497(root$$10, characters$$5) {
      function $quantParsimony(node$$76) {
        function v496(n$$40) {
          var result$$13 = $quantParsimony(n$$40);
          i = 0;
          var v6912 = i < characters$$5.length;
          for (;v6912;) {
            var v13653 = result$$13[characters$$5[i]];
            if (v13653) {
              v13653 = typeof result$$13[characters$$5[i]][0] !== "undefined";
            }
            if (v13653) {
              var v6909 = childrenValues$$2[characters$$5[i]];
              JAM.call(v6909.push, v6909, [result$$13[characters$$5[i]][0]], JAM.policy.p3);
            }
            i = i + 1;
            v6912 = i < characters$$5.length;
          }
          return;
        }
        var childrenValues$$2 = {};
        i = 0;
        var v6914 = i < characters$$5.length;
        for (;v6914;) {
          var v6913 = characters$$5[i];
          introspect(JAM.policy.p2) {
            childrenValues$$2[v6913] = [];
          }
          i = i + 1;
          v6914 = i < characters$$5.length;
        }
        JAM.call(node$$76.eachSubnode, node$$76, [v496], JAM.policy.p3);
        if (!node$$76.data.leaf) {
          i = 0;
          var v6918 = i < characters$$5.length;
          for (;v6918;) {
            var char$$14 = characters$$5[i];
            var value$$41 = node$$76.data.character[char$$14];
            var mean$$1 = JAM.call(st.mean, st, [childrenValues$$2[char$$14]], JAM.policy.p3);
            var v6917 = node$$76.data.character;
            introspect(JAM.policy.p2) {
              v6917[char$$14] = [mean$$1];
            }
            i = i + 1;
            v6918 = i < characters$$5.length;
          }
        }
        return node$$76.data.character;
      }
      var methods$$1 = this.calcMethods;
      $quantParsimony(root$$10);
      return;
    }
    function v495(characters$$4) {
      function $checkQuali(node$$75) {
        function v494(n$$39) {
          result$$12 = $checkQuali(n$$39);
          i$$67 = 0;
          var v6924 = i$$67 < characters$$4.length;
          for (;v6924;) {
            if (result$$12[characters$$4[i$$67]]) {
              var v6921 = childrenValues$$1[characters$$4[i$$67]];
              JAM.call(v6921.push, v6921, [result$$12[characters$$4[i$$67]]], JAM.policy.p3);
            }
            i$$67 = i$$67 + 1;
            v6924 = i$$67 < characters$$4.length;
          }
          return;
        }
        var childrenValues$$1 = {};
        var result$$12;
        var v6925 = node$$75.data;
        var v13669 = node$$75.data.characterConsistency;
        if (!v13669) {
          v13669 = {};
        }
        v6925.characterConsistency = v13669;
        i$$67 = 0;
        var v6927 = i$$67 < characters$$4.length;
        for (;v6927;) {
          var v6926 = characters$$4[i$$67];
          introspect(JAM.policy.p2) {
            childrenValues$$1[v6926] = [];
          }
          i$$67 = i$$67 + 1;
          v6927 = i$$67 < characters$$4.length;
        }
        JAM.call(node$$75.eachSubnode, node$$75, [v494], JAM.policy.p3);
        if (!node$$75.data.leaf) {
          i$$67 = 0;
          var v6930 = i$$67 < characters$$4.length;
          for (;v6930;) {
            var char$$13 = characters$$4[i$$67];
            result$$12 = compareFunction$$1(childrenValues$$1[char$$13]);
            var v6929 = node$$75.data.characterConsistency;
            introspect(JAM.policy.p2) {
              v6929[char$$13] = result$$12;
            }
            i$$67 = i$$67 + 1;
            v6930 = i$$67 < characters$$4.length;
          }
        }
        return node$$75.data.character;
      }
      function compareFunction$$1(sample$$4) {
        var test1$$1 = sample$$4[0];
        var test2$$1;
        var j$$8 = 0;
        var v6934 = j$$8 < sample$$4.length;
        for (;v6934;) {
          test2$$1 = sample$$4[j$$8];
          var result$$11 = JAM.call(that$$23.intersect, that$$23, [test1$$1, test2$$1], JAM.policy.p3);
          var v13677 = result$$11.length !== test1$$1.length;
          if (!v13677) {
            v13677 = result$$11.length !== test2$$1.length;
          }
          if (v13677) {
            return false;
          }
          test1$$1 = result$$11;
          j$$8 = j$$8 + 1;
          v6934 = j$$8 < sample$$4.length;
        }
        return true;
      }
      var v6935 = this.graph;
      var root$$9 = JAM.call(v6935.getNode, v6935, [this.root], JAM.policy.p3);
      var i$$67;
      var that$$23 = this;
      $checkQuali(root$$9);
      return;
    }
    function v493(characters$$3) {
      function $checkQuant(node$$74) {
        function v492(n$$38) {
          ans$$15 = $checkQuant(n$$38);
          result$$10 = ans$$15.character;
          i$$66 = 0;
          var v6946 = i$$66 < characters$$3.length;
          for (;v6946;) {
            var v13680 = result$$10[characters$$3[i$$66]];
            if (v13680) {
              v13680 = typeof result$$10[characters$$3[i$$66]][0] !== "undefined";
            }
            if (v13680) {
              var v6937 = childrenValues[characters$$3[i$$66]];
              JAM.call(v6937.push, v6937, [result$$10[characters$$3[i$$66]][0]], JAM.policy.p3);
              var v6939 = sd$$3[characters$$3[i$$66]];
              JAM.call(v6939.push, v6939, [ans$$15.stat[characters$$3[i$$66]].sd], JAM.policy.p3);
              var v6941 = ui$$3[characters$$3[i$$66]];
              JAM.call(v6941.push, v6941, [ans$$15.stat[characters$$3[i$$66]].u], JAM.policy.p3);
              var v6943 = num$$8[characters$$3[i$$66]];
              JAM.call(v6943.push, v6943, [ans$$15.stat[characters$$3[i$$66]].n], JAM.policy.p3);
            }
            i$$66 = i$$66 + 1;
            v6946 = i$$66 < characters$$3.length;
          }
          return;
        }
        var childrenValues = {};
        var result$$10;
        var sd$$3 = {};
        var ui$$3 = {};
        var num$$8 = {};
        var ans$$15;
        var char$$12;
        var v6947 = node$$74.data;
        var v13690 = node$$74.data.characterConsistency;
        if (!v13690) {
          v13690 = {};
        }
        v6947.characterConsistency = v13690;
        node$$74.data.stat = {};
        i$$66 = 0;
        var v6952 = i$$66 < characters$$3.length;
        for (;v6952;) {
          char$$12 = characters$$3[i$$66];
          var v6949 = characters$$3[i$$66];
          introspect(JAM.policy.p2) {
            childrenValues[v6949] = [];
          }
          var v6950 = node$$74.data.stat;
          var v6951 = characters$$3[i$$66];
          introspect(JAM.policy.p2) {
            v6950[v6951] = {sd:undefined, u:undefined, n:undefined};
          }
          introspect(JAM.policy.p2) {
            sd$$3[char$$12] = [];
          }
          introspect(JAM.policy.p2) {
            ui$$3[char$$12] = [];
          }
          introspect(JAM.policy.p2) {
            num$$8[char$$12] = [];
          }
          i$$66 = i$$66 + 1;
          v6952 = i$$66 < characters$$3.length;
        }
        JAM.call(node$$74.eachSubnode, node$$74, [v492], JAM.policy.p3);
        if (!node$$74.data.leaf) {
          i$$66 = 0;
          var v6964 = i$$66 < characters$$3.length;
          for (;v6964;) {
            char$$12 = characters$$3[i$$66];
            if (childrenValues[char$$12].length !== 0) {
              var v6953 = node$$74.data.stat[char$$12];
              var v31152 = JAM.call(that$$22.meanPop, that$$22, [num$$8[char$$12], ui$$3[char$$12]], JAM.policy.p3);
              v6953.u = v31152;
              var v6954 = node$$74.data.character;
              var v13701 = node$$74.data.stat[char$$12].u;
              introspect(JAM.policy.p2) {
                v6954[char$$12] = [v13701];
              }
              var v6955 = node$$74.data.stat[char$$12];
              var v31153 = JAM.call(that$$22.sum, that$$22, [num$$8[char$$12]], JAM.policy.p3);
              v6955.n = v31153;
              var v6956 = node$$74.data.stat[char$$12];
              var v31154 = JAM.call(that$$22.sdPop, that$$22, [num$$8[char$$12], sd$$3[char$$12], ui$$3[char$$12], node$$74.data.stat[characters$$3[i$$66]].u], JAM.policy.p3);
              v6956.sd = v31154;
              result$$10 = compareFunction(node$$74.data.stat[char$$12].u, node$$74.data.stat[char$$12].sd, meanTree[char$$12], sdTree[char$$12]);
            } else {
              var v6961 = node$$74.data.stat;
              introspect(JAM.policy.p2) {
                v6961[char$$12] = {sd:undefined, u:undefined, n:undefined};
              }
              result$$10 = true;
            }
            var v6963 = node$$74.data.characterConsistency;
            introspect(JAM.policy.p2) {
              v6963[char$$12] = result$$10;
            }
            i$$66 = i$$66 + 1;
            v6964 = i$$66 < characters$$3.length;
          }
        } else {
          i$$66 = 0;
          var v6971 = i$$66 < characters$$3.length;
          for (;v6971;) {
            result$$10 = node$$74.data.character;
            var v13715 = result$$10[characters$$3[i$$66]];
            if (v13715) {
              v13715 = typeof result$$10[characters$$3[i$$66]][0] !== "undefined";
            }
            if (v13715) {
              var v6966 = node$$74.data.stat;
              var v6967 = characters$$3[i$$66];
              var v13717 = result$$10[characters$$3[i$$66]][0];
              introspect(JAM.policy.p2) {
                v6966[v6967] = {sd:0, u:v13717, n:1};
              }
            } else {
              var v6968 = node$$74.data.stat;
              var v6969 = characters$$3[i$$66];
              introspect(JAM.policy.p2) {
                v6968[v6969] = {sd:undefined, u:undefined, n:undefined};
              }
            }
            i$$66 = i$$66 + 1;
            v6971 = i$$66 < characters$$3.length;
          }
        }
        return node$$74.data;
      }
      function compareFunction(mean, sd$$2, mTree, sTree) {
        var test1 = JAM.call(Math.abs, Math, [mean - mTree], JAM.policy.p3) > sTree;
        var test2 = sd$$2 > sTree;
        return !(test1 && test2);
      }
      var n$$37 = this.config.threshold;
      var v6976 = this.graph;
      var root$$8 = JAM.call(v6976.getNode, v6976, [this.root], JAM.policy.p3);
      var meanTree = JAM.call(this.meanAtTree, this, [root$$8, characters$$3], JAM.policy.p3);
      var sdTree = JAM.call(this.sdAtTree, this, [root$$8, characters$$3], JAM.policy.p3);
      var i$$66;
      var that$$22 = this;
      var count$$4 = 0;
      $checkQuant(root$$8);
      return;
    }
    function v491(root$$7, characters$$2) {
      function v490(node$$73) {
        if (node$$73.data.leaf) {
          i = 0;
          var v6982 = i < characters$$2.length;
          for (;v6982;) {
            char$$11 = characters$$2[i];
            var v13723 = node$$73.data.character[char$$11];
            if (v13723) {
              v13723 = typeof node$$73.data.character[char$$11][0] !== "undefined";
            }
            if (v13723) {
              var v6978 = samples$$2[char$$11].value;
              JAM.call(v6978.push, v6978, [node$$73.data.character[char$$11][0]], JAM.policy.p3);
              var v6980 = samples$$2[char$$11].number;
              JAM.call(v6980.push, v6980, [1], JAM.policy.p3);
            }
            i = i + 1;
            v6982 = i < characters$$2.length;
          }
        }
        return;
      }
      var samples$$2 = {};
      var char$$11;
      var result$$9 = {};
      i = 0;
      var v6985 = i < characters$$2.length;
      for (;v6985;) {
        var v6984 = characters$$2[i];
        introspect(JAM.policy.p2) {
          samples$$2[v6984] = {value:[], number:[]};
        }
        i = i + 1;
        v6985 = i < characters$$2.length;
      }
      JAM.call(root$$7.eachSubgraph, root$$7, [v490], JAM.policy.p3);
      i = 0;
      var v6988 = i < characters$$2.length;
      for (;v6988;) {
        char$$11 = characters$$2[i];
        var v6986 = result$$9;
        var v6987 = char$$11;
        var v31155 = JAM.call(this.wtmean, this, [samples$$2[char$$11].value, samples$$2[char$$11].number], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          v6986[v6987] = v31155;
        }
        i = i + 1;
        v6988 = i < characters$$2.length;
      }
      return result$$9;
    }
    function v489(root$$6, characters$$1) {
      function v488(node$$72) {
        if (node$$72.data.leaf) {
          i = 0;
          var v6992 = i < characters$$1.length;
          for (;v6992;) {
            char$$10 = characters$$1[i];
            var v13736 = node$$72.data.character[char$$10];
            if (v13736) {
              v13736 = typeof node$$72.data.character[char$$10][0] !== "undefined";
            }
            if (v13736) {
              var v6989 = samples$$1[char$$10];
              JAM.call(v6989.push, v6989, [node$$72.data.character[char$$10][0]], JAM.policy.p3);
            }
            i = i + 1;
            v6992 = i < characters$$1.length;
          }
        }
        return;
      }
      var samples$$1 = {};
      var char$$10;
      var result$$8 = {};
      i = 0;
      var v6995 = i < characters$$1.length;
      for (;v6995;) {
        var v6994 = characters$$1[i];
        introspect(JAM.policy.p2) {
          samples$$1[v6994] = [];
        }
        i = i + 1;
        v6995 = i < characters$$1.length;
      }
      JAM.call(root$$6.eachSubgraph, root$$6, [v488], JAM.policy.p3);
      i = 0;
      var v6998 = i < characters$$1.length;
      for (;v6998;) {
        char$$10 = characters$$1[i];
        var v6996 = result$$8;
        var v6997 = char$$10;
        var v31156 = JAM.call(this.variance, this, [samples$$1[char$$10]], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          v6996[v6997] = v31156;
        }
        i = i + 1;
        v6998 = i < characters$$1.length;
      }
      return result$$8;
    }
    function v487(root$$5, characters) {
      function v486(node$$71) {
        if (node$$71.data.leaf) {
          i = 0;
          var v7002 = i < characters.length;
          for (;v7002;) {
            char$$9 = characters[i];
            var v13746 = node$$71.data.character[char$$9];
            if (v13746) {
              v13746 = typeof node$$71.data.character[char$$9][0] !== "undefined";
            }
            if (v13746) {
              var v6999 = samples[char$$9];
              JAM.call(v6999.push, v6999, [node$$71.data.character[char$$9][0]], JAM.policy.p3);
            }
            i = i + 1;
            v7002 = i < characters.length;
          }
        }
        return;
      }
      var samples = {};
      var char$$9;
      var result$$7 = {};
      i = 0;
      var v7005 = i < characters.length;
      for (;v7005;) {
        var v7004 = characters[i];
        introspect(JAM.policy.p2) {
          samples[v7004] = [];
        }
        i = i + 1;
        v7005 = i < characters.length;
      }
      JAM.call(root$$5.eachSubgraph, root$$5, [v486], JAM.policy.p3);
      i = 0;
      var v7008 = i < characters.length;
      for (;v7008;) {
        char$$9 = characters[i];
        var v7006 = result$$7;
        var v7007 = char$$9;
        var v31157 = JAM.call(this.sd, this, [samples[char$$9]], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          v7006[v7007] = v31157;
        }
        i = i + 1;
        v7008 = i < characters.length;
      }
      return result$$7;
    }
    function v485(firstCharacter) {
      var v7009 = firstCharacter;
      if (!v7009) {
        v7009 = this.config.firstCharacter;
      }
      firstCharacter = v7009;
      if (!firstCharacter) {
        return;
      }
      var speciesHash = this.character;
      var speciesName;
      var char$$8;
      var i$$65;
      for (i$$65 in this.graph.nodes) {
        var v13757 = this.graph.nodes;
        if (JAM.call(v13757.hasOwnProperty, v13757, [i$$65], JAM.policy.p3)) {
          var node$$70 = this.graph.nodes[i$$65];
          node$$70.data.character = {};
          if (node$$70.data.leaf) {
            for (key in speciesHash) {
              if (JAM.call(speciesHash.hasOwnProperty, speciesHash, [key], JAM.policy.p3)) {
                var speciesCharacter = speciesHash[key][firstCharacter];
                if (node$$70.name === key) {
                  node$$70.data.colorCharacter = speciesCharacter;
                  node$$70.data.character = speciesHash[key];
                  break;
                }
              }
            }
          }
        }
      }
      return;
    }
    function v484(node$$67, characterList) {
      function downPass(node$$68) {
        function v479(snode) {
          char$$7 = downPass(snode);
          i$$63 = 0;
          var v7024 = i$$63 < characterList.length;
          for (;v7024;) {
            key$$24 = characterList[i$$63];
            var v7021 = childrenChar[key$$24];
            if (!v7021) {
              v7021 = [];
            }
            introspect(JAM.policy.p2) {
              childrenChar[key$$24] = v7021;
            }
            var v7022 = childrenChar[key$$24];
            JAM.call(v7022.push, v7022, [char$$7[key$$24]], JAM.policy.p3);
            i$$63 = i$$63 + 1;
            v7024 = i$$63 < characterList.length;
          }
          return;
        }
        var childrenChar = {};
        var key$$24;
        var i$$63;
        var j$$7;
        JAM.call(node$$68.eachSubnode, node$$68, [v479], JAM.policy.p3);
        if (node$$68.data.leaf) {
          var v7025 = node$$68.data.character;
          if (!v7025) {
            v7025 = [];
          }
          return v7025;
        }
        var parentChar = {};
        j$$7 = 0;
        var v7034 = j$$7 < characterList.length;
        for (;v7034;) {
          key$$24 = characterList[j$$7];
          var v7027 = childrenChar[key$$24][0];
          if (!v7027) {
            v7027 = [];
          }
          var intersection = v7027;
          i$$63 = 0;
          var v7029 = i$$63 < childrenChar[key$$24].length;
          for (;v7029;) {
            var v7028 = childrenChar[key$$24][i$$63];
            if (!v7028) {
              v7028 = [];
            }
            char$$7 = v7028;
            intersection = JAM.call(that$$21.intersect, that$$21, [intersection, char$$7], JAM.policy.p3);
            i$$63 = i$$63 + 1;
            v7029 = i$$63 < childrenChar[key$$24].length;
          }
          if (intersection.length > 0) {
            introspect(JAM.policy.p2) {
              parentChar[key$$24] = intersection;
            }
          } else {
            var v7030 = childrenChar[key$$24][0];
            if (!v7030) {
              v7030 = [];
            }
            char$$7 = v7030;
            i$$63 = 1;
            var v7032 = i$$63 < childrenChar[key$$24].length;
            for (;v7032;) {
              char$$7 = JAM.call(that$$21.union, that$$21, [char$$7, childrenChar[key$$24][i$$63]], JAM.policy.p3);
              i$$63 = i$$63 + 1;
              v7032 = i$$63 < childrenChar[key$$24].length;
            }
            introspect(JAM.policy.p2) {
              parentChar[key$$24] = char$$7;
            }
          }
          j$$7 = j$$7 + 1;
          v7034 = j$$7 < characterList.length;
        }
        node$$68.data.colorCharacter = parentChar[that$$21.config.firstCharacter];
        return node$$68.data.character = parentChar;
      }
      function upPass(node$$69) {
        function v483(n$$36) {
          $upPass(n$$36);
          return;
        }
        function $upPass(n$$35) {
          function v482(sn) {
            $upPass(sn);
            return;
          }
          function v481(subn$$4) {
            cUnion = JAM.call(that$$21.union, that$$21, [cUnion, subn$$4.data.character[key$$25]], JAM.policy.p3);
            return;
          }
          function v480(subn$$3) {
            if (!cIntersect) {
              cIntersect = subn$$3.data.character[key$$25];
              return;
            }
            cIntersect = JAM.call(that$$21.intersect, that$$21, [cIntersect, subn$$3.data.character[key$$25]], JAM.policy.p3);
            return;
          }
          if (n$$35.data.leaf) {
            return;
          }
          var key$$25;
          var morphData = n$$35.data.character;
          var p$$21 = JAM.call(n$$35.getParents, n$$35, [], JAM.policy.p3)[0];
          var fp;
          var i$$64;
          for (key$$25 in morphData) {
            if (JAM.call(morphData.hasOwnProperty, morphData, [key$$25], JAM.policy.p3)) {
              var sp = morphData[key$$25];
              var fa = p$$21.data.character[key$$25];
              fp = JAM.call(that$$21.intersect, that$$21, [sp, fa], JAM.policy.p3);
              if (fp.length !== fa.length) {
                var cIntersect;
                JAM.call(n$$35.eachSubnode, n$$35, [v480], JAM.policy.p3);
                var v13789 = cIntersect;
                if (v13789) {
                  v13789 = cIntersect.length !== 0;
                }
                if (v13789) {
                  var cUnion = [];
                  var aIntersect;
                  JAM.call(n$$35.eachSubnode, n$$35, [v481], JAM.policy.p3);
                  aIntersect = JAM.call(that$$21.intersect, that$$21, [cUnion, fa], JAM.policy.p3);
                  fp = JAM.call(that$$21.union, that$$21, [aIntersect, n$$35.data.character[key$$25]], JAM.policy.p3);
                } else {
                  fp = JAM.call(that$$21.union, that$$21, [n$$35.data.character[key$$25], fa], JAM.policy.p3);
                }
              }
              var v7049 = n$$35.data.character;
              introspect(JAM.policy.p2) {
                v7049[key$$25] = fp;
              }
            }
          }
          JAM.call(n$$35.eachSubnode, n$$35, [v482], JAM.policy.p3);
          n$$35.data.colorCharacter = n$$35.data.character[that$$21.config.firstCharacter];
          return;
        }
        JAM.call(node$$69.eachSubnode, node$$69, [v483], JAM.policy.p3);
        return;
      }
      var v13795 = characterList;
      if (v13795) {
        v13795 = characterList.length != 0;
      }
      if (v13795) {
        var i$$62;
        var char$$7;
        var j$$6;
        var that$$21 = this;
        var result$$6;
        downPass(node$$67);
        upPass(node$$67);
      }
      return;
    }
    function v478(node$$66) {
      function v477(elem$$56) {
        elem$$56.exist = false;
        elem$$56.drawn = false;
        if (!elem$$56.data.leaf) {
          elem$$56.data.$type = "circle";
        } else {
          elem$$56.data.$type = "none";
        }
        elem$$56.collapsed = true;
        return;
      }
      function v476(elem$$55) {
        if (!elem$$55.exist) {
          elem$$55.exist = true;
          elem$$55.drawn = true;
        }
        if (!elem$$55.data.leaf) {
          elem$$55.data.$type = "circle";
        } else {
          elem$$55.data.$type = "none";
        }
        elem$$55.collapsed = false;
        if (level$$13 < elem$$55._depth) {
          level$$13 = elem$$55._depth + 1;
        }
        return;
      }
      var level$$13 = 0;
      if (node$$66.collapsed) {
        JAM.call(node$$66.eachSubgraph, node$$66, [v476], JAM.policy.p3);
        if (!node$$66.data.leaf) {
          node$$66.data.$type = "circle";
        } else {
          node$$66.data.$type = "none";
        }
      } else {
        JAM.call(node$$66.eachSubgraph, node$$66, [v477], JAM.policy.p3);
        node$$66.exist = true;
        node$$66.drawn = true;
        level$$13 = false;
        if (!node$$66.data.leaf) {
          node$$66.data.$type = "triangle";
        } else {
          node$$66.data.$type = "none";
        }
      }
      return level$$13;
    }
    function v475(node$$65) {
      if (node$$65.data.$type === "triangle") {
        node$$65.collapsed = true;
      } else {
        node$$65.collapsed = false;
      }
      return;
    }
    function v474(setA$$1, setB$$1) {
      setA$$1 = setA$$1 || [];
      setB$$1 = setB$$1 || [];
      var i$$61;
      var j$$5;
      var sets = [setA$$1, setB$$1];
      var char$$6;
      var union = {};
      i$$61 = 0;
      var v7072 = i$$61 < sets.length;
      for (;v7072;) {
        char$$6 = sets[i$$61];
        j$$5 = 0;
        var v7071 = j$$5 < char$$6.length;
        for (;v7071;) {
          var v7070 = char$$6[j$$5];
          introspect(JAM.policy.p2) {
            union[v7070] = char$$6[j$$5];
          }
          j$$5 = j$$5 + 1;
          v7071 = j$$5 < char$$6.length;
        }
        i$$61 = i$$61 + 1;
        v7072 = i$$61 < sets.length;
      }
      char$$6 = [];
      for (i$$61 in union) {
        if (JAM.call(union.hasOwnProperty, union, [i$$61], JAM.policy.p3)) {
          JAM.call(char$$6.push, char$$6, [union[i$$61]], JAM.policy.p3);
        }
      }
      return char$$6;
    }
    function v473(setA, setB) {
      var v23796 = !setA;
      if (!v23796) {
        v23796 = !setB;
      }
      var v18818 = v23796;
      if (!v18818) {
        v18818 = setA.length === 0;
      }
      var v13807 = v18818;
      if (!v13807) {
        v13807 = setB.length === 0;
      }
      if (v13807) {
        return [];
      }
      var hashA = {};
      var i$$60;
      var result$$5 = [];
      i$$60 = 0;
      var v7077 = i$$60 < setA.length;
      for (;v7077;) {
        var v7076 = setA[i$$60];
        introspect(JAM.policy.p2) {
          hashA[v7076] = true;
        }
        i$$60 = i$$60 + 1;
        v7077 = i$$60 < setA.length;
      }
      i$$60 = 0;
      var v7080 = i$$60 < setB.length;
      for (;v7080;) {
        if (hashA[setB[i$$60]]) {
          JAM.call(result$$5.push, result$$5, [setB[i$$60]], JAM.policy.p3);
        }
        i$$60 = i$$60 + 1;
        v7080 = i$$60 < setB.length;
      }
      return result$$5;
    }
    function v472(data$$25, testcase) {
      var v13813 = !data$$25;
      if (!v13813) {
        v13813 = data$$25.length === 0;
      }
      if (v13813) {
        return;
      }
      switch(testcase) {
        case "quant":
          return JAM.call(this.isQuant, this, [data$$25], JAM.policy.p3);
        case "quali":
          return JAM.call(this.isQuali, this, [data$$25], JAM.policy.p3);
      }
      return;
    }
    function v471(data$$24) {
      if (typeof data$$24[0] === "string") {
        return true;
      } else {
        return false;
      }
      return;
    }
    function v470(data$$23) {
      if (typeof data$$23[0] === "number") {
        return true;
      } else {
        return false;
      }
      return;
    }
    function v469(ni, ui$$2) {
      var v18825 = !ni;
      if (!v18825) {
        v18825 = !ui$$2;
      }
      var v13816 = v18825;
      if (!v13816) {
        v13816 = ni.length != ui$$2.length;
      }
      if (v13816) {
        return;
      }
      return JAM.call(this.sum, this, [JAM.call(this.multiply, this, [ni, ui$$2], JAM.policy.p3)], JAM.policy.p3) / JAM.call(this.sum, this, [ni], JAM.policy.p3);
    }
    function v468(num$$7, sd$$1, ui$$1, up$$1) {
      var v26124 = !num$$7;
      if (!v26124) {
        v26124 = !sd$$1;
      }
      var v23800 = v26124;
      if (!v23800) {
        v23800 = !ui$$1;
      }
      var v18829 = v23800;
      if (!v18829) {
        v18829 = num$$7.length !== sd$$1.length;
      }
      var v13818 = v18829;
      if (!v13818) {
        v13818 = sd$$1.length !== ui$$1.length;
      }
      if (v13818) {
        return;
      }
      return JAM.call(Math.sqrt, Math, [JAM.call(this.variancePop, this, [num$$7, sd$$1, ui$$1, up$$1], JAM.policy.p3)], JAM.policy.p3);
    }
    function v467(num$$6, sd, ui, up) {
      function v466(elem$$54) {
        return elem$$54 - 1;
      }
      var v26126 = !num$$6;
      if (!v26126) {
        v26126 = !sd;
      }
      var v23804 = v26126;
      if (!v23804) {
        v23804 = !ui;
      }
      var v18833 = v23804;
      if (!v18833) {
        v18833 = num$$6.length !== sd.length;
      }
      var v13819 = v18833;
      if (!v13819) {
        v13819 = sd.length !== ui.length;
      }
      if (v13819) {
        return;
      }
      if (num$$6.length === 1) {
        return 0;
      }
      var sumNum = JAM.call(this.sum, this, [num$$6], JAM.policy.p3);
      var sqUp = up * up;
      var lessNum;
      var sqSd;
      var sqUi;
      var v7091 = $jit.util;
      lessNum = JAM.call(v7091.map, v7091, [num$$6, v466], JAM.policy.p3);
      sqSd = JAM.call(this.square, this, [sd], JAM.policy.p3);
      sqUi = JAM.call(this.square, this, [ui], JAM.policy.p3);
      return (JAM.call(this.sum, this, [JAM.call(this.multiply, this, [lessNum, sqSd], JAM.policy.p3)], JAM.policy.p3) + JAM.call(this.sum, this, [JAM.call(this.multiply, this, [num$$6, sqUi], JAM.policy.p3)], JAM.policy.p3) - sumNum * sqUp) / (sumNum - 1);
    }
    function v465(num1, num2) {
      var v18839 = !num1;
      if (!v18839) {
        v18839 = !num2;
      }
      var v13823 = v18839;
      if (!v13823) {
        v13823 = num1.length !== num2.length;
      }
      if (v13823) {
        return;
      }
      var i$$59;
      var result$$4 = [];
      i$$59 = 0;
      var v7096 = i$$59 < num1.length;
      for (;v7096;) {
        JAM.call(result$$4.push, result$$4, [num1[i$$59] * num2[i$$59]], JAM.policy.p3);
        i$$59 = i$$59 + 1;
        v7096 = i$$59 < num1.length;
      }
      return result$$4;
    }
    function v464(num$$5) {
      function v463(elem$$53) {
        return elem$$53 * elem$$53;
      }
      var v7097 = $jit.util;
      return JAM.call(v7097.map, v7097, [num$$5, v463], JAM.policy.p3);
    }
    function v462(sample$$3) {
      var v13828 = !sample$$3;
      if (!v13828) {
        v13828 = sample$$3.length === 0;
      }
      if (v13828) {
        return;
      }
      return JAM.call(Math.sqrt, Math, [JAM.call(this.variance, this, [sample$$3], JAM.policy.p3)], JAM.policy.p3);
    }
    function v461(sample$$2) {
      function v460(acc$$1, value$$40) {
        var diff$$3 = value$$40 - avg;
        return acc$$1 + diff$$3 * diff$$3;
      }
      var v13829 = !sample$$2;
      if (!v13829) {
        v13829 = sample$$2.length === 0;
      }
      if (v13829) {
        return;
      }
      var avg;
      var num$$4;
      var total;
      avg = JAM.call(this.mean, this, [sample$$2], JAM.policy.p3);
      num$$4 = sample$$2.length;
      total = JAM.call($$$1.reduce, $$$1, [sample$$2, v460, 0], JAM.policy.p3);
      return total / num$$4;
    }
    function v459(sample$$1, number$$2) {
      var v26128 = !sample$$1;
      if (!v26128) {
        v26128 = sample$$1.length === 0;
      }
      var v23811 = v26128;
      if (!v23811) {
        v23811 = !number$$2;
      }
      var v18847 = v23811;
      if (!v18847) {
        v18847 = number$$2.length === 0;
      }
      var v13830 = v18847;
      if (!v13830) {
        v13830 = number$$2.length !== sample$$1.length;
      }
      if (v13830) {
        return;
      }
      var i$$58;
      var sum$$1 = 0;
      var count$$3 = 0;
      i$$58 = 0;
      var v7103 = i$$58 < number$$2.length;
      for (;v7103;) {
        sum$$1 = sum$$1 + number$$2[i$$58] * sample$$1[i$$58];
        count$$3 = count$$3 + number$$2[i$$58];
        i$$58 = i$$58 + 1;
        v7103 = i$$58 < number$$2.length;
      }
      return sum$$1 / count$$3;
    }
    function v458(sample) {
      var v13835 = !sample;
      if (!v13835) {
        v13835 = sample.length === 0;
      }
      if (v13835) {
        return;
      }
      return JAM.call(this.sum, this, [sample], JAM.policy.p3) / sample.length;
    }
    function v457(array$$13) {
      function v456(acc, value$$39) {
        return acc + value$$39;
      }
      var v13836 = !array$$13;
      if (!v13836) {
        v13836 = array$$13.length === 0;
      }
      if (v13836) {
        return;
      }
      return JAM.call($$$1.reduce, $$$1, [array$$13, v456, 0], JAM.policy.p3);
    }
    function v455(obj$$30) {
      if (typeof obj$$30 === "undefined") {
        return false;
      }
      var i$$57;
      for (i$$57 in obj$$30) {
        if (JAM.call(obj$$30.hasOwnProperty, obj$$30, [i$$57], JAM.policy.p3)) {
          return true;
        }
      }
      return false;
    }
    function v454(controller$$4) {
      var $Phylo = $jit.Phylo;
      var config$$7 = {levelsToShow:2, levelDistance:30, constrained:true, Node:{type:"rectangle"}, duration:700, offsetX:0, offsetY:0};
      var v31158 = JAM.call($$$1.merge, $$$1, [Options("Canvas", "Fx", "Tree", "PhyloJive", "Node", "Edge", "Controller", "Tips", "NodeStyles", "Events", "Navigation", "Label"), config$$7, controller$$4], JAM.policy.p3);
      this.controller = this.config = v31158;
      var canvasConfig = this.config;
      if (canvasConfig.useCanvas) {
        this.canvas = canvasConfig.useCanvas;
        this.config.labelContainer = this.canvas.id + "-label";
      } else {
        if (canvasConfig.background) {
          var v31159 = JAM.call($$$1.merge, $$$1, [{type:"Circles"}, canvasConfig.background], JAM.policy.p3);
          canvasConfig.background = v31159;
        }
        var v31160 = JAM.new(Canvas, [this, canvasConfig]);
        this.canvas = v31160;
        var v7116 = this.config;
        var v18858;
        if (typeof canvasConfig.injectInto === "string") {
          v18858 = canvasConfig.injectInto;
        } else {
          v18858 = canvasConfig.injectInto.id;
        }
        v7116.labelContainer = v18858 + "-label";
      }
      this.graphOptions = {"klass":Complex};
      var v31161 = JAM.new(Graph, [this.graphOptions, this.config.Node, this.config.Edge]);
      this.graph = v31161;
      var v31162 = JAM.new($Phylo.Label[canvasConfig.Label.type], [this]);
      this.labels = v31162;
      var v31163 = JAM.new($Phylo.Plot, [this, $Phylo]);
      this.fx = v31163;
      var v31164 = JAM.new($Phylo.Op, [this]);
      this.op = v31164;
      var v31165 = JAM.new($Phylo.Group, [this]);
      this.group = v31165;
      var v31166 = JAM.new($Phylo.Geom, [this]);
      this.geom = v31166;
      this.clickedNode = null;
      JAM.call(this.initializeExtras, this, [], JAM.policy.p3);
      return;
    }
    function getNodesToHide(node$$63) {
      function v451(n$$33) {
        var v13844 = n$$33.exist;
        if (v13844) {
          v13844 = !n$$33.selected;
        }
        if (v13844) {
          JAM.call(nodeArray.push, nodeArray, [n$$33], JAM.policy.p3);
        }
        return;
      }
      function v450(n$$32) {
        var v13845 = n$$32.exist;
        if (v13845) {
          v13845 = !n$$32.selected;
        }
        if (v13845) {
          if (JAM.call(n$$32.isDescendantOf, n$$32, [node$$63.id], JAM.policy.p3)) {
            if (n$$32._depth <= level$$12) {
              JAM.call(nodeArray.push, nodeArray, [n$$32], JAM.policy.p3);
            }
          } else {
            JAM.call(nodeArray.push, nodeArray, [n$$32], JAM.policy.p3);
          }
        }
        return;
      }
      var v7130 = node$$63;
      if (!v7130) {
        v7130 = this.clickedNode;
      }
      node$$63 = v7130;
      if (!this.config.constrained) {
        return [];
      }
      var i$$56;
      var Geom = this.geom;
      var graph$$18 = this.graph;
      var canvas$$31 = this.canvas;
      var level$$12 = node$$63._depth;
      var nodeArray = [];
      JAM.call(graph$$18.eachNode, graph$$18, [v450], JAM.policy.p3);
      var leafLevel = JAM.call(Geom.getRightLevelToShow, Geom, [node$$63, canvas$$31], JAM.policy.p3);
      JAM.call(node$$63.eachLevel, node$$63, [leafLevel, leafLevel, v451], JAM.policy.p3);
      i$$56 = 0;
      var v7135 = i$$56 < nodesInPath.length;
      for (;v7135;) {
        var v7132 = this.graph;
        var n$$31 = JAM.call(v7132.getNode, v7132, [nodesInPath[i$$56]], JAM.policy.p3);
        if (!JAM.call(n$$31.isDescendantOf, n$$31, [node$$63.id], JAM.policy.p3)) {
          JAM.call(nodeArray.push, nodeArray, [n$$31], JAM.policy.p3);
        }
        i$$56 = i$$56 + 1;
        v7135 = i$$56 < nodesInPath.length;
      }
      return nodeArray;
    }
    function getNodesToShow(node$$64) {
      function v453(n$$34) {
        function v452(ch$$11) {
          var v7136 = ch$$11.exist;
          if (v7136) {
            v7136 = !ch$$11.drawn;
          }
          return v7136;
        }
        var v18864 = config$$6.multitree;
        if (v18864) {
          v18864 = !("$orn" in n$$34.data);
        }
        var v13854 = v18864;
        if (v13854) {
          v13854 = JAM.call(n$$34.anySubnode, n$$34, [v452], JAM.policy.p3);
        }
        if (v13854) {
          JAM.call(nodeArray$$1.push, nodeArray$$1, [n$$34], JAM.policy.p3);
        } else {
          var v13855 = n$$34.drawn;
          if (v13855) {
            v13855 = !JAM.call(n$$34.anySubnode, n$$34, ["drawn"], JAM.policy.p3);
          }
          if (v13855) {
            JAM.call(nodeArray$$1.push, nodeArray$$1, [n$$34], JAM.policy.p3);
          }
        }
        return;
      }
      var nodeArray$$1 = [];
      var config$$6 = this.config;
      var v7139 = node$$64;
      if (!v7139) {
        v7139 = this.clickedNode;
      }
      node$$64 = v7139;
      var v7140 = this.clickedNode;
      JAM.call(v7140.eachLevel, v7140, [0, config$$6.levelsToShow, v453], JAM.policy.p3);
      return nodeArray$$1;
    }
    var nodesInPath = [];
    return new Class({Implements:[Loader, Extras, Layouts.PhyloJive], initialize:v454, hasProperty:v455, sum:v457, mean:v458, wtmean:v459, variance:v461, sd:v462, square:v464, multiply:v465, variancePop:v467, sdPop:v468, meanPop:v469, isQuant:v470, isQuali:v471, characterType:v472, intersect:v473, union:v474, setCollapsed:v475, nodesExpCol:v478, fitchParsimony:v484, setCharacter:v485, sdAtTree:v487, varianceAtTree:v489, meanAtTree:v491, checkQuant:v493, checkQuali:v495, quantParsimony:v497, listCharacters:v498, 
    findAllCharTypes:v500, findQuantMinMax:v502, findQuantRange:v503, colorCharacter:v506, findDistinctCharacterStates:v507, createLegend:v508, findIndex:v509, plot:v510, fitScreen:v511, zoom:v513, switchPosition:v515, switchAlignment:v516, addNodeInPath:v517, clearNodesInPath:v518, refresh:v519, reposition:v521, requestNodes:v523, contract:v524, move:v525, expand:v526, selectPath:v529, setRoot:v531, addSubtree:v532, removeSubtree:v534, select:v537, onClick:v538});
  }
  function v449() {
    function v448(node$$61, leaves$$1) {
      function v447(node$$62) {
        leaves$$1 = leaves$$1 + JAM.call(that$$20.computeLeaves, that$$20, [node$$62, 0], JAM.policy.p3);
        return;
      }
      var that$$20 = this;
      JAM.call(node$$61.eachSubnode, node$$61, [v447], JAM.policy.p3);
      if (node$$61.data.leaf) {
        return node$$61.data.leaves = 1;
      }
      return node$$61.data.leaves = leaves$$1;
    }
    function v446(node$$60, prop$$34) {
      function v445(orn$$3) {
        design(that$$19.graph, node$$60, prop$$34, that$$19.config, orn$$3, prop$$34);
        var v7148 = ["x", "y"];
        var v18867 = orn$$3 == "left";
        if (!v18867) {
          v18867 = orn$$3 == "right";
        }
        var i$$55 = v7148[+v18867];
        var prev;
        if (!prev) {
          prev = node$$60;
        }
        return;
      }
      var config$$5 = this.config;
      var multitree$$2 = config$$5.multitree;
      var align$$1 = config$$5.align;
      var v7151 = align$$1 !== "center";
      if (v7151) {
        v7151 = config$$5.indent;
      }
      var indent = v7151;
      var orn$$2 = config$$5.orientation;
      var v7152;
      if (multitree$$2) {
        v7152 = ["top", "right", "bottom", "left"];
      } else {
        v7152 = [orn$$2];
      }
      var orns = v7152;
      var that$$19 = this;
      JAM.call($$$1.each, $$$1, [orns, v445], JAM.policy.p3);
      return;
    }
    function v444(property, computeLevels) {
      var prop$$33 = property || "start";
      var v7153 = this.graph;
      var node$$59 = JAM.call(v7153.getNode, v7153, [this.root], JAM.policy.p3);
      JAM.call($$$1.extend, $$$1, [node$$59, {"drawn":true, "exist":true, "selected":true}], JAM.policy.p3);
      JAM.call(NodeDim.compute, NodeDim, [this.graph, prop$$33, this.config], JAM.policy.p3);
      var v13862 = !!computeLevels;
      if (!v13862) {
        v13862 = !("_depth" in node$$59);
      }
      if (v13862) {
        var v7158 = this.graph;
        JAM.call(v7158.computeLevels, v7158, [this.root, 0, "ignore"], JAM.policy.p3);
      }
      JAM.call(this.computePositions, this, [node$$59, prop$$33], JAM.policy.p3);
      return;
    }
    function getBoundaries(graph$$16, config$$3, level$$11, orn, prop$$31) {
      function v440(n$$28) {
        var v13863 = n$$28._depth == level$$11;
        if (v13863) {
          var v18872 = !multitree;
          if (!v18872) {
            var v23818 = "$orn" in n$$28.data;
            if (v23818) {
              v23818 = n$$28.data.$orn == orn;
            }
            v18872 = v23818;
          }
          v13863 = v18872;
        }
        if (v13863) {
          var dw = JAM.call(n$$28.getData, n$$28, ["width", prop$$31], JAM.policy.p3);
          var dh = JAM.call(n$$28.getData, n$$28, ["height", prop$$31], JAM.policy.p3);
          var v7161;
          if (w$$6 < dw) {
            v7161 = dw;
          } else {
            v7161 = w$$6;
          }
          w$$6 = v7161;
          var v7162;
          if (h$$4 < dh) {
            v7162 = dh;
          } else {
            v7162 = h$$4;
          }
          h$$4 = v7162;
        }
        return;
      }
      var dim$$9 = config$$3.Node;
      var multitree = config$$3.multitree;
      if (dim$$9.overridable) {
        var w$$6 = -1;
        var h$$4 = -1;
        JAM.call(graph$$16.eachNode, graph$$16, [v440], JAM.policy.p3);
        var v13866;
        if (w$$6 < 0) {
          v13866 = dim$$9.width;
        } else {
          v13866 = w$$6;
        }
        var v7164 = v13866;
        var v13867;
        if (h$$4 < 0) {
          v13867 = dim$$9.height;
        } else {
          v13867 = h$$4;
        }
        return {"width":v7164, "height":v13867};
      } else {
        return dim$$9;
      }
      return;
    }
    function design(graph$$17, node$$56, prop$$32, config$$4, orn$$1) {
      function v443(node$$58) {
        if (node$$58.data.len < min$$2) {
          min$$2 = node$$58.data.len;
        }
        if (node$$58.data.len > max$$1) {
          max$$1 = node$$58.data.len;
        }
        return;
      }
      function $design(node$$57, maxsize, y$$47, xpos) {
        function v442(n$$30) {
          var v13870 = !n$$30.exist;
          if (v13870) {
            v13870 = !n$$30.drawn;
          }
          if (v13870) {
            anyChildVisible = false;
          }
          return;
        }
        function v441(n$$29) {
          if (n$$29.exist) {
            subnodeVisible = true;
            y$$47 = $design(n$$29, null, y$$47, xpos);
            if (ymin > y$$47.ymid) {
              ymin = y$$47.ymid;
            }
            if (ymax < y$$47.ymid) {
              ymax = y$$47.ymid;
            }
          }
          return;
        }
        var ymin = Number.MAX_VALUE;
        var ymax = Number.MIN_VALUE;
        var subnodeVisible = false;
        if (config$$4.branchLength) {
          xpos = xpos + (10 + graph$$17.factor * node$$57.data.len * config$$4.branchMultiplier);
        } else {
          xpos = xpos + config$$4.levelDistance;
        }
        JAM.call(node$$57.eachSubnode, node$$57, [v441], JAM.policy.p3);
        if (graph$$17.maxXpos < xpos) {
          graph$$17.maxXpos = xpos;
        }
        if (subnodeVisible) {
          y$$47.ymid = JAM.call(node$$57.getPos, node$$57, [prop$$32], JAM.policy.p3)["y"] = (ymax + ymin) / 2;
        } else {
          y$$47.ymid = y$$47.ymin = y$$47.ymax = JAM.call(node$$57.getPos, node$$57, [prop$$32], JAM.policy.p3)["y"] = y$$47.ymax + JAM.call(node$$57.getData, node$$57, [s$$9, prop$$32], JAM.policy.p3) + siblingOffset;
        }
        JAM.call(node$$57.getPos, node$$57, [prop$$32], JAM.policy.p3)["x"] = xpos;
        if (!node$$57.data.leaf) {
          var anyChildVisible = true;
          JAM.call(node$$57.eachLevel, node$$57, [1, 1, v442], JAM.policy.p3);
          if (!anyChildVisible) {
            node$$57.data.display = "";
            node$$57.data.$type = "triangle";
          } else {
            node$$57.data.display = "none";
            node$$57.data.$type = "circle";
          }
        }
        return y$$47;
      }
      var multitree$$1 = config$$4.multitree;
      var auxp = ["x", "y"];
      var auxs = ["width", "height"];
      var v13879 = orn$$1 == "left";
      if (!v13879) {
        v13879 = orn$$1 == "right";
      }
      var ind = +v13879;
      var p$$20 = auxp[ind];
      var notp = auxp[1 - ind];
      var cnode = config$$4.Node;
      var s$$9 = auxs[ind];
      var nots = auxs[1 - ind];
      var siblingOffset = config$$4.siblingOffset;
      var subtreeOffset = config$$4.subtreeOffset;
      var align = config$$4.align;
      graph$$17.maxXpos = Number.MIN_VALUE;
      var v18884 = !graph$$17.maxLen;
      if (v18884) {
        v18884 = !graph$$17.minLen;
      }
      var v13880 = v18884;
      if (v13880) {
        v13880 = !graph$$17.factor;
      }
      if (v13880) {
        var max$$1 = Number.MIN_VALUE;
        var min$$2 = Number.MAX_VALUE;
        JAM.call(graph$$17.eachNode, graph$$17, [v443], JAM.policy.p3);
        graph$$17.minLen = min$$2;
        graph$$17.maxLen = max$$1;
        var constant = config$$4.width / graph$$17.depth.length;
        graph$$17.factor = constant / (graph$$17.maxLen - graph$$17.minLen);
      }
      $design(node$$56, false, {ymid:0, ymin:0, ymax:0}, 0);
      var v13884 = graph$$17.maxXpos;
      var v18886 = node$$56.data.$dim + 10;
      if (!v18886) {
        v18886 = 0;
      }
      graph$$17.maxXpos = v13884 + v18886;
      return;
    }
    var slice = Array.prototype.slice;
    return new Class({compute:v444, computePositions:v446, computeLeaves:v448});
  }
  function v439(opt$$24) {
    JAM.call($$$1.extend, $$$1, [this.label.style, {"visibility":"hidden", "position":"absolute", "width":"auto", "height":"auto"}], JAM.policy.p3);
    this.label.className = "jit-autoadjust-label";
    return;
  }
  function v438(opt$$23) {
    if (!this.label) {
      var v31167 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
      this.label = v31167;
      var v7199 = document.body;
      JAM.call(v7199.appendChild, v7199, [this.label], JAM.policy.p3);
    }
    JAM.call(this.setLabelStyles, this, [opt$$23], JAM.policy.p3);
    return;
  }
  function v437(graph$$15, prop$$30, opt$$22) {
    function v436(n$$27) {
      var autoWidth = JAM.call(n$$27.getData, n$$27, ["autoWidth"], JAM.policy.p3);
      var autoHeight = JAM.call(n$$27.getData, n$$27, ["autoHeight"], JAM.policy.p3);
      if (autoWidth || autoHeight) {
        delete n$$27.data.$width;
        delete n$$27.data.$height;
        delete n$$27.data.$dim;
        var width$$22 = JAM.call(n$$27.getData, n$$27, ["width"], JAM.policy.p3);
        var height$$19 = JAM.call(n$$27.getData, n$$27, ["height"], JAM.policy.p3);
        var v7205;
        if (autoWidth) {
          v7205 = "auto";
        } else {
          v7205 = width$$22 + "px";
        }
        style$$5.width = v7205;
        var v7206;
        if (autoHeight) {
          v7206 = "auto";
        } else {
          v7206 = height$$19 + "px";
        }
        style$$5.height = v7206;
        JAM.set(label$$10, "innerHTML", n$$27.name);
        var offsetWidth = label$$10.offsetWidth;
        var offsetHeight = label$$10.offsetHeight;
        var type$$55 = JAM.call(n$$27.getData, n$$27, ["type"], JAM.policy.p3);
        if (JAM.call($$$1.indexOf, $$$1, [["circle", "square", "triangle", "star"], type$$55], JAM.policy.p3) === -1) {
          JAM.call(n$$27.setData, n$$27, ["width", offsetWidth], JAM.policy.p3);
          JAM.call(n$$27.setData, n$$27, ["height", offsetHeight], JAM.policy.p3);
        } else {
          var v7207;
          if (offsetWidth > offsetHeight) {
            v7207 = offsetWidth;
          } else {
            v7207 = offsetHeight;
          }
          var dim$$8 = v7207;
          JAM.call(n$$27.setData, n$$27, ["width", dim$$8], JAM.policy.p3);
          JAM.call(n$$27.setData, n$$27, ["height", dim$$8], JAM.policy.p3);
          JAM.call(n$$27.setData, n$$27, ["dim", dim$$8], JAM.policy.p3);
        }
      }
      return;
    }
    JAM.call(this.initializeLabel, this, [opt$$22], JAM.policy.p3);
    var label$$10 = this.label;
    var style$$5 = label$$10.style;
    JAM.call(graph$$15.eachNode, graph$$15, [v436], JAM.policy.p3);
    return;
  }
  function v435(type$$54) {
    function v434(node$$55) {
      function v433(adj$$20) {
        var nodeTo$$5 = adj$$20.nodeTo;
        if (!!nodeTo$$5.visited === T$$1) {
          var ansAdj = {};
          ansAdj.nodeTo = nodeTo$$5.id;
          ansAdj.data = adj$$20.data;
          JAM.call(adjs$$2.push, adjs$$2, [ansAdj], JAM.policy.p3);
        }
        return;
      }
      var ansNode = {};
      ansNode.id = node$$55.id;
      ansNode.name = node$$55.name;
      ansNode.data = node$$55.data;
      var adjs$$2 = [];
      JAM.call(node$$55.eachAdjacency, node$$55, [v433], JAM.policy.p3);
      ansNode.adjacencies = adjs$$2;
      JAM.call(ans$$13.push, ans$$13, [ansNode], JAM.policy.p3);
      node$$55.visited = !T$$1;
      return;
    }
    function recTree(node$$54) {
      function v432(n$$26) {
        JAM.call(ch$$10.push, ch$$10, [recTree(n$$26)], JAM.policy.p3);
        return;
      }
      var ans$$14 = {};
      ans$$14.id = node$$54.id;
      ans$$14.name = node$$54.name;
      ans$$14.data = node$$54.data;
      var ch$$10 = [];
      JAM.call(node$$54.eachSubnode, node$$54, [v432], JAM.policy.p3);
      ans$$14.children = ch$$10;
      return ans$$14;
    }
    type$$54 = type$$54 || "tree";
    if (type$$54 == "tree") {
      var ans$$13 = {};
      var v7212 = this.graph;
      var rootNode = JAM.call(v7212.getNode, v7212, [this.root], JAM.policy.p3);
      ans$$13 = recTree(rootNode);
      return ans$$13;
    } else {
      ans$$13 = [];
      var v23828 = this.graph;
      var T$$1 = !!JAM.call(v23828.getNode, v23828, [this.root], JAM.policy.p3).visited;
      var v7215 = this.graph;
      JAM.call(v7215.eachNode, v7215, [v434], JAM.policy.p3);
      return ans$$13;
    }
    return;
  }
  function v431(json$$8, i$$53) {
    this.json = json$$8;
    var v13892 = this.labels;
    if (v13892) {
      v13892 = this.labels.clearLabels;
    }
    if (v13892) {
      var v7217 = this.labels;
      JAM.call(v7217.clearLabels, v7217, [true], JAM.policy.p3);
    }
    var v31168 = JAM.call(this.construct, this, [json$$8], JAM.policy.p3);
    this.graph = v31168;
    if (JAM.call($$$1.type, $$$1, [json$$8], JAM.policy.p3) != "array") {
      this.root = json$$8.id;
    } else {
      var v18891;
      if (i$$53) {
        v18891 = i$$53;
      } else {
        v18891 = 0;
      }
      this.root = json$$8[v18891].id;
    }
    return;
  }
  function v430(json$$5) {
    function v429(ans$$12, json$$7) {
      function getNode(id$$28) {
        var i$$52 = 0;
        var l$$20 = json$$7.length;
        var v7222 = i$$52 < l$$20;
        for (;v7222;) {
          if (json$$7[i$$52].id == id$$28) {
            return json$$7[i$$52];
          }
          i$$52++;
          v7222 = i$$52 < l$$20;
        }
        var newNode$$1 = {"id":id$$28, "name":id$$28};
        return JAM.call(ans$$12.addNode, ans$$12, [newNode$$1], JAM.policy.p3);
      }
      var i$$51 = 0;
      var l$$19 = json$$7.length;
      var v7230 = i$$51 < l$$19;
      for (;v7230;) {
        JAM.call(ans$$12.addNode, ans$$12, [json$$7[i$$51]], JAM.policy.p3);
        var adj$$19 = json$$7[i$$51].adjacencies;
        if (adj$$19) {
          var j$$4 = 0;
          var lj = adj$$19.length;
          var v7229 = j$$4 < lj;
          for (;v7229;) {
            var node$$53 = adj$$19[j$$4];
            var data$$22 = {};
            if (typeof adj$$19[j$$4] != "string") {
              data$$22 = JAM.call($$$1.merge, $$$1, [node$$53.data, {}], JAM.policy.p3);
              node$$53 = node$$53.nodeTo;
            }
            JAM.call(ans$$12.addAdjacence, ans$$12, [json$$7[i$$51], getNode(node$$53), data$$22], JAM.policy.p3);
            j$$4++;
            v7229 = j$$4 < lj;
          }
        }
        i$$51++;
        v7230 = i$$51 < l$$19;
      }
      return;
    }
    function v428(ans$$11, json$$6) {
      JAM.call(ans$$11.addNode, ans$$11, [json$$6], JAM.policy.p3);
      if (json$$6.children) {
        var i$$50 = 0;
        var ch$$9 = json$$6.children;
        var v7233 = i$$50 < ch$$9.length;
        for (;v7233;) {
          JAM.call(ans$$11.addAdjacence, ans$$11, [json$$6, ch$$9[i$$50]], JAM.policy.p3);
          JAM.call(arguments.callee, arguments, [ans$$11, ch$$9[i$$50]], JAM.policy.p3);
          i$$50++;
          v7233 = i$$50 < ch$$9.length;
        }
      }
      return;
    }
    var isGraph = JAM.call($$$1.type, $$$1, [json$$5], JAM.policy.p3) == "array";
    var ans$$10 = JAM.new(Graph, [this.graphOptions, this.config.Node, this.config.Edge, this.config.Label]);
    if (!isGraph) {
      v428(ans$$10, json$$5);
    } else {
      v429(ans$$10, json$$5);
    }
    return ans$$10;
  }
  function v427(node$$52, canvas$$30) {
    var config$$2 = this.config;
    var level$$10 = config$$2.levelsToShow;
    var constrained = config$$2.constrained;
    if (!constrained) {
      return level$$10;
    }
    var v13902 = !JAM.call(this.treeFitsInCanvas, this, [node$$52, canvas$$30, level$$10], JAM.policy.p3);
    if (v13902) {
      v13902 = level$$10 > 1;
    }
    var v7242 = v13902;
    for (;v7242;) {
      level$$10--;
      var v13903 = !JAM.call(this.treeFitsInCanvas, this, [node$$52, canvas$$30, level$$10], JAM.policy.p3);
      if (v13903) {
        v13903 = level$$10 > 1;
      }
      v7242 = v13903;
    }
    return level$$10;
  }
  function v426(node$$51, canvas$$29, callback$$25) {
    function v425(n$$25) {
      var d$$4 = n$$25._depth - node$$51._depth;
      if (d$$4 > level$$9) {
        JAM.call(opt$$21.onHide, opt$$21, [n$$25], JAM.policy.p3);
        if (opt$$21.execHide) {
          n$$25.drawn = false;
          n$$25.exist = false;
          JAM.call(fx$$1.hideLabel, fx$$1, [n$$25, false], JAM.policy.p3);
        }
      } else {
        JAM.call(opt$$21.onShow, opt$$21, [n$$25], JAM.policy.p3);
        if (opt$$21.execShow) {
          n$$25.exist = true;
        }
      }
      return;
    }
    var level$$9 = JAM.call(this.getRightLevelToShow, this, [node$$51, canvas$$29], JAM.policy.p3);
    var fx$$1 = this.viz.labels;
    var opt$$21 = JAM.call($$$1.merge, $$$1, [{execShow:true, execHide:true, onHide:$$$1.empty, onShow:$$$1.empty}, callback$$25 || {}], JAM.policy.p3);
    JAM.call(node$$51.eachLevel, node$$51, [0, this.config.levelsToShow, v425], JAM.policy.p3);
    node$$51.drawn = true;
    return;
  }
  function v424(pos$$34, prop$$29) {
    function v423(elem$$52) {
      function v422(p$$19) {
        var v7252 = JAM.call(elem$$52.getPos, elem$$52, [p$$19], JAM.policy.p3);
        JAM.call(v7252.$add, v7252, [pos$$34], JAM.policy.p3);
        return;
      }
      JAM.call($$$1.each, $$$1, [prop$$29, v422], JAM.policy.p3);
      return;
    }
    prop$$29 = JAM.call($$$1.splat, $$$1, [prop$$29], JAM.policy.p3);
    var v7253 = this.viz.graph;
    JAM.call(v7253.eachNode, v7253, [v423], JAM.policy.p3);
    return;
  }
  function v421(viz$$20) {
    this.viz = viz$$20;
    this.config = viz$$20.config;
    this.node = viz$$20.config.Node;
    this.edge = viz$$20.config.Edge;
    return;
  }
  function v420(canvas$$28, node$$50, controller$$3) {
    var id$$27 = node$$50.id;
    var tag$$3 = JAM.call(this.getLabel, this, [id$$27], JAM.policy.p3);
    var v13908 = !tag$$3;
    if (v13908) {
      v13908 = !(tag$$3 = JAM.call(document.getElementById, document, [id$$27], JAM.policy.p3));
    }
    if (v13908) {
      var ns = "http://www.w3.org/2000/svg";
      tag$$3 = JAM.call(document.createElementNS, document, [ns, "svg:text"], JAM.policy.p3);
      var tspan = JAM.call(document.createElementNS, document, [ns, "svg:tspan"], JAM.policy.p3);
      JAM.call(tag$$3.appendChild, tag$$3, [tspan], JAM.policy.p3);
      var container$$2 = JAM.call(this.getLabelContainer, this, [], JAM.policy.p3);
      JAM.call(tag$$3.setAttribute, tag$$3, ["id", id$$27], JAM.policy.p3);
      JAM.call(tag$$3.setAttribute, tag$$3, ["class", "node"], JAM.policy.p3);
      JAM.call(container$$2.appendChild, container$$2, [tag$$3], JAM.policy.p3);
      JAM.call(controller$$3.onCreateLabel, controller$$3, [tag$$3, node$$50], JAM.policy.p3);
      var v7256 = this.labels;
      var v7257 = node$$50.id;
      introspect(JAM.policy.p2) {
        v7256[v7257] = tag$$3;
      }
    }
    JAM.call(this.placeLabel, this, [tag$$3, node$$50, controller$$3], JAM.policy.p3);
    return;
  }
  function v419(canvas$$27, node$$49, controller$$2) {
    var id$$26 = node$$49.id;
    var tag$$2 = JAM.call(this.getLabel, this, [id$$26], JAM.policy.p3);
    var v13909 = !tag$$2;
    if (v13909) {
      v13909 = !(tag$$2 = JAM.call(document.getElementById, document, [id$$26], JAM.policy.p3));
    }
    if (v13909) {
      tag$$2 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
      var container$$1 = JAM.call(this.getLabelContainer, this, [], JAM.policy.p3);
      tag$$2.id = id$$26;
      tag$$2.className = "node";
      tag$$2.style.position = "absolute";
      JAM.call(controller$$2.onCreateLabel, controller$$2, [tag$$2, node$$49], JAM.policy.p3);
      JAM.call(container$$1.appendChild, container$$1, [tag$$2], JAM.policy.p3);
      var v7260 = this.labels;
      var v7261 = node$$49.id;
      introspect(JAM.policy.p2) {
        v7260[v7261] = tag$$2;
      }
    }
    JAM.call(this.placeLabel, this, [tag$$2, node$$49, controller$$2], JAM.policy.p3);
    return;
  }
  function v418(pos$$33, canvas$$26) {
    var size$$7 = JAM.call(canvas$$26.getSize, canvas$$26, [], JAM.policy.p3);
    var v13910 = pos$$33.w;
    if (v13910) {
      v13910 = pos$$33.h;
    }
    if (v13910) {
      var v23830 = pos$$33.x >= size$$7.width;
      if (!v23830) {
        v23830 = pos$$33.x < -pos$$33.w;
      }
      var v18898 = v23830;
      if (!v18898) {
        v18898 = pos$$33.y >= size$$7.height;
      }
      var v13911 = v18898;
      if (!v13911) {
        v13911 = pos$$33.y < -pos$$33.h;
      }
      if (v13911) {
        return false;
      }
    } else {
      var v23835 = pos$$33.x >= size$$7.width;
      if (!v23835) {
        v23835 = pos$$33.x < 0;
      }
      var v18902 = v23835;
      if (!v18902) {
        v18902 = pos$$33.y >= size$$7.height;
      }
      var v13912 = v18902;
      if (!v13912) {
        v13912 = pos$$33.y < 0;
      }
      if (v13912) {
        return false;
      }
    }
    return true;
  }
  function v417(node$$48, show$$1) {
    function v416(n$$24) {
      lab = JAM.call(that$$18.getLabel, that$$18, [n$$24.id], JAM.policy.p3);
      if (lab) {
        lab.style.display = st$$1;
      }
      return;
    }
    node$$48 = JAM.call($$$1.splat, $$$1, [node$$48], JAM.policy.p3);
    var v7268;
    if (show$$1) {
      v7268 = "";
    } else {
      v7268 = "none";
    }
    var st$$1 = v7268;
    var lab;
    var that$$18 = this;
    JAM.call($$$1.each, $$$1, [node$$48, v416], JAM.policy.p3);
    return;
  }
  function v415(id$$25) {
    var elem$$51 = JAM.call(this.getLabel, this, [id$$25], JAM.policy.p3);
    var v13913 = elem$$51;
    if (v13913) {
      v13913 = elem$$51.parentNode;
    }
    if (v13913) {
      var v7269 = elem$$51.parentNode;
      JAM.call(v7269.removeChild, v7269, [elem$$51], JAM.policy.p3);
    }
    return;
  }
  function v414(force$$5) {
    var id$$24;
    for (id$$24 in this.labels) {
      var v13914 = force$$5;
      if (!v13914) {
        var v23839 = this.viz.graph;
        v13914 = !JAM.call(v23839.hasNode, v23839, [id$$24], JAM.policy.p3);
      }
      if (v13914) {
        JAM.call(this.disposeLabel, this, [id$$24], JAM.policy.p3);
        delete this.labels[id$$24];
      }
    }
    return;
  }
  function v413(hide) {
    var container = JAM.call(this.getLabelContainer, this, [], JAM.policy.p3);
    if (hide) {
      container.style.display = "none";
    } else {
      container.style.display = "";
    }
    this.labelsHidden = hide;
    return;
  }
  function v412(id$$23) {
    var v7276;
    var v18907 = id$$23 in this.labels;
    if (v18907) {
      v18907 = this.labels[id$$23] != null;
    }
    if (v18907) {
      v7276 = this.labels[id$$23];
    } else {
      var v13916 = this.labels;
      var v31169 = JAM.call(document.getElementById, document, [id$$23], JAM.policy.p3);
      introspect(JAM.policy.p2) {
        v7276 = v13916[id$$23] = v31169;
      }
    }
    return v7276;
  }
  function v411() {
    var v7277;
    if (this.labelContainer) {
      v7277 = this.labelContainer;
    } else {
      var v31170 = JAM.call(document.getElementById, document, [this.viz.config.labelContainer], JAM.policy.p3);
      v7277 = this.labelContainer = v31170;
    }
    return v7277;
  }
  function v410(node$$47, show) {
    function v409(n$$23) {
      n$$23._hideLabel = al;
      return;
    }
    node$$47 = JAM.call($$$1.splat, $$$1, [node$$47], JAM.policy.p3);
    var v7278;
    if (show) {
      v7278 = false;
    } else {
      v7278 = true;
    }
    var al = v7278;
    JAM.call($$$1.each, $$$1, [node$$47, v409], JAM.policy.p3);
    return;
  }
  function v408(canvas$$25, node$$46, controller$$1) {
    var ctx$$15 = JAM.call(canvas$$25.getCtx, canvas$$25, [], JAM.policy.p3);
    var v7279 = node$$46.pos;
    var pos$$32 = JAM.call(v7279.getc, v7279, [true], JAM.policy.p3);
    JAM.call(ctx$$15.fillText, ctx$$15, [node$$46.name, pos$$32.x, pos$$32.y + JAM.call(node$$46.getData, node$$46, ["height"], JAM.policy.p3) / 2], JAM.policy.p3);
    return;
  }
  function v407(canvas$$24, node$$45, controller) {
    var ctx$$14 = JAM.call(canvas$$24.getCtx, canvas$$24, [], JAM.policy.p3);
    var v7283 = node$$45.pos;
    var pos$$31 = JAM.call(v7283.getc, v7283, [true], JAM.policy.p3);
    ctx$$14.font = JAM.call(node$$45.getLabelData, node$$45, ["style"], JAM.policy.p3) + " " + JAM.call(node$$45.getLabelData, node$$45, ["size"], JAM.policy.p3) + "px " + JAM.call(node$$45.getLabelData, node$$45, ["family"], JAM.policy.p3);
    var v31171 = JAM.call(node$$45.getLabelData, node$$45, ["textAlign"], JAM.policy.p3);
    ctx$$14.textAlign = v31171;
    var v31172 = JAM.call(node$$45.getLabelData, node$$45, ["color"], JAM.policy.p3);
    ctx$$14.fillStyle = ctx$$14.strokeStyle = v31172;
    var v31173 = JAM.call(node$$45.getLabelData, node$$45, ["textBaseline"], JAM.policy.p3);
    ctx$$14.textBaseline = v31173;
    JAM.call(this.renderLabel, this, [canvas$$24, node$$45, controller], JAM.policy.p3);
    return;
  }
  function v406(viz$$19) {
    this.viz = viz$$19;
    return;
  }
  function v405(elem$$50, canvas$$23, opt$$20) {
    var gl = JAM.call(canvas$$23.getCtx, canvas$$23, [], JAM.policy.p3);
    var viewMatrix = new Matrix4;
    var lighting = canvas$$23.config.Scene.Lighting;
    var wcanvas = canvas$$23.canvases[0];
    var program$$16 = wcanvas.program;
    var camera = wcanvas.camera;
    if (!elem$$50.geometry) {
      var v31174 = new (O3D[JAM.call(elem$$50.getData, elem$$50, ["type"], JAM.policy.p3)]);
      elem$$50.geometry = v31174;
    }
    var v7290 = elem$$50.geometry;
    JAM.call(v7290.update, v7290, [elem$$50], JAM.policy.p3);
    if (!elem$$50.webGLVertexBuffer) {
      var vertices = [];
      var faces = [];
      var normals = [];
      var vertexIndex = 0;
      var geom$$4 = elem$$50.geometry;
      var i$$49 = 0;
      var vs = geom$$4.vertices;
      var fs = geom$$4.faces;
      var fsl = fs.length;
      var v7323 = i$$49 < fsl;
      for (;v7323;) {
        var face$$3 = fs[i$$49];
        var v1$$1 = vs[face$$3.a];
        var v2$$1 = vs[face$$3.b];
        var v3 = vs[face$$3.c];
        var v7294;
        if (face$$3.d) {
          v7294 = vs[face$$3.d];
        } else {
          v7294 = false;
        }
        var v4 = v7294;
        var n$$22 = face$$3.normal;
        JAM.call(vertices.push, vertices, [v1$$1.x, v1$$1.y, v1$$1.z], JAM.policy.p3);
        JAM.call(vertices.push, vertices, [v2$$1.x, v2$$1.y, v2$$1.z], JAM.policy.p3);
        JAM.call(vertices.push, vertices, [v3.x, v3.y, v3.z], JAM.policy.p3);
        if (v4) {
          JAM.call(vertices.push, vertices, [v4.x, v4.y, v4.z], JAM.policy.p3);
        }
        JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        if (v4) {
          JAM.call(normals.push, normals, [n$$22.x, n$$22.y, n$$22.z], JAM.policy.p3);
        }
        JAM.call(faces.push, faces, [vertexIndex, vertexIndex + 1, vertexIndex + 2], JAM.policy.p3);
        if (v4) {
          JAM.call(faces.push, faces, [vertexIndex, vertexIndex + 2, vertexIndex + 3], JAM.policy.p3);
          vertexIndex = vertexIndex + 4;
        } else {
          vertexIndex = vertexIndex + 3;
        }
        i$$49++;
        v7323 = i$$49 < fsl;
      }
      var v31175 = JAM.call(gl.createBuffer, gl, [], JAM.policy.p3);
      elem$$50.webGLVertexBuffer = v31175;
      JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLVertexBuffer], JAM.policy.p3);
      JAM.call(gl.bufferData, gl, [gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW], JAM.policy.p3);
      var v31176 = JAM.call(gl.createBuffer, gl, [], JAM.policy.p3);
      elem$$50.webGLFaceBuffer = v31176;
      JAM.call(gl.bindBuffer, gl, [gl.ELEMENT_ARRAY_BUFFER, elem$$50.webGLFaceBuffer], JAM.policy.p3);
      JAM.call(gl.bufferData, gl, [gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(faces), gl.STATIC_DRAW], JAM.policy.p3);
      elem$$50.webGLFaceCount = faces.length;
      var v31177 = JAM.call(gl.createBuffer, gl, [], JAM.policy.p3);
      elem$$50.webGLNormalBuffer = v31177;
      JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLNormalBuffer], JAM.policy.p3);
      JAM.call(gl.bufferData, gl, [gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW], JAM.policy.p3);
    }
    JAM.call(viewMatrix.multiply, viewMatrix, [camera.matrix, elem$$50.geometry.matrix], JAM.policy.p3);
    JAM.call(gl.uniformMatrix4fv, gl, [program$$16.viewMatrix, false, JAM.call(viewMatrix.flatten, viewMatrix, [], JAM.policy.p3)], JAM.policy.p3);
    var v7344 = program$$16.projectionMatrix;
    var v13931 = camera.projectionMatrix;
    JAM.call(gl.uniformMatrix4fv, gl, [v7344, false, JAM.call(v13931.flatten, v13931, [], JAM.policy.p3)], JAM.policy.p3);
    var normalMatrix = JAM.call(Matrix4.makeInvert, Matrix4, [viewMatrix], JAM.policy.p3);
    JAM.call(normalMatrix.$transpose, normalMatrix, [], JAM.policy.p3);
    JAM.call(gl.uniformMatrix4fv, gl, [program$$16.normalMatrix, false, JAM.call(normalMatrix.flatten, normalMatrix, [], JAM.policy.p3)], JAM.policy.p3);
    var color$$4 = JAM.call($$$1.hexToRgb, $$$1, [JAM.call(elem$$50.getData, elem$$50, ["color"], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(color$$4.push, color$$4, [JAM.call(opt$$20.getAlpha, opt$$20, [], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(gl.uniform4f, gl, [program$$16.color, color$$4[0] / 255, color$$4[1] / 255, color$$4[2] / 255, color$$4[3]], JAM.policy.p3);
    JAM.call(gl.uniform1i, gl, [program$$16.enableLighting, lighting.enable], JAM.policy.p3);
    if (lighting.enable) {
      if (lighting.ambient) {
        var acolor = lighting.ambient;
        JAM.call(gl.uniform3f, gl, [program$$16.ambientColor, acolor[0], acolor[1], acolor[2]], JAM.policy.p3);
      }
      if (lighting.directional) {
        var dir = lighting.directional;
        color$$4 = dir.color;
        var pos$$30 = dir.direction;
        var v13935 = new Vector3(pos$$30.x, pos$$30.y, pos$$30.z);
        var v7362 = JAM.call(v13935.normalize, v13935, [], JAM.policy.p3);
        var vd = JAM.call(v7362.$scale, v7362, [-1], JAM.policy.p3);
        JAM.call(gl.uniform3f, gl, [program$$16.lightingDirection, vd.x, vd.y, vd.z], JAM.policy.p3);
        JAM.call(gl.uniform3f, gl, [program$$16.directionalColor, color$$4[0], color$$4[1], color$$4[2]], JAM.policy.p3);
      }
    }
    JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLVertexBuffer], JAM.policy.p3);
    JAM.call(gl.vertexAttribPointer, gl, [program$$16.position, 3, gl.FLOAT, false, 0, 0], JAM.policy.p3);
    JAM.call(gl.bindBuffer, gl, [gl.ARRAY_BUFFER, elem$$50.webGLNormalBuffer], JAM.policy.p3);
    JAM.call(gl.vertexAttribPointer, gl, [program$$16.normal, 3, gl.FLOAT, false, 0, 0], JAM.policy.p3);
    JAM.call(gl.bindBuffer, gl, [gl.ELEMENT_ARRAY_BUFFER, elem$$50.webGLFaceBuffer], JAM.policy.p3);
    JAM.call(gl.drawElements, gl, [gl.TRIANGLES, elem$$50.webGLFaceCount, gl.UNSIGNED_SHORT, 0], JAM.policy.p3);
    return;
  }
  function v404(adj$$18, canvas$$22) {
    function v403() {
      var v13936 = adj$$18.nodeFrom;
      var v7386 = JAM.call(v13936.getData, v13936, ["alpha"], JAM.policy.p3);
      var v13937 = adj$$18.nodeTo;
      return JAM.call(Math.min, Math, [v7386, JAM.call(v13937.getData, v13937, ["alpha"], JAM.policy.p3), JAM.call(adj$$18.getData, adj$$18, ["alpha"], JAM.policy.p3)], JAM.policy.p3);
    }
    if (JAM.call(adj$$18.getData, adj$$18, ["type"], JAM.policy.p3) == "none") {
      return;
    }
    JAM.call(this.plotElement, this, [adj$$18, canvas$$22, {getAlpha:v403}], JAM.policy.p3);
    return;
  }
  function v402(node$$44, canvas$$21) {
    function v401() {
      return JAM.call(node$$44.getData, node$$44, ["alpha"], JAM.policy.p3);
    }
    if (JAM.call(node$$44.getData, node$$44, ["type"], JAM.policy.p3) == "none") {
      return;
    }
    JAM.call(this.plotElement, this, [node$$44, canvas$$21, {getAlpha:v401}], JAM.policy.p3);
    return;
  }
  function v400(elem$$49, props$$15, delta$$20) {
    var v7393 = elem$$49.startPos;
    var from$$10 = JAM.call(v7393.getc, v7393, [true], JAM.policy.p3);
    var v7394 = elem$$49.endPos;
    var to$$11 = JAM.call(v7394.getc, v7394, [true], JAM.policy.p3);
    var v7395 = elem$$49.pos;
    JAM.call(v7395.setc, v7395, [JAM.call(this.compute, this, [from$$10.x, to$$11.x, delta$$20], JAM.policy.p3), JAM.call(this.compute, this, [from$$10.y, to$$11.y, delta$$20], JAM.policy.p3), JAM.call(this.compute, this, [from$$10.z, to$$11.z, delta$$20], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v399(adj$$17, canvas$$20, animating$$3) {
    var f$$3 = JAM.call(adj$$17.getData, adj$$17, ["type"], JAM.policy.p3);
    var ctxObj$$1 = this.edge.CanvasStyles;
    if (f$$3 != "none") {
      var width$$21 = JAM.call(adj$$17.getData, adj$$17, ["lineWidth"], JAM.policy.p3);
      var color$$3 = JAM.call(adj$$17.getData, adj$$17, ["color"], JAM.policy.p3);
      var ctx$$13 = JAM.call(canvas$$20.getCtx, canvas$$20, [], JAM.policy.p3);
      var nodeFrom$$3 = adj$$17.nodeFrom;
      var nodeTo$$4 = adj$$17.nodeTo;
      JAM.call(ctx$$13.save, ctx$$13, [], JAM.policy.p3);
      ctx$$13.lineWidth = width$$21;
      ctx$$13.fillStyle = ctx$$13.strokeStyle = color$$3;
      var v31178 = JAM.call(Math.min, Math, [JAM.call(nodeFrom$$3.getData, nodeFrom$$3, ["alpha"], JAM.policy.p3), JAM.call(nodeTo$$4.getData, nodeTo$$4, ["alpha"], JAM.policy.p3), JAM.call(adj$$17.getData, adj$$17, ["alpha"], JAM.policy.p3)], JAM.policy.p3);
      ctx$$13.globalAlpha = v31178;
      var s$$8;
      for (s$$8 in ctxObj$$1) {
        var v31179 = JAM.call(adj$$17.getCanvasStyle, adj$$17, [s$$8], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          ctx$$13[s$$8] = v31179;
        }
      }
      var v7403 = this.edgeTypes[f$$3].render;
      JAM.call(v7403.call, v7403, [this, adj$$17, canvas$$20, animating$$3], JAM.policy.p3);
      JAM.call(ctx$$13.restore, ctx$$13, [], JAM.policy.p3);
    }
    return;
  }
  function v398(node$$43, canvas$$19, animating$$2) {
    var f$$2 = JAM.call(node$$43.getData, node$$43, ["type"], JAM.policy.p3);
    var ctxObj = this.node.CanvasStyles;
    if (f$$2 != "none") {
      var width$$20 = JAM.call(node$$43.getData, node$$43, ["lineWidth"], JAM.policy.p3);
      var color$$2 = JAM.call(node$$43.getData, node$$43, ["color"], JAM.policy.p3);
      var alpha$$3 = JAM.call(node$$43.getData, node$$43, ["alpha"], JAM.policy.p3);
      var ctx$$12 = JAM.call(canvas$$19.getCtx, canvas$$19, [], JAM.policy.p3);
      JAM.call(ctx$$12.save, ctx$$12, [], JAM.policy.p3);
      ctx$$12.lineWidth = width$$20;
      ctx$$12.fillStyle = ctx$$12.strokeStyle = color$$2;
      ctx$$12.globalAlpha = alpha$$3;
      var s$$7;
      for (s$$7 in ctxObj) {
        var v31180 = JAM.call(node$$43.getCanvasStyle, node$$43, [s$$7], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          ctx$$12[s$$7] = v31180;
        }
      }
      var v7406 = this.nodeTypes[f$$2].render;
      JAM.call(v7406.call, v7406, [this, node$$43, canvas$$19, animating$$2], JAM.policy.p3);
      JAM.call(ctx$$12.restore, ctx$$12, [], JAM.policy.p3);
    }
    return;
  }
  function v397(node$$42, opt$$19, animating$$1) {
    function v396(elem$$48) {
      var v18917 = JAM.call(opt$$19.plotSubtree, opt$$19, [node$$42, elem$$48], JAM.policy.p3);
      if (v18917) {
        v18917 = elem$$48.exist;
      }
      var v13948 = v18917;
      if (v13948) {
        v13948 = elem$$48.drawn;
      }
      if (v13948) {
        var adj$$16 = JAM.call(node$$42.getAdjacency, node$$42, [elem$$48.id], JAM.policy.p3);
        var v7409 = !animating$$1;
        if (v7409) {
          JAM.call(opt$$19.onBeforePlotLine, opt$$19, [adj$$16], JAM.policy.p3);
        }
        JAM.call(that$$17.plotLine, that$$17, [adj$$16, canvas$$18, animating$$1], JAM.policy.p3);
        var v7410 = !animating$$1;
        if (v7410) {
          JAM.call(opt$$19.onAfterPlotLine, opt$$19, [adj$$16], JAM.policy.p3);
        }
        JAM.call(that$$17.plotTree, that$$17, [elem$$48, opt$$19, animating$$1], JAM.policy.p3);
      }
      return;
    }
    var that$$17 = this;
    var viz$$18 = this.viz;
    var canvas$$18 = viz$$18.canvas;
    var config$$1 = this.config;
    var ctx$$11 = JAM.call(canvas$$18.getCtx, canvas$$18, [], JAM.policy.p3);
    var nodeAlpha$$1 = JAM.call(node$$42.getData, node$$42, ["alpha"], JAM.policy.p3);
    JAM.call(node$$42.eachSubnode, node$$42, [v396], JAM.policy.p3);
    if (node$$42.drawn) {
      var v7412 = !animating$$1;
      if (v7412) {
        JAM.call(opt$$19.onBeforePlotNode, opt$$19, [node$$42], JAM.policy.p3);
      }
      JAM.call(this.plotNode, this, [node$$42, canvas$$18, animating$$1], JAM.policy.p3);
      var v7413 = !animating$$1;
      if (v7413) {
        JAM.call(opt$$19.onAfterPlotNode, opt$$19, [node$$42], JAM.policy.p3);
      }
      var v18918 = !opt$$19.hideLabels;
      if (v18918) {
        v18918 = opt$$19.withLabels;
      }
      var v13949 = v18918;
      if (v13949) {
        v13949 = nodeAlpha$$1 >= .95;
      }
      if (v13949) {
        var v7414 = this.labels;
        JAM.call(v7414.plotLabel, v7414, [canvas$$18, node$$42, opt$$19], JAM.policy.p3);
      } else {
        var v7415 = this.labels;
        JAM.call(v7415.hideLabel, v7415, [node$$42, false], JAM.policy.p3);
      }
    } else {
      var v7417 = this.labels;
      JAM.call(v7417.hideLabel, v7417, [node$$42, true], JAM.policy.p3);
    }
    return;
  }
  function v395(opt$$18, animating) {
    function v394(node$$41) {
      function v393(adj$$15) {
        var nodeTo$$3 = adj$$15.nodeTo;
        var v18919 = !!nodeTo$$3.visited === T;
        if (v18919) {
          v18919 = node$$41.drawn;
        }
        var v13950 = v18919;
        if (v13950) {
          v13950 = nodeTo$$3.drawn;
        }
        if (v13950) {
          var v7419 = !animating;
          if (v7419) {
            JAM.call(opt$$18.onBeforePlotLine, opt$$18, [adj$$15], JAM.policy.p3);
          }
          JAM.call(that$$16.plotLine, that$$16, [adj$$15, canvas$$17, animating], JAM.policy.p3);
          var v7420 = !animating;
          if (v7420) {
            JAM.call(opt$$18.onAfterPlotLine, opt$$18, [adj$$15], JAM.policy.p3);
          }
        }
        return;
      }
      var nodeAlpha = JAM.call(node$$41.getData, node$$41, ["alpha"], JAM.policy.p3);
      JAM.call(node$$41.eachAdjacency, node$$41, [v393], JAM.policy.p3);
      if (node$$41.drawn) {
        var v7422 = !animating;
        if (v7422) {
          JAM.call(opt$$18.onBeforePlotNode, opt$$18, [node$$41], JAM.policy.p3);
        }
        JAM.call(that$$16.plotNode, that$$16, [node$$41, canvas$$17, animating], JAM.policy.p3);
        var v7423 = !animating;
        if (v7423) {
          JAM.call(opt$$18.onAfterPlotNode, opt$$18, [node$$41], JAM.policy.p3);
        }
      }
      var v13951 = !that$$16.labelsHidden;
      if (v13951) {
        v13951 = opt$$18.withLabels;
      }
      if (v13951) {
        var v13952 = node$$41.drawn;
        if (v13952) {
          v13952 = nodeAlpha >= .95;
        }
        if (v13952) {
          var v7425 = that$$16.labels;
          JAM.call(v7425.plotLabel, v7425, [canvas$$17, node$$41, opt$$18], JAM.policy.p3);
        } else {
          var v7426 = that$$16.labels;
          JAM.call(v7426.hideLabel, v7426, [node$$41, false], JAM.policy.p3);
        }
      }
      node$$41.visited = !T;
      return;
    }
    var viz$$17 = this.viz;
    var aGraph = viz$$17.graph;
    var canvas$$17 = viz$$17.canvas;
    var id$$22 = viz$$17.root;
    var that$$16 = this;
    var ctx$$10 = JAM.call(canvas$$17.getCtx, canvas$$17, [], JAM.policy.p3);
    var min$$1 = Math.min;
    var v7429 = opt$$18;
    if (!v7429) {
      v7429 = this.viz.controller;
    }
    opt$$18 = v7429;
    var v7430 = opt$$18.clearCanvas;
    if (v7430) {
      JAM.call(canvas$$17.clear, canvas$$17, [], JAM.policy.p3);
    }
    var root$$4 = JAM.call(aGraph.getNode, aGraph, [id$$22], JAM.policy.p3);
    if (!root$$4) {
      return;
    }
    var T = !!root$$4.visited;
    JAM.call(aGraph.eachNode, aGraph, [v394], JAM.policy.p3);
    return;
  }
  function v392(opt$$17) {
    function v391(id$$21) {
      var n$$21 = JAM.call(graph$$14.getNode, graph$$14, [id$$21], JAM.policy.p3);
      if (n$$21) {
        var prop$$28;
        for (prop$$28 in props$$14) {
          JAM.call(n$$21.setData, n$$21, [prop$$28, props$$14[prop$$28], "end"], JAM.policy.p3);
        }
      }
      return;
    }
    function v390(n$$20) {
      var prop$$27;
      for (prop$$27 in props$$14) {
        JAM.call(n$$20.setData, n$$20, [prop$$27, props$$14[prop$$27], "end"], JAM.policy.p3);
      }
      return;
    }
    var viz$$16 = this.viz;
    var graph$$14 = viz$$16.graph;
    var animation$$1 = this.nodeFxAnimation;
    var options$$10 = JAM.call($$$1.merge, $$$1, [this.viz.config, {"elements":{"id":false, "properties":{}}, "reposition":false}], JAM.policy.p3);
    opt$$17 = JAM.call($$$1.merge, $$$1, [options$$10, opt$$17 || {}, {onBeforeCompute:$$$1.empty, onAfterCompute:$$$1.empty}], JAM.policy.p3);
    JAM.call(animation$$1.stopTimer, animation$$1, [], JAM.policy.p3);
    var props$$14 = opt$$17.elements.properties;
    if (!opt$$17.elements.id) {
      JAM.call(graph$$14.eachNode, graph$$14, [v390], JAM.policy.p3);
    } else {
      var ids = JAM.call($$$1.splat, $$$1, [opt$$17.elements.id], JAM.policy.p3);
      JAM.call($$$1.each, $$$1, [ids, v391], JAM.policy.p3);
    }
    var propnames = [];
    var prop$$26;
    for (prop$$26 in props$$14) {
      JAM.call(propnames.push, propnames, [prop$$26], JAM.policy.p3);
    }
    var modes$$3 = ["node-property:" + JAM.call(propnames.join, propnames, [":"], JAM.policy.p3)];
    if (opt$$17.reposition) {
      JAM.call(modes$$3.push, modes$$3, ["linear"], JAM.policy.p3);
      JAM.call(viz$$16.compute, viz$$16, ["end"], JAM.policy.p3);
    }
    JAM.call(this.animate, this, [JAM.call($$$1.merge, $$$1, [opt$$17, {modes:modes$$3, type:"nodefx"}], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v389(opt$$16, versor) {
    function v388() {
      if (opt$$16.hideLabels) {
        var v7445 = that$$15.labels;
        JAM.call(v7445.hideLabels, v7445, [false], JAM.policy.p3);
      }
      JAM.call(that$$15.plot, that$$15, [opt$$16], JAM.policy.p3);
      JAM.call(opt$$16.onComplete, opt$$16, [], JAM.policy.p3);
      return;
    }
    function v387(delta$$19) {
      function v386(node$$40) {
        var p$$18;
        for (p$$18 in m$$3) {
          JAM.call(interp[p$$18], interp, [node$$40, m$$3[p$$18], delta$$19, versor], JAM.policy.p3);
        }
        return;
      }
      JAM.call(graph$$13.eachNode, graph$$13, [v386], JAM.policy.p3);
      JAM.call(that$$15.plot, that$$15, [opt$$16, this.$animating, delta$$19], JAM.policy.p3);
      this.$animating = true;
      return;
    }
    opt$$16 = JAM.call($$$1.merge, $$$1, [this.viz.config, opt$$16 || {}], JAM.policy.p3);
    var that$$15 = this;
    var viz$$15 = this.viz;
    var graph$$13 = viz$$15.graph;
    var interp = this.Interpolator;
    var v7451;
    if (opt$$16.type === "nodefx") {
      v7451 = this.nodeFxAnimation;
    } else {
      v7451 = this.animation;
    }
    var animation = v7451;
    var m$$3 = JAM.call(this.prepare, this, [opt$$16.modes], JAM.policy.p3);
    if (opt$$16.hideLabels) {
      var v7453 = this.labels;
      JAM.call(v7453.hideLabels, v7453, [true], JAM.policy.p3);
    }
    var v7455 = JAM.call(animation.setOptions, animation, [JAM.call($$$1.extend, $$$1, [opt$$16, {$animating:false, compute:v387, complete:v388}], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(v7455.start, v7455, [], JAM.policy.p3);
    return;
  }
  function v385(modes$$2) {
    function v384(node$$39) {
      function v383(p$$17) {
        function v382(adj$$14) {
          var i$$48 = 0;
          var l$$18 = prop$$25.length;
          var v7459 = i$$48 < l$$18;
          for (;v7459;) {
            JAM.call(adj$$14[accessors[p$$17].setter], adj$$14, [prop$$25[i$$48], JAM.call(adj$$14[accessors[p$$17].getter], adj$$14, [prop$$25[i$$48]], JAM.policy.p3), "start"], JAM.policy.p3);
            i$$48++;
            v7459 = i$$48 < l$$18;
          }
          return;
        }
        if (p$$17 in m$$2) {
          var prop$$25 = m$$2[p$$17];
          JAM.call(node$$39.eachAdjacency, node$$39, [v382], JAM.policy.p3);
        }
        return;
      }
      function v381(p$$16) {
        if (p$$16 in m$$2) {
          var prop$$24 = m$$2[p$$16];
          var i$$47 = 0;
          var l$$17 = prop$$24.length;
          var v7464 = i$$47 < l$$17;
          for (;v7464;) {
            JAM.call(node$$39[accessors[p$$16].setter], node$$39, [prop$$24[i$$47], JAM.call(node$$39[accessors[p$$16].getter], node$$39, [prop$$24[i$$47]], JAM.policy.p3), "start"], JAM.policy.p3);
            i$$47++;
            v7464 = i$$47 < l$$17;
          }
        }
        return;
      }
      var v7466 = node$$39.startPos;
      JAM.call(v7466.set, v7466, [node$$39.pos], JAM.policy.p3);
      JAM.call($$$1.each, $$$1, [["node-property", "node-style"], v381], JAM.policy.p3);
      JAM.call($$$1.each, $$$1, [["edge-property", "edge-style"], v383], JAM.policy.p3);
      return;
    }
    var graph$$12 = this.viz.graph;
    var accessors = {"node-property":{"getter":"getData", "setter":"setData"}, "edge-property":{"getter":"getData", "setter":"setData"}, "node-style":{"getter":"getCanvasStyle", "setter":"setCanvasStyle"}, "edge-style":{"getter":"getCanvasStyle", "setter":"setCanvasStyle"}};
    var m$$2 = {};
    if (JAM.call($$$1.type, $$$1, [modes$$2], JAM.policy.p3) == "array") {
      var i$$46 = 0;
      var len$$4 = modes$$2.length;
      var v7477 = i$$46 < len$$4;
      for (;v7477;) {
        var v7475 = modes$$2[i$$46];
        var elems = JAM.call(v7475.split, v7475, [":"], JAM.policy.p3);
        var v7476 = JAM.call(elems.shift, elems, [], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          m$$2[v7476] = elems;
        }
        i$$46++;
        v7477 = i$$46 < len$$4;
      }
    } else {
      var p$$15;
      for (p$$15 in modes$$2) {
        if (p$$15 == "position") {
          var v7478 = modes$$2.position;
          introspect(JAM.policy.p2) {
            m$$2[v7478] = [];
          }
        } else {
          var v7479 = m$$2;
          var v7480 = p$$15;
          var v31181 = JAM.call($$$1.splat, $$$1, [modes$$2[p$$15]], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            v7479[v7480] = v31181;
          }
        }
      }
    }
    JAM.call(graph$$12.eachNode, graph$$12, [v384], JAM.policy.p3);
    return m$$2;
  }
  function v380(options$$9) {
    function v379() {
      if (JAM.call(options$$9.condition, options$$9, [], JAM.policy.p3)) {
        JAM.call(options$$9.step, options$$9, [], JAM.policy.p3);
      } else {
        clearInterval(interval);
        JAM.call(options$$9.onComplete, options$$9, [], JAM.policy.p3);
      }
      var v7484 = that$$14.viz;
      JAM.call(v7484.refresh, v7484, [true], JAM.policy.p3);
      return;
    }
    var that$$14 = this;
    options$$9 = JAM.call($$$1.merge, $$$1, [{condition:JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3), step:$$$1.empty, onComplete:$$$1.empty, duration:200}, options$$9 || {}], JAM.policy.p3);
    var interval = JAM.call(setInterval, null, [v379, options$$9.duration]);
    return;
  }
  function v378(elem$$47, prop$$23, delta$$18, getter$$5, setter$$5) {
    function v377() {
      return JAM.new($jit.Complex, [0, 0]);
    }
    var from$$9 = JAM.call(elem$$47[getter$$5], elem$$47, [prop$$23, "start"], JAM.policy.p3);
    var to$$10 = JAM.call(elem$$47[getter$$5], elem$$47, [prop$$23, "end"], JAM.policy.p3);
    var cur$$2 = [];
    if (typeof from$$9.offset == "undefined") {
      if (from$$9 === 0) {
        from$$9 = JAM.call($$$1.map, $$$1, [to$$10, v377], JAM.policy.p3);
        from$$9.offset = 0;
      } else {
        if (from$$9.length == 0) {
          JAM.call(from$$9.push, from$$9, [JAM.new($jit.Complex, [0, 0])], JAM.policy.p3);
        }
        var v7492 = from$$9.length < to$$10.length;
        for (;v7492;) {
          JAM.call(from$$9.push, from$$9, [from$$9[0]], JAM.policy.p3);
          v7492 = from$$9.length < to$$10.length;
        }
        var v7494 = from$$9.length > to$$10.length;
        for (;v7494;) {
          var v13987 = to$$10[0];
          if (!v13987) {
            v13987 = JAM.new($jit.Complex, [0, 0]);
          }
          JAM.call(to$$10.push, to$$10, [v13987], JAM.policy.p3);
          v7494 = from$$9.length > to$$10.length;
        }
        if (from$$9.length == 0) {
          return;
        }
        var l$$16 = from$$9.length;
        var minDist = 1E300;
        var offset$$9 = 0;
        var v7498 = offset$$9 < l$$16;
        for (;v7498;) {
          var d$$3 = 0;
          var i$$45 = 0;
          var v7496 = i$$45 < l$$16;
          for (;v7496;) {
            d$$3 = d$$3 + JAM.call(Geometry.dist2, Geometry, [from$$9[(offset$$9 + i$$45) % l$$16], to$$10[i$$45]], JAM.policy.p3);
            i$$45++;
            v7496 = i$$45 < l$$16;
          }
          if (d$$3 < minDist) {
            from$$9.offset = offset$$9;
            minDist = d$$3;
          }
          offset$$9++;
          v7498 = offset$$9 < l$$16;
        }
      }
    }
    i$$45 = 0;
    l$$16 = from$$9.length;
    var v7503 = i$$45 < l$$16;
    for (;v7503;) {
      var fromi$$1 = from$$9[(i$$45 + from$$9.offset) % l$$16];
      var toi$$1 = to$$10[i$$45];
      JAM.call(cur$$2.push, cur$$2, [JAM.new($jit.Complex, [JAM.call(this.compute, this, [fromi$$1.x, toi$$1.x, delta$$18], JAM.policy.p3), JAM.call(this.compute, this, [fromi$$1.y, toi$$1.y, delta$$18], JAM.policy.p3)])], JAM.policy.p3);
      i$$45++;
      v7503 = i$$45 < l$$16;
    }
    JAM.call(elem$$47[setter$$5], elem$$47, [prop$$23, cur$$2], JAM.policy.p3);
    return;
  }
  function v376(elem$$46, props$$13, delta$$17) {
    JAM.call(this["edge"], this, [elem$$46, props$$13, delta$$17, "canvas", "getCanvasStyle", "setCanvasStyle"], JAM.policy.p3);
    return;
  }
  function v375(elem$$45, props$$12, delta$$16) {
    JAM.call(this["node"], this, [elem$$45, props$$12, delta$$16, "canvas", "getCanvasStyle", "setCanvasStyle"], JAM.policy.p3);
    return;
  }
  function v374(elem$$44, props$$11, delta$$15) {
    JAM.call(this["node"], this, [elem$$44, props$$11, delta$$15, "label", "getLabelData", "setLabelData"], JAM.policy.p3);
    return;
  }
  function v373(elem$$43, props$$10, delta$$14) {
    JAM.call(this["edge"], this, [elem$$43, props$$10, delta$$14, "map", "getData", "setData"], JAM.policy.p3);
    return;
  }
  function v372(elem$$42, props$$9, delta$$13) {
    JAM.call(this["node"], this, [elem$$42, props$$9, delta$$13, "map", "getData", "setData"], JAM.policy.p3);
    return;
  }
  function v371(elem$$41, props$$8, delta$$12, mapKey, getter$$4, setter$$4) {
    var adjs$$1 = elem$$41.adjacencies;
    var id$$20;
    for (id$$20 in adjs$$1) {
      JAM.call(this["node"], this, [adjs$$1[id$$20], props$$8, delta$$12, mapKey, getter$$4, setter$$4], JAM.policy.p3);
    }
    return;
  }
  function v370(elem$$40, props$$7, delta$$11, map, getter$$3, setter$$3) {
    map = this[map];
    if (props$$7) {
      var len$$3 = props$$7.length;
      var i$$44 = 0;
      var v7506 = i$$44 < len$$3;
      for (;v7506;) {
        var pi$$1 = props$$7[i$$44];
        JAM.call(this[map[pi$$1]], this, [elem$$40, pi$$1, delta$$11, getter$$3, setter$$3], JAM.policy.p3);
        i$$44++;
        v7506 = i$$44 < len$$3;
      }
    } else {
      for (pi$$1 in map) {
        JAM.call(this[map[pi$$1]], this, [elem$$40, pi$$1, delta$$11, getter$$3, setter$$3], JAM.policy.p3);
      }
    }
    return;
  }
  function v369(elem$$39, prop$$22, delta$$10, getter$$2, setter$$2) {
    var from$$8 = JAM.call(elem$$39[getter$$2], elem$$39, [prop$$22, "start"], JAM.policy.p3);
    var to$$9 = JAM.call(elem$$39[getter$$2], elem$$39, [prop$$22, "end"], JAM.policy.p3);
    var cur$$1 = [];
    var i$$43 = 0;
    var l$$15 = from$$8.length;
    var v7512 = i$$43 < l$$15;
    for (;v7512;) {
      var fromi = from$$8[i$$43];
      var toi = to$$9[i$$43];
      if (fromi.length) {
        var j$$3 = 0;
        var len$$2 = fromi.length;
        var curi = [];
        var v7509 = j$$3 < len$$2;
        for (;v7509;) {
          JAM.call(curi.push, curi, [JAM.call(this.compute, this, [fromi[j$$3], toi[j$$3], delta$$10], JAM.policy.p3)], JAM.policy.p3);
          j$$3++;
          v7509 = j$$3 < len$$2;
        }
        JAM.call(cur$$1.push, cur$$1, [curi], JAM.policy.p3);
      } else {
        JAM.call(cur$$1.push, cur$$1, [JAM.call(this.compute, this, [fromi, toi, delta$$10], JAM.policy.p3)], JAM.policy.p3);
      }
      i$$43++;
      v7512 = i$$43 < l$$15;
    }
    JAM.call(elem$$39[setter$$2], elem$$39, [prop$$22, cur$$1], JAM.policy.p3);
    return;
  }
  function v368(elem$$38, prop$$21, delta$$9, getter$$1, setter$$1) {
    var from$$7 = JAM.call($$$1.hexToRgb, $$$1, [JAM.call(elem$$38[getter$$1], elem$$38, [prop$$21, "start"], JAM.policy.p3)], JAM.policy.p3);
    var to$$8 = JAM.call($$$1.hexToRgb, $$$1, [JAM.call(elem$$38[getter$$1], elem$$38, [prop$$21, "end"], JAM.policy.p3)], JAM.policy.p3);
    var comp = this.compute;
    var val$$5 = JAM.call($$$1.rgbToHex, $$$1, [[parseInt(JAM.call(comp, null, [from$$7[0], to$$8[0], delta$$9], JAM.policy.p3)), parseInt(JAM.call(comp, null, [from$$7[1], to$$8[1], delta$$9], JAM.policy.p3)), parseInt(JAM.call(comp, null, [from$$7[2], to$$8[2], delta$$9], JAM.policy.p3))]], JAM.policy.p3);
    JAM.call(elem$$38[setter$$1], elem$$38, [prop$$21, val$$5], JAM.policy.p3);
    return;
  }
  function v367(elem$$37, prop$$20, delta$$8, getter, setter) {
    var from$$6 = JAM.call(elem$$37[getter], elem$$37, [prop$$20, "start"], JAM.policy.p3);
    var to$$7 = JAM.call(elem$$37[getter], elem$$37, [prop$$20, "end"], JAM.policy.p3);
    JAM.call(elem$$37[setter], elem$$37, [prop$$20, JAM.call(this.compute, this, [from$$6, to$$7, delta$$8], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v366(elem$$36, props$$6, delta$$7) {
    var v7517 = elem$$36.startPos;
    var from$$5 = JAM.call(v7517.getp, v7517, [true], JAM.policy.p3);
    var v7518 = elem$$36.endPos;
    var to$$6 = JAM.call(v7518.getp, v7518, [], JAM.policy.p3);
    var ans$$9 = JAM.call(to$$6.interpolate, to$$6, [from$$5, delta$$7], JAM.policy.p3);
    var v7519 = elem$$36.pos;
    JAM.call(v7519.setp, v7519, [ans$$9.theta, ans$$9.rho], JAM.policy.p3);
    return;
  }
  function v365(elem$$35, props$$5, delta$$6) {
    var v7522 = elem$$35.startPos;
    var from$$4 = JAM.call(v7522.getc, v7522, [true], JAM.policy.p3);
    var v7523 = elem$$35.endPos;
    var to$$5 = JAM.call(v7523.getc, v7523, [true], JAM.policy.p3);
    var v7524 = elem$$35.pos;
    JAM.call(v7524.setc, v7524, [JAM.call(this.compute, this, [from$$4.x, to$$5.x, delta$$6], JAM.policy.p3), JAM.call(this.compute, this, [from$$4.y, to$$5.y, delta$$6], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v364(elem$$34, props$$4, delta$$5, vector) {
    var v$$2 = JAM.call(vector.scale, vector, [-delta$$5], JAM.policy.p3);
    if (JAM.call(v$$2.norm, v$$2, [], JAM.policy.p3) < 1) {
      var x$$65 = v$$2.x;
      var y$$46 = v$$2.y;
      var v14007 = elem$$34.startPos;
      var v7528 = JAM.call(v14007.getc, v14007, [], JAM.policy.p3);
      var ans$$8 = JAM.call(v7528.moebiusTransformation, v7528, [v$$2], JAM.policy.p3);
      var v7529 = elem$$34.pos;
      JAM.call(v7529.setc, v7529, [ans$$8.x, ans$$8.y], JAM.policy.p3);
      v$$2.x = x$$65;
      v$$2.y = y$$46;
    }
    return;
  }
  function v363(from$$3, to$$4, delta$$4) {
    return from$$3 + (to$$4 - from$$3) * delta$$4;
  }
  function v362(viz$$14, klass$$6) {
    this.viz = viz$$14;
    this.config = viz$$14.config;
    this.node = viz$$14.config.Node;
    this.edge = viz$$14.config.Edge;
    var v31182 = new Animation;
    this.animation = v31182;
    var v31183 = new klass$$6.Plot.NodeTypes;
    this.nodeTypes = v31183;
    var v31184 = new klass$$6.Plot.EdgeTypes;
    this.edgeTypes = v31184;
    this.labels = viz$$14.labels;
    return;
  }
  function v361(from$$2, to$$3, r$$1, canvas$$16) {
    function computeArcThroughTwoPoints(p1, p2) {
      var aDen = p1.x * p2.y - p1.y * p2.x;
      var bDen = aDen;
      var sq1 = JAM.call(p1.squaredNorm, p1, [], JAM.policy.p3);
      var sq2 = JAM.call(p2.squaredNorm, p2, [], JAM.policy.p3);
      if (aDen == 0) {
        return {x:0, y:0, ratio:-1};
      }
      var a$$6 = (p1.y * sq2 - p2.y * sq1 + p1.y - p2.y) / aDen;
      var b$$4 = (p2.x * sq1 - p1.x * sq2 + p2.x - p1.x) / bDen;
      var x$$64 = -a$$6 / 2;
      var y$$45 = -b$$4 / 2;
      var squaredRatio = (a$$6 * a$$6 + b$$4 * b$$4) / 4 - 1;
      if (squaredRatio < 0) {
        return {x:0, y:0, ratio:-1};
      }
      var ratio = JAM.call(Math.sqrt, Math, [squaredRatio], JAM.policy.p3);
      var v14020;
      if (ratio > 1E3) {
        v14020 = -1;
      } else {
        v14020 = ratio;
      }
      var out = {x:x$$64, y:y$$45, ratio:v14020, a:a$$6, b:b$$4};
      return out;
    }
    function sense(angleBegin$$1, angleEnd$$1) {
      var v7548;
      if (angleBegin$$1 < angleEnd$$1) {
        var v14021;
        if (angleBegin$$1 + Math.PI > angleEnd$$1) {
          v14021 = false;
        } else {
          v14021 = true;
        }
        v7548 = v14021;
      } else {
        var v14022;
        if (angleEnd$$1 + Math.PI > angleBegin$$1) {
          v14022 = true;
        } else {
          v14022 = false;
        }
        v7548 = v14022;
      }
      return v7548;
    }
    var ctx$$9 = JAM.call(canvas$$16.getCtx, canvas$$16, [], JAM.policy.p3);
    var centerOfCircle = computeArcThroughTwoPoints(from$$2, to$$3);
    var v18948 = centerOfCircle.a > 1E3;
    if (!v18948) {
      v18948 = centerOfCircle.b > 1E3;
    }
    var v14024 = v18948;
    if (!v14024) {
      v14024 = centerOfCircle.ratio < 0;
    }
    if (v14024) {
      JAM.call(ctx$$9.beginPath, ctx$$9, [], JAM.policy.p3);
      JAM.call(ctx$$9.moveTo, ctx$$9, [from$$2.x * r$$1, from$$2.y * r$$1], JAM.policy.p3);
      JAM.call(ctx$$9.lineTo, ctx$$9, [to$$3.x * r$$1, to$$3.y * r$$1], JAM.policy.p3);
      JAM.call(ctx$$9.stroke, ctx$$9, [], JAM.policy.p3);
    } else {
      var angleBegin = JAM.call(Math.atan2, Math, [to$$3.y - centerOfCircle.y, to$$3.x - centerOfCircle.x], JAM.policy.p3);
      var angleEnd = JAM.call(Math.atan2, Math, [from$$2.y - centerOfCircle.y, from$$2.x - centerOfCircle.x], JAM.policy.p3);
      sense = JAM.call(sense, null, [angleBegin, angleEnd], JAM.policy.p3);
      JAM.call(ctx$$9.beginPath, ctx$$9, [], JAM.policy.p3);
      JAM.call(ctx$$9.arc, ctx$$9, [centerOfCircle.x * r$$1, centerOfCircle.y * r$$1, centerOfCircle.ratio * r$$1, angleBegin, angleEnd, sense], JAM.policy.p3);
      JAM.call(ctx$$9.stroke, ctx$$9, [], JAM.policy.p3);
    }
    return;
  }
  function v360(posFrom$$1, posTo$$1, pos$$29, epsilon$$1) {
    var v7561 = EdgeHelper.line;
    return JAM.call(v7561.contains, v7561, [posFrom$$1, posTo$$1, pos$$29, epsilon$$1], JAM.policy.p3);
  }
  function v359(from$$1, to$$2, dim$$7, swap, canvas$$15) {
    var ctx$$8 = JAM.call(canvas$$15.getCtx, canvas$$15, [], JAM.policy.p3);
    if (swap) {
      var tmp$$1 = from$$1;
      from$$1 = to$$2;
      to$$2 = tmp$$1;
    }
    var vect = new Complex(to$$2.x - from$$1.x, to$$2.y - from$$1.y);
    JAM.call(vect.$scale, vect, [dim$$7 / JAM.call(vect.norm, vect, [], JAM.policy.p3)], JAM.policy.p3);
    var intermediatePoint = new Complex(to$$2.x - vect.x, to$$2.y - vect.y);
    var normal = new Complex(-vect.y / 2, vect.x / 2);
    var v1 = JAM.call(intermediatePoint.add, intermediatePoint, [normal], JAM.policy.p3);
    var v2 = JAM.call(intermediatePoint.$add, intermediatePoint, [JAM.call(normal.$scale, normal, [-1], JAM.policy.p3)], JAM.policy.p3);
    JAM.call(ctx$$8.beginPath, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.moveTo, ctx$$8, [from$$1.x, from$$1.y], JAM.policy.p3);
    JAM.call(ctx$$8.lineTo, ctx$$8, [to$$2.x, to$$2.y], JAM.policy.p3);
    JAM.call(ctx$$8.stroke, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.beginPath, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.moveTo, ctx$$8, [v1.x, v1.y], JAM.policy.p3);
    JAM.call(ctx$$8.lineTo, ctx$$8, [v2.x, v2.y], JAM.policy.p3);
    JAM.call(ctx$$8.lineTo, ctx$$8, [to$$2.x, to$$2.y], JAM.policy.p3);
    JAM.call(ctx$$8.closePath, ctx$$8, [], JAM.policy.p3);
    JAM.call(ctx$$8.fill, ctx$$8, [], JAM.policy.p3);
    return;
  }
  function v358(posFrom, posTo, pos$$28, epsilon) {
    var min = Math.min;
    var max = Math.max;
    var minPosX = JAM.call(min, null, [posFrom.x, posTo.x], JAM.policy.p3);
    var maxPosX = JAM.call(max, null, [posFrom.x, posTo.x], JAM.policy.p3);
    var minPosY = JAM.call(min, null, [posFrom.y, posTo.y], JAM.policy.p3);
    var maxPosY = JAM.call(max, null, [posFrom.y, posTo.y], JAM.policy.p3);
    var v23862 = pos$$28.x >= minPosX;
    if (v23862) {
      v23862 = pos$$28.x <= maxPosX;
    }
    var v18952 = v23862;
    if (v18952) {
      v18952 = pos$$28.y >= minPosY;
    }
    var v14051 = v18952;
    if (v14051) {
      v14051 = pos$$28.y <= maxPosY;
    }
    if (v14051) {
      if (JAM.call(Math.abs, Math, [posTo.x - posFrom.x], JAM.policy.p3) <= epsilon) {
        return true;
      }
      var dist = (posTo.y - posFrom.y) / (posTo.x - posFrom.x) * (pos$$28.x - posFrom.x) + posFrom.y;
      return JAM.call(Math.abs, Math, [dist - pos$$28.y], JAM.policy.p3) <= epsilon;
    }
    return false;
  }
  function v357(from, to$$1, canvas$$14) {
    var ctx$$7 = JAM.call(canvas$$14.getCtx, canvas$$14, [], JAM.policy.p3);
    JAM.call(ctx$$7.beginPath, ctx$$7, [], JAM.policy.p3);
    JAM.call(ctx$$7.moveTo, ctx$$7, [from.x, from.y], JAM.policy.p3);
    JAM.call(ctx$$7.lineTo, ctx$$7, [to$$1.x, to$$1.y], JAM.policy.p3);
    JAM.call(ctx$$7.stroke, ctx$$7, [], JAM.policy.p3);
    return;
  }
  function v356(npos$$5, pos$$27, dim$$6) {
    var v7597 = NodeHelper.circle;
    return JAM.call(v7597.contains, v7597, [npos$$5, pos$$27, dim$$6], JAM.policy.p3);
  }
  function v355(type$$53, pos$$26, dim$$5, canvas$$13) {
    var ctx$$6 = JAM.call(canvas$$13.getCtx, canvas$$13, [], JAM.policy.p3);
    var pi5 = Math.PI / 5;
    JAM.call(ctx$$6.save, ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6.translate, ctx$$6, [pos$$26.x, pos$$26.y], JAM.policy.p3);
    JAM.call(ctx$$6.beginPath, ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6.moveTo, ctx$$6, [dim$$5, 0], JAM.policy.p3);
    var i$$42 = 0;
    var v7603 = i$$42 < 9;
    for (;v7603;) {
      JAM.call(ctx$$6.rotate, ctx$$6, [pi5], JAM.policy.p3);
      if (i$$42 % 2 == 0) {
        JAM.call(ctx$$6.lineTo, ctx$$6, [dim$$5 / .525731 * .200811, 0], JAM.policy.p3);
      } else {
        JAM.call(ctx$$6.lineTo, ctx$$6, [dim$$5, 0], JAM.policy.p3);
      }
      i$$42++;
      v7603 = i$$42 < 9;
    }
    JAM.call(ctx$$6.closePath, ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6[type$$53], ctx$$6, [], JAM.policy.p3);
    JAM.call(ctx$$6.restore, ctx$$6, [], JAM.policy.p3);
    return;
  }
  function v354(npos$$4, pos$$25, dim$$4) {
    var v7604 = NodeHelper.circle;
    return JAM.call(v7604.contains, v7604, [npos$$4, pos$$25, dim$$4], JAM.policy.p3);
  }
  function v353(type$$52, pos$$24, dim$$3, canvas$$12) {
    var ctx$$5 = JAM.call(canvas$$12.getCtx, canvas$$12, [], JAM.policy.p3);
    var c1x = pos$$24.x;
    var c1y = pos$$24.y - dim$$3;
    var c2x = c1x - dim$$3;
    var c2y = pos$$24.y + dim$$3;
    var c3x = c1x + dim$$3;
    var c3y = c2y;
    JAM.call(ctx$$5.beginPath, ctx$$5, [], JAM.policy.p3);
    JAM.call(ctx$$5.moveTo, ctx$$5, [c1x, c1y], JAM.policy.p3);
    JAM.call(ctx$$5.lineTo, ctx$$5, [c2x, c2y], JAM.policy.p3);
    JAM.call(ctx$$5.lineTo, ctx$$5, [c3x, c3y], JAM.policy.p3);
    JAM.call(ctx$$5.closePath, ctx$$5, [], JAM.policy.p3);
    JAM.call(ctx$$5[type$$52], ctx$$5, [], JAM.policy.p3);
    return;
  }
  function v352(npos$$3, pos$$23, width$$19, height$$18) {
    var v7607 = JAM.call(Math.abs, Math, [pos$$23.x - npos$$3.x], JAM.policy.p3) <= width$$19 / 2;
    if (v7607) {
      v7607 = JAM.call(Math.abs, Math, [pos$$23.y - npos$$3.y], JAM.policy.p3) <= height$$18 / 2;
    }
    return v7607;
  }
  function v351(type$$51, pos$$22, width$$18, height$$17, canvas$$11) {
    var v7608 = JAM.call(canvas$$11.getCtx, canvas$$11, [], JAM.policy.p3);
    JAM.call(v7608[type$$51 + "Rect"], v7608, [pos$$22.x - width$$18 / 2, pos$$22.y - height$$17 / 2, width$$18, height$$17], JAM.policy.p3);
    return;
  }
  function v350(npos$$2, pos$$21, dim$$2) {
    var v7612 = JAM.call(Math.abs, Math, [pos$$21.x - npos$$2.x], JAM.policy.p3) <= dim$$2;
    if (v7612) {
      v7612 = JAM.call(Math.abs, Math, [pos$$21.y - npos$$2.y], JAM.policy.p3) <= dim$$2;
    }
    return v7612;
  }
  function v349(type$$50, pos$$20, dim$$1, canvas$$10) {
    var v7613 = JAM.call(canvas$$10.getCtx, canvas$$10, [], JAM.policy.p3);
    JAM.call(v7613[type$$50 + "Rect"], v7613, [pos$$20.x - dim$$1, pos$$20.y - dim$$1, 2 * dim$$1, 2 * dim$$1], JAM.policy.p3);
    return;
  }
  function v348(npos$$1, pos$$19, width$$17, height$$16) {
    var radius$$5 = 0;
    var scalex$$1 = 1;
    var scaley$$1 = 1;
    var diffx$$1 = 0;
    var diffy$$1 = 0;
    var diff$$2 = 0;
    if (width$$17 > height$$16) {
      radius$$5 = width$$17 / 2;
      scaley$$1 = height$$16 / width$$17;
    } else {
      radius$$5 = height$$16 / 2;
      scalex$$1 = width$$17 / height$$16;
    }
    diffx$$1 = (npos$$1.x - pos$$19.x) * (1 / scalex$$1);
    diffy$$1 = (npos$$1.y - pos$$19.y) * (1 / scaley$$1);
    diff$$2 = diffx$$1 * diffx$$1 + diffy$$1 * diffy$$1;
    return diff$$2 <= radius$$5 * radius$$5;
  }
  function v347(type$$49, pos$$18, width$$16, height$$15, canvas$$9) {
    var ctx$$4 = JAM.call(canvas$$9.getCtx, canvas$$9, [], JAM.policy.p3);
    var scalex = 1;
    var scaley = 1;
    var scaleposx = 1;
    var scaleposy = 1;
    var radius$$4 = 0;
    if (width$$16 > height$$15) {
      radius$$4 = width$$16 / 2;
      scaley = height$$15 / width$$16;
      scaleposy = width$$16 / height$$15;
    } else {
      radius$$4 = height$$15 / 2;
      scalex = width$$16 / height$$15;
      scaleposx = height$$15 / width$$16;
    }
    JAM.call(ctx$$4.save, ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4.scale, ctx$$4, [scalex, scaley], JAM.policy.p3);
    JAM.call(ctx$$4.beginPath, ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4.arc, ctx$$4, [pos$$18.x * scaleposx, pos$$18.y * scaleposy, radius$$4, 0, Math.PI * 2, true], JAM.policy.p3);
    JAM.call(ctx$$4.closePath, ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4[type$$49], ctx$$4, [], JAM.policy.p3);
    JAM.call(ctx$$4.restore, ctx$$4, [], JAM.policy.p3);
    return;
  }
  function v346(npos, pos$$17, radius$$3) {
    var diffx = npos.x - pos$$17.x;
    var diffy = npos.y - pos$$17.y;
    var diff$$1 = diffx * diffx + diffy * diffy;
    return diff$$1 <= radius$$3 * radius$$3;
  }
  function v345(type$$48, pos$$16, radius$$2, canvas$$8) {
    var ctx$$3 = JAM.call(canvas$$8.getCtx, canvas$$8, [], JAM.policy.p3);
    JAM.call(ctx$$3.beginPath, ctx$$3, [], JAM.policy.p3);
    JAM.call(ctx$$3.arc, ctx$$3, [pos$$16.x, pos$$16.y, radius$$2, 0, Math.PI * 2, true], JAM.policy.p3);
    JAM.call(ctx$$3.closePath, ctx$$3, [], JAM.policy.p3);
    JAM.call(ctx$$3[type$$48], ctx$$3, [], JAM.policy.p3);
    return;
  }
  function v344(graph$$11) {
    function v343(elem$$33) {
      function v342(adj$$13) {
        var v7641 = viz$$13.graph;
        var nodeFrom$$2 = JAM.call(v7641.getNode, v7641, [adj$$13.nodeFrom.id], JAM.policy.p3);
        var v7643 = viz$$13.graph;
        var nodeTo$$2 = JAM.call(v7643.getNode, v7643, [adj$$13.nodeTo.id], JAM.policy.p3);
        if (!JAM.call(nodeFrom$$2.adjacentTo, nodeFrom$$2, [nodeTo$$2], JAM.policy.p3)) {
          var v7645 = viz$$13.graph;
          adj$$13 = JAM.call(v7645.addAdjacence, v7645, [nodeFrom$$2, nodeTo$$2, adj$$13.data], JAM.policy.p3);
          var v14081 = nodeFrom$$2.startAlpha == nodeFrom$$2.endAlpha;
          if (v14081) {
            v14081 = nodeTo$$2.startAlpha == nodeTo$$2.endAlpha;
          }
          if (v14081) {
            fadeEdges$$2 = true;
            JAM.call(adj$$13.setData, adj$$13, ["alpha", 0], JAM.policy.p3);
            JAM.call(adj$$13.setData, adj$$13, ["alpha", 0, "start"], JAM.policy.p3);
            JAM.call(adj$$13.setData, adj$$13, ["alpha", 1, "end"], JAM.policy.p3);
          }
        }
        return;
      }
      JAM.call(elem$$33.eachAdjacency, elem$$33, [v342], JAM.policy.p3);
      return;
    }
    function v341(elem$$32) {
      var v18968 = viz$$13.graph;
      if (!JAM.call(v18968.hasNode, v18968, [elem$$32.id], JAM.policy.p3)) {
        var v7649 = viz$$13.graph;
        JAM.call(v7649.addNode, v7649, [elem$$32], JAM.policy.p3);
        var v7650 = viz$$13.graph;
        var n$$19 = JAM.call(v7650.getNode, v7650, [elem$$32.id], JAM.policy.p3);
        JAM.call(n$$19.setData, n$$19, ["alpha", 0], JAM.policy.p3);
        JAM.call(n$$19.setData, n$$19, ["alpha", 0, "start"], JAM.policy.p3);
        JAM.call(n$$19.setData, n$$19, ["alpha", 1, "end"], JAM.policy.p3);
      }
      return;
    }
    var viz$$13 = this.viz;
    JAM.call(graph$$11.eachNode, graph$$11, [v341], JAM.policy.p3);
    var fadeEdges$$2 = false;
    JAM.call(graph$$11.eachNode, graph$$11, [v343], JAM.policy.p3);
    return fadeEdges$$2;
  }
  function v340(node$$38, opt$$15) {
    function subn$$2(n$$18) {
      function v339(ch$$8) {
        delete ch$$8.ignore;
        var v14083;
        if (opt$$15.type == "animate") {
          v14083 = "end";
        } else {
          v14083 = "current";
        }
        JAM.call(ch$$8.setData, ch$$8, ["alpha", 1, v14083], JAM.policy.p3);
        subn$$2(ch$$8);
        return;
      }
      JAM.call(n$$18.eachSubnode, n$$18, [v339], JAM.policy.p3);
      return;
    }
    if (!("collapsed" in node$$38)) {
      return;
    }
    var viz$$12 = this.viz;
    opt$$15 = JAM.call($$$1.merge, $$$1, [this.options, viz$$12.config, opt$$15 || {}, {"modes":["node-property:alpha:span", "linear"]}], JAM.policy.p3);
    delete node$$38.collapsed;
    subn$$2(node$$38);
    if (opt$$15.type == "animate") {
      JAM.call(viz$$12.compute, viz$$12, ["end"], JAM.policy.p3);
      if (viz$$12.rotated) {
        JAM.call(viz$$12.rotate, viz$$12, [viz$$12.rotated, "none", {"property":"end"}], JAM.policy.p3);
      }
      var v7662 = viz$$12.fx;
      JAM.call(v7662.animate, v7662, [opt$$15], JAM.policy.p3);
    } else {
      if (opt$$15.type == "replot") {
        JAM.call(viz$$12.refresh, viz$$12, [], JAM.policy.p3);
      }
    }
    return;
  }
  function v338(node$$37, opt$$14) {
    function subn$$1(n$$17) {
      function v337(ch$$7) {
        JAM.call(ch$$7.setPos, ch$$7, [JAM.call(node$$37.getPos, node$$37, ["end"], JAM.policy.p3), "end"], JAM.policy.p3);
        subn$$1(ch$$7);
        return;
      }
      JAM.call(n$$17.eachSubnode, n$$17, [v337], JAM.policy.p3);
      return;
    }
    function subn(n$$16) {
      function v336(ch$$6) {
        ch$$6.ignore = true;
        var v14088;
        if (opt$$14.type == "animate") {
          v14088 = "end";
        } else {
          v14088 = "current";
        }
        JAM.call(ch$$6.setData, ch$$6, ["alpha", 0, v14088], JAM.policy.p3);
        subn(ch$$6);
        return;
      }
      JAM.call(n$$16.eachSubnode, n$$16, [v336], JAM.policy.p3);
      return;
    }
    var viz$$11 = this.viz;
    var v14089 = node$$37.collapsed;
    if (!v14089) {
      v14089 = !JAM.call(node$$37.anySubnode, node$$37, [JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3)], JAM.policy.p3);
    }
    if (v14089) {
      return;
    }
    opt$$14 = JAM.call($$$1.merge, $$$1, [this.options, viz$$11.config, opt$$14 || {}, {"modes":["node-property:alpha:span", "linear"]}], JAM.policy.p3);
    node$$37.collapsed = true;
    subn(node$$37);
    if (opt$$14.type == "animate") {
      JAM.call(viz$$11.compute, viz$$11, ["end"], JAM.policy.p3);
      if (viz$$11.rotated) {
        JAM.call(viz$$11.rotate, viz$$11, [viz$$11.rotated, "none", {"property":"end"}], JAM.policy.p3);
      }
      subn$$1(node$$37);
      var v7675 = viz$$11.fx;
      JAM.call(v7675.animate, v7675, [opt$$14], JAM.policy.p3);
    } else {
      if (opt$$14.type == "replot") {
        JAM.call(viz$$11.refresh, viz$$11, [], JAM.policy.p3);
      }
    }
    return;
  }
  function v335(json$$4, opt$$13, extraModes) {
    function v334() {
      function v333(elem$$31) {
        function v332(adj$$12) {
          if (adj$$12.ignore) {
            var v7678 = viz$$10.graph;
            JAM.call(v7678.removeAdjacence, v7678, [adj$$12.nodeFrom.id, adj$$12.nodeTo.id], JAM.policy.p3);
          }
          return;
        }
        JAM.call(elem$$31.eachAdjacency, elem$$31, [v332], JAM.policy.p3);
        return;
      }
      function v331(elem$$30) {
        if (elem$$30.ignore) {
          var v7682 = viz$$10.graph;
          JAM.call(v7682.removeNode, v7682, [elem$$30.id], JAM.policy.p3);
        }
        return;
      }
      var v7685 = viz$$10.graph;
      JAM.call(v7685.eachNode, v7685, [v331], JAM.policy.p3);
      var v7686 = viz$$10.graph;
      JAM.call(v7686.eachNode, v7686, [v333], JAM.policy.p3);
      JAM.call(options$$8.onComplete, options$$8, [], JAM.policy.p3);
      return;
    }
    function v330(elem$$29) {
      var v14095 = elem$$29.id != root$$3;
      if (v14095) {
        var v23881 = elem$$29.pos;
        var v18975 = JAM.call(v23881.getp, v23881, [], JAM.policy.p3);
        v14095 = JAM.call(v18975.equals, v18975, [Polar.KER], JAM.policy.p3);
      }
      if (v14095) {
        var v7687 = elem$$29.pos;
        JAM.call(v7687.set, v7687, [elem$$29.endPos], JAM.policy.p3);
        var v7689 = elem$$29.startPos;
        JAM.call(v7689.set, v7689, [elem$$29.endPos], JAM.policy.p3);
      }
      return;
    }
    function v329(elem$$28) {
      function v328(adj$$11) {
        var v14096 = adj$$11.nodeFrom.ignore;
        if (!v14096) {
          v14096 = adj$$11.nodeTo.ignore;
        }
        if (v14096) {
          return;
        }
        var nodeFrom$$1 = JAM.call(graph$$10.getNode, graph$$10, [adj$$11.nodeFrom.id], JAM.policy.p3);
        var nodeTo$$1 = JAM.call(graph$$10.getNode, graph$$10, [adj$$11.nodeTo.id], JAM.policy.p3);
        if (!JAM.call(nodeFrom$$1.adjacentTo, nodeFrom$$1, [nodeTo$$1], JAM.policy.p3)) {
          var v7695 = viz$$10.graph;
          adj$$11 = JAM.call(v7695.getAdjacence, v7695, [nodeFrom$$1.id, nodeTo$$1.id], JAM.policy.p3);
          fadeEdges$$1 = true;
          JAM.call(adj$$11.setData, adj$$11, ["alpha", 1], JAM.policy.p3);
          JAM.call(adj$$11.setData, adj$$11, ["alpha", 1, "start"], JAM.policy.p3);
          JAM.call(adj$$11.setData, adj$$11, ["alpha", 0, "end"], JAM.policy.p3);
        }
        return;
      }
      if (elem$$28.ignore) {
        return;
      }
      JAM.call(elem$$28.eachAdjacency, elem$$28, [v328], JAM.policy.p3);
      return;
    }
    function v327(elem$$27) {
      var graphNode = JAM.call(graph$$10.getNode, graph$$10, [elem$$27.id], JAM.policy.p3);
      if (!graphNode) {
        JAM.call(elem$$27.setData, elem$$27, ["alpha", 1], JAM.policy.p3);
        JAM.call(elem$$27.setData, elem$$27, ["alpha", 1, "start"], JAM.policy.p3);
        JAM.call(elem$$27.setData, elem$$27, ["alpha", 0, "end"], JAM.policy.p3);
        elem$$27.ignore = true;
      } else {
        var graphNodeData = graphNode.data;
        var prop$$19;
        for (prop$$19 in graphNodeData) {
          var v14100 = nodeModes;
          if (v14100) {
            v14100 = JAM.call($$$1.indexOf, $$$1, [nodeModes, prop$$19], JAM.policy.p3) > -1;
          }
          if (v14100) {
            var v7701 = elem$$27.endData;
            introspect(JAM.policy.p2) {
              v7701[prop$$19] = graphNodeData[prop$$19];
            }
          } else {
            var v7702 = elem$$27.data;
            introspect(JAM.policy.p2) {
              v7702[prop$$19] = graphNodeData[prop$$19];
            }
          }
        }
      }
      return;
    }
    function v326(n$$15) {
      return "$" + n$$15;
    }
    function v325(elem$$26) {
      function v324(adj$$10) {
        if (!JAM.call(graph$$10.getAdjacence, graph$$10, [adj$$10.nodeFrom.id, adj$$10.nodeTo.id], JAM.policy.p3)) {
          var v7705 = viz$$10.graph;
          JAM.call(v7705.removeAdjacence, v7705, [adj$$10.nodeFrom.id, adj$$10.nodeTo.id], JAM.policy.p3);
        }
        return;
      }
      JAM.call(elem$$26.eachAdjacency, elem$$26, [v324], JAM.policy.p3);
      if (!JAM.call(graph$$10.hasNode, graph$$10, [elem$$26.id], JAM.policy.p3)) {
        var v7709 = viz$$10.graph;
        JAM.call(v7709.removeNode, v7709, [elem$$26.id], JAM.policy.p3);
      }
      return;
    }
    function v323(elem$$25) {
      function v322(adj$$9) {
        var v18984 = viz$$10.graph;
        var adjExists = !!JAM.call(v18984.getAdjacence, v18984, [adj$$9.nodeFrom.id, adj$$9.nodeTo.id], JAM.policy.p3);
        var v7713 = viz$$10.graph;
        JAM.call(v7713.addAdjacence, v7713, [adj$$9.nodeFrom, adj$$9.nodeTo, adj$$9.data], JAM.policy.p3);
        if (adjExists) {
          var v7717 = viz$$10.graph;
          var addedAdj = JAM.call(v7717.getAdjacence, v7717, [adj$$9.nodeFrom.id, adj$$9.nodeTo.id], JAM.policy.p3);
          var prop$$18;
          var v14108 = adj$$9.data;
          if (!v14108) {
            v14108 = {};
          }
          for (prop$$18 in v14108) {
            var v7720 = addedAdj.data;
            var v14109 = adj$$9.data;
            introspect(JAM.policy.p2) {
              v7720[prop$$18] = v14109[prop$$18];
            }
          }
        }
        return;
      }
      var v7722 = viz$$10.graph;
      var nodeExists = JAM.call(v7722.hasNode, v7722, [elem$$25.id], JAM.policy.p3);
      JAM.call(elem$$25.eachAdjacency, elem$$25, [v322], JAM.policy.p3);
      if (nodeExists) {
        var v7724 = viz$$10.graph;
        var addedNode = JAM.call(v7724.getNode, v7724, [elem$$25.id], JAM.policy.p3);
        var prop$$17;
        var v14110 = elem$$25.data;
        if (!v14110) {
          v14110 = {};
        }
        for (prop$$17 in v14110) {
          var v7726 = addedNode.data;
          var v14111 = elem$$25.data;
          introspect(JAM.policy.p2) {
            v7726[prop$$17] = v14111[prop$$17];
          }
        }
      }
      return;
    }
    extraModes = extraModes || {};
    var viz$$10 = this.viz;
    var options$$8 = JAM.call($$$1.merge, $$$1, [this.options, viz$$10.controller, opt$$13], JAM.policy.p3);
    var root$$3 = viz$$10.root;
    var graph$$10;
    var v7730 = opt$$13.id;
    if (!v7730) {
      v7730 = viz$$10.root;
    }
    viz$$10.root = v7730;
    switch(options$$8.type) {
      case "nothing":
        graph$$10 = JAM.call(viz$$10.construct, viz$$10, [json$$4], JAM.policy.p3);
        JAM.call(graph$$10.eachNode, graph$$10, [v323], JAM.policy.p3);
        var v7731 = viz$$10.graph;
        JAM.call(v7731.eachNode, v7731, [v325], JAM.policy.p3);
        break;
      case "replot":
        var v7732 = viz$$10.labels;
        JAM.call(v7732.clearLabels, v7732, [true], JAM.policy.p3);
        JAM.call(this.morph, this, [json$$4, {type:"nothing"}], JAM.policy.p3);
        JAM.call(viz$$10.refresh, viz$$10, [true], JAM.policy.p3);
        JAM.call(viz$$10.refresh, viz$$10, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
      ;
      case "fade:con":
        that = this;
        graph$$10 = JAM.call(viz$$10.construct, viz$$10, [json$$4], JAM.policy.p3);
        var v7734 = "node-property" in extraModes;
        if (v7734) {
          v7734 = JAM.call($$$1.map, $$$1, [JAM.call($$$1.splat, $$$1, [extraModes["node-property"]], JAM.policy.p3), v326], JAM.policy.p3);
        }
        var nodeModes = v7734;
        var v7735 = viz$$10.graph;
        JAM.call(v7735.eachNode, v7735, [v327], JAM.policy.p3);
        var v7736 = viz$$10.graph;
        JAM.call(v7736.eachNode, v7736, [v329], JAM.policy.p3);
        var fadeEdges$$1 = JAM.call(this.preprocessSum, this, [graph$$10], JAM.policy.p3);
        var v7737;
        if (!fadeEdges$$1) {
          v7737 = ["node-property:alpha"];
        } else {
          v7737 = ["node-property:alpha", "edge-property:alpha"];
        }
        var modes$$1 = v7737;
        var v7738 = modes$$1;
        var v14115 = modes$$1[0];
        var v18990;
        if ("node-property" in extraModes) {
          var v26159 = JAM.call($$$1.splat, $$$1, [extraModes["node-property"]], JAM.policy.p3);
          v18990 = ":" + JAM.call(v26159.join, v26159, [":"], JAM.policy.p3);
        } else {
          v18990 = "";
        }
        v7738[0] = v14115 + v18990;
        var v7739 = modes$$1;
        var v18991 = modes$$1[1];
        if (!v18991) {
          v18991 = "edge-property:alpha";
        }
        var v14117 = v18991;
        var v18992;
        if ("edge-property" in extraModes) {
          var v26160 = JAM.call($$$1.splat, $$$1, [extraModes["edge-property"]], JAM.policy.p3);
          v18992 = ":" + JAM.call(v26160.join, v26160, [":"], JAM.policy.p3);
        } else {
          v18992 = "";
        }
        v7739[1] = v14117 + v18992;
        if ("label-property" in extraModes) {
          var v18993 = JAM.call($$$1.splat, $$$1, [extraModes["label-property"]], JAM.policy.p3);
          JAM.call(modes$$1.push, modes$$1, ["label-property:" + JAM.call(v18993.join, v18993, [":"], JAM.policy.p3)], JAM.policy.p3);
        }
        if (viz$$10.reposition) {
          JAM.call(viz$$10.reposition, viz$$10, [], JAM.policy.p3);
        } else {
          JAM.call(viz$$10.compute, viz$$10, ["end"], JAM.policy.p3);
        }
        var v7743 = viz$$10.graph;
        JAM.call(v7743.eachNode, v7743, [v330], JAM.policy.p3);
        var v7744 = viz$$10.fx;
        var v27699 = extraModes.position;
        if (!v27699) {
          v27699 = "polar";
        }
        var v23892 = [v27699];
        JAM.call(v7744.animate, v7744, [JAM.call($$$1.merge, $$$1, [options$$8, {modes:JAM.call(v23892.concat, v23892, [modes$$1], JAM.policy.p3), onComplete:v334}], JAM.policy.p3)], JAM.policy.p3);
      default:
      ;
    }
    return;
  }
  function v321(json$$3, opt$$12) {
    function v320(elem$$24) {
      var v14121 = elem$$24.id != root$$2;
      if (v14121) {
        var v18996 = elem$$24.pos;
        v14121 = JAM.call(v18996.isZero, v18996, [], JAM.policy.p3);
      }
      if (v14121) {
        var v7747 = elem$$24.pos;
        JAM.call(v7747.set, v7747, [elem$$24.endPos], JAM.policy.p3);
        var v7749 = elem$$24.startPos;
        JAM.call(v7749.set, v7749, [elem$$24.endPos], JAM.policy.p3);
      }
      return;
    }
    function v319() {
      function v318() {
        JAM.call(options$$7.onComplete, options$$7, [], JAM.policy.p3);
        return;
      }
      var v7752 = viz$$9.fx;
      JAM.call(v7752.animate, v7752, [JAM.call($$$1.merge, $$$1, [options$$7, {modes:modes, onComplete:v318}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v317(elem$$23) {
      function v316(adj$$8) {
        var v7754 = viz$$9.graph;
        JAM.call(v7754.addAdjacence, v7754, [adj$$8.nodeFrom, adj$$8.nodeTo, adj$$8.data], JAM.policy.p3);
        return;
      }
      JAM.call(elem$$23.eachAdjacency, elem$$23, [v316], JAM.policy.p3);
      return;
    }
    var viz$$9 = this.viz;
    var options$$7 = JAM.call($$$1.merge, $$$1, [this.options, viz$$9.controller, opt$$12], JAM.policy.p3);
    var root$$2 = viz$$9.root;
    var graph$$9;
    var v7760 = opt$$12.id;
    if (!v7760) {
      v7760 = viz$$9.root;
    }
    viz$$9.root = v7760;
    switch(options$$7.type) {
      case "nothing":
        graph$$9 = JAM.call(viz$$9.construct, viz$$9, [json$$3], JAM.policy.p3);
        JAM.call(graph$$9.eachNode, graph$$9, [v317], JAM.policy.p3);
        break;
      case "replot":
        JAM.call(viz$$9.refresh, viz$$9, [true], JAM.policy.p3);
        JAM.call(this.sum, this, [json$$3, {type:"nothing"}], JAM.policy.p3);
        JAM.call(viz$$9.refresh, viz$$9, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
      ;
      case "fade:con":
        that = this;
        graph$$9 = JAM.call(viz$$9.construct, viz$$9, [json$$3], JAM.policy.p3);
        var fadeEdges = JAM.call(this.preprocessSum, this, [graph$$9], JAM.policy.p3);
        var v7762;
        if (!fadeEdges) {
          v7762 = ["node-property:alpha"];
        } else {
          v7762 = ["node-property:alpha", "edge-property:alpha"];
        }
        var modes = v7762;
        JAM.call(viz$$9.reposition, viz$$9, [], JAM.policy.p3);
        if (options$$7.type != "fade:con") {
          var v7763 = viz$$9.fx;
          JAM.call(v7763.animate, v7763, [JAM.call($$$1.merge, $$$1, [options$$7, {modes:["linear"], onComplete:v319}], JAM.policy.p3)], JAM.policy.p3);
        } else {
          var v7765 = viz$$9.graph;
          JAM.call(v7765.eachNode, v7765, [v320], JAM.policy.p3);
          var v7766 = viz$$9.fx;
          var v23893 = ["linear"];
          JAM.call(v7766.animate, v7766, [JAM.call($$$1.merge, $$$1, [options$$7, {modes:JAM.call(v23893.concat, v23893, [modes], JAM.policy.p3)}], JAM.policy.p3)], JAM.policy.p3);
        }
        break;
      default:
        JAM.call(this.doError, this, [], JAM.policy.p3);
    }
    return;
  }
  function v315(vertex, opt$$11) {
    function v314() {
      JAM.call(options$$6.onComplete, options$$6, [], JAM.policy.p3);
      return;
    }
    function v313() {
      JAM.call(that$$13.removeEdge, that$$13, [JAM.call(v$$1.shift, v$$1, [], JAM.policy.p3), {type:"nothing"}], JAM.policy.p3);
      var v7772 = viz$$8.labels;
      JAM.call(v7772.clearLabels, v7772, [], JAM.policy.p3);
      return;
    }
    function v312() {
      return v$$1.length != 0;
    }
    function v311() {
      JAM.call(that$$13.removeEdge, that$$13, [v$$1, {type:"nothing"}], JAM.policy.p3);
      var v7775 = options$$6.onComplete;
      if (v7775) {
        JAM.call(options$$6.onComplete, options$$6, [], JAM.policy.p3);
      }
      return;
    }
    function v310() {
      JAM.call(that$$13.removeEdge, that$$13, [v$$1, {type:"nothing"}], JAM.policy.p3);
      JAM.call(viz$$8.reposition, viz$$8, [], JAM.policy.p3);
      var v7777 = viz$$8.fx;
      JAM.call(v7777.animate, v7777, [JAM.call($$$1.merge, $$$1, [options$$6, {modes:["linear"]}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var viz$$8 = this.viz;
    var options$$6 = JAM.call($$$1.merge, $$$1, [this.options, viz$$8.controller, opt$$11], JAM.policy.p3);
    var v7781;
    if (JAM.call($$$1.type, $$$1, [vertex[0]], JAM.policy.p3) == "string") {
      v7781 = [vertex];
    } else {
      v7781 = vertex;
    }
    var v$$1 = v7781;
    var i$$41;
    var that$$13;
    var adj$$7;
    switch(options$$6.type) {
      case "nothing":
        i$$41 = 0;
        var v7785 = i$$41 < v$$1.length;
        for (;v7785;) {
          var v7782 = viz$$8.graph;
          JAM.call(v7782.removeAdjacence, v7782, [v$$1[i$$41][0], v$$1[i$$41][1]], JAM.policy.p3);
          i$$41++;
          v7785 = i$$41 < v$$1.length;
        }
        break;
      case "replot":
        JAM.call(this.removeEdge, this, [v$$1, {type:"nothing"}], JAM.policy.p3);
        JAM.call(viz$$8.refresh, viz$$8, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
        that$$13 = this;
        i$$41 = 0;
        var v7790 = i$$41 < v$$1.length;
        for (;v7790;) {
          var v7787 = viz$$8.graph;
          adj$$7 = JAM.call(v7787.getAdjacence, v7787, [v$$1[i$$41][0], v$$1[i$$41][1]], JAM.policy.p3);
          if (adj$$7) {
            JAM.call(adj$$7.setData, adj$$7, ["alpha", 0, "end"], JAM.policy.p3);
          }
          i$$41++;
          v7790 = i$$41 < v$$1.length;
        }
        var v7791 = viz$$8.fx;
        JAM.call(v7791.animate, v7791, [JAM.call($$$1.merge, $$$1, [options$$6, {modes:["edge-property:alpha"], onComplete:v310}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "fade:con":
        that$$13 = this;
        i$$41 = 0;
        var v7796 = i$$41 < v$$1.length;
        for (;v7796;) {
          var v7793 = viz$$8.graph;
          adj$$7 = JAM.call(v7793.getAdjacence, v7793, [v$$1[i$$41][0], v$$1[i$$41][1]], JAM.policy.p3);
          if (adj$$7) {
            JAM.call(adj$$7.setData, adj$$7, ["alpha", 0, "end"], JAM.policy.p3);
            adj$$7.ignore = true;
          }
          i$$41++;
          v7796 = i$$41 < v$$1.length;
        }
        JAM.call(viz$$8.reposition, viz$$8, [], JAM.policy.p3);
        var v7797 = viz$$8.fx;
        JAM.call(v7797.animate, v7797, [JAM.call($$$1.merge, $$$1, [options$$6, {modes:["edge-property:alpha", "linear"], onComplete:v311}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "iter":
        that$$13 = this;
        var v7799 = viz$$8.fx;
        JAM.call(v7799.sequence, v7799, [{condition:v312, step:v313, onComplete:v314, duration:JAM.call(Math.ceil, Math, [options$$6.duration / v$$1.length], JAM.policy.p3)}], JAM.policy.p3);
        break;
      default:
        JAM.call(this.doError, this, [], JAM.policy.p3);
    }
    return;
  }
  function v309(node$$36, opt$$10) {
    function v308() {
      var v7802 = options$$5.onComplete;
      if (v7802) {
        JAM.call(options$$5.onComplete, options$$5, [], JAM.policy.p3);
      }
      return;
    }
    function v307() {
      JAM.call(that$$12.removeNode, that$$12, [JAM.call(n$$14.shift, n$$14, [], JAM.policy.p3), {type:"nothing"}], JAM.policy.p3);
      var v7805 = viz$$7.labels;
      JAM.call(v7805.clearLabels, v7805, [], JAM.policy.p3);
      return;
    }
    function v306() {
      return n$$14.length != 0;
    }
    function v305() {
      JAM.call(that$$12.removeNode, that$$12, [n$$14, {type:"nothing"}], JAM.policy.p3);
      var v7808 = options$$5.onComplete;
      if (v7808) {
        JAM.call(options$$5.onComplete, options$$5, [], JAM.policy.p3);
      }
      return;
    }
    function v304() {
      JAM.call(that$$12.removeNode, that$$12, [n$$14, {type:"nothing"}], JAM.policy.p3);
      var v7810 = viz$$7.labels;
      JAM.call(v7810.clearLabels, v7810, [], JAM.policy.p3);
      JAM.call(viz$$7.reposition, viz$$7, [], JAM.policy.p3);
      var v7811 = viz$$7.fx;
      JAM.call(v7811.animate, v7811, [JAM.call($$$1.merge, $$$1, [options$$5, {modes:["linear"]}], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var viz$$7 = this.viz;
    var options$$5 = JAM.call($$$1.merge, $$$1, [this.options, viz$$7.controller, opt$$10], JAM.policy.p3);
    var n$$14 = JAM.call($$$1.splat, $$$1, [node$$36], JAM.policy.p3);
    var i$$40;
    var that$$12;
    var nodeObj;
    switch(options$$5.type) {
      case "nothing":
        i$$40 = 0;
        var v7818 = i$$40 < n$$14.length;
        for (;v7818;) {
          var v14147 = viz$$7.graph;
          JAM.call(options$$5.onBeforeRemoveNode, options$$5, [JAM.call(v14147.getNode, v14147, [n$$14[i$$40]], JAM.policy.p3)], JAM.policy.p3);
          var v7816 = viz$$7.graph;
          JAM.call(v7816.removeNode, v7816, [n$$14[i$$40]], JAM.policy.p3);
          i$$40++;
          v7818 = i$$40 < n$$14.length;
        }
        break;
      case "replot":
        JAM.call(this.removeNode, this, [n$$14, {type:"nothing"}], JAM.policy.p3);
        var v7820 = viz$$7.labels;
        JAM.call(v7820.clearLabels, v7820, [], JAM.policy.p3);
        JAM.call(viz$$7.refresh, viz$$7, [true], JAM.policy.p3);
        break;
      case "fade:seq":
      ;
      case "fade":
        that$$12 = this;
        i$$40 = 0;
        var v7823 = i$$40 < n$$14.length;
        for (;v7823;) {
          var v7821 = viz$$7.graph;
          nodeObj = JAM.call(v7821.getNode, v7821, [n$$14[i$$40]], JAM.policy.p3);
          JAM.call(nodeObj.setData, nodeObj, ["alpha", 0, "end"], JAM.policy.p3);
          i$$40++;
          v7823 = i$$40 < n$$14.length;
        }
        var v7824 = viz$$7.fx;
        JAM.call(v7824.animate, v7824, [JAM.call($$$1.merge, $$$1, [options$$5, {modes:["node-property:alpha"], onComplete:v304}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "fade:con":
        that$$12 = this;
        i$$40 = 0;
        var v7828 = i$$40 < n$$14.length;
        for (;v7828;) {
          var v7826 = viz$$7.graph;
          nodeObj = JAM.call(v7826.getNode, v7826, [n$$14[i$$40]], JAM.policy.p3);
          JAM.call(nodeObj.setData, nodeObj, ["alpha", 0, "end"], JAM.policy.p3);
          nodeObj.ignore = true;
          i$$40++;
          v7828 = i$$40 < n$$14.length;
        }
        JAM.call(viz$$7.reposition, viz$$7, [], JAM.policy.p3);
        var v7829 = viz$$7.fx;
        JAM.call(v7829.animate, v7829, [JAM.call($$$1.merge, $$$1, [options$$5, {modes:["node-property:alpha", "linear"], onComplete:v305}], JAM.policy.p3)], JAM.policy.p3);
        break;
      case "iter":
        that$$12 = this;
        var v7831 = viz$$7.fx;
        JAM.call(v7831.sequence, v7831, [{condition:v306, step:v307, onComplete:v308, duration:JAM.call(Math.ceil, Math, [options$$5.duration / n$$14.length], JAM.policy.p3)}], JAM.policy.p3);
        break;
      default:
        JAM.call(this.doError, this, [], JAM.policy.p3);
    }
    return;
  }
  function v303(viz$$6) {
    this.viz = viz$$6;
    return;
  }
  function v302(m$$1) {
    function v301() {
      var v7834 = Graph.Util[m$$1];
      var v7835 = Graph.Util;
      var v14158 = [this];
      var v19008 = Array.prototype.slice;
      return JAM.call(v7834.apply, v7834, [v7835, JAM.call(v14158.concat, v14158, [JAM.call(v19008.call, v19008, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    var v7837 = Graph.Node.prototype;
    introspect(JAM.policy.p2) {
      v7837[m$$1] = v301;
    }
    return;
  }
  function v300(m) {
    function v299() {
      var v7838 = Graph.Util[m];
      var v7839 = Graph.Util;
      var v14162 = [this];
      var v19009 = Array.prototype.slice;
      return JAM.call(v7838.apply, v7838, [v7839, JAM.call(v14162.concat, v14162, [JAM.call(v19009.call, v19009, [arguments], JAM.policy.p3)], JAM.policy.p3)], JAM.policy.p3);
    }
    var v7841 = Graph.prototype;
    introspect(JAM.policy.p2) {
      v7841[m] = v299;
    }
    return;
  }
  function v298(graph$$8, pos$$15, prop$$16, flags$$12) {
    function v297(elem$$22) {
      var v7842;
      var v19010 = node$$35 == null;
      if (!v19010) {
        var v27700 = JAM.call(elem$$22.getPos, elem$$22, [prop$$16], JAM.policy.p3);
        var v23901 = distance(JAM.call(v27700.getc, v27700, [true], JAM.policy.p3), pos$$15);
        var v27701 = JAM.call(node$$35.getPos, node$$35, [prop$$16], JAM.policy.p3);
        v19010 = v23901 < distance(JAM.call(v27701.getc, v27701, [true], JAM.policy.p3), pos$$15);
      }
      if (v19010) {
        v7842 = elem$$22;
      } else {
        v7842 = node$$35;
      }
      node$$35 = v7842;
      return;
    }
    function distance(a$$5, b$$3) {
      var d1 = a$$5.x - b$$3.x;
      var d2 = a$$5.y - b$$3.y;
      return d1 * d1 + d2 * d2;
    }
    var node$$35 = null;
    prop$$16 = prop$$16 || "current";
    var v14165 = pos$$15;
    if (v14165) {
      v14165 = JAM.call(pos$$15.getc, pos$$15, [true], JAM.policy.p3);
    }
    var v7849 = v14165;
    if (!v7849) {
      v7849 = Complex.KER;
    }
    pos$$15 = v7849;
    JAM.call(this.eachNode, this, [graph$$8, v297, flags$$12], JAM.policy.p3);
    return node$$35;
  }
  function v296(graph$$7, prop$$15, flags$$11) {
    return JAM.call(this.getClosestNodeToPos, this, [graph$$7, Polar.KER, prop$$15, flags$$11], JAM.policy.p3);
  }
  function v295(graph$$6) {
    function v294(elem$$21) {
      elem$$21._flag = false;
      return;
    }
    JAM.call(this.eachNode, this, [graph$$6, v294], JAM.policy.p3);
    return;
  }
  function v293(node$$34, id$$19) {
    if (node$$34.id == id$$19) {
      return true;
    }
    var pars = JAM.call(this.getParents, this, [node$$34], JAM.policy.p3);
    var ans$$7 = false;
    var i$$39 = 0;
    var v14168 = !ans$$7;
    if (v14168) {
      v14168 = i$$39 < pars.length;
    }
    var v7853 = v14168;
    for (;v7853;) {
      var v7852 = ans$$7;
      if (!v7852) {
        v7852 = JAM.call(this.isDescendantOf, this, [pars[i$$39], id$$19], JAM.policy.p3);
      }
      ans$$7 = v7852;
      i$$39++;
      var v14171 = !ans$$7;
      if (v14171) {
        v14171 = i$$39 < pars.length;
      }
      v7853 = v14171;
    }
    return ans$$7;
  }
  function v292(node$$33) {
    function v291(adj$$6) {
      var n$$13 = adj$$6.nodeTo;
      if (n$$13._depth < node$$33._depth) {
        JAM.call(ans$$6.push, ans$$6, [n$$13], JAM.policy.p3);
      }
      return;
    }
    var ans$$6 = [];
    JAM.call(this.eachAdjacency, this, [node$$33, v291], JAM.policy.p3);
    return ans$$6;
  }
  function v290(node$$32, level$$8, flags$$10) {
    function v289(n$$12) {
      JAM.call(ans$$5.push, ans$$5, [n$$12], JAM.policy.p3);
      return;
    }
    var ans$$5 = [];
    var that$$11 = this;
    level$$8 = level$$8 || 0;
    var levelStart;
    var levelEnd$$2;
    if (JAM.call($$$1.type, $$$1, [level$$8], JAM.policy.p3) == "array") {
      levelStart = level$$8[0];
      levelEnd$$2 = level$$8[1];
    } else {
      levelStart = level$$8;
      levelEnd$$2 = Number.MAX_VALUE - node$$32._depth;
    }
    JAM.call(this.eachLevel, this, [node$$32, levelStart, levelEnd$$2, v289, flags$$10], JAM.policy.p3);
    return ans$$5;
  }
  function v288(node$$31, cond, flags$$9) {
    function v287(elem$$20) {
      if (JAM.call(c$$3, null, [elem$$20], JAM.policy.p3)) {
        flag$$1 = true;
      }
      return;
    }
    function v286(n$$11) {
      return n$$11[cond];
    }
    var flag$$1 = false;
    var v7859 = cond;
    if (!v7859) {
      v7859 = JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3);
    }
    cond = v7859;
    var v7860;
    if (JAM.call($$$1.type, $$$1, [cond], JAM.policy.p3) == "string") {
      v7860 = v286;
    } else {
      v7860 = cond;
    }
    var c$$3 = v7860;
    JAM.call(this.eachSubnode, this, [node$$31, v287, flags$$9], JAM.policy.p3);
    return flag$$1;
  }
  function v285(node$$30, action$$9, flags$$8) {
    JAM.call(this.eachLevel, this, [node$$30, 1, 1, action$$9, flags$$8], JAM.policy.p3);
    return;
  }
  function v284(node$$29, action$$8, flags$$7) {
    JAM.call(this.eachLevel, this, [node$$29, 0, false, action$$8, flags$$7], JAM.policy.p3);
    return;
  }
  function v283(node$$27, levelBegin, levelEnd, action$$7, flags$$6) {
    function loopLevel(node$$28, levelBegin$$1, levelEnd$$1) {
      function v282(adj$$5) {
        var n$$10 = adj$$5.nodeTo;
        if (n$$10._depth > d$$2) {
          loopLevel(n$$10, levelBegin$$1, levelEnd$$1);
        }
        return;
      }
      if (!shouldContinue) {
        return;
      }
      var d$$2 = node$$28._depth;
      var ret;
      var v19014 = d$$2 >= levelBegin$$1;
      if (v19014) {
        v19014 = d$$2 <= levelEnd$$1;
      }
      var v14178 = v19014;
      if (v14178) {
        v14178 = JAM.call(filter$$4, null, [node$$28], JAM.policy.p3);
      }
      if (v14178) {
        ret = JAM.call(action$$7, null, [node$$28, d$$2], JAM.policy.p3);
      }
      if (typeof ret !== "undefined") {
        shouldContinue = ret;
      }
      var v14180 = shouldContinue;
      if (v14180) {
        v14180 = d$$2 < levelEnd$$1;
      }
      if (v14180) {
        JAM.call(that$$10.eachAdjacency, that$$10, [node$$28, v282], JAM.policy.p3);
      }
      return;
    }
    var d$$1 = node$$27._depth;
    var filter$$4 = JAM.call(this.filter, this, [flags$$6], JAM.policy.p3);
    var that$$10 = this;
    var shouldContinue = true;
    var v7866;
    if (levelEnd === false) {
      v7866 = Number.MAX_VALUE - d$$1;
    } else {
      v7866 = levelEnd;
    }
    levelEnd = v7866;
    loopLevel(node$$27, levelBegin + d$$1, levelEnd + d$$1);
    return;
  }
  function v281(graph$$5, id$$18, action$$6, flags$$5) {
    function v280(adj$$4) {
      var n$$9 = adj$$4.nodeTo;
      var v14183 = n$$9._flag == false;
      if (v14183) {
        v14183 = JAM.call(filter$$3, null, [n$$9], JAM.policy.p3);
      }
      if (v14183) {
        n$$9._flag = true;
        JAM.call(queue$$1.unshift, queue$$1, [n$$9], JAM.policy.p3);
      }
      return;
    }
    var filter$$3 = JAM.call(this.filter, this, [flags$$5], JAM.policy.p3);
    JAM.call(this.clean, this, [graph$$5], JAM.policy.p3);
    var queue$$1 = [JAM.call(graph$$5.getNode, graph$$5, [id$$18], JAM.policy.p3)];
    var v7873 = queue$$1.length != 0;
    for (;v7873;) {
      var node$$26 = JAM.call(queue$$1.pop, queue$$1, [], JAM.policy.p3);
      if (!node$$26) {
        return;
      }
      node$$26._flag = true;
      JAM.call(action$$6, null, [node$$26, node$$26._depth], JAM.policy.p3);
      JAM.call(this.eachAdjacency, this, [node$$26, v280, flags$$5], JAM.policy.p3);
      v7873 = queue$$1.length != 0;
    }
    return;
  }
  function v279(graph$$4, id$$17, startDepth, flags$$4) {
    function v278(adj$$3) {
      var n$$8 = adj$$3.nodeTo;
      var v14186 = n$$8._flag == false;
      if (v14186) {
        v14186 = JAM.call(filter$$2, null, [n$$8], JAM.policy.p3);
      }
      if (v14186) {
        if (n$$8._depth < 0) {
          n$$8._depth = node$$25._depth + 1 + startDepth;
        }
        JAM.call(queue.unshift, queue, [n$$8], JAM.policy.p3);
      }
      return;
    }
    function v277(elem$$19) {
      elem$$19._flag = false;
      elem$$19._depth = -1;
      return;
    }
    startDepth = startDepth || 0;
    var filter$$2 = JAM.call(this.filter, this, [flags$$4], JAM.policy.p3);
    JAM.call(this.eachNode, this, [graph$$4, v277, flags$$4], JAM.policy.p3);
    var root$$1 = JAM.call(graph$$4.getNode, graph$$4, [id$$17], JAM.policy.p3);
    root$$1._depth = startDepth;
    var queue = [root$$1];
    var v7877 = queue.length != 0;
    for (;v7877;) {
      var node$$25 = JAM.call(queue.pop, queue, [], JAM.policy.p3);
      node$$25._flag = true;
      JAM.call(this.eachAdjacency, this, [node$$25, v278, flags$$4], JAM.policy.p3);
      v7877 = queue.length != 0;
    }
    return;
  }
  function v276(node$$24, action$$5, flags$$3) {
    var adj$$2 = node$$24.adjacencies;
    var filter$$1 = JAM.call(this.filter, this, [flags$$3], JAM.policy.p3);
    var id$$16;
    for (id$$16 in adj$$2) {
      var a$$4 = adj$$2[id$$16];
      if (JAM.call(filter$$1, null, [a$$4], JAM.policy.p3)) {
        if (a$$4.nodeFrom != node$$24) {
          var tmp = a$$4.nodeFrom;
          a$$4.nodeFrom = a$$4.nodeTo;
          a$$4.nodeTo = tmp;
        }
        JAM.call(action$$5, null, [a$$4, id$$16], JAM.policy.p3);
      }
    }
    return;
  }
  function v275(graph$$3, action$$4, flags$$2) {
    JAM.call(this.eachNode, this, [graph$$3, action$$4, flags$$2], JAM.policy.p3);
    return;
  }
  function v274(graph$$2, action$$3, flags$$1) {
    var filter = JAM.call(this.filter, this, [flags$$1], JAM.policy.p3);
    var i$$38;
    for (i$$38 in graph$$2.nodes) {
      if (JAM.call(filter, null, [graph$$2.nodes[i$$38]], JAM.policy.p3)) {
        JAM.call(action$$3, null, [graph$$2.nodes[i$$38]], JAM.policy.p3);
      }
    }
    return;
  }
  function v273(graph$$1, id$$15) {
    return graph$$1.nodes[id$$15];
  }
  function v272(param$$3) {
    function v271(elem$$18) {
      var i$$37 = 0;
      var v7885 = i$$37 < props$$3.length;
      for (;v7885;) {
        if (elem$$18[props$$3[i$$37]]) {
          return false;
        }
        i$$37++;
        v7885 = i$$37 < props$$3.length;
      }
      return true;
    }
    function v270() {
      return true;
    }
    var v14197 = !param$$3;
    if (!v14197) {
      v14197 = !(JAM.call($$$1.type, $$$1, [param$$3], JAM.policy.p3) == "string");
    }
    if (v14197) {
      return v270;
    }
    var props$$3 = JAM.call(param$$3.split, param$$3, [" "], JAM.policy.p3);
    return v271;
  }
  function v269(nodeFrom, nodeTo, data$$21, Edge$$2, Label$$2) {
    this.nodeFrom = nodeFrom;
    this.nodeTo = nodeTo;
    this.data = data$$21 || {};
    this.startData = {};
    this.endData = {};
    this.Config = this.Edge = Edge$$2;
    this.Label = Label$$2;
    return;
  }
  function v268(value$$38, type$$47) {
    type$$47 = type$$47 || "current";
    var pos$$14;
    if (type$$47 == "current") {
      pos$$14 = this.pos;
    } else {
      if (type$$47 == "end") {
        pos$$14 = this.endPos;
      } else {
        if (type$$47 == "start") {
          pos$$14 = this.startPos;
        }
      }
    }
    JAM.call(pos$$14.set, pos$$14, [value$$38], JAM.policy.p3);
    return;
  }
  function v267(type$$46) {
    type$$46 = type$$46 || "current";
    if (type$$46 == "current") {
      return this.pos;
    } else {
      if (type$$46 == "end") {
        return this.endPos;
      } else {
        if (type$$46 == "start") {
          return this.startPos;
        }
      }
    }
    return;
  }
  function v266(id$$14) {
    return this.adjacencies[id$$14];
  }
  function v265(node$$23) {
    return node$$23.id in this.adjacencies;
  }
  function v264(opt$$9, klass$$5, Node$$2, Edge$$1, Label$$1) {
    var innerOptions$$1 = {"id":"", "name":"", "data":{}, "startData":{}, "endData":{}, "adjacencies":{}, "selected":false, "drawn":false, "exist":false, "angleSpan":{"begin":0, "end":0}, "pos":new klass$$5, "startPos":new klass$$5, "endPos":new klass$$5};
    JAM.call($$$1.extend, $$$1, [this, JAM.call($$$1.extend, $$$1, [innerOptions$$1, opt$$9], JAM.policy.p3)], JAM.policy.p3);
    this.Config = this.Node = Node$$2;
    this.Edge = Edge$$1;
    this.Label = Label$$1;
    return;
  }
  function v263() {
    function v262() {
      var v14198 = Array.prototype.slice;
      JAM.call(removeDataInternal.call, removeDataInternal, [this, "label", JAM.call(v14198.call, v14198, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v261(types$$2, obj$$29) {
      types$$2 = JAM.call($$$1.splat, $$$1, [types$$2], JAM.policy.p3);
      var attr$$2;
      for (attr$$2 in obj$$29) {
        var i$$36 = 0;
        var val$$4 = JAM.call($$$1.splat, $$$1, [obj$$29[attr$$2]], JAM.policy.p3);
        var l$$14 = types$$2.length;
        var v7905 = i$$36 < l$$14;
        for (;v7905;) {
          JAM.call(this.setLabelData, this, [attr$$2, val$$4[i$$36], types$$2[i$$36]], JAM.policy.p3);
          i$$36++;
          v7905 = i$$36 < l$$14;
        }
      }
      return;
    }
    function v260(prop$$14, value$$37, type$$45) {
      JAM.call(setDataInternal.call, setDataInternal, [this, "label", prop$$14, value$$37, type$$45], JAM.policy.p3);
      return;
    }
    function v259(prop$$13, type$$44, force$$4) {
      return JAM.call(getDataInternal.call, getDataInternal, [this, "label", prop$$13, type$$44, force$$4, this.Label], JAM.policy.p3);
    }
    function v258() {
      var v14199 = Array.prototype.slice;
      JAM.call(removeDataInternal.call, removeDataInternal, [this, "canvas", JAM.call(v14199.call, v14199, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v257(types$$1, obj$$28) {
      types$$1 = JAM.call($$$1.splat, $$$1, [types$$1], JAM.policy.p3);
      var attr$$1;
      for (attr$$1 in obj$$28) {
        var i$$35 = 0;
        var val$$3 = JAM.call($$$1.splat, $$$1, [obj$$28[attr$$1]], JAM.policy.p3);
        var l$$13 = types$$1.length;
        var v7911 = i$$35 < l$$13;
        for (;v7911;) {
          JAM.call(this.setCanvasStyle, this, [attr$$1, val$$3[i$$35], types$$1[i$$35]], JAM.policy.p3);
          i$$35++;
          v7911 = i$$35 < l$$13;
        }
      }
      return;
    }
    function v256(prop$$12, value$$36, type$$43) {
      JAM.call(setDataInternal.call, setDataInternal, [this, "canvas", prop$$12, value$$36, type$$43], JAM.policy.p3);
      return;
    }
    function v255(prop$$11, type$$42, force$$3) {
      return JAM.call(getDataInternal.call, getDataInternal, [this, "canvas", prop$$11, type$$42, force$$3, this.Config.CanvasStyles], JAM.policy.p3);
    }
    function v254() {
      var v14201 = Array.prototype.slice;
      JAM.call(removeDataInternal.call, removeDataInternal, [this, "", JAM.call(v14201.call, v14201, [arguments], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v253(types, obj$$27) {
      types = JAM.call($$$1.splat, $$$1, [types], JAM.policy.p3);
      var attr;
      for (attr in obj$$27) {
        var i$$34 = 0;
        var val$$2 = JAM.call($$$1.splat, $$$1, [obj$$27[attr]], JAM.policy.p3);
        var l$$12 = types.length;
        var v7917 = i$$34 < l$$12;
        for (;v7917;) {
          JAM.call(this.setData, this, [attr, val$$2[i$$34], types[i$$34]], JAM.policy.p3);
          i$$34++;
          v7917 = i$$34 < l$$12;
        }
      }
      return;
    }
    function v252(prop$$10, value$$35, type$$41) {
      JAM.call(setDataInternal.call, setDataInternal, [this, "", prop$$10, value$$35, type$$41], JAM.policy.p3);
      return;
    }
    function v251(prop$$9, type$$40, force$$2) {
      return JAM.call(getDataInternal.call, getDataInternal, [this, "", prop$$9, type$$40, force$$2, this.Config], JAM.policy.p3);
    }
    function removeDataInternal(prefix$$4, properties$$3) {
      function v250(prop$$8) {
        var pref = prefix$$4 + prop$$8;
        delete that$$9.data[pref];
        delete that$$9.endData[pref];
        delete that$$9.startData[pref];
        return;
      }
      var v14202;
      if (prefix$$4) {
        v14202 = prefix$$4 + "-";
      } else {
        v14202 = "";
      }
      prefix$$4 = "$" + v14202;
      var that$$9 = this;
      JAM.call($$$1.each, $$$1, [properties$$3, v250], JAM.policy.p3);
      return;
    }
    function setDataInternal(prefix$$3, prop$$7, value$$34, type$$39) {
      type$$39 = type$$39 || "current";
      var v14203;
      if (prefix$$3) {
        v14203 = prefix$$3 + "-";
      } else {
        v14203 = "";
      }
      prefix$$3 = "$" + v14203;
      var data$$20;
      if (type$$39 == "current") {
        data$$20 = this.data;
      } else {
        if (type$$39 == "start") {
          data$$20 = this.startData;
        } else {
          if (type$$39 == "end") {
            data$$20 = this.endData;
          }
        }
      }
      var v7927 = prefix$$3 + prop$$7;
      introspect(JAM.policy.p2) {
        data$$20[v7927] = value$$34;
      }
      return;
    }
    function getDataInternal(prefix$$2, prop$$6, type$$38, force$$1, prefixConfig) {
      var data$$19;
      type$$38 = type$$38 || "current";
      var v14204;
      if (prefix$$2) {
        v14204 = prefix$$2 + "-";
      } else {
        v14204 = "";
      }
      prefix$$2 = "$" + v14204;
      if (type$$38 == "current") {
        data$$19 = this.data;
      } else {
        if (type$$38 == "start") {
          data$$19 = this.startData;
        } else {
          if (type$$38 == "end") {
            data$$19 = this.endData;
          }
        }
      }
      var dollar = prefix$$2 + prop$$6;
      if (force$$1) {
        return data$$19[dollar];
      }
      if (!this.Config.overridable) {
        var v7932 = prefixConfig[prop$$6];
        if (!v7932) {
          v7932 = 0;
        }
        return v7932;
      }
      var v7934;
      if (dollar in data$$19) {
        v7934 = data$$19[dollar];
      } else {
        var v14207;
        if (dollar in this.data) {
          v14207 = this.data[dollar];
        } else {
          var v19025 = prefixConfig[prop$$6];
          if (!v19025) {
            v19025 = 0;
          }
          v14207 = v19025;
        }
        v7934 = v14207;
      }
      return v7934;
    }
    Accessors = {getData:v251, setData:v252, setDataset:v253, removeData:v254, getCanvasStyle:v255, setCanvasStyle:v256, setCanvasStyles:v257, removeCanvasStyle:v258, getLabelData:v259, setLabelData:v260, setLabelDataset:v261, removeLabelData:v262};
    return;
  }
  function v249() {
    this.nodes = {};
    this.edges = {};
    return;
  }
  function v248(id$$13) {
    return id$$13 in this.nodes;
  }
  function v247(id1, id2$$1) {
    delete this.edges[id1][id2$$1];
    delete this.edges[id2$$1][id1];
    return;
  }
  function v246(id$$12) {
    if (JAM.call(this.hasNode, this, [id$$12], JAM.policy.p3)) {
      delete this.nodes[id$$12];
      var adjs = this.edges[id$$12];
      var to;
      for (to in adjs) {
        delete this.edges[to][id$$12];
      }
      delete this.edges[id$$12];
    }
    return;
  }
  function v245(obj$$26, obj2, data$$18) {
    if (!JAM.call(this.hasNode, this, [obj$$26.id], JAM.policy.p3)) {
      JAM.call(this.addNode, this, [obj$$26], JAM.policy.p3);
    }
    if (!JAM.call(this.hasNode, this, [obj2.id], JAM.policy.p3)) {
      JAM.call(this.addNode, this, [obj2], JAM.policy.p3);
    }
    obj$$26 = this.nodes[obj$$26.id];
    obj2 = this.nodes[obj2.id];
    if (!JAM.call(obj$$26.adjacentTo, obj$$26, [obj2], JAM.policy.p3)) {
      var v7949 = this.edges;
      var v7950 = obj$$26.id;
      var v14215 = this.edges[obj$$26.id];
      if (!v14215) {
        v14215 = {};
      }
      introspect(JAM.policy.p2) {
        var adjsObj = v7949[v7950] = v14215
      }
      var v7951 = this.edges;
      var v7952 = obj2.id;
      var v14216 = this.edges[obj2.id];
      if (!v14216) {
        v14216 = {};
      }
      introspect(JAM.policy.p2) {
        var adjsObj2 = v7951[v7952] = v14216
      }
      var v7953 = obj2.id;
      var v14217 = obj$$26.id;
      var v31185 = JAM.new(Graph.Adjacence, [obj$$26, obj2, data$$18, this.Edge, this.Label]);
      introspect(JAM.policy.p2) {
        adjsObj[v7953] = adjsObj2[v14217] = v31185;
      }
      return adjsObj[obj2.id];
    }
    return this.edges[obj$$26.id][obj2.id];
  }
  function v244(obj$$25) {
    if (!this.nodes[obj$$25.id]) {
      var v7958 = this.edges;
      var v7959 = obj$$25.id;
      introspect(JAM.policy.p2) {
        var edges = v7958[v7959] = {}
      }
      var v7960 = this.nodes;
      var v7961 = obj$$25.id;
      var v14221 = Graph.Node;
      var v23907 = obj$$25.id;
      var v23908 = obj$$25.name;
      var v27702 = obj$$25.data;
      if (!v27702) {
        v27702 = {};
      }
      var v31186 = JAM.new(v14221, [JAM.call($$$1.extend, $$$1, [{"id":v23907, "name":v23908, "data":JAM.call($$$1.merge, $$$1, [v27702, {}], JAM.policy.p3), "adjacencies":edges}, this.opt.Node], JAM.policy.p3), this.opt.klass, this.Node, this.Edge, this.Label]);
      introspect(JAM.policy.p2) {
        v7960[v7961] = v31186;
      }
    }
    return this.nodes[obj$$25.id];
  }
  function v243(id$$11, id2) {
    if (id$$11 in this.edges) {
      return this.edges[id$$11][id2];
    }
    return false;
  }
  function v242(name$$36) {
    var id$$10;
    for (id$$10 in this.nodes) {
      var n$$7 = this.nodes[id$$10];
      if (n$$7.name == name$$36) {
        return n$$7;
      }
    }
    return false;
  }
  function v241(id$$9) {
    return JAM.call(this.getNode, this, [id$$9], JAM.policy.p3);
  }
  function v240(id$$8) {
    if (JAM.call(this.hasNode, this, [id$$8], JAM.policy.p3)) {
      return this.nodes[id$$8];
    }
    return false;
  }
  function v239(opt$$8, Node$$1, Edge, Label) {
    function v238(p$$14) {
      function v237() {
        function v236(n$$6) {
          var v7972 = n$$6[p$$14];
          JAM.call(v7972.apply, v7972, [n$$6, args$$2], JAM.policy.p3);
          return;
        }
        var v7973 = Array.prototype.slice;
        var args$$2 = JAM.call(v7973.call, v7973, [arguments], JAM.policy.p3);
        JAM.call(that$$8.eachNode, that$$8, [v236], JAM.policy.p3);
        return;
      }
      return v237;
    }
    var innerOptions = {"klass":Complex, "Node":{}};
    this.Node = Node$$1;
    this.Edge = Edge;
    this.Label = Label;
    var v31187 = JAM.call($$$1.merge, $$$1, [innerOptions, opt$$8 || {}], JAM.policy.p3);
    this.opt = v31187;
    this.nodes = {};
    this.edges = {};
    var that$$8 = this;
    this.nodeList = {};
    var p$$13;
    for (p$$13 in Accessors) {
      var v7975 = that$$8.nodeList;
      var v7976 = p$$13;
      var v31188 = v238(p$$13);
      introspect(JAM.policy.p2) {
        v7975[v7976] = v31188;
      }
    }
    return;
  }
  function v235() {
    var almostZero$$1 = 1E-4;
    var abs$$1 = Math.abs;
    var v7977 = JAM.call(abs$$1, null, [this.x], JAM.policy.p3) < almostZero$$1;
    if (v7977) {
      v7977 = JAM.call(abs$$1, null, [this.y], JAM.policy.p3) < almostZero$$1;
    }
    return v7977;
  }
  function v234(pos$$13) {
    var x$$63 = this.x;
    var y$$44 = this.y;
    var sq = JAM.call(pos$$13.squaredNorm, pos$$13, [], JAM.policy.p3);
    this.x = x$$63 * pos$$13.x + y$$44 * pos$$13.y;
    this.y = y$$44 * pos$$13.x - x$$63 * pos$$13.y;
    return JAM.call(this.$scale, this, [1 / sq], JAM.policy.p3);
  }
  function v233(factor$$2) {
    this.x = this.x * factor$$2;
    this.y = this.y * factor$$2;
    return this;
  }
  function v232() {
    this.y = -this.y;
    return this;
  }
  function v231(pos$$12) {
    var x$$62 = this.x;
    var y$$43 = this.y;
    this.x = x$$62 * pos$$12.x - y$$43 * pos$$12.y;
    this.y = y$$43 * pos$$12.x + x$$62 * pos$$12.y;
    return this;
  }
  function v230(pos$$11) {
    this.x = this.x + pos$$11.x;
    this.y = this.y + pos$$11.y;
    return this;
  }
  function v229(c$$2) {
    var v7988 = this.x == c$$2.x;
    if (v7988) {
      v7988 = this.y == c$$2.y;
    }
    return v7988;
  }
  function v228(factor$$1) {
    return new Complex(this.x * factor$$1, this.y * factor$$1);
  }
  function v227() {
    return new Complex(this.x, -this.y);
  }
  function v226(pos$$10) {
    return new Complex(this.x * pos$$10.x - this.y * pos$$10.y, this.y * pos$$10.x + this.x * pos$$10.y);
  }
  function v225(pos$$9) {
    return new Complex(this.x + pos$$9.x, this.y + pos$$9.y);
  }
  function v224() {
    return this.x * this.x + this.y * this.y;
  }
  function v223() {
    return JAM.call(Math.sqrt, Math, [JAM.call(this.squaredNorm, this, [], JAM.policy.p3)], JAM.policy.p3);
  }
  function v222(simple$$3) {
    var rho$$4 = JAM.call(this.norm, this, [], JAM.policy.p3);
    var atan = JAM.call(Math.atan2, Math, [this.y, this.x], JAM.policy.p3);
    if (atan < 0) {
      atan = atan + Math.PI * 2;
    }
    if (simple$$3) {
      return {"theta":atan, "rho":rho$$4};
    }
    return new Polar(atan, rho$$4);
  }
  function v221() {
    return new Complex(this.x, this.y);
  }
  function v220(theta$$2, rho$$3) {
    this.x = JAM.call(Math.cos, Math, [theta$$2], JAM.policy.p3) * rho$$3;
    this.y = JAM.call(Math.sin, Math, [theta$$2], JAM.policy.p3) * rho$$3;
    return;
  }
  function v219(x$$61, y$$42) {
    this.x = x$$61;
    this.y = y$$42;
    return;
  }
  function v218(c$$1) {
    c$$1 = JAM.call(c$$1.getc, c$$1, [true], JAM.policy.p3);
    this.x = c$$1.x;
    this.y = c$$1.y;
    return;
  }
  function v217(simple$$2) {
    return JAM.call(this.toPolar, this, [simple$$2], JAM.policy.p3);
  }
  function v216() {
    return this;
  }
  function v215(elem$$17, delta$$3) {
    function ch$$5(t$$1) {
      var v8007;
      if (t$$1 < 0) {
        v8007 = t$$1 % pi2 + pi2;
      } else {
        v8007 = t$$1 % pi2;
      }
      var a$$1 = v8007;
      return a$$1;
    }
    var pi = Math.PI;
    var pi2 = pi * 2;
    var tt = this.theta;
    var et = elem$$17.theta;
    var sum;
    var diff = JAM.call(Math.abs, Math, [tt - et], JAM.policy.p3);
    if (diff == pi) {
      if (tt > et) {
        sum = ch$$5(et + (tt - pi2 - et) * delta$$3);
      } else {
        sum = ch$$5(et - pi2 + (tt - et) * delta$$3);
      }
    } else {
      if (diff >= pi) {
        if (tt > et) {
          sum = ch$$5(et + (tt - pi2 - et) * delta$$3);
        } else {
          sum = ch$$5(et - pi2 + (tt - (et - pi2)) * delta$$3);
        }
      } else {
        sum = ch$$5(et + (tt - et) * delta$$3);
      }
    }
    var r = (this.rho - elem$$17.rho) * delta$$3 + elem$$17.rho;
    return {"theta":sum, "rho":r};
  }
  function v214() {
    var almostZero = 1E-4;
    var abs = Math.abs;
    var v8020 = JAM.call(abs, null, [this.theta], JAM.policy.p3) < almostZero;
    if (v8020) {
      v8020 = JAM.call(abs, null, [this.rho], JAM.policy.p3) < almostZero;
    }
    return v8020;
  }
  function v213(number$$1) {
    this.rho = this.rho * number$$1;
    return this;
  }
  function v212(polar$$2) {
    this.theta = (this.theta + polar$$2.theta) % (Math.PI * 2);
    this.rho = this.rho + polar$$2.rho;
    return this;
  }
  function v211(polar$$1) {
    this.theta = this.theta + polar$$1.theta;
    this.rho = this.rho + polar$$1.rho;
    return this;
  }
  function v210(c) {
    var v8025 = this.theta == c.theta;
    if (v8025) {
      v8025 = this.rho == c.rho;
    }
    return v8025;
  }
  function v209(number) {
    return new Polar(this.theta, this.rho * number);
  }
  function v208(polar) {
    return new Polar(this.theta + polar.theta, this.rho + polar.rho);
  }
  function v207(simple$$1) {
    var x$$59 = JAM.call(Math.cos, Math, [this.theta], JAM.policy.p3) * this.rho;
    var y$$40 = JAM.call(Math.sin, Math, [this.theta], JAM.policy.p3) * this.rho;
    if (simple$$1) {
      return {"x":x$$59, "y":y$$40};
    }
    return new Complex(x$$59, y$$40);
  }
  function v206() {
    return new Polar(this.theta, this.rho);
  }
  function v205(theta$$1, rho$$2) {
    this.theta = theta$$1;
    this.rho = rho$$2;
    return;
  }
  function v204(x$$58, y$$39) {
    var v31189 = JAM.call(Math.sqrt, Math, [x$$58 * x$$58 + y$$39 * y$$39], JAM.policy.p3);
    this.rho = v31189;
    var v31190 = JAM.call(Math.atan2, Math, [y$$39, x$$58], JAM.policy.p3);
    this.theta = v31190;
    if (this.theta < 0) {
      this.theta = this.theta + Math.PI * 2;
    }
    return;
  }
  function v203(v) {
    v = JAM.call(v.getp, v, [], JAM.policy.p3);
    this.theta = v.theta;
    this.rho = v.rho;
    return;
  }
  function v202() {
    return this;
  }
  function v201(simple) {
    return JAM.call(this.toComplex, this, [simple], JAM.policy.p3);
  }
  function v200() {
    function v199(base$$3) {
      var canvas$$7 = base$$3.canvas;
      var ctx$$2 = JAM.call(base$$3.getCtx, base$$3, [], JAM.policy.p3);
      var conf = this.config;
      var styles$$1 = conf.CanvasStyles;
      var s$$6;
      for (s$$6 in styles$$1) {
        introspect(JAM.policy.p2) {
          ctx$$2[s$$6] = styles$$1[s$$6];
        }
      }
      var n$$5 = conf.numberOfCircles;
      var rho = conf.levelDistance;
      var i$$33 = 1;
      var v8040 = i$$33 <= n$$5;
      for (;v8040;) {
        JAM.call(ctx$$2.beginPath, ctx$$2, [], JAM.policy.p3);
        JAM.call(ctx$$2.arc, ctx$$2, [0, 0, rho * i$$33, 0, 2 * Math.PI, false], JAM.policy.p3);
        JAM.call(ctx$$2.stroke, ctx$$2, [], JAM.policy.p3);
        JAM.call(ctx$$2.closePath, ctx$$2, [], JAM.policy.p3);
        i$$33++;
        v8040 = i$$33 <= n$$5;
      }
      return;
    }
    function v198(width$$15, height$$14, base$$2) {
      JAM.call(this.plot, this, [base$$2], JAM.policy.p3);
      return;
    }
    function v197(viz$$5, options$$4) {
      this.viz = viz$$5;
      var v31191 = JAM.call($$$1.merge, $$$1, [{idSuffix:"-bkcanvas", levelDistance:100, numberOfCircles:6, CanvasStyles:{}, offset:0}, options$$4], JAM.policy.p3);
      this.config = v31191;
      return;
    }
    function v196() {
      JAM.call(this.clear, this, [], JAM.policy.p3);
      var v8042 = this.viz;
      JAM.call(v8042.plot, v8042, [this], JAM.policy.p3);
      return;
    }
    function v195() {
      var size$$6 = JAM.call(this.getSize, this, [], JAM.policy.p3);
      var ox$$3 = this.translateOffsetX;
      var oy$$4 = this.translateOffsetY;
      var sx$$5 = this.scaleOffsetX;
      var sy$$5 = this.scaleOffsetY;
      var x$$57 = (0 - ox$$3) * 1 / sx$$5;
      var y$$38 = (0 - oy$$4) * 1 / sy$$5;
      var v8045 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      JAM.call(v8045.clearRect, v8045, [x$$57, y$$38, size$$6.width * 1 / sx$$5 + JAM.call(Math.abs, Math, [x$$57], JAM.policy.p3), size$$6.height * 1 / sy$$5 + JAM.call(Math.abs, Math, [y$$38], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v194(x$$56, y$$37, disablePlot$$4) {
      this.scaleOffsetX = this.scaleOffsetX * x$$56;
      this.scaleOffsetY = this.scaleOffsetY * y$$37;
      var v8048 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      JAM.call(v8048.scale, v8048, [x$$56, y$$37], JAM.policy.p3);
      var v8049 = !disablePlot$$4;
      if (v8049) {
        JAM.call(this.plot, this, [], JAM.policy.p3);
      }
      return;
    }
    function v193(x$$55, y$$36, disablePlot$$3) {
      var sx$$4 = this.scaleOffsetX;
      var sy$$4 = this.scaleOffsetY;
      this.translateOffsetX = this.translateOffsetX + x$$55 * sx$$4;
      this.translateOffsetY = this.translateOffsetY + y$$36 * sy$$4;
      var v8050 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      JAM.call(v8050.translate, v8050, [x$$55, y$$36], JAM.policy.p3);
      var v8051 = !disablePlot$$3;
      if (v8051) {
        JAM.call(this.plot, this, [], JAM.policy.p3);
      }
      return;
    }
    function v192(width$$14, height$$13) {
      var size$$5 = JAM.call(this.getSize, this, [], JAM.policy.p3);
      var canvas$$6 = this.canvas;
      var styles = canvas$$6.style;
      this.size = false;
      canvas$$6.width = width$$14;
      canvas$$6.height = height$$13;
      styles.width = width$$14 + "px";
      styles.height = height$$13 + "px";
      if (!supportsCanvas) {
        JAM.call(this.translateToCenter, this, [size$$5], JAM.policy.p3);
      } else {
        JAM.call(this.translateToCenter, this, [], JAM.policy.p3);
      }
      this.translateOffsetX = this.translateOffsetY = 0;
      this.scaleOffsetX = this.scaleOffsetY = 1;
      JAM.call(this.clear, this, [], JAM.policy.p3);
      var v8053 = this.viz;
      JAM.call(v8053.resize, v8053, [width$$14, height$$13, this], JAM.policy.p3);
      return;
    }
    function v191(ps) {
      var size$$4 = JAM.call(this.getSize, this, [], JAM.policy.p3);
      var v8054;
      if (ps) {
        v8054 = size$$4.width - ps.width - this.translateOffsetX * 2;
      } else {
        v8054 = size$$4.width;
      }
      var width$$13 = v8054;
      var v8055;
      if (ps) {
        v8055 = size$$4.height - ps.height - this.translateOffsetY * 2;
      } else {
        v8055 = size$$4.height;
      }
      height = v8055;
      var ctx$$1 = JAM.call(this.getCtx, this, [], JAM.policy.p3);
      if (ps) {
        JAM.call(ctx$$1.scale, ctx$$1, [1 / this.scaleOffsetX, 1 / this.scaleOffsetY], JAM.policy.p3);
      }
      return;
    }
    function v190() {
      if (this.size) {
        return this.size;
      }
      var canvas$$5 = this.canvas;
      return this.size = {width:canvas$$5.width, height:canvas$$5.height};
    }
    function v189() {
      if (!this.ctx) {
        var v8059 = this.canvas;
        var v31192 = JAM.call(v8059.getContext, v8059, ["2d"], JAM.policy.p3);
        return this.ctx = v31192;
      }
      return this.ctx;
    }
    function v188() {
      var opt$$7 = this.opt;
      var width$$12 = opt$$7.width;
      var height$$12 = opt$$7.height;
      var v31193 = $E$$1("canvas", {"id":opt$$7.injectInto + opt$$7.idSuffix, "width":width$$12, "height":height$$12, "style":{"position":"absolute", "top":0, "left":0, "width":width$$12 + "px", "height":height$$12 + "px"}});
      this.canvas = v31193;
      return;
    }
    function v187(viz$$4) {
      this.viz = viz$$4;
      this.opt = viz$$4.config;
      this.size = false;
      JAM.call(this.createCanvas, this, [], JAM.policy.p3);
      JAM.call(this.translateToCenter, this, [], JAM.policy.p3);
      return;
    }
    function v186(type$$37, idLabel$$1, dim) {
      var NS = "http://www.w3.org/2000/svg";
      var v14325 = type$$37 == "HTML";
      if (!v14325) {
        v14325 = type$$37 == "Native";
      }
      if (v14325) {
        return $E$$1("div", {"id":idLabel$$1, "style":{"overflow":"visible", "position":"absolute", "top":0, "left":0, "width":dim.width + "px", "height":0}});
      } else {
        if (type$$37 == "SVG") {
          var svgContainer = JAM.call(document.createElementNS, document, [NS, "svg:svg"], JAM.policy.p3);
          JAM.call(svgContainer.setAttribute, svgContainer, ["width", dim.width], JAM.policy.p3);
          JAM.call(svgContainer.setAttribute, svgContainer, ["height", dim.height], JAM.policy.p3);
          var style$$4 = svgContainer.style;
          style$$4.position = "absolute";
          style$$4.left = style$$4.top = "0px";
          var labelContainer$$1 = JAM.call(document.createElementNS, document, [NS, "svg:g"], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["width", dim.width], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["height", dim.height], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["x", 0], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["y", 0], JAM.policy.p3);
          JAM.call(labelContainer$$1.setAttribute, labelContainer$$1, ["id", idLabel$$1], JAM.policy.p3);
          JAM.call(svgContainer.appendChild, svgContainer, [labelContainer$$1], JAM.policy.p3);
          return svgContainer;
        }
      }
      return;
    }
    function v185(type$$36, action$$2) {
      var v8069 = this.canvases[0];
      var ctx = JAM.call(v8069.getCtx, v8069, [], JAM.policy.p3);
      JAM.call(ctx.beginPath, ctx, [], JAM.policy.p3);
      JAM.call(action$$2, null, [ctx], JAM.policy.p3);
      JAM.call(ctx[type$$36], ctx, [], JAM.policy.p3);
      JAM.call(ctx.closePath, ctx, [], JAM.policy.p3);
      return;
    }
    function v184(i$$32) {
      var v8070 = this.canvases[i$$32 || 0];
      JAM.call(v8070.clear, v8070, [], JAM.policy.p3);
      return;
    }
    function v183(force) {
      var v14330 = force;
      if (!v14330) {
        v14330 = !this.pos;
      }
      if (v14330) {
        var v31194 = JAM.call($$$1.getPos, $$$1, [this.element], JAM.policy.p3);
        return this.pos = v31194;
      }
      return this.pos;
    }
    function v182(x$$54, y$$35, disablePlot$$2) {
      var cur = JAM.call(this.getZoom, this, [], JAM.policy.p3);
      var px$$1 = x$$54 / cur.x;
      var py$$1 = y$$35 / cur.y;
      JAM.call(this.scale, this, [px$$1, py$$1, disablePlot$$2], JAM.policy.p3);
      return;
    }
    function v181() {
      return new Complex(this.scaleOffsetX, this.scaleOffsetY);
    }
    function v180(x$$53, y$$34, disablePlot$$1) {
      var px = this.scaleOffsetX * x$$53;
      var py = this.scaleOffsetY * y$$34;
      var dx$$4 = this.translateOffsetX * (x$$53 - 1) / px;
      var dy$$4 = this.translateOffsetY * (y$$34 - 1) / py;
      this.scaleOffsetX = px;
      this.scaleOffsetY = py;
      var i$$31 = 0;
      var l$$11 = this.canvases.length;
      var v8083 = i$$31 < l$$11;
      for (;v8083;) {
        var v8082 = this.canvases[i$$31];
        JAM.call(v8082.scale, v8082, [x$$53, y$$34, true], JAM.policy.p3);
        i$$31++;
        v8083 = i$$31 < l$$11;
      }
      JAM.call(this.translate, this, [dx$$4, dy$$4, false], JAM.policy.p3);
      return;
    }
    function v179(x$$52, y$$33, disablePlot) {
      this.translateOffsetX = this.translateOffsetX + x$$52 * this.scaleOffsetX;
      this.translateOffsetY = this.translateOffsetY + y$$33 * this.scaleOffsetY;
      var i$$30 = 0;
      var l$$10 = this.canvases.length;
      var v8086 = i$$30 < l$$10;
      for (;v8086;) {
        var v8085 = this.canvases[i$$30];
        JAM.call(v8085.translate, v8085, [x$$52, y$$33, disablePlot], JAM.policy.p3);
        i$$30++;
        v8086 = i$$30 < l$$10;
      }
      return;
    }
    function v178(width$$11, height$$11) {
      JAM.call(this.getPos, this, [true], JAM.policy.p3);
      this.translateOffsetX = this.translateOffsetY = 0;
      this.scaleOffsetX = this.scaleOffsetY = 1;
      var i$$29 = 0;
      var l$$9 = this.canvases.length;
      var v8089 = i$$29 < l$$9;
      for (;v8089;) {
        var v8088 = this.canvases[i$$29];
        JAM.call(v8088.resize, v8088, [width$$11, height$$11], JAM.policy.p3);
        i$$29++;
        v8089 = i$$29 < l$$9;
      }
      var style$$3 = this.element.style;
      style$$3.width = width$$11 + "px";
      style$$3.height = height$$11 + "px";
      if (this.labelContainer) {
        this.labelContainer.style.width = width$$11 + "px";
      }
      return;
    }
    function v177(i$$28) {
      var v8093 = this.canvases[i$$28 || 0];
      return JAM.call(v8093.getSize, v8093, [], JAM.policy.p3);
    }
    function v176() {
      return this.element;
    }
    function v175() {
      return this.opt;
    }
    function v174(i$$27) {
      var v8094 = this.canvases[i$$27 || 0];
      return JAM.call(v8094.getCtx, v8094, [], JAM.policy.p3);
    }
    function v173(viz$$3, opt$$6) {
      function v172() {
        function v171() {
          JAM.call(that$$7.getPos, that$$7, [true], JAM.policy.p3);
          return;
        }
        clearTimeout(timer);
        timer = JAM.call(setTimeout, null, [v171, 500]);
        return;
      }
      function v170() {
        JAM.call(viz$$3.refresh, viz$$3, [], JAM.policy.p3);
        return;
      }
      function v169(base$$1) {
        var v8095 = viz$$3.fx;
        JAM.call(v8095.plot, v8095, [], JAM.policy.p3);
        return;
      }
      this.viz = viz$$3;
      this.opt = this.config = opt$$6;
      var v8096;
      if (JAM.call($$$1.type, $$$1, [opt$$6.injectInto], JAM.policy.p3) == "string") {
        v8096 = opt$$6.injectInto;
      } else {
        v8096 = opt$$6.injectInto.id;
      }
      var id$$7 = v8096;
      var type$$35 = opt$$6.type;
      var idLabel = id$$7 + "-label";
      var wrapper = $$$1(id$$7);
      var v8097 = opt$$6.width;
      if (!v8097) {
        v8097 = wrapper.offsetWidth;
      }
      var width$$10 = v8097;
      var v8098 = opt$$6.height;
      if (!v8098) {
        v8098 = wrapper.offsetHeight;
      }
      var height$$10 = v8098;
      this.id = id$$7;
      var canvasOptions = {injectInto:id$$7, width:width$$10, height:height$$10};
      var v31195 = $E$$1("div", {"id":id$$7 + "-canvaswidget", "style":{"position":"relative", "width":width$$10 + "px", "height":height$$10 + "px"}});
      this.element = v31195;
      var v31196 = JAM.call(this.createLabelContainer, this, [opt$$6.Label.type, idLabel, canvasOptions], JAM.policy.p3);
      this.labelContainer = v31196;
      var v8101 = this.canvases;
      JAM.call(v8101.push, v8101, [JAM.new(Canvas.Base[type$$35], [{config:JAM.call($$$1.extend, $$$1, [{idSuffix:"-canvas"}, canvasOptions], JAM.policy.p3), plot:v169, resize:v170}])], JAM.policy.p3);
      var back = opt$$6.background;
      if (back) {
        var backCanvas = JAM.new(Canvas.Background[back.type], [viz$$3, JAM.call($$$1.extend, $$$1, [back, canvasOptions], JAM.policy.p3)]);
        var v8105 = this.canvases;
        JAM.call(v8105.push, v8105, [JAM.new(Canvas.Base[type$$35], [backCanvas])], JAM.policy.p3);
      }
      var len$$1 = this.canvases.length;
      var v8112 = len$$1;
      len$$1 = len$$1 - 1;
      for (;v8112;) {
        var v8108 = this.element;
        JAM.call(v8108.appendChild, v8108, [this.canvases[len$$1].canvas], JAM.policy.p3);
        if (len$$1 > 0) {
          var v8110 = this.canvases[len$$1];
          JAM.call(v8110.plot, v8110, [], JAM.policy.p3);
        }
        v8112 = len$$1;
        len$$1 = len$$1 - 1;
      }
      var v8113 = this.element;
      JAM.call(v8113.appendChild, v8113, [this.labelContainer], JAM.policy.p3);
      JAM.call(wrapper.appendChild, wrapper, [this.element], JAM.policy.p3);
      var timer = null;
      var that$$7 = this;
      JAM.call($$$1.addEvent, $$$1, [window, "scroll", v172], JAM.policy.p3);
      return;
    }
    function $E$$1(tag$$1, props$$2) {
      var elem$$16 = JAM.call(document.createElement, document, [tag$$1], JAM.policy.p3);
      var p$$12;
      for (p$$12 in props$$2) {
        if (typeof props$$2[p$$12] == "object") {
          JAM.call($$$1.extend, $$$1, [elem$$16[p$$12], props$$2[p$$12]], JAM.policy.p3);
        } else {
          introspect(JAM.policy.p2) {
            elem$$16[p$$12] = props$$2[p$$12];
          }
        }
      }
      var v19092 = tag$$1 == "canvas";
      if (v19092) {
        v19092 = !supportsCanvas;
      }
      var v14362 = v19092;
      if (v14362) {
        v14362 = G_vmlCanvasManager;
      }
      if (v14362) {
        var v14363 = document.body;
        elem$$16 = JAM.call(G_vmlCanvasManager.initElement, G_vmlCanvasManager, [JAM.call(v14363.appendChild, v14363, [elem$$16], JAM.policy.p3)], JAM.policy.p3);
      }
      return elem$$16;
    }
    var canvasType = typeof HTMLCanvasElement;
    var v8121 = canvasType == "object";
    if (!v8121) {
      v8121 = canvasType == "function";
    }
    var supportsCanvas = v8121;
    $jit.Canvas = Canvas = new Class({canvases:[], pos:false, element:false, labelContainer:false, translateOffsetX:0, translateOffsetY:0, scaleOffsetX:1, scaleOffsetY:1, initialize:v173, getCtx:v174, getConfig:v175, getElement:v176, getSize:v177, resize:v178, translate:v179, scale:v180, getZoom:v181, setZoom:v182, getPos:v183, clear:v184, path:v185, createLabelContainer:v186});
    Canvas.Base = {};
    var v8123 = Canvas.Base;
    var v31197 = new Class({translateOffsetX:0, translateOffsetY:0, scaleOffsetX:1, scaleOffsetY:1, initialize:v187, createCanvas:v188, getCtx:v189, getSize:v190, translateToCenter:v191, resize:v192, translate:v193, scale:v194, clear:v195, plot:v196});
    v8123["2D"] = v31197;
    Canvas.Background = {};
    var v8124 = Canvas.Background;
    var v31198 = new Class({initialize:v197, resize:v198, plot:v199});
    v8124.Circles = v31198;
    return;
  }
  function v168(e$$45, win$$33, eventInfo$$4, isRightClick$$3) {
    if (!this.config.panning) {
      return;
    }
    this.pressed = false;
    return;
  }
  function v167(e$$44, win$$32, eventInfo$$3) {
    if (!this.config.panning) {
      return;
    }
    if (!this.pressed) {
      return;
    }
    var v14371 = this.config.panning == "avoid nodes";
    if (v14371) {
      var v19096;
      if (this.dom) {
        v19096 = JAM.call(this.isLabel, this, [e$$44, win$$32], JAM.policy.p3);
      } else {
        v19096 = JAM.call(eventInfo$$3.getNode, eventInfo$$3, [], JAM.policy.p3);
      }
      v14371 = v19096;
    }
    if (v14371) {
      return;
    }
    var thispos = this.pos;
    var currentPos = JAM.call(eventInfo$$3.getPos, eventInfo$$3, [], JAM.policy.p3);
    var canvas$$4 = this.canvas;
    var ox$$2 = canvas$$4.translateOffsetX;
    var oy$$3 = canvas$$4.translateOffsetY;
    var sx$$3 = canvas$$4.scaleOffsetX;
    var sy$$3 = canvas$$4.scaleOffsetY;
    currentPos.x = currentPos.x * sx$$3;
    currentPos.y = currentPos.y * sy$$3;
    currentPos.x = currentPos.x + ox$$2;
    currentPos.y = currentPos.y + oy$$3;
    var x$$51 = currentPos.x - thispos.x;
    var y$$32 = currentPos.y - thispos.y;
    this.pos = currentPos;
    var v8133 = this.canvas;
    JAM.call(v8133.translate, v8133, [x$$51 * 1 / sx$$3, y$$32 * 1 / sy$$3], JAM.policy.p3);
    return;
  }
  function v166(e$$43, win$$31, eventInfo$$2) {
    if (!this.config.panning) {
      return;
    }
    var v14379 = this.config.panning == "avoid nodes";
    if (v14379) {
      var v19099;
      if (this.dom) {
        v19099 = JAM.call(this.isLabel, this, [e$$43, win$$31], JAM.policy.p3);
      } else {
        v19099 = JAM.call(eventInfo$$2.getNode, eventInfo$$2, [], JAM.policy.p3);
      }
      v14379 = v19099;
    }
    if (v14379) {
      return;
    }
    this.pressed = true;
    var v31199 = JAM.call(eventInfo$$2.getPos, eventInfo$$2, [], JAM.policy.p3);
    this.pos = v31199;
    var canvas$$3 = this.canvas;
    var ox$$1 = canvas$$3.translateOffsetX;
    var oy$$2 = canvas$$3.translateOffsetY;
    var sx$$2 = canvas$$3.scaleOffsetX;
    var sy$$2 = canvas$$3.scaleOffsetY;
    var v8138 = this.pos;
    v8138.x = v8138.x * sx$$2;
    var v8139 = this.pos;
    v8139.x = v8139.x + ox$$1;
    var v8140 = this.pos;
    v8140.y = v8140.y * sy$$2;
    var v8141 = this.pos;
    v8141.y = v8141.y + oy$$2;
    return;
  }
  function v165(e$$42, win$$30, scroll$$2) {
    if (!this.config.zooming) {
      return;
    }
    var v8143 = $$$1.event;
    var v14381 = $$$1.event;
    JAM.call(v8143.stop, v8143, [JAM.call(v14381.get, v14381, [e$$42, win$$30], JAM.policy.p3)], JAM.policy.p3);
    var val$$1 = this.config.zooming / 1E3;
    var ans$$4 = 1 + scroll$$2 * val$$1;
    var v8147 = this.canvas;
    JAM.call(v8147.scale, v8147, [ans$$4, ans$$4], JAM.policy.p3);
    return;
  }
  function v164() {
    this.pos = false;
    this.pressed = false;
    return;
  }
  function v163(e$$41, win$$29, event$$15) {
    function v162(n$$4) {
      var v14383 = n$$4.hovered;
      if (v14383) {
        v14383 = !n$$4.selected;
      }
      if (v14383) {
        var s$$5;
        for (s$$5 in nStyles$$3) {
          JAM.call(n$$4.setData, n$$4, [s$$5, n$$4.styles["$" + s$$5], "end"], JAM.policy.p3);
        }
        delete n$$4.hovered;
      }
      return;
    }
    if (this.down) {
      this.move = true;
    }
    var v14386 = this.dom;
    if (v14386) {
      v14386 = JAM.call(this.isLabel, this, [e$$41, win$$29], JAM.policy.p3);
    }
    if (v14386) {
      return;
    }
    var nStyles$$3 = this.nodeStylesOnHover;
    if (!nStyles$$3) {
      return;
    }
    if (!this.dom) {
      if (this.hoveredNode) {
        var v8153 = this.types;
        var v14388 = this.hoveredNode;
        var geom$$3 = v8153[JAM.call(v14388.getData, v14388, ["type"], JAM.policy.p3)];
        var v14389 = geom$$3;
        if (v14389) {
          v14389 = geom$$3.contains;
        }
        var v8155 = v14389;
        if (v8155) {
          var v14390 = geom$$3.contains;
          v8155 = JAM.call(v14390.call, v14390, [this.fx, this.hoveredNode, JAM.call(event$$15.getPos, event$$15, [], JAM.policy.p3)], JAM.policy.p3);
        }
        var contains$$3 = v8155;
        if (contains$$3) {
          return;
        }
      }
      var node$$22 = JAM.call(event$$15.getNode, event$$15, [], JAM.policy.p3);
      var v14394 = !this.hoveredNode;
      if (v14394) {
        v14394 = !node$$22;
      }
      if (v14394) {
        return;
      }
      if (node$$22.hovered) {
        return;
      }
      var v14395 = node$$22;
      if (v14395) {
        v14395 = !node$$22.selected;
      }
      if (v14395) {
        var v8159 = this.fx.nodeFxAnimation;
        JAM.call(v8159.stopTimer, v8159, [], JAM.policy.p3);
        var v8160 = this.viz.graph;
        JAM.call(v8160.eachNode, v8160, [v162], JAM.policy.p3);
        node$$22.hovered = true;
        this.hoveredNode = node$$22;
        JAM.call(this.toggleStylesOnHover, this, [node$$22, true], JAM.policy.p3);
      } else {
        var v14398 = this.hoveredNode;
        if (v14398) {
          v14398 = !this.hoveredNode.selected;
        }
        if (v14398) {
          var v8161 = this.fx.nodeFxAnimation;
          JAM.call(v8161.stopTimer, v8161, [], JAM.policy.p3);
          JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, false], JAM.policy.p3);
          delete this.hoveredNode.hovered;
          this.hoveredNode = false;
        }
      }
    }
    return;
  }
  function v161(node$$21) {
    function v160(n$$3) {
      if (n$$3.selected) {
        var s$$4;
        for (s$$4 in nStyles$$2) {
          JAM.call(n$$3.setData, n$$3, [s$$4, n$$3.styles["$" + s$$4], "end"], JAM.policy.p3);
        }
        delete n$$3.selected;
      }
      return;
    }
    if (!node$$21) {
      return;
    }
    var nStyles$$2 = this.nodeStylesOnClick;
    if (!nStyles$$2) {
      return;
    }
    if (node$$21.selected) {
      JAM.call(this.toggleStylesOnClick, this, [node$$21, false], JAM.policy.p3);
      delete node$$21.selected;
    } else {
      var v8171 = this.viz.graph;
      JAM.call(v8171.eachNode, v8171, [v160], JAM.policy.p3);
      JAM.call(this.toggleStylesOnClick, this, [node$$21, true], JAM.policy.p3);
      node$$21.selected = true;
      delete node$$21.hovered;
      this.hoveredNode = false;
    }
    return;
  }
  function v159(type$$34, node$$20, set$$2) {
    var viz$$2 = this.viz;
    var nStyles$$1 = this.nStyles;
    if (set$$2) {
      var that$$6 = this;
      if (!node$$20.styles) {
        var v31200 = JAM.call($$$1.merge, $$$1, [node$$20.data, {}], JAM.policy.p3);
        node$$20.styles = v31200;
      }
      var s$$3;
      for (s$$3 in this["nodeStylesOn" + type$$34]) {
        var $s = "$" + s$$3;
        if (!($s in node$$20.styles)) {
          var v8175 = node$$20.styles;
          var v31201 = JAM.call(node$$20.getData, node$$20, [s$$3], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            v8175[$s] = v31201;
          }
        }
      }
      var v8178 = viz$$2.fx;
      JAM.call(v8178.nodeFx, v8178, [JAM.call($$$1.extend, $$$1, [{"elements":{"id":node$$20.id, "properties":that$$6["nodeStylesOn" + type$$34]}, transition:Trans.Quart.easeOut, duration:300, fps:40}, this.config], JAM.policy.p3)], JAM.policy.p3);
    } else {
      var restoredStyles$$1 = JAM.call(this.getRestoredStyles, this, [node$$20, type$$34], JAM.policy.p3);
      var v8180 = viz$$2.fx;
      JAM.call(v8180.nodeFx, v8180, [JAM.call($$$1.extend, $$$1, [{"elements":{"id":node$$20.id, "properties":restoredStyles$$1}, transition:Trans.Quart.easeOut, duration:300, fps:40}, this.config], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v158(node$$19, set$$1) {
    if (this.nodeStylesOnClick) {
      JAM.call(this.toggleStylesOn, this, ["Click", node$$19, set$$1], JAM.policy.p3);
    }
    return;
  }
  function v157(node$$18, set) {
    if (this.nodeStylesOnHover) {
      JAM.call(this.toggleStylesOn, this, ["Hover", node$$18, set], JAM.policy.p3);
    }
    return;
  }
  function v156(node$$17, type$$33) {
    var restoredStyles = {};
    var nStyles = this["nodeStylesOn" + type$$33];
    var prop$$5;
    for (prop$$5 in nStyles) {
      var v8185 = node$$17.styles;
      var v8186 = "$" + prop$$5;
      introspect(JAM.policy.p2) {
        restoredStyles[prop$$5] = v8185[v8186];
      }
    }
    return restoredStyles;
  }
  function v155(e$$40, win$$28, event$$14, isRightClick$$2) {
    if (isRightClick$$2) {
      return;
    }
    if (!this.move) {
      JAM.call(this.onClick, this, [JAM.call(event$$14.getNode, event$$14, [], JAM.policy.p3)], JAM.policy.p3);
    }
    this.down = this.move = false;
    return;
  }
  function v154(e$$39, win$$27, event$$13, isRightClick$$1) {
    if (isRightClick$$1) {
      return;
    }
    var label$$9;
    var v14411 = this.dom;
    if (v14411) {
      v14411 = label$$9 = JAM.call(this.isLabel, this, [e$$39, win$$27], JAM.policy.p3);
    }
    if (v14411) {
      var v8189 = this.viz.graph;
      var v31202 = JAM.call(v8189.getNode, v8189, [label$$9.id], JAM.policy.p3);
      this.down = v31202;
    } else {
      if (!this.dom) {
        var v31203 = JAM.call(event$$13.getNode, event$$13, [], JAM.policy.p3);
        this.down = v31203;
      }
    }
    this.move = false;
    return;
  }
  function v153(e$$38, win$$26) {
    var label$$8;
    var v14414 = this.dom;
    if (v14414) {
      v14414 = label$$8 = JAM.call(this.isLabel, this, [e$$38, win$$26, true], JAM.policy.p3);
    }
    if (v14414) {
      var v8193 = this.viz.graph;
      var node$$16 = JAM.call(v8193.getNode, v8193, [label$$8.id], JAM.policy.p3);
      if (node$$16.selected) {
        return;
      }
      this.hoveredNode = node$$16;
      JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, true], JAM.policy.p3);
    }
    return;
  }
  function v152(e$$37, win$$25) {
    this.down = this.move = false;
    if (!this.hoveredNode) {
      return;
    }
    var v14417 = this.dom;
    if (v14417) {
      v14417 = JAM.call(this.isLabel, this, [e$$37, win$$25, true], JAM.policy.p3);
    }
    if (v14417) {
      JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, false], JAM.policy.p3);
    }
    var rt$$2 = e$$37.relatedTarget;
    var canvasWidget$$2 = this.canvas.element;
    var v14418 = rt$$2;
    if (v14418) {
      v14418 = rt$$2.parentNode;
    }
    var v8203 = v14418;
    for (;v8203;) {
      if (canvasWidget$$2 == rt$$2.parentNode) {
        return;
      }
      rt$$2 = rt$$2.parentNode;
      var v14420 = rt$$2;
      if (v14420) {
        v14420 = rt$$2.parentNode;
      }
      v8203 = v14420;
    }
    JAM.call(this.toggleStylesOnHover, this, [this.hoveredNode, false], JAM.policy.p3);
    this.hoveredNode = false;
    return;
  }
  function v151() {
    this.fx = this.viz.fx;
    this.types = this.viz.fx.nodeTypes;
    this.nStyles = this.config;
    this.nodeStylesOnHover = this.nStyles.stylesHover;
    this.nodeStylesOnClick = this.nStyles.stylesClick;
    this.hoveredNode = false;
    var v8209 = this.fx;
    var v31204 = new Animation;
    v8209.nodeFxAnimation = v31204;
    this.down = false;
    this.move = false;
    return;
  }
  function v150(triggerCallback) {
    this.tip.style.display = "none";
    if (triggerCallback) {
      var v14423 = this.config;
      JAM.call(v14423.onHide, v14423, [], JAM.policy.p3);
    }
    return;
  }
  function v149(pos$$8) {
    var tip$$1 = this.tip;
    var style$$2 = tip$$1.style;
    var cont = this.config;
    style$$2.display = "";
    var v19114 = document.compatMode === "CSS1Compat";
    if (v19114) {
      v19114 = document.documentElement;
    }
    var v14424 = v19114;
    if (!v14424) {
      v14424 = document.body;
    }
    var v8211 = v14424;
    if (!v8211) {
      v8211 = document.documentElement;
    }
    var elem$$15 = v8211;
    var JSCompiler_object_inline_width_82 = elem$$15.clientWidth;
    var JSCompiler_object_inline_height_83 = elem$$15.clientHeight;
    var v19116 = window.pageXOffset;
    if (!v19116) {
      var v23930 = document.documentElement;
      if (v23930) {
        v23930 = document.documentElement.scrollLeft;
      }
      v19116 = v23930;
    }
    var v14426 = v19116;
    if (!v14426) {
      var v19117 = document.body;
      if (v19117) {
        v19117 = document.body.scrollLeft;
      }
      v14426 = v19117;
    }
    var v8212 = v14426;
    if (!v8212) {
      v8212 = 0;
    }
    var JSCompiler_object_inline_x_84 = v8212;
    var v19119 = window.pageYOffset;
    if (!v19119) {
      var v23933 = document.documentElement;
      if (v23933) {
        v23933 = document.documentElement.scrollTop;
      }
      v19119 = v23933;
    }
    var v14428 = v19119;
    if (!v14428) {
      var v19120 = document.body;
      if (v19120) {
        v19120 = document.body.scrollTop;
      }
      v14428 = v19120;
    }
    var v8213 = v14428;
    if (!v8213) {
      v8213 = 0;
    }
    var JSCompiler_object_inline_y_85 = v8213;
    var JSCompiler_object_inline_width_86 = tip$$1.offsetWidth;
    var JSCompiler_object_inline_height_87 = tip$$1.offsetHeight;
    var x$$50 = cont.offsetX;
    var y$$31 = cont.offsetY;
    var v14430;
    if (pos$$8.y + JSCompiler_object_inline_height_87 + y$$31 > JSCompiler_object_inline_height_83 + JSCompiler_object_inline_y_85) {
      v14430 = pos$$8.y - JSCompiler_object_inline_height_87 - y$$31;
    } else {
      v14430 = pos$$8.y + y$$31;
    }
    style$$2.top = v14430 + "px";
    var v14431;
    if (pos$$8.x + JSCompiler_object_inline_width_86 + x$$50 > JSCompiler_object_inline_width_82 + JSCompiler_object_inline_x_84) {
      v14431 = pos$$8.x - JSCompiler_object_inline_width_86 - x$$50;
    } else {
      v14431 = pos$$8.x + x$$50;
    }
    style$$2.left = v14431 + "px";
    return;
  }
  function v148(e$$36, win$$24, opt$$5) {
    var v14432 = this.dom;
    if (v14432) {
      v14432 = JAM.call(this.isLabel, this, [e$$36, win$$24], JAM.policy.p3);
    }
    if (v14432) {
      var v14433 = $$$1.event;
      JAM.call(this.setTooltipPosition, this, [JAM.call(v14433.getPos, v14433, [e$$36, win$$24], JAM.policy.p3)], JAM.policy.p3);
    }
    if (!this.dom) {
      var node$$15 = JAM.call(opt$$5.getNode, opt$$5, [], JAM.policy.p3);
      if (!node$$15) {
        JAM.call(this.hide, this, [true], JAM.policy.p3);
        return;
      }
      var v19128 = this.config.force;
      if (!v19128) {
        v19128 = !this.node;
      }
      var v14435 = v19128;
      if (!v14435) {
        v14435 = this.node.id != node$$15.id;
      }
      if (v14435) {
        this.node = node$$15;
        var v8219 = this.config;
        JAM.call(v8219.onShow, v8219, [this.tip, node$$15, JAM.call(opt$$5.getContains, opt$$5, [], JAM.policy.p3)], JAM.policy.p3);
      }
      var v14436 = $$$1.event;
      JAM.call(this.setTooltipPosition, this, [JAM.call(v14436.getPos, v14436, [e$$36, win$$24], JAM.policy.p3)], JAM.policy.p3);
    }
    return;
  }
  function v147(e$$35, win$$23) {
    var label$$7;
    var v14437 = this.dom;
    if (v14437) {
      v14437 = label$$7 = JAM.call(this.isLabel, this, [e$$35, win$$23, false], JAM.policy.p3);
    }
    if (v14437) {
      var v8225 = this.viz.graph;
      var v31205 = JAM.call(v8225.getNode, v8225, [label$$7.id], JAM.policy.p3);
      this.node = v31205;
      var v8227 = this.config;
      JAM.call(v8227.onShow, v8227, [this.tip, this.node, label$$7], JAM.policy.p3);
    }
    return;
  }
  function v146(e$$34, win$$22) {
    var v8231 = $$$1.event;
    var evt$$16 = JAM.call(v8231.get, v8231, [e$$34, win$$22], JAM.policy.p3);
    var v14439 = this.dom;
    if (v14439) {
      v14439 = JAM.call(this.isLabel, this, [e$$34, win$$22, true], JAM.policy.p3);
    }
    if (v14439) {
      JAM.call(this.hide, this, [true], JAM.policy.p3);
      return;
    }
    var rt$$1 = e$$34.relatedTarget;
    var canvasWidget$$1 = this.canvas.element;
    var v14440 = rt$$1;
    if (v14440) {
      v14440 = rt$$1.parentNode;
    }
    var v8235 = v14440;
    for (;v8235;) {
      if (canvasWidget$$1 == rt$$1.parentNode) {
        return;
      }
      rt$$1 = rt$$1.parentNode;
      var v14442 = rt$$1;
      if (v14442) {
        v14442 = rt$$1.parentNode;
      }
      v8235 = v14442;
    }
    JAM.call(this.hide, this, [false], JAM.policy.p3);
    return;
  }
  function v145() {
    if (document.body) {
      var v8236 = $$$1("_tooltip");
      if (!v8236) {
        v8236 = JAM.call(document.createElement, document, ["div"], JAM.policy.p3);
      }
      var tip = v8236;
      tip.id = "_tooltip";
      tip.className = "tip";
      JAM.call($$$1.extend, $$$1, [tip.style, {position:"absolute", display:"none", zIndex:13E3}], JAM.policy.p3);
      var v8239 = document.body;
      JAM.call(v8239.appendChild, v8239, [tip], JAM.policy.p3);
      this.tip = tip;
      this.node = false;
    }
    return;
  }
  function v144(e$$33, win$$21, event$$12) {
    var v8241 = $$$1.event;
    var evt$$15 = JAM.call(v8241.get, v8241, [e$$33, win$$21], JAM.policy.p3);
    if (this.touched) {
      if (this.touchMoved) {
        var v8242 = this.config;
        JAM.call(v8242.onTouchEnd, v8242, [this.touched, event$$12, evt$$15], JAM.policy.p3);
      } else {
        var v8244 = this.config;
        JAM.call(v8244.onTouchCancel, v8244, [this.touched, event$$12, evt$$15], JAM.policy.p3);
      }
      this.touched = this.touchMoved = false;
    }
    return;
  }
  function v143(e$$32, win$$20, event$$11) {
    var v8248 = $$$1.event;
    var evt$$14 = JAM.call(v8248.get, v8248, [e$$32, win$$20], JAM.policy.p3);
    if (this.touched) {
      this.touchMoved = true;
      var v8249 = this.config;
      JAM.call(v8249.onTouchMove, v8249, [this.touched, event$$11, evt$$14], JAM.policy.p3);
    }
    return;
  }
  function v142(e$$31, win$$19, event$$10) {
    var v8252 = $$$1.event;
    var evt$$13 = JAM.call(v8252.get, v8252, [e$$31, win$$19], JAM.policy.p3);
    var label$$6;
    var v14444 = this.dom;
    if (v14444) {
      v14444 = label$$6 = JAM.call(this.isLabel, this, [e$$31, win$$19], JAM.policy.p3);
    }
    if (v14444) {
      var v8253 = this.viz.graph;
      var v31206 = JAM.call(v8253.getNode, v8253, [label$$6.id], JAM.policy.p3);
      this.touched = v31206;
    } else {
      var v8255 = JAM.call(event$$10.getNode, event$$10, [], JAM.policy.p3);
      if (!v8255) {
        var v14446 = this.config.enableForEdges;
        if (v14446) {
          v14446 = JAM.call(event$$10.getEdge, event$$10, [], JAM.policy.p3);
        }
        v8255 = v14446;
      }
      this.touched = v8255;
    }
    var v8257 = this.touched;
    if (v8257) {
      var v14448 = this.config;
      JAM.call(v14448.onTouchStart, v14448, [this.touched, event$$10, evt$$13], JAM.policy.p3);
    }
    return;
  }
  function v141(e$$30, win$$18, event$$9) {
    var v8258 = $$$1.event;
    var evt$$12 = JAM.call(v8258.get, v8258, [e$$30, win$$18], JAM.policy.p3);
    var label$$5;
    if (this.dom) {
      if (label$$5 = JAM.call(this.isLabel, this, [e$$30, win$$18], JAM.policy.p3)) {
        var v8259 = this.viz.graph;
        var v31207 = JAM.call(v8259.getNode, v8259, [label$$5.id], JAM.policy.p3);
        this.pressed = v31207;
      }
    } else {
      var v8262 = JAM.call(event$$9.getNode, event$$9, [], JAM.policy.p3);
      if (!v8262) {
        var v14451 = this.config.enableForEdges;
        if (v14451) {
          v14451 = JAM.call(event$$9.getEdge, event$$9, [], JAM.policy.p3);
        }
        v8262 = v14451;
      }
      this.pressed = v8262;
    }
    var v8264 = this.pressed;
    if (v8264) {
      var v14453 = this.config;
      JAM.call(v14453.onDragStart, v14453, [this.pressed, event$$9, evt$$12], JAM.policy.p3);
    }
    return;
  }
  function v140(e$$29, win$$17, delta$$2) {
    var v8265 = this.config;
    var v14455 = $$$1.event;
    JAM.call(v8265.onMouseWheel, v8265, [delta$$2, JAM.call(v14455.get, v14455, [e$$29, win$$17], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v139(e$$28, win$$16, event$$8) {
    var label$$4;
    var v8267 = $$$1.event;
    var evt$$11 = JAM.call(v8267.get, v8267, [e$$28, win$$16], JAM.policy.p3);
    if (this.pressed) {
      this.moved = true;
      var v8268 = this.config;
      JAM.call(v8268.onDragMove, v8268, [this.pressed, event$$8, evt$$11], JAM.policy.p3);
      return;
    }
    if (this.dom) {
      var v8271 = this.config;
      JAM.call(v8271.onMouseMove, v8271, [this.hovered, event$$8, evt$$11], JAM.policy.p3);
    } else {
      if (this.hovered) {
        var hn = this.hovered;
        var v8273;
        if (hn.nodeFrom) {
          v8273 = this.etypes[JAM.call(hn.getData, hn, ["type"], JAM.policy.p3)];
        } else {
          v8273 = this.ntypes[JAM.call(hn.getData, hn, ["type"], JAM.policy.p3)];
        }
        var geom$$2 = v8273;
        var v14461 = geom$$2;
        if (v14461) {
          v14461 = geom$$2.contains;
        }
        var v8274 = v14461;
        if (v8274) {
          var v14462 = geom$$2.contains;
          v8274 = JAM.call(v14462.call, v14462, [this.fx, hn, JAM.call(event$$8.getPos, event$$8, [], JAM.policy.p3)], JAM.policy.p3);
        }
        var contains$$2 = v8274;
        if (contains$$2) {
          var v8275 = this.config;
          JAM.call(v8275.onMouseMove, v8275, [hn, event$$8, evt$$11], JAM.policy.p3);
          return;
        } else {
          var v8276 = this.config;
          JAM.call(v8276.onMouseLeave, v8276, [hn, event$$8, evt$$11], JAM.policy.p3);
          this.hovered = false;
        }
      }
      var v14465 = JAM.call(event$$8.getNode, event$$8, [], JAM.policy.p3);
      if (!v14465) {
        var v19134 = this.config.enableForEdges;
        if (v19134) {
          v19134 = JAM.call(event$$8.getEdge, event$$8, [], JAM.policy.p3);
        }
        v14465 = v19134;
      }
      if (this.hovered = v14465) {
        var v8278 = this.config;
        JAM.call(v8278.onMouseEnter, v8278, [this.hovered, event$$8, evt$$11], JAM.policy.p3);
      } else {
        var v8280 = this.config;
        JAM.call(v8280.onMouseMove, v8280, [false, event$$8, evt$$11], JAM.policy.p3);
      }
    }
    return;
  }
  function v138(e$$27, win$$15, event$$7) {
    var v8283 = $$$1.event;
    var evt$$10 = JAM.call(v8283.get, v8283, [e$$27, win$$15], JAM.policy.p3);
    var label$$3;
    var v14466 = this.dom;
    if (v14466) {
      v14466 = label$$3 = JAM.call(this.isLabel, this, [e$$27, win$$15, true], JAM.policy.p3);
    }
    if (v14466) {
      var v8284 = this.viz.graph;
      var v31208 = JAM.call(v8284.getNode, v8284, [label$$3.id], JAM.policy.p3);
      this.hovered = v31208;
      var v8286 = this.config;
      JAM.call(v8286.onMouseEnter, v8286, [this.hovered, event$$7, evt$$10], JAM.policy.p3);
    }
    return;
  }
  function v137(e$$26, win$$14, event$$6) {
    var v8289 = $$$1.event;
    var evt$$9 = JAM.call(v8289.get, v8289, [e$$26, win$$14], JAM.policy.p3);
    var label$$2;
    var v14468 = this.dom;
    if (v14468) {
      v14468 = label$$2 = JAM.call(this.isLabel, this, [e$$26, win$$14, true], JAM.policy.p3);
    }
    if (v14468) {
      var v8290 = this.config;
      var v14469 = this.viz.graph;
      JAM.call(v8290.onMouseLeave, v8290, [JAM.call(v14469.getNode, v14469, [label$$2.id], JAM.policy.p3), event$$6, evt$$9], JAM.policy.p3);
      this.hovered = false;
      return;
    }
    var rt = evt$$9.relatedTarget;
    var canvasWidget = this.canvas.element;
    var v14471 = rt;
    if (v14471) {
      v14471 = rt.parentNode;
    }
    var v8295 = v14471;
    for (;v8295;) {
      if (canvasWidget == rt.parentNode) {
        return;
      }
      rt = rt.parentNode;
      var v14473 = rt;
      if (v14473) {
        v14473 = rt.parentNode;
      }
      v8295 = v14473;
    }
    if (this.hovered) {
      var v8296 = this.config;
      JAM.call(v8296.onMouseLeave, v8296, [this.hovered, event$$6, evt$$9], JAM.policy.p3);
      this.hovered = false;
    }
    return;
  }
  function v136(e$$25, win$$13, event$$5, isRightClick) {
    var v8299 = $$$1.event;
    var evt$$8 = JAM.call(v8299.get, v8299, [e$$25, win$$13], JAM.policy.p3);
    if (!this.moved) {
      if (isRightClick) {
        var v8300 = this.config;
        JAM.call(v8300.onRightClick, v8300, [this.hovered, event$$5, evt$$8], JAM.policy.p3);
      } else {
        var v8302 = this.config;
        JAM.call(v8302.onClick, v8302, [this.pressed, event$$5, evt$$8], JAM.policy.p3);
      }
    }
    if (this.pressed) {
      if (this.moved) {
        var v8305 = this.config;
        JAM.call(v8305.onDragEnd, v8305, [this.pressed, event$$5, evt$$8], JAM.policy.p3);
      } else {
        var v8307 = this.config;
        JAM.call(v8307.onDragCancel, v8307, [this.pressed, event$$5, evt$$8], JAM.policy.p3);
      }
      this.pressed = this.moved = false;
    }
    return;
  }
  function v135() {
    this.fx = this.viz.fx;
    this.ntypes = this.viz.fx.nodeTypes;
    this.etypes = this.viz.fx.edgeTypes;
    this.hovered = false;
    this.pressed = false;
    this.touched = false;
    this.touchMoved = false;
    this.moved = false;
    return;
  }
  function v134() {
    function v133(k$$1) {
      var obj$$23 = JAM.new(Extras.Classes[k$$1], [k$$1, that$$5]);
      if (JAM.call(obj$$23.isEnabled, obj$$23, [], JAM.policy.p3)) {
        JAM.call(mem.register, mem, [obj$$23], JAM.policy.p3);
      }
      if (JAM.call(obj$$23.setAsProperty, obj$$23, [], JAM.policy.p3)) {
        var v8316 = JAM.call(k$$1.toLowerCase, k$$1, [], JAM.policy.p3);
        introspect(JAM.policy.p2) {
          that$$5[v8316] = obj$$23;
        }
      }
      return;
    }
    var mem = JAM.new(MouseEventsManager, [this]);
    var that$$5 = this;
    JAM.call($$$1.each, $$$1, [["NodeStyles", "Tips", "Navigation", "Events"], v133], JAM.policy.p3);
    return;
  }
  function v132(e$$23, win$$12) {
    function v131() {
      if (this.getNodeCalled) {
        return this.contains;
      }
      JAM.call(this.getNode, this, [], JAM.policy.p3);
      return this.contains;
    }
    function v130() {
      if (this.getEdgeCalled) {
        return this.edge;
      }
      this.getEdgeCalled = true;
      var hashset = {};
      var id$$6;
      for (id$$6 in graph.edges) {
        var edgeFrom = graph.edges[id$$6];
        introspect(JAM.policy.p2) {
          hashset[id$$6] = true;
        }
        var edgeId;
        for (edgeId in edgeFrom) {
          if (edgeId in hashset) {
            continue;
          }
          var e$$24 = edgeFrom[edgeId];
          var v8323 = e$$24;
          if (v8323) {
            v8323 = etypes[JAM.call(e$$24.getData, e$$24, ["type"], JAM.policy.p3)];
          }
          var geom$$1 = v8323;
          var v14480 = geom$$1;
          if (v14480) {
            v14480 = geom$$1.contains;
          }
          var v8324 = v14480;
          if (v8324) {
            var v14481 = geom$$1.contains;
            v8324 = JAM.call(v14481.call, v14481, [fx, e$$24, JAM.call(this.getPos, this, [], JAM.policy.p3)], JAM.policy.p3);
          }
          var contains$$1 = v8324;
          if (contains$$1) {
            this.contains = contains$$1;
            return that$$4.edge = this.edge = e$$24;
          }
        }
      }
      return that$$4.edge = this.edge = false;
    }
    function v129() {
      if (this.getNodeCalled) {
        return this.node;
      }
      this.getNodeCalled = true;
      var id$$5;
      for (id$$5 in graph.nodes) {
        var n$$2 = graph.nodes[id$$5];
        var v8328 = n$$2;
        if (v8328) {
          v8328 = ntypes[JAM.call(n$$2.getData, n$$2, ["type"], JAM.policy.p3)];
        }
        var geom = v8328;
        var v14485 = geom;
        if (v14485) {
          v14485 = geom.contains;
        }
        var v8329 = v14485;
        if (v8329) {
          var v14486 = geom.contains;
          v8329 = JAM.call(v14486.call, v14486, [fx, n$$2, JAM.call(this.getPos, this, [], JAM.policy.p3)], JAM.policy.p3);
        }
        var contains = v8329;
        if (contains) {
          this.contains = contains;
          return that$$4.node = this.node = n$$2;
        }
      }
      return that$$4.node = this.node = false;
    }
    function v128() {
      var canvas$$2 = that$$4.viz.canvas;
      var s$$2 = JAM.call(canvas$$2.getSize, canvas$$2, [], JAM.policy.p3);
      var p$$11 = JAM.call(canvas$$2.getPos, canvas$$2, [], JAM.policy.p3);
      var ox = canvas$$2.translateOffsetX;
      var oy$$1 = canvas$$2.translateOffsetY;
      var sx$$1 = canvas$$2.scaleOffsetX;
      var sy$$1 = canvas$$2.scaleOffsetY;
      var v8332 = $$$1.event;
      var pos$$7 = JAM.call(v8332.getPos, v8332, [e$$23, win$$12], JAM.policy.p3);
      this.pos = {x:(pos$$7.x - p$$11.x - ox) * 1 / sx$$1, y:(pos$$7.y - p$$11.y - oy$$1) * 1 / sy$$1};
      return this.pos;
    }
    var that$$4 = this;
    var graph = this.viz.graph;
    var fx = this.viz.fx;
    var ntypes = fx.nodeTypes;
    var etypes = fx.edgeTypes;
    return {pos:false, node:false, edge:false, contains:false, getNodeCalled:false, getEdgeCalled:false, getPos:v128, getNode:v129, getEdge:v130, getContains:v131};
  }
  function v127() {
    var v8337 = Array.prototype.slice;
    var args$$1 = JAM.call(v8337.call, v8337, [arguments], JAM.policy.p3);
    var type$$32 = JAM.call(args$$1.shift, args$$1, [], JAM.policy.p3);
    var i$$26 = 0;
    var regs = this.registeredObjects;
    var l$$8 = regs.length;
    var v8340 = i$$26 < l$$8;
    for (;v8340;) {
      var v8338 = regs[i$$26]["on" + type$$32];
      JAM.call(v8338.apply, v8338, [regs[i$$26], args$$1], JAM.policy.p3);
      i$$26++;
      v8340 = i$$26 < l$$8;
    }
    return;
  }
  function v126(obj$$22) {
    var v8341 = this.registeredObjects;
    JAM.call(v8341.push, v8341, [obj$$22], JAM.policy.p3);
    return;
  }
  function v125() {
    function v124(e$$21, win$$10) {
      JAM.call(that$$3.handleEvent, that$$3, ["TouchEnd", e$$21, win$$10, JAM.call(that$$3.makeEventObject, that$$3, [e$$21, win$$10], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v123(e$$20, win$$9) {
      JAM.call(that$$3.handleEvent, that$$3, ["TouchMove", e$$20, win$$9, JAM.call(that$$3.makeEventObject, that$$3, [e$$20, win$$9], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v122(e$$19, win$$8) {
      JAM.call(that$$3.handleEvent, that$$3, ["TouchStart", e$$19, win$$8, JAM.call(that$$3.makeEventObject, that$$3, [e$$19, win$$8], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v121(e$$18, win$$7) {
      JAM.call(that$$3.handleEvent, that$$3, ["MouseOut", e$$18, win$$7, JAM.call(that$$3.makeEventObject, that$$3, [e$$18, win$$7], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v120(e$$17, win$$6) {
      JAM.call(that$$3.handleEvent, that$$3, ["MouseOver", e$$17, win$$6, JAM.call(that$$3.makeEventObject, that$$3, [e$$17, win$$6], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v119(e$$16, win$$5) {
      JAM.call(that$$3.handleEvent, that$$3, ["MouseMove", e$$16, win$$5, JAM.call(that$$3.makeEventObject, that$$3, [e$$16, win$$5], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v118(e$$15, win$$4) {
      var v8348 = $$$1.event;
      var event$$3 = JAM.call(v8348.get, v8348, [e$$15, win$$4], JAM.policy.p3);
      var v8349 = JAM.call(that$$3.makeEventObject, that$$3, [e$$15, win$$4], JAM.policy.p3);
      var v14493 = $$$1.event;
      JAM.call(that$$3.handleEvent, that$$3, ["MouseDown", e$$15, win$$4, v8349, JAM.call(v14493.isRightClick, v14493, [event$$3], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function v117(e$$14, win$$3) {
      var v8351 = $$$1.event;
      var event$$2 = JAM.call(v8351.get, v8351, [e$$14, win$$3], JAM.policy.p3);
      var v8352 = JAM.call(that$$3.makeEventObject, that$$3, [e$$14, win$$3], JAM.policy.p3);
      var v14494 = $$$1.event;
      JAM.call(that$$3.handleEvent, that$$3, ["MouseUp", e$$14, win$$3, v8352, JAM.call(v14494.isRightClick, v14494, [event$$2], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    function handleMouseWheel(e$$22, win$$11) {
      var v8354 = $$$1.event;
      var event$$4 = JAM.call(v8354.get, v8354, [e$$22, win$$11], JAM.policy.p3);
      var v8355 = $$$1.event;
      var wheel = JAM.call(v8355.getWheel, v8355, [event$$4], JAM.policy.p3);
      JAM.call(that$$3.handleEvent, that$$3, ["MouseWheel", e$$22, win$$11, wheel], JAM.policy.p3);
      return;
    }
    var htmlCanvas = this.canvas.element;
    var that$$3 = this;
    var v8357 = htmlCanvas;
    var v31209 = JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3);
    JAM.set(v8357, "oncontextmenu", v31209);
    JAM.call($$$1.addEvents, $$$1, [htmlCanvas, {"mouseup":v117, "mousedown":v118, "mousemove":v119, "mouseover":v120, "mouseout":v121, "touchstart":v122, "touchmove":v123, "touchend":v124}], JAM.policy.p3);
    var v14495 = !document.getBoxObjectFor;
    if (v14495) {
      v14495 = window.mozInnerScreenX == null;
    }
    if (v14495) {
      JAM.call($$$1.addEvent, $$$1, [htmlCanvas, "mousewheel", handleMouseWheel], JAM.policy.p3);
    } else {
      JAM.call(htmlCanvas.addEventListener, htmlCanvas, ["DOMMouseScroll", handleMouseWheel, false], JAM.policy.p3);
    }
    return;
  }
  function v116(viz$$1) {
    this.viz = viz$$1;
    this.canvas = viz$$1.canvas;
    this.node = false;
    this.edge = false;
    this.registeredObjects = [];
    JAM.call(this.attachEvents, this, [], JAM.policy.p3);
    return;
  }
  function v115(elem$$14, par) {
    var v14496 = elem$$14;
    if (v14496) {
      v14496 = elem$$14.parentNode;
    }
    var v8361 = v14496;
    for (;v8361;) {
      if (elem$$14.parentNode == par) {
        return elem$$14;
      }
      elem$$14 = elem$$14.parentNode;
      var v14498 = elem$$14;
      if (v14498) {
        v14498 = elem$$14.parentNode;
      }
      v8361 = v14498;
    }
    return false;
  }
  function v114(e$$13, win$$2, group) {
    var v8362 = $$$1.event;
    e$$13 = JAM.call(v8362.get, v8362, [e$$13, win$$2], JAM.policy.p3);
    var labelContainer = this.labelContainer;
    var v8363 = e$$13.target;
    if (!v8363) {
      v8363 = e$$13.srcElement;
    }
    var target$$26 = v8363;
    var related = e$$13.relatedTarget;
    if (group) {
      var v19141 = related;
      if (v19141) {
        var v27705 = this.viz.canvas;
        v19141 = related == JAM.call(v27705.getCtx, v27705, [], JAM.policy.p3).canvas;
      }
      var v14500 = v19141;
      if (v14500) {
        v14500 = !!target$$26;
      }
      var v8364 = v14500;
      if (v8364) {
        v8364 = JAM.call(this.isDescendantOf, this, [target$$26, labelContainer], JAM.policy.p3);
      }
      return v8364;
    } else {
      return JAM.call(this.isDescendantOf, this, [target$$26, labelContainer], JAM.policy.p3);
    }
    return;
  }
  function v113() {
    return this.config.enable;
  }
  function v112(className, viz) {
    this.viz = viz;
    this.canvas = viz.canvas;
    this.config = viz.config[className];
    this.nodeTypes = viz.fx.nodeTypes;
    var type$$31 = this.config.type;
    var v8369;
    if (type$$31 == "auto") {
      v8369 = viz.config.Label.type != "Native";
    } else {
      v8369 = type$$31 != "Native";
    }
    this.dom = v8369;
    var v8370 = this.dom;
    if (v8370) {
      var v14503 = viz.labels;
      v8370 = JAM.call(v14503.getLabelContainer, v14503, [], JAM.policy.p3);
    }
    this.labelContainer = v8370;
    var v8371 = JAM.call(this.isEnabled, this, [], JAM.policy.p3);
    if (v8371) {
      JAM.call(this.initializePost, this, [], JAM.policy.p3);
    }
    return;
  }
  function v111() {
    if (!this.timer) {
      return true;
    }
    if (this.opt.link == "cancel") {
      JAM.call(this.stopTimer, this, [], JAM.policy.p3);
      return true;
    }
    return false;
  }
  function v110() {
    if (!this.timer) {
      return false;
    }
    this.time = JAM.call($$$1.time, $$$1, [], JAM.policy.p3) - this.time;
    var v31210 = clearInterval(this.timer);
    this.timer = v31210;
    return true;
  }
  function v109() {
    JAM.call(this.startTimer, this, [], JAM.policy.p3);
    return this;
  }
  function v108() {
    JAM.call(this.stopTimer, this, [], JAM.policy.p3);
    return this;
  }
  function v107() {
    function v106() {
      JAM.call(that$$2.step, that$$2, [], JAM.policy.p3);
      return;
    }
    var that$$2 = this;
    var fps = this.opt.fps;
    if (this.timer) {
      return false;
    }
    this.time = JAM.call($$$1.time, $$$1, [], JAM.policy.p3) - this.time;
    var v31211 = JAM.call(setInterval, null, [v106, JAM.call(Math.round, Math, [1E3 / fps], JAM.policy.p3)]);
    this.timer = v31211;
    return true;
  }
  function v105() {
    if (!JAM.call(this.check, this, [], JAM.policy.p3)) {
      return this;
    }
    this.time = 0;
    JAM.call(this.startTimer, this, [], JAM.policy.p3);
    return this;
  }
  function v104() {
    var time = JAM.call($$$1.time, $$$1, [], JAM.policy.p3);
    var opt$$3 = this.opt;
    if (time < this.time + opt$$3.duration) {
      var delta$$1 = JAM.call(opt$$3.transition, opt$$3, [(time - this.time) / opt$$3.duration], JAM.policy.p3);
      JAM.call(opt$$3.compute, opt$$3, [delta$$1], JAM.policy.p3);
    } else {
      var v31212 = clearInterval(this.timer);
      this.timer = v31212;
      JAM.call(opt$$3.compute, opt$$3, [1], JAM.policy.p3);
      JAM.call(opt$$3.complete, opt$$3, [], JAM.policy.p3);
    }
    return;
  }
  function v103(options$$3) {
    var opt$$2 = {duration:2500, fps:40, transition:Trans.Quart.easeInOut, compute:$$$1.empty, complete:$$$1.empty, link:"ignore"};
    var v31213 = JAM.call($$$1.merge, $$$1, [opt$$2, options$$3 || {}], JAM.policy.p3);
    this.opt = v31213;
    return this;
  }
  function v102(options$$2) {
    JAM.call(this.setOptions, this, [options$$2], JAM.policy.p3);
    return;
  }
  function v101() {
    function v100(elem$$13, i$$24) {
      function v99(p$$10) {
        return JAM.call(Math.pow, Math, [p$$10, [i$$24 + 2]], JAM.policy.p3);
      }
      var v31214 = makeTrans(v99);
      introspect(JAM.policy.p2) {
        Trans[elem$$13] = v31214;
      }
      return;
    }
    function v98(val, key$$23) {
      var v31215 = makeTrans(val);
      introspect(JAM.policy.p2) {
        Trans[key$$23] = v31215;
      }
      return;
    }
    function v97(p$$9, x$$49) {
      var v8392 = JAM.call(Math.pow, Math, [2, 10 * (p$$9 = p$$9 - 1)], JAM.policy.p3);
      var v23951 = 20 * p$$9 * Math.PI;
      var v26177 = x$$49[0];
      if (!v26177) {
        v26177 = 1;
      }
      return v8392 * JAM.call(Math.cos, Math, [v23951 * v26177 / 3], JAM.policy.p3);
    }
    function v96(p$$8) {
      var value$$33;
      var a = 0;
      var b = 1;
      for (;1;) {
        if (p$$8 >= (7 - 4 * a) / 11) {
          value$$33 = b * b - JAM.call(Math.pow, Math, [(11 - 6 * a - 11 * p$$8) / 4, 2], JAM.policy.p3);
          break;
        }
        a = a + b;
        b = b / 2;
      }
      return value$$33;
    }
    function v95(p$$7, x$$48) {
      var v8397 = x$$48[0];
      if (!v8397) {
        v8397 = 1.618;
      }
      x$$48 = v8397;
      return JAM.call(Math.pow, Math, [p$$7, 2], JAM.policy.p3) * ((x$$48 + 1) * p$$7 - x$$48);
    }
    function v94(p$$6) {
      return 1 - JAM.call(Math.sin, Math, [(1 - p$$6) * Math.PI / 2], JAM.policy.p3);
    }
    function v93(p$$5) {
      return 1 - JAM.call(Math.sin, Math, [JAM.call(Math.acos, Math, [p$$5], JAM.policy.p3)], JAM.policy.p3);
    }
    function v92(p$$4) {
      return JAM.call(Math.pow, Math, [2, 8 * (p$$4 - 1)], JAM.policy.p3);
    }
    function v91(p$$3, x$$47) {
      var v14523 = x$$47[0];
      if (!v14523) {
        v14523 = 6;
      }
      return JAM.call(Math.pow, Math, [p$$3, v14523], JAM.policy.p3);
    }
    function makeTrans(transition) {
      function v90(pos$$6) {
        var v8404;
        if (pos$$6 <= .5) {
          v8404 = JAM.call(transition, null, [2 * pos$$6, params], JAM.policy.p3) / 2;
        } else {
          v8404 = (2 - JAM.call(transition, null, [2 * (1 - pos$$6), params], JAM.policy.p3)) / 2;
        }
        return v8404;
      }
      function v89(pos$$5) {
        return 1 - JAM.call(transition, null, [1 - pos$$5, params], JAM.policy.p3);
      }
      function v88(pos$$4) {
        return JAM.call(transition, null, [pos$$4, params], JAM.policy.p3);
      }
      var params;
      params = JAM.call($$$1.splat, $$$1, [params], JAM.policy.p3);
      return JAM.call($$$1.extend, $$$1, [transition, {easeIn:v88, easeOut:v89, easeInOut:v90}], JAM.policy.p3);
    }
    var transitions = {Pow:v91, Expo:v92, Circ:v93, Sine:v94, Back:v95, Bounce:v96, Elastic:v97};
    JAM.call($$$1.each, $$$1, [transitions, v98], JAM.policy.p3);
    JAM.call($$$1.each, $$$1, [["Quad", "Cubic", "Quart", "Quint"], v100], JAM.policy.p3);
    return;
  }
  function v87(p$$2) {
    return p$$2;
  }
  function v86(tree$$5, action$$1) {
    JAM.call(this.eachLevel, this, [tree$$5, 0, Number.MAX_VALUE, action$$1], JAM.policy.p3);
    return;
  }
  function v85(tree$$4, initLevel, toLevel, action) {
    if (initLevel <= toLevel) {
      JAM.call(action, null, [tree$$4, initLevel], JAM.policy.p3);
      if (!tree$$4.children) {
        return;
      }
      var i$$23 = 0;
      var ch$$4 = tree$$4.children;
      var v8412 = i$$23 < ch$$4.length;
      for (;v8412;) {
        JAM.call(this.eachLevel, this, [ch$$4[i$$23], initLevel + 1, toLevel, action], JAM.policy.p3);
        i$$23++;
        v8412 = i$$23 < ch$$4.length;
      }
    }
    return;
  }
  function v84(tree$$3, id$$4) {
    if (tree$$3.id == id$$4) {
      return tree$$3;
    }
    var i$$22 = 0;
    var ch$$3 = tree$$3.children;
    var v14532 = ch$$3;
    if (v14532) {
      v14532 = i$$22 < ch$$3.length;
    }
    var v8417 = v14532;
    for (;v8417;) {
      var t = JAM.call(this.getSubtree, this, [ch$$3[i$$22], id$$4], JAM.policy.p3);
      if (t != null) {
        return t;
      }
      i$$22++;
      var v14533 = ch$$3;
      if (v14533) {
        v14533 = i$$22 < ch$$3.length;
      }
      v8417 = v14533;
    }
    return null;
  }
  function v83(tree$$2, id$$3) {
    if (tree$$2.id == id$$3) {
      return false;
    }
    var ch$$2 = tree$$2.children;
    var v14535 = ch$$2;
    if (v14535) {
      v14535 = ch$$2.length > 0;
    }
    if (v14535) {
      var i$$21 = 0;
      var v8421 = i$$21 < ch$$2.length;
      for (;v8421;) {
        if (ch$$2[i$$21].id == id$$3) {
          return tree$$2;
        } else {
          var ans$$2 = JAM.call(this.getParent, this, [ch$$2[i$$21], id$$3], JAM.policy.p3);
          if (ans$$2) {
            return ans$$2;
          }
        }
        i$$21++;
        v8421 = i$$21 < ch$$2.length;
      }
    }
    return false;
  }
  function v82(tree$$1, maxLevel) {
    function v81(elem$$12, i$$20) {
      var v14539 = i$$20 == maxLevel;
      if (v14539) {
        v14539 = elem$$12.children;
      }
      if (v14539) {
        delete elem$$12.children;
        elem$$12.children = [];
      }
      return;
    }
    JAM.call(this.each, this, [tree$$1, v81], JAM.policy.p3);
    return;
  }
  function v80() {
    function v79(properties$$2) {
      JAM.call(Class.inherit, Class, [proto$$1, properties$$2], JAM.policy.p3);
      return;
    }
    var proto$$1 = this.prototype;
    var v14540 = Array.prototype.slice;
    JAM.call($$$1.each, $$$1, [JAM.call(v14540.call, v14540, [arguments || []], JAM.policy.p3), v79], JAM.policy.p3);
    return;
  }
  function v78(object$$3, name$$35, method$$1) {
    function override$$1() {
      var previous$$2 = this.parent;
      var v8425;
      if (parent$$1) {
        v8425 = parent$$1[name$$35];
      } else {
        v8425 = object$$3[name$$35];
      }
      this.parent = v8425;
      var value$$32 = JAM.call(method$$1.apply, method$$1, [this, arguments], JAM.policy.p3);
      this.parent = previous$$2;
      return value$$32;
    }
    var parent$$1 = Class.prototyping;
    var v14542 = parent$$1;
    if (v14542) {
      v14542 = object$$3[name$$35] != parent$$1[name$$35];
    }
    if (v14542) {
      parent$$1 = null;
    }
    introspect(JAM.policy.p2) {
      object$$3[name$$35] = override$$1;
    }
    return;
  }
  function v77(object$$2, properties$$1) {
    var key$$22;
    for (key$$22 in properties$$1) {
      var override = properties$$1[key$$22];
      var previous$$1 = object$$2[key$$22];
      var type$$30 = JAM.call($$$1.type, $$$1, [override], JAM.policy.p3);
      var v14543 = previous$$1;
      if (v14543) {
        v14543 = type$$30 == "function";
      }
      if (v14543) {
        if (override != previous$$1) {
          JAM.call(Class.override, Class, [object$$2, key$$22, override], JAM.policy.p3);
        }
      } else {
        if (type$$30 == "object") {
          var v31216 = JAM.call($$$1.merge, $$$1, [previous$$1, override], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            object$$2[key$$22] = v31216;
          }
        } else {
          introspect(JAM.policy.p2) {
            object$$2[key$$22] = override;
          }
        }
      }
    }
    return object$$2;
  }
  function v76(self$$1, klasses) {
    function v75(klass$$4) {
      Class.prototyping = klass$$4;
      var v8430;
      if (typeof klass$$4 == "function") {
        v8430 = new klass$$4;
      } else {
        v8430 = klass$$4;
      }
      var instance$$1 = v8430;
      var prop$$4;
      for (prop$$4 in instance$$1) {
        if (!(prop$$4 in self$$1)) {
          introspect(JAM.policy.p2) {
            self$$1[prop$$4] = instance$$1[prop$$4];
          }
        }
      }
      delete Class.prototyping;
      return;
    }
    JAM.call($$$1.each, $$$1, [JAM.call($$$1.splat, $$$1, [klasses], JAM.policy.p3), v75], JAM.policy.p3);
    return self$$1;
  }
  function v74(e$$12) {
    if (e$$12.stopPropagation) {
      JAM.call(e$$12.stopPropagation, e$$12, [], JAM.policy.p3);
    }
    e$$12.cancelBubble = true;
    if (e$$12.preventDefault) {
      JAM.call(e$$12.preventDefault, e$$12, [], JAM.policy.p3);
    } else {
      e$$12.returnValue = false;
    }
    return;
  }
  function v73(e$$11, win$$1) {
    win$$1 = win$$1 || window;
    var v8435 = e$$11;
    if (!v8435) {
      v8435 = win$$1.event;
    }
    e$$11 = v8435;
    var doc = win$$1.document;
    var v8436 = doc.documentElement;
    if (!v8436) {
      v8436 = doc.body;
    }
    doc = v8436;
    var v14548 = e$$11.touches;
    if (v14548) {
      v14548 = e$$11.touches.length;
    }
    if (v14548) {
      e$$11 = e$$11.touches[0];
    }
    var v14549 = e$$11.pageX;
    if (!v14549) {
      v14549 = e$$11.clientX + doc.scrollLeft;
    }
    var v8439 = v14549;
    var v14550 = e$$11.pageY;
    if (!v14550) {
      v14550 = e$$11.clientY + doc.scrollTop;
    }
    var page = {x:v8439, y:v14550};
    return page;
  }
  function v72(e$$10) {
    var v8441 = e$$10.which == 3;
    if (!v8441) {
      v8441 = e$$10.button == 2;
    }
    return v8441;
  }
  function v71(e$$9) {
    var v8442;
    if (e$$9.wheelDelta) {
      v8442 = e$$9.wheelDelta / 120;
    } else {
      var v23959 = e$$9.detail;
      if (!v23959) {
        v23959 = 0;
      }
      v8442 = -v23959 / 3;
    }
    return v8442;
  }
  function v70(e$$8, win) {
    win = win || window;
    var v8443 = e$$8;
    if (!v8443) {
      v8443 = win.event;
    }
    return v8443;
  }
  function v69(elem$$9) {
    function getOffsets(elem$$10) {
      var position = {x:0, y:0};
      var v14558 = elem$$10;
      if (v14558) {
        v14558 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$10.tagName], JAM.policy.p3);
      }
      var v8444 = v14558;
      for (;v8444;) {
        position.x = position.x + elem$$10.offsetLeft;
        position.y = position.y + elem$$10.offsetTop;
        elem$$10 = elem$$10.offsetParent;
        var v14563 = elem$$10;
        if (v14563) {
          v14563 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$10.tagName], JAM.policy.p3);
        }
        v8444 = v14563;
      }
      return position;
    }
    function getScrolls(elem$$11) {
      var position$$1 = {x:0, y:0};
      var v14564 = elem$$11;
      if (v14564) {
        v14564 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$11.tagName], JAM.policy.p3);
      }
      var v8445 = v14564;
      for (;v8445;) {
        position$$1.x = position$$1.x + elem$$11.scrollLeft;
        position$$1.y = position$$1.y + elem$$11.scrollTop;
        elem$$11 = elem$$11.parentNode;
        var v14569 = elem$$11;
        if (v14569) {
          v14569 = !JAM.call(/^(?:body|html)$/i.test, /^(?:body|html)$/i, [elem$$11.tagName], JAM.policy.p3);
        }
        v8445 = v14569;
      }
      return position$$1;
    }
    var offset$$8 = getOffsets(elem$$9);
    var scroll$$1 = getScrolls(elem$$9);
    return {x:offset$$8.x - scroll$$1.x, y:offset$$8.y - scroll$$1.y};
  }
  function v68(obj$$21, klass$$2) {
    var v8448 = obj$$21.className;
    var v31217 = JAM.call(v8448.replace, v8448, [new RegExp("(^|\\s)" + klass$$2 + "(?:\\s|$)"), "$1"], JAM.policy.p3);
    obj$$21.className = v31217;
    return;
  }
  function v67(obj$$20, klass$$1) {
    if (!JAM.call($$$1.hasClass, $$$1, [obj$$20, klass$$1], JAM.policy.p3)) {
      obj$$20.className = obj$$20.className + " " + klass$$1;
    }
    return;
  }
  function v66(obj$$19, klass) {
    var v14577 = " " + obj$$19.className + " ";
    return JAM.call(v14577.indexOf, v14577, [" " + klass + " "], JAM.policy.p3) > -1;
  }
  function v65(obj$$18, typeObj) {
    var type$$29;
    for (type$$29 in typeObj) {
      JAM.call($$$1.addEvent, $$$1, [obj$$18, type$$29, typeObj[type$$29]], JAM.policy.p3);
    }
    return;
  }
  function v64(obj$$17, type$$28, fn$$1) {
    if (obj$$17.addEventListener) {
      JAM.call(obj$$17.addEventListener, obj$$17, [type$$28, fn$$1, false], JAM.policy.p3);
    } else {
      JAM.call(obj$$17.attachEvent, obj$$17, ["on" + type$$28, fn$$1], JAM.policy.p3);
    }
    return;
  }
  function v63(elem$$8) {
    var ch$$1 = elem$$8.childNodes;
    var i$$19 = 0;
    var l$$6 = ch$$1.length;
    var v8457 = i$$19 < l$$6;
    for (;v8457;) {
      JAM.call($$$1.destroy, $$$1, [ch$$1[i$$19]], JAM.policy.p3);
      i$$19++;
      v8457 = i$$19 < l$$6;
    }
    return;
  }
  function v62(elem$$7) {
    JAM.call($$$1.clean, $$$1, [elem$$7], JAM.policy.p3);
    if (elem$$7.parentNode) {
      var v8458 = elem$$7.parentNode;
      JAM.call(v8458.removeChild, v8458, [elem$$7], JAM.policy.p3);
    }
    if (elem$$7.clearAttributes) {
      JAM.call(elem$$7.clearAttributes, elem$$7, [], JAM.policy.p3);
    }
    return;
  }
  function v61(hex$$1) {
    if (hex$$1.length != 7) {
      hex$$1 = JAM.call(hex$$1.match, hex$$1, [/^#?(\w{1,2})(\w{1,2})(\w{1,2})$/], JAM.policy.p3);
      JAM.call(hex$$1.shift, hex$$1, [], JAM.policy.p3);
      if (hex$$1.length != 3) {
        return null;
      }
      var rgb = [];
      var i$$18 = 0;
      var v8464 = i$$18 < 3;
      for (;v8464;) {
        var value$$31 = hex$$1[i$$18];
        if (value$$31.length == 1) {
          value$$31 = value$$31 + value$$31;
        }
        JAM.call(rgb.push, rgb, [parseInt(value$$31, 16)], JAM.policy.p3);
        i$$18++;
        v8464 = i$$18 < 3;
      }
      return rgb;
    } else {
      hex$$1 = parseInt(JAM.call(hex$$1.slice, hex$$1, [1], JAM.policy.p3), 16);
      return [hex$$1 >> 16, hex$$1 >> 8 & 255, hex$$1 & 255];
    }
    return;
  }
  function v60(srcArray) {
    var array$$12;
    if (srcArray.length < 3) {
      return null;
    }
    var v19180 = srcArray.length == 4;
    if (v19180) {
      v19180 = srcArray[3] == 0;
    }
    var v14584 = v19180;
    if (v14584) {
      v14584 = !array$$12;
    }
    if (v14584) {
      return "transparent";
    }
    var hex = [];
    var i$$17 = 0;
    var v8474 = i$$17 < 3;
    for (;v8474;) {
      var v8472 = srcArray[i$$17] - 0;
      var bit = JAM.call(v8472.toString, v8472, [16], JAM.policy.p3);
      var v14586;
      if (bit.length == 1) {
        v14586 = "0" + bit;
      } else {
        v14586 = bit;
      }
      JAM.call(hex.push, hex, [v14586], JAM.policy.p3);
      i$$17++;
      v8474 = i$$17 < 3;
    }
    var v8475;
    if (array$$12) {
      v8475 = hex;
    } else {
      v8475 = "#" + JAM.call(hex.join, hex, [""], JAM.policy.p3);
    }
    return v8475;
  }
  function v59() {
    if (arguments.length === 0) {
      return [];
    }
    var j$$2 = 0;
    var ans$$1 = [];
    var l$$5 = arguments.length;
    var ml = arguments[0].length;
    var v8480 = j$$2 < ml;
    for (;v8480;) {
      var i$$16 = 0;
      var row = [];
      var v8479 = i$$16 < l$$5;
      for (;v8479;) {
        JAM.call(row.push, row, [arguments[i$$16][j$$2]], JAM.policy.p3);
        i$$16++;
        v8479 = i$$16 < l$$5;
      }
      JAM.call(ans$$1.push, ans$$1, [row], JAM.policy.p3);
      j$$2++;
      v8480 = j$$2 < ml;
    }
    return ans$$1;
  }
  function v58(object$$1) {
    var unlinked;
    switch(JAM.call($$$1.type, $$$1, [object$$1], JAM.policy.p3)) {
      case "object":
        unlinked = {};
        var p$$1;
        for (p$$1 in object$$1) {
          var v31218 = JAM.call($$$1.unlink, $$$1, [object$$1[p$$1]], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            unlinked[p$$1] = v31218;
          }
        }
        break;
      case "array":
        unlinked = [];
        var i$$15 = 0;
        var l$$4 = object$$1.length;
        var v8483 = i$$15 < l$$4;
        for (;v8483;) {
          var v31219 = JAM.call($$$1.unlink, $$$1, [object$$1[i$$15]], JAM.policy.p3);
          unlinked[i$$15] = v31219;
          i$$15++;
          v8483 = i$$15 < l$$4;
        }
        break;
      default:
        return object$$1;
    }
    return unlinked;
  }
  function v57() {
    var mix = {};
    var i$$14 = 0;
    var l$$3 = arguments.length;
    var v8487 = i$$14 < l$$3;
    for (;v8487;) {
      var object = arguments[i$$14];
      if (JAM.call($$$1.type, $$$1, [object], JAM.policy.p3) != "object") {
        i$$14++;
        v8487 = i$$14 < l$$3;
        continue;
      }
      var key$$20;
      for (key$$20 in object) {
        var op = object[key$$20];
        var mp = mix[key$$20];
        var v8486;
        var v23968 = mp;
        if (v23968) {
          v23968 = JAM.call($$$1.type, $$$1, [op], JAM.policy.p3) == "object";
        }
        var v19182 = v23968;
        if (v19182) {
          v19182 = JAM.call($$$1.type, $$$1, [mp], JAM.policy.p3) == "object";
        }
        if (v19182) {
          v8486 = JAM.call($$$1.merge, $$$1, [mp, op], JAM.policy.p3);
        } else {
          v8486 = JAM.call($$$1.unlink, $$$1, [op], JAM.policy.p3);
        }
        introspect(JAM.policy.p2) {
          mix[key$$20] = v8486;
        }
      }
      i$$14++;
      v8487 = i$$14 < l$$3;
    }
    return mix;
  }
  function v56(array$$11, f$$1, opt$$1) {
    var l$$2 = array$$11.length;
    if (l$$2 == 0) {
      return opt$$1;
    }
    var v8489;
    if (arguments.length == 3) {
      v8489 = opt$$1;
    } else {
      v8489 = array$$11[l$$2 = l$$2 - 1];
    }
    var acum = v8489;
    var v8491 = l$$2;
    l$$2 = l$$2 - 1;
    for (;v8491;) {
      acum = JAM.call(f$$1, null, [acum, array$$11[l$$2]], JAM.policy.p3);
      v8491 = l$$2;
      l$$2 = l$$2 - 1;
    }
    return acum;
  }
  function v55(array$$10, f) {
    function v54(elem$$6, i$$13) {
      JAM.call(ans.push, ans, [JAM.call(f, null, [elem$$6, i$$13], JAM.policy.p3)], JAM.policy.p3);
      return;
    }
    var ans = [];
    JAM.call($$$1.each, $$$1, [array$$10, v54], JAM.policy.p3);
    return ans;
  }
  function v53(array$$9, item) {
    if (Array.indexOf) {
      return JAM.call(array$$9.indexOf, array$$9, [item], JAM.policy.p3);
    }
    var i$$12 = 0;
    var l$$1 = array$$9.length;
    var v8495 = i$$12 < l$$1;
    for (;v8495;) {
      if (array$$9[i$$12] === item) {
        return i$$12;
      }
      i$$12++;
      v8495 = i$$12 < l$$1;
    }
    return -1;
  }
  function v52(iterable, fn) {
    var type$$27 = JAM.call($$$1.type, $$$1, [iterable], JAM.policy.p3);
    if (type$$27 == "object") {
      var key$$19;
      for (key$$19 in iterable) {
        JAM.call(fn, null, [iterable[key$$19], key$$19], JAM.policy.p3);
      }
    } else {
      var i$$11 = 0;
      var l = iterable.length;
      var v8498 = i$$11 < l;
      for (;v8498;) {
        JAM.call(fn, null, [iterable[i$$11], i$$11], JAM.policy.p3);
        i$$11++;
        v8498 = i$$11 < l;
      }
    }
    return;
  }
  function v51(elem$$5) {
    var v23970 = $$$1.type.s;
    var v19184 = JAM.call(v23970.call, v23970, [elem$$5], JAM.policy.p3);
    var v8500 = JAM.call(v19184.match, v19184, [/^\[object\s(.*)\]$/], JAM.policy.p3)[1];
    var type$$26 = JAM.call(v8500.toLowerCase, v8500, [], JAM.policy.p3);
    if (type$$26 != "object") {
      return type$$26;
    }
    var v14596 = elem$$5;
    if (v14596) {
      v14596 = elem$$5.$$family;
    }
    if (v14596) {
      return elem$$5.$$family;
    }
    var v8503;
    var v23971 = elem$$5;
    if (v23971) {
      v23971 = elem$$5.nodeName;
    }
    var v19185 = v23971;
    if (v19185) {
      v19185 = elem$$5.nodeType == 1;
    }
    if (v19185) {
      v8503 = "element";
    } else {
      v8503 = type$$26;
    }
    return v8503;
  }
  function v50(obj$$16) {
    var type$$25 = JAM.call($$$1.type, $$$1, [obj$$16], JAM.policy.p3);
    var v8504;
    if (type$$25) {
      var v14598;
      if (type$$25 != "array") {
        v14598 = [obj$$16];
      } else {
        v14598 = obj$$16;
      }
      v8504 = v14598;
    } else {
      v8504 = [];
    }
    return v8504;
  }
  function v49() {
    return +new Date;
  }
  function v48(value$$30) {
    function v47() {
      return value$$30;
    }
    var v8506;
    if (typeof value$$30 == "function") {
      v8506 = value$$30;
    } else {
      v8506 = v47;
    }
    return v8506;
  }
  function v46(original, extended) {
    var key$$18;
    for (key$$18 in extended || {}) {
      introspect(JAM.policy.p2) {
        original[key$$18] = extended[key$$18];
      }
    }
    return original;
  }
  function v45() {
    return;
  }
  function v44(w$$5) {
    w$$5 = w$$5 || window;
    var k;
    for (k in $jit) {
      if ($jit[k].$extend) {
        introspect(JAM.policy.p2) {
          w$$5[k] = $jit[k];
        }
      }
    }
    return;
  }
  function $C(b$$2) {
    var a$$3 = 0;
    return new Complex(a$$3, b$$2);
  }
  function Complex(x$$60, y$$41) {
    this.x = x$$60 || 0;
    this.y = y$$41 || 0;
    return;
  }
  function $P() {
    var a$$2 = 0;
    var b$$1 = 0;
    return new Polar(a$$2, b$$1);
  }
  function Polar(theta, rho$$1) {
    this.theta = theta || 0;
    this.rho = rho$$1 || 0;
    return;
  }
  function Options() {
    var args = arguments;
    var i$$25 = 0;
    var l$$7 = args.length;
    var ans$$3 = {};
    var v8512 = i$$25 < l$$7;
    for (;v8512;) {
      var opt$$4 = Options[args[i$$25]];
      if (opt$$4.$extend) {
        JAM.call($$$1.extend, $$$1, [ans$$3, opt$$4], JAM.policy.p3);
      } else {
        var v8510 = args[i$$25];
        introspect(JAM.policy.p2) {
          ans$$3[v8510] = opt$$4;
        }
      }
      i$$25++;
      v8512 = i$$25 < l$$7;
    }
    return ans$$3;
  }
  function Class(properties) {
    function klass$$3() {
      var key$$21;
      for (key$$21 in this) {
        if (typeof this[key$$21] != "function") {
          var v31220 = JAM.call($$$1.unlink, $$$1, [this[key$$21]], JAM.policy.p3);
          introspect(JAM.policy.p2) {
            this[key$$21] = v31220;
          }
        }
      }
      this.constructor = klass$$3;
      if (Class.prototyping) {
        return this;
      }
      var v8516;
      if (this.initialize) {
        var v14602 = this.initialize;
        v8516 = JAM.call(v14602.apply, v14602, [this, arguments], JAM.policy.p3);
      } else {
        v8516 = this;
      }
      var instance = v8516;
      this.$$family = "class";
      return instance;
    }
    properties = properties || {};
    var mutator;
    for (mutator in Class.Mutators) {
      if (!properties[mutator]) {
        continue;
      }
      var v8518 = Class.Mutators;
      properties = JAM.call(v8518[mutator], v8518, [properties, properties[mutator]], JAM.policy.p3);
      delete properties[mutator];
    }
    JAM.call($$$1.extend, $$$1, [klass$$3, this], JAM.policy.p3);
    klass$$3.constructor = Class;
    klass$$3.prototype = properties;
    return klass$$3;
  }
  function $$$1(d) {
    return JAM.call(document.getElementById, document, [d], JAM.policy.p3);
  }
  this.$jit = v44;
  $jit.version = "2.0.1";
  $$$1.empty = v45;
  $$$1.extend = v46;
  $$$1.lambda = v48;
  var v8521 = Date.now;
  if (!v8521) {
    v8521 = v49;
  }
  $$$1.time = v8521;
  $$$1.splat = v50;
  $$$1.type = v51;
  $$$1.type.s = Object.prototype.toString;
  $$$1.each = v52;
  $$$1.indexOf = v53;
  $$$1.map = v55;
  $$$1.reduce = v56;
  $$$1.merge = v57;
  $$$1.unlink = v58;
  $$$1.zip = v59;
  $$$1.rgbToHex = v60;
  $$$1.hexToRgb = v61;
  $$$1.destroy = v62;
  $$$1.clean = v63;
  $$$1.addEvent = v64;
  $$$1.addEvents = v65;
  $$$1.hasClass = v66;
  $$$1.addClass = v67;
  $$$1.removeClass = v68;
  $$$1.getPos = v69;
  $$$1.event = {get:v70, getWheel:v71, isRightClick:v72, getPos:v73, stop:v74};
  $jit.util = $jit.id = $$$1;
  Class.Mutators = {Implements:v76};
  JAM.call($$$1.extend, $$$1, [Class, {inherit:v77, override:v78}], JAM.policy.p3);
  Class.prototype.implement = v80;
  $jit.Class = Class;
  $jit.json = {prune:v82, getParent:v83, getSubtree:v84, eachLevel:v85, each:v86};
  $jit.Trans = {$extend:true, linear:v87};
  var Trans = $jit.Trans;
  v101();
  var Animation = new Class({initialize:v102, setOptions:v103, step:v104, start:v105, startTimer:v107, pause:v108, resume:v109, stopTimer:v110, check:v111});
  Options.Canvas = {$extend:true, injectInto:"id", type:"2D", width:false, height:false, useCanvas:false, withLabels:true, background:false, Scene:{Lighting:{enable:false, ambient:[1, 1, 1], directional:{direction:{x:-100, y:-100, z:-100}, color:[.5, .3, .1]}}}};
  Options.Tree = {$extend:true, orientation:"left", subtreeOffset:8, siblingOffset:5, indent:10, multitree:false, align:"center"};
  Options.PhyloJive = {$extend:true, alignName:false, lateralise:false, collapsedXOffset:25, branchLength:true, levelDistance:40, branchMultiplier:1, initCharacter:false, firstCharacter:false, presentClade:$$$1.empty, onPresentClade:$$$1.empty, rangeCount:10, shapes:["box", "star", "square"], color:["BlueViolet", "Brown", "CadetBlue", "Coral", "CornflowerBlue", "Crimson", "DarkCyan", "DarkGoldenrod", "DarkGreen", "DarkKhaki", "DarkOlive Green", "DarkOrange", "DarkRed", "DarkSalmon", "DarkSlateBlue", 
  "DarkSlateGray", "DarkViolet", "DeepPink", "DimGray", "DodgerBlue"], typeEnum:{quant:0, quali:1}, quantColor:["#00FFFF", "#00DDFF", "#00BBFF", "#0099FF", "#0088FF", "#0077FF", "#0055FF", "#0044FF", "#0022FF", "#0000FF"], quantShape:"quant", selectedCharacters:[]};
  Options.Node = {$extend:false, overridable:false, type:"circle", color:"#ccb", alpha:1, dim:3, height:20, width:90, autoHeight:false, autoWidth:false, lineWidth:1, transform:true, align:"center", angularWidth:1, span:1, CanvasStyles:{}};
  Options.Edge = {$extend:false, overridable:false, type:"line", color:"#ccb", lineWidth:1, dim:15, alpha:1, epsilon:7, CanvasStyles:{}};
  Options.Fx = {$extend:true, fps:40, duration:2500, transition:$jit.Trans.Quart.easeInOut, clearCanvas:true};
  Options.Label = {$extend:false, overridable:false, type:"HTML", style:" ", size:10, family:"sans-serif", textAlign:"center", textBaseline:"alphabetic", color:"#fff"};
  Options.Tips = {$extend:false, enable:false, type:"auto", offsetX:20, offsetY:20, force:false, onShow:$$$1.empty, onHide:$$$1.empty};
  Options.NodeStyles = {$extend:false, enable:false, type:"auto", stylesHover:false, stylesClick:false};
  Options.Events = {$extend:false, enable:false, enableForEdges:false, type:"auto", onClick:$$$1.empty, onRightClick:$$$1.empty, onMouseMove:$$$1.empty, onMouseEnter:$$$1.empty, onMouseLeave:$$$1.empty, onDragStart:$$$1.empty, onDragMove:$$$1.empty, onDragCancel:$$$1.empty, onDragEnd:$$$1.empty, onTouchStart:$$$1.empty, onTouchMove:$$$1.empty, onTouchEnd:$$$1.empty, onMouseWheel:$$$1.empty};
  Options.Navigation = {$extend:false, enable:false, type:"auto", panning:false, zooming:false};
  Options.Controller = {$extend:true, onBeforeCompute:$$$1.empty, onAfterCompute:$$$1.empty, onCreateLabel:$$$1.empty, onPlaceLabel:$$$1.empty, onComplete:$$$1.empty, onBeforePlotLine:$$$1.empty, onAfterPlotLine:$$$1.empty, onBeforePlotNode:$$$1.empty, onAfterPlotNode:$$$1.empty, onBeforeRemoveNode:$$$1.empty, request:false};
  var ExtrasInitializer = {initialize:v112, initializePost:$$$1.empty, setAsProperty:JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3), isEnabled:v113, isLabel:v114, isDescendantOf:v115};
  var EventsInterface = {onMouseUp:$$$1.empty, onMouseDown:$$$1.empty, onMouseMove:$$$1.empty, onMouseOver:$$$1.empty, onMouseOut:$$$1.empty, onMouseWheel:$$$1.empty, onTouchStart:$$$1.empty, onTouchMove:$$$1.empty, onTouchEnd:$$$1.empty, onTouchCancel:$$$1.empty};
  var MouseEventsManager = new Class({initialize:v116, attachEvents:v125, register:v126, handleEvent:v127, makeEventObject:v132});
  var Extras = {initializeExtras:v134};
  Extras.Classes = {};
  var v8572 = Extras.Classes;
  var v31221 = new Class({Implements:[ExtrasInitializer, EventsInterface], initializePost:v135, setAsProperty:JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3), onMouseUp:v136, onMouseOut:v137, onMouseOver:v138, onMouseMove:v139, onMouseWheel:v140, onMouseDown:v141, onTouchStart:v142, onTouchMove:v143, onTouchEnd:v144});
  v8572.Events = v31221;
  var v8573 = Extras.Classes;
  var v31222 = new Class({Implements:[ExtrasInitializer, EventsInterface], initializePost:v145, setAsProperty:JAM.call($$$1.lambda, $$$1, [true], JAM.policy.p3), onMouseOut:v146, onMouseOver:v147, onMouseMove:v148, setTooltipPosition:v149, hide:v150});
  v8573.Tips = v31222;
  var v8574 = Extras.Classes;
  var v31223 = new Class({Implements:[ExtrasInitializer, EventsInterface], initializePost:v151, onMouseOut:v152, onMouseOver:v153, onMouseDown:v154, onMouseUp:v155, getRestoredStyles:v156, toggleStylesOnHover:v157, toggleStylesOnClick:v158, toggleStylesOn:v159, onClick:v161, onMouseMove:v163});
  v8574.NodeStyles = v31223;
  var v8575 = Extras.Classes;
  var v31224 = new Class({Implements:[ExtrasInitializer, EventsInterface], initializePost:v164, onMouseWheel:v165, onMouseDown:v166, onMouseMove:v167, onMouseUp:v168});
  v8575.Navigation = v31224;
  var Canvas;
  v200();
  $jit.Polar = Polar;
  Polar.prototype = {getc:v201, getp:v202, set:v203, setc:v204, setp:v205, clone:v206, toComplex:v207, add:v208, scale:v209, equals:v210, $add:v211, $madd:v212, $scale:v213, isZero:v214, interpolate:v215};
  var v8576 = Polar;
  var v31225 = $P();
  v8576.KER = v31225;
  $jit.Complex = Complex;
  Complex.prototype = {getc:v216, getp:v217, set:v218, setc:v219, setp:v220, clone:v221, toPolar:v222, norm:v223, squaredNorm:v224, add:v225, prod:v226, conjugate:v227, scale:v228, equals:v229, $add:v230, $prod:v231, $conjugate:v232, $scale:v233, $div:v234, isZero:v235};
  var v8577 = Complex;
  var v31226 = $C(0);
  v8577.KER = v31226;
  var v8578 = Complex;
  var v31227 = $C(1);
  v8578.IM = v31227;
  var v8579 = $jit;
  var v31228 = new Class({initialize:v239, getNode:v240, get:v241, getByName:v242, getAdjacence:v243, addNode:v244, addAdjacence:v245, removeNode:v246, removeAdjacence:v247, hasNode:v248, empty:v249});
  v8579.Graph = v31228;
  var Graph = $jit.Graph;
  var Accessors;
  v263();
  var v8580 = Graph;
  var v31229 = new Class({initialize:v264, adjacentTo:v265, getAdjacency:v266, getPos:v267, setPos:v268});
  v8580.Node = v31229;
  var v8581 = Graph.Node;
  JAM.call(v8581.implement, v8581, [Accessors], JAM.policy.p3);
  var v8582 = Graph;
  var v31230 = new Class({initialize:v269});
  v8582.Adjacence = v31230;
  var v8583 = Graph.Adjacence;
  JAM.call(v8583.implement, v8583, [Accessors], JAM.policy.p3);
  Graph.Util = {filter:v272, getNode:v273, eachNode:v274, each:v275, eachAdjacency:v276, computeLevels:v279, eachBFS:v281, eachLevel:v283, eachSubgraph:v284, eachSubnode:v285, anySubnode:v288, getSubnodes:v290, getParents:v292, isDescendantOf:v293, clean:v295, getClosestNodeToOrigin:v296, getClosestNodeToPos:v298};
  JAM.call($$$1.each, $$$1, [["get", "getNode", "each", "eachNode", "computeLevels", "eachBFS", "clean", "getClosestNodeToPos", "getClosestNodeToOrigin"], v300], JAM.policy.p3);
  JAM.call($$$1.each, $$$1, [["eachAdjacency", "eachLevel", "eachSubgraph", "eachSubnode", "anySubnode", "getSubnodes", "getParents", "isDescendantOf"], v302], JAM.policy.p3);
  Graph.Op = {options:{type:"nothing", duration:2E3, hideLabels:true, fps:30}, initialize:v303, removeNode:v309, removeEdge:v315, sum:v321, morph:v335, contract:v338, expand:v340, preprocessSum:v344};
  var NodeHelper = {"none":{"render":$$$1.empty, "contains":JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3)}, "circle":{"render":v345, "contains":v346}, "ellipse":{"render":v347, "contains":v348}, "square":{"render":v349, "contains":v350}, "rectangle":{"render":v351, "contains":v352}, "triangle":{"render":v353, "contains":v354}, "star":{"render":v355, "contains":v356}};
  var EdgeHelper = {"line":{"render":v357, "contains":v358}, "arrow":{"render":v359, "contains":v360}, "hyperline":{"render":v361, "contains":JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3)}};
  Graph.Plot = {initialize:v362, nodeHelper:NodeHelper, edgeHelper:EdgeHelper, Interpolator:{"map":{"border":"color", "color":"color", "width":"number", "height":"number", "dim":"number", "alpha":"number", "lineWidth":"number", "angularWidth":"number", "span":"number", "valueArray":"array-number", "dimArray":"array-number", "vertices":"polygon"}, "canvas":{"globalAlpha":"number", "fillStyle":"color", "strokeStyle":"color", "lineWidth":"number", "shadowBlur":"number", "shadowColor":"color", "shadowOffsetX":"number", 
  "shadowOffsetY":"number", "miterLimit":"number"}, "label":{"size":"number", "color":"color"}, "compute":v363, "moebius":v364, "linear":v365, "polar":v366, "number":v367, "color":v368, "array-number":v369, "node":v370, "edge":v371, "node-property":v372, "edge-property":v373, "label-property":v374, "node-style":v375, "edge-style":v376, "polygon":v378}, sequence:v380, prepare:v385, animate:v389, nodeFx:v392, plot:v395, plotTree:v397, plotNode:v398, plotLine:v399};
  var v8598 = Graph;
  var v31231 = JAM.call($$$1.merge, $$$1, [Graph.Plot, {Interpolator:{"linear":v400}, plotNode:v402, plotLine:v404, plotElement:v405}], JAM.policy.p3);
  v8598.Plot3D = v31231;
  Graph.Label = {};
  var v8599 = Graph.Label;
  var v31232 = new Class({initialize:v406, plotLabel:v407, renderLabel:v408, hideLabel:v410, hideLabels:$$$1.empty});
  v8599.Native = v31232;
  var v8600 = Graph.Label;
  var v31233 = new Class({labelsHidden:false, labelContainer:false, labels:{}, getLabelContainer:v411, getLabel:v412, hideLabels:v413, clearLabels:v414, disposeLabel:v415, hideLabel:v417, fitsInCanvas:v418});
  v8600.DOM = v31233;
  var v8601 = Graph.Label;
  var v31234 = new Class({Implements:Graph.Label.DOM, plotLabel:v419});
  v8601.HTML = v31234;
  var v8602 = Graph.Label;
  var v31235 = new Class({Implements:Graph.Label.DOM, plotLabel:v420});
  v8602.SVG = v31235;
  var v8603 = Graph;
  var v31236 = new Class({initialize:v421, translate:v424, setRightLevelToShow:v426, getRightLevelToShow:v427});
  v8603.Geom = v31236;
  var Loader = {construct:v430, loadJSON:v431, toJSON:v435};
  var Layouts = $jit.Layouts = {};
  var NodeDim = {label:null, compute:v437, initializeLabel:v438, setLabelStyles:v439};
  var v8604 = Layouts;
  var v31237 = v449();
  v8604.PhyloJive = v31237;
  var v8605 = $jit;
  var v31238 = v539();
  v8605.Phylo = v31238;
  $jit.Phylo.$extend = true;
  var v8607 = $jit.Phylo;
  var v31239 = new Class({Implements:Graph.Op});
  v8607.Op = v31239;
  var v8608 = $jit.Phylo;
  var v31240 = new Class({initialize:v540, requestNodes:v542, contract:v545, hide:v548, expand:v551, show:v555, prepare:v556, getNodesWithChildren:v558, plotStep:v561, getSiblings:v564});
  v8608.Group = v31240;
  var v8609 = $jit.Phylo;
  var v31241 = new Class({Implements:Graph.Geom, switchOrientation:v565, dispatch:v566, getSize:v567, getTreeBaseSize:v569, getEdge:v571, getScaledTreePosition:v573, treeFitsInCanvas:v575});
  v8609.Geom = v31241;
  Graph.Util.eachAdjacency = v577;
  Graph.Plot.plotTree = v579;
  var v8612 = $jit.Phylo;
  var v31242 = new Class({Implements:Graph.Plot, plotSubtree:v581, getAlignedPos:v582, getOrientation:v583});
  v8612.Plot = v31242;
  $jit.Phylo.Label = {};
  var v8614 = $jit.Phylo.Label;
  var v31243 = new Class({Implements:Graph.Label.Native, renderLabel:v584});
  v8614.Native = v31243;
  var v8615 = $jit.Phylo.Label;
  var v31244 = new Class({Implements:Graph.Label.DOM, placeLabel:v585});
  v8615.DOM = v31244;
  var v8616 = $jit.Phylo.Label;
  var v31245 = new Class({Implements:[$jit.Phylo.Label.DOM, Graph.Label.SVG], initialize:v586});
  v8616.SVG = v31245;
  var v8617 = $jit.Phylo.Label;
  var v31246 = new Class({Implements:[$jit.Phylo.Label.DOM, Graph.Label.HTML], initialize:v587});
  v8617.HTML = v31246;
  var v8618 = $jit.Phylo.Plot;
  var v31247 = new Class({"none":{"render":$$$1.empty, "contains":JAM.call($$$1.lambda, $$$1, [false], JAM.policy.p3)}, "circle":{"render":v588, "contains":v589}, "square":{"render":v590, "contains":v591}, "ellipse":{"render":v592, "contains":v593}, "rectangle":{"render":v594, "contains":v595}, "triangle":{"render":v596, "contains":v597}});
  v8618.NodeTypes = v31247;
  var v8619 = $jit.Phylo.Plot;
  var v31248 = new Class({"none":$$$1.empty, "line":{"render":v598, "contains":v599}, "arrow":{"render":v600, "contains":v601}, "quadratic:begin":{"render":v602}, "quadratic:end":{"render":v603}, "bezier":{"render":v604}, "rectangular":{"render":v605, "contains":v606}});
  v8619.EdgeTypes = v31248;
  var v8620 = Extras.Classes.Navigation;
  JAM.call(v8620.implement, v8620, [{onMouseWheel:v607}], JAM.policy.p3);
  Graph.Util.computeLevels = v610;
  NodeHelper.triangle = {render:v611, contains:v612};
  var v8623 = window.CanvasRenderingContext2D;
  if (v8623) {
    v8623 = CanvasRenderingContext2D.prototype;
  }
  var CP = v8623;
  var v14646 = CP;
  if (v14646) {
    v14646 = CP.lineTo;
  }
  if (v14646) {
    CP.dashedLine = v613;
  }
  return;
}
function v43() {
  function v42() {
    return;
  }
  function v41(newickTree) {
    if (typeof newickTree === "undefined") {
      alert("tree is not defined.");
      return;
    }
    var json;
    var legendElem;
    JAM.call(Smits.NewickParse, Smits, [newickTree], JAM.policy.p3);
    var v8626 = JAM.call(Smits.getRoot, Smits, [], JAM.policy.p3);
    var v31249 = JAM.call(v8626.json, v8626, [], JAM.policy.p3);
    this.tree = v31249;
    JAM.call(st.loadJSON, st, [this.tree], JAM.policy.p3);
    JAM.call(st.compute, st, [], JAM.policy.p3);
    st.config.initCharacter = false;
    legendElem = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
    if (st.character) {
      var v8629 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
      if (!v8629) {
        v8629 = "";
      }
      html = v8629;
      var v8630 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
      JAM.call(v8630.html, v8630, [html], JAM.policy.p3);
      legendElem.style.display = "inline";
      JAM.call(updateCharacter, null, [st.characterList]);
    } else {
      legendElem.style.display = "none";
    }
    JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  var tree;
  var character$$1;
  return {drawTree:v41, drawCharacter:v42};
}
function v40() {
  var rightContainer = JAM.call($jit.id, $jit, ["right-jitcontainer"], JAM.policy.p3);
  JAM.set(rightContainer, "innerHTML", rightContainer.innerHTML + '<div id="tabs"><ul><li><a href="#tabAction">Action</a></li><li><a href="#tabCharacter">Character</a></li><li><a href="#tabLegend">Legend</a></li><li><a href="#tabSearch">Search</a></li><li><a href="#tabInput">Input</a></li></ul>  <div id="tabCharacter"><h4>Select Character</h4><p><label>Select: </label><br/><label id="characterSelection">First Characters: <select id="firstCharacter" onChange="onSetCharacter ( )"> </select><br/>Second Chracter: <select id ="secondCharacter" onChange="onSetCharacter ( )"></select><br/>Third Chracter: <select id ="thirdCharacter" onChange="onSetCharacter ( )"></select></label></p></div><div id ="tabAction"><h4>Actions</h4><p><table><tr><td>Node Actions</td></tr><tr><td>Select</td><td><input id="selectClade" name="options" type="radio" checked /><tr><td>Expand / Collapse</td><td><div id="expandDiv"><input id = "expand" name="options" type="radio" /></div></td></tr><tr><td>Rotate</td><td><div id="rotateDiv"><input id = "rotate" name="options" type="radio" /></div></td></tr><tr><td>Set Root</td><td><input id = "setRoot" name="options" type = "radio" onclick = "onSetRoot ( this );"/></td></tr>\x3c!--<tr><td>Get Characters</td><td><input id = "character" name="options" type = "radio" onclick = "onGetCharacter ( this );"/></td></tr>--\x3e</table><br/><table><tr><td>Tree Actions</td></tr><tr><td>Align Names</td><td><div id="settings"><input id="alignName" type="checkbox"  onclick="onClickAlign ( this )"/></div></td></tr><tr><td>Ladderize</td><td><input id = "lateralise"  checked type = "checkbox" onclick = "onLateralise ( this );"/></td></tr><tr><td>Animate</td><td><input id="animate" type="checkbox" checked onClick = "onAnimate( this )"/></td></tr><tr><td>Branch Length</td><td><input id="branchLength" type="checkbox" checked onClick = "onBranchLength( this )"/></td></tr><tr><td>Length Multiplier</td><td><label><input id="branchMultiplier" name="multiply" type="radio" onClick = "onBranchMultiply( 0.1 )"/>x0.1</label> <label><input name="multiply" id="branchMultiplier" type="radio" onClick = "onBranchMultiply( 1 )"/>x1</label> <label><input id="branchMultiplier" name="multiply" type="radio" checked onClick = "onBranchMultiply( 5 )"/>x5</label></td></tr>\x3c!--<tr><td>Selected Nodes</td><td><div id="selected"></div></td></tr>--\x3e</table></p></div><div id="tabLegend"><h4>Legend</h4><p><table id ="legend"><tbody id = "legendBody"><tr><th>Legend:</th><td></td></tr></tbody></table></p></div><div id="tabSearch"><h4>Search</h4><p><table><tr><td>Search:</td><td><input id="searchString" type="text" size="15" /></td><tr><td></td><td><input class ="foswikiButton" type="submit" id="next" value="next"/><input type="submit" id="previous" class ="foswikiButton" value="previous"/></td></tr></table></p></div><div id="tabInput"><h4>Input Tree</h4><p><table><tr><td>Input Tree:</td><td><textarea id="newickTree" size="15"></textarea></td></tr><tr><td></td><td><input id="renderTree" type="submit" value="Render" onclick="onRender ( this )"/></td></tr></table></p></div></div>');
  var v8636 = JAM.call(jQuery, null, ["#tabs"], JAM.policy.p3);
  JAM.call(v8636.tabs, v8636, [], JAM.policy.p3);
  return;
}
function v39(character) {
  if (!character) {
    return;
  }
  var options$$1 = "";
  var unselected = "";
  var i$$2;
  var name$$30;
  var v8638 = st.config.selectedCharacters[0];
  if (!v8638) {
    v8638 = false;
  }
  var selectedfirst = v8638;
  var v8639 = st.config.selectedCharacters[0];
  if (!v8639) {
    v8639 = false;
  }
  var first$$1 = v8639;
  var v8640 = st.config.selectedCharacters[1];
  if (!v8640) {
    v8640 = false;
  }
  var second = v8640;
  var v8641 = st.config.selectedCharacters[2];
  if (!v8641) {
    v8641 = false;
  }
  var third = v8641;
  var select1 = "";
  var select2 = "";
  var select3 = "";
  i$$2 = 0;
  var v8646 = i$$2 < character.length;
  for (;v8646;) {
    var opt1 = "";
    var opt2 = "";
    var opt3 = "";
    var v14659 = first$$1 !== false;
    if (v14659) {
      v14659 = first$$1 === character[i$$2];
    }
    if (v14659) {
      opt1 = 'selected="selected"';
    }
    var v14660 = second !== false;
    if (v14660) {
      v14660 = second === character[i$$2];
    }
    if (v14660) {
      opt2 = 'selected="selected"';
    }
    var v14661 = third !== false;
    if (v14661) {
      v14661 = third === character[i$$2];
    }
    if (v14661) {
      opt3 = 'selected="selected"';
    }
    var v8645 = character[i$$2];
    name$$30 = JAM.call(v8645.replace, v8645, [/_/g, " "], JAM.policy.p3);
    select1 = select1 + ("<option " + opt1 + ' value="' + character[i$$2] + '" >' + name$$30 + "</option>");
    select2 = select2 + ("<option " + opt2 + ' value="' + character[i$$2] + '" >' + name$$30 + "</option>");
    select3 = select3 + ("<option " + opt3 + ' value="' + character[i$$2] + '" >' + name$$30 + "</option>");
    i$$2 = i$$2 + 1;
    v8646 = i$$2 < character.length;
  }
  if (select2) {
    select2 = '<option value=""> Please select </option>' + select2;
  }
  if (select3) {
    select3 = '<option value=""> Please select </option>' + select3;
  }
  var v8647 = JAM.call(jQuery, null, ["#firstCharacter"], JAM.policy.p3);
  JAM.call(v8647.html, v8647, [select1], JAM.policy.p3);
  var v8648 = JAM.call(jQuery, null, ["#secondCharacter"], JAM.policy.p3);
  JAM.call(v8648.html, v8648, [select2], JAM.policy.p3);
  var v8649 = JAM.call(jQuery, null, ["#thirdCharacter"], JAM.policy.p3);
  JAM.call(v8649.html, v8649, [select3], JAM.policy.p3);
  return;
}
function v38(opt) {
  function v37() {
    JAM.call(toggleScreen, null, [this]);
    return;
  }
  function $E(props$$1) {
    var tag = "div";
    var elem$$1 = JAM.call(document.createElement, document, [tag], JAM.policy.p3);
    var p;
    for (p in props$$1) {
      if (typeof props$$1[p] == "object") {
        var v8650 = $jit.util;
        JAM.call(v8650.extend, v8650, [elem$$1[p], props$$1[p]], JAM.policy.p3);
      } else {
        introspect(JAM.policy.p2) {
          elem$$1[p] = props$$1[p];
        }
      }
    }
    return elem$$1;
  }
  opt.codeBase = "";
  var popupHTML = '<div id="popup-close" style="position:relative; width:100%; background-color:lightblue"><a href="#" onclick="this.parentNode.parentNode.style.display=\'none\';" onmouseover="this.style.cursor=\'pointer\';" class="ui-dialog-titlebar-close ui-corner-all" role="button"><span class="ui-icon ui-icon-closethick">close</span></a></div><div id="popup-text"></div>';
  var navHTML = '<div style="position:relative"><div id="panup" style="position: absolute; left: 13px; top: 4px; width: 18px; height: 18px; cursor: pointer;"><img id="north" src="' + opt.codeBase + 'resources/north-mini.png" /></div><div id="panleft" style="position: absolute; left: 4px; top: 22px; width: 18px; height: 18px; cursor: pointer;"><img id="west" src="' + opt.codeBase + 'resources/west-mini.png" /></div><div id="panright" style="position: absolute; left: 22px; top: 22px; width: 18px; height: 18px; cursor: pointer;"><img id="east" src="' + 
  opt.codeBase + 'resources/east-mini.png" /></div><div id="pandown" style="position: absolute; left: 13px; top: 40px; width: 18px; height: 18px; cursor: pointer;"><img id="south" src="' + opt.codeBase + 'resources/south-mini.png" /></div><div id="zoomout" style="position: absolute; left: 13px; top: 99px; width: 18px; height: 18px; cursor: pointer;"><img id="zoomOUT" src="' + opt.codeBase + 'resources/zoom-minus-mini.png" /></div><div id="zoomworld" style="position: absolute; left: 13px; top: 81px; width: 18px; height: 18px; cursor: pointer;"><img id="world" style="position: relative; width: 18px; height: 18px;" src="' + 
  opt.codeBase + 'resources/zoom-world-mini.png"></div><div id="zoomin" style="position: absolute; left: 13px; top: 63px; width: 18px; height: 18px; cursor: pointer;"><img id="zoomIN" src="' + opt.codeBase + 'resources/zoom-plus-mini.png" /></div><div style="position:absolute;left:-50px;top:123px;width:130px"> Status: <span id="log"></span></div></div>';
  var jitcontainer;
  var rightJitContainer;
  var centerJitContainer;
  var v8655;
  if (typeof opt.injectInto == "string") {
    v8655 = opt.injectInto;
  } else {
    v8655 = opt.injectInto.id;
  }
  var id = v8655;
  var infovis;
  var parent;
  var popup;
  var navigation;
  var menu;
  var border$$2;
  border$$2 = opt.width * 100 / 90;
  jitcontainer = $E({"id":"jitcontainer", "className":"clearfix roundedCorner", "style":{"position":"relative", "width":border$$2 + "px", "height":opt.height + 55 + border$$2 / 20 + "px"}});
  rightJitContainer = $E({"id":"right-jitcontainer", "className":"phylojivepadding", "style":{display:"none"}});
  centerJitContainer = $E({"id":"center-jitcontainer", "className":"phylojivepadding"});
  infovis = JAM.call(jQuery, null, ["#" + id], JAM.policy.p3)[0];
  parent = infovis.parentNode;
  JAM.call(parent.replaceChild, parent, [jitcontainer, infovis], JAM.policy.p3);
  JAM.call(centerJitContainer.appendChild, centerJitContainer, [infovis], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [centerJitContainer], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [rightJitContainer], JAM.policy.p3);
  popup = $E({"id":"popup", "className":"", "style":{"color":"black", "display":"none", "border":"1px solid green", "background-color":"#B5D397", "position":"absolute", "left":"50px", "top":"90px", "overflow":"auto", "text-align":"left"}});
  var v8662 = JAM.call(jQuery, null, [popup], JAM.policy.p3);
  JAM.call(v8662.html, v8662, [popupHTML], JAM.policy.p3);
  JAM.call(centerJitContainer.appendChild, centerJitContainer, [popup], JAM.policy.p3);
  var v8663 = JAM.call(jQuery, null, [popup], JAM.policy.p3);
  JAM.call(v8663.resizable, v8663, [{maxHeight:450, maxWidth:350, minHeight:250, minWidth:170}], JAM.policy.p3);
  var v8665 = JAM.call(jQuery, null, [popup], JAM.policy.p3);
  JAM.call(v8665.draggable, v8665, [{handle:"#popup-close", containment:"#" + opt.injectInto}], JAM.policy.p3);
  navigation = $E({"id":"navigationPanel", "style":{"left":opt.width - 50 + "px"}});
  var v8668 = JAM.call(jQuery, null, [navigation], JAM.policy.p3);
  JAM.call(v8668.html, v8668, [navHTML], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [navigation], JAM.policy.p3);
  menu = $E({"id":"jitmenubutton", "className":"menubutton"});
  var v8670 = JAM.call(jQuery, null, [menu], JAM.policy.p3);
  JAM.call(v8670.click, v8670, [v37], JAM.policy.p3);
  JAM.call(jitcontainer.appendChild, jitcontainer, [menu], JAM.policy.p3);
  return;
}
function v36(text$$7) {
  if (!this.elem) {
    var v31250 = JAM.call(document.getElementById, document, ["log"], JAM.policy.p3);
    this.elem = v31250;
  }
  JAM.set(this.elem, "innerHTML", text$$7);
  return;
}
function v35() {
  var ua = navigator.userAgent;
  var v8673 = JAM.call(ua.match, ua, [/iPhone/i], JAM.policy.p3);
  if (!v8673) {
    v8673 = JAM.call(ua.match, ua, [/iPad/i], JAM.policy.p3);
  }
  var iStuff = v8673;
  var typeOfCanvas = typeof HTMLCanvasElement;
  var v8674 = typeOfCanvas === "object";
  if (!v8674) {
    v8674 = typeOfCanvas === "function";
  }
  var nativeCanvasSupport = v8674;
  var v8675 = nativeCanvasSupport;
  if (v8675) {
    var v26194 = JAM.call(document.createElement, document, ["canvas"], JAM.policy.p3);
    v8675 = typeof JAM.call(v26194.getContext, v26194, ["2d"], JAM.policy.p3).fillText === "function";
  }
  var textSupport = v8675;
  var v8676;
  var v19240 = !nativeCanvasSupport;
  if (!v19240) {
    var v23994 = textSupport;
    if (v23994) {
      v23994 = !iStuff;
    }
    v19240 = v23994;
  }
  if (v19240) {
    v8676 = "Native";
  } else {
    v8676 = "HTML";
  }
  labelType = v8676;
  nativeTextSupport = labelType === "Native";
  useGradients = nativeCanvasSupport;
  var v14683 = iStuff;
  if (!v14683) {
    v14683 = !nativeCanvasSupport;
  }
  animate = !v14683;
  return;
}
function smitsNode2JSON(node$$2) {
  var childJSON = [];
  var leaves = 0;
  var i$$3 = 0;
  var v8679 = i$$3 < node$$2.children.length;
  for (;v8679;) {
    var j = smitsNode2JSON(node$$2.children[i$$3]);
    JAM.call(childJSON.push, childJSON, [j], JAM.policy.p3);
    leaves = leaves + j.data.leaf;
    leaves = leaves + j.data.leaves;
    i$$3++;
    v8679 = i$$3 < node$$2.children.length;
  }
  var that$$1 = node$$2;
  var sampleid = "";
  if (childJSON.length !== 0) {
    return {"id":node$$2.id, "name":node$$2.name, "data":{"leaves":leaves, "leaf":0, "len":node$$2.len, "$type":"circle", "$dim":5, "$color":"#fff"}, "children":childJSON};
  } else {
    var v8683 = node$$2.name;
    var v31251 = JAM.call(v8683.replace, v8683, [/_/g, " "], JAM.policy.p3);
    node$$2.name = v31251;
    var v8684 = node$$2.name;
    var sampleArray = JAM.call(v8684.split, v8684, [" "], JAM.policy.p3);
    if (sampleArray.length > 1) {
      sampleid = sampleArray[1];
    }
    var name$$31 = sampleArray[0];
    var nodeJSON = {"id":node$$2.id, "name":node$$2.name, "data":{"leaves":0, "leaf":1, "len":node$$2.len, "$height":20, "$type":"none", "sampleid":sampleid, "name":name$$31}, "children":childJSON};
    return nodeJSON;
  }
  return;
}
function phylogenyExplorer_init() {
  function v34(char$$5) {
    var chars = JAM.call(char$$5.split, char$$5, ["/"], JAM.policy.p3);
    var index$$42 = ["firstCharacter", "secondCharacter", "thirdCharacter"];
    var i$$10 = 0;
    var v8694 = i$$10 < chars.length;
    for (;v8694;) {
      var ch = unescape(chars[i$$10]);
      var select$$1 = JAM.call(jQuery, null, ["#" + index$$42[i$$10]], JAM.policy.p3)[0];
      var j$$1 = 0;
      var v8693 = j$$1 < select$$1.options.length;
      for (;v8693;) {
        if (select$$1.options[j$$1].value === ch) {
          select$$1.selectedIndex = j$$1;
          break;
        }
        j$$1++;
        v8693 = j$$1 < select$$1.options.length;
      }
      i$$10++;
      v8694 = i$$10 < chars.length;
    }
    onSetCharacter();
    return;
  }
  function v33() {
    JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  function v32() {
    var first$$inline_13;
    var second$$inline_14;
    var third$$inline_15;
    var value$$inline_16 = [];
    var v8696 = JAM.call(jQuery, null, ["#firstCharacter"], JAM.policy.p3);
    first$$inline_13 = JAM.call(v8696.val, v8696, [], JAM.policy.p3);
    var v8697 = JAM.call(jQuery, null, ["#secondCharacter"], JAM.policy.p3);
    second$$inline_14 = JAM.call(v8697.val, v8697, [], JAM.policy.p3);
    var v8698 = JAM.call(jQuery, null, ["#thirdCharacter"], JAM.policy.p3);
    third$$inline_15 = JAM.call(v8698.val, v8698, [], JAM.policy.p3);
    if (first$$inline_13) {
      JAM.call(value$$inline_16.push, value$$inline_16, [first$$inline_13], JAM.policy.p3);
    }
    if (second$$inline_14) {
      JAM.call(value$$inline_16.push, value$$inline_16, [second$$inline_14], JAM.policy.p3);
    }
    if (third$$inline_15) {
      JAM.call(value$$inline_16.push, value$$inline_16, [third$$inline_15], JAM.policy.p3);
    }
    st.config.firstCharacter = first$$inline_13 || "";
    st.config.selectedCharacters = value$$inline_16;
    var v8701;
    if (typeof first$$inline_13 === "undefined") {
      v8701 = "";
    } else {
      v8701 = first$$inline_13;
    }
    first$$inline_13 = v8701;
    var v8702;
    if (typeof second$$inline_14 === "undefined") {
      v8702 = "";
    } else {
      v8702 = second$$inline_14;
    }
    second$$inline_14 = v8702;
    var v8703;
    if (typeof third$$inline_15 === "undefined") {
      v8703 = "";
    } else {
      v8703 = third$$inline_15;
    }
    third$$inline_15 = v8703;
    JAM.call(app.navigate, app, ["character/" + first$$inline_13 + "/" + second$$inline_14 + "/" + third$$inline_15], JAM.policy.p3);
    var legendElem$$inline_18 = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
    var i$$inline_19;
    var node$$inline_20;
    var label$$inline_21;
    if (st.character) {
      var v8705 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
      if (!v8705) {
        v8705 = "";
      }
      html$$1 = v8705;
      var v8706 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
      JAM.call(v8706.html, v8706, [html$$1], JAM.policy.p3);
      legendElem$$inline_18.style.display = "inline";
    } else {
      legendElem$$inline_18.style.display = "none";
    }
    for (i$$inline_19 in st.graph.nodes) {
      var v14705 = st.graph.nodes;
      if (JAM.call(v14705.hasOwnProperty, v14705, [i$$inline_19], JAM.policy.p3)) {
        node$$inline_20 = st.graph.nodes[i$$inline_19];
        label$$inline_21 = JAM.call(jQuery, null, ["#" + node$$inline_20.id], JAM.policy.p3)[0];
        if (label$$inline_21) {
          var v14708 = st.config;
          JAM.call(v14708.onCreateLabel, v14708, [label$$inline_21, node$$inline_20], JAM.policy.p3);
        }
      }
    }
    JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  function v31(elem$$4) {
    var style$$1 = JAM.call(jQuery, null, ["#right-jitcontainer"], JAM.policy.p3)[0].style;
    var v8716;
    if (style$$1.display === "none") {
      v8716 = "";
    } else {
      v8716 = "none";
    }
    style$$1.display = v8716;
    if (style$$1.display) {
      var v8717 = JAM.call(jQuery, null, [elem$$4], JAM.policy.p3);
      JAM.call(v8717.removeClass, v8717, ["on"], JAM.policy.p3);
    } else {
      var v8718 = JAM.call(jQuery, null, [elem$$4], JAM.policy.p3);
      JAM.call(v8718.addClass, v8718, ["on"], JAM.policy.p3);
    }
    return;
  }
  function v30(value$$29) {
    st.config.branchMultiplier = value$$29;
    var v14711 = st.graph;
    JAM.call(st.computePositions, st, [JAM.call(v14711.getNode, v14711, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v29(checkbox) {
    st.config.branchLength = checkbox.checked;
    var v14713 = st.graph;
    JAM.call(st.computePositions, st, [JAM.call(v14713.getNode, v14713, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v28(char$$4) {
    return;
  }
  function v27(render) {
    var newickTree$$1 = JAM.call($jit.id, $jit, ["newickTree"], JAM.policy.p3).value;
    if (newickTree$$1) {
      var dataObject$$1 = JAM.new(Smits.PhyloCanvas.NewickParse, [newickTree$$1]);
      var rootObject;
      var json$$2 = "";
      if (typeof dataObject$$1 === "object") {
        rootObject = JAM.call(dataObject$$1.getRoot, dataObject$$1, [], JAM.policy.p3);
        json$$2 = smitsNode2JSON(rootObject);
        JAM.call(st.loadJSON, st, [json$$2], JAM.policy.p3);
      }
      JAM.call(st.compute, st, [], JAM.policy.p3);
      st.config.initCharacter = false;
      var legendElem$$3 = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
      if (st.character) {
        var v8728 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
        if (!v8728) {
          v8728 = "";
        }
        html$$1 = v8728;
        var v8729 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
        JAM.call(v8729.html, v8729, [html$$1], JAM.policy.p3);
        legendElem$$3.style.display = "inline";
        JAM.call(updateCharacter, null, [st.characterList]);
      } else {
        legendElem$$3.style.display = "none";
      }
      JAM.call(st.onClick, st, [st.root], JAM.policy.p3);
      JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    }
    return;
  }
  function v26(animate$$1) {
    if (!animateDuration) {
      animateDuration = st.config.duration;
    }
    if (animate$$1.checked) {
      st.config.duration = animateDuration;
    } else {
      st.config.duration = 0;
    }
    return;
  }
  function v25(lat) {
    if (lat.checked) {
      st.config.lateralise = true;
    } else {
      st.config.lateralise = false;
    }
    var v14718 = st.graph;
    JAM.call(st.computePositions, st, [JAM.call(v14718.getNode, v14718, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v24(setRoot$$2) {
    if (setRoot$$2.value === "checked") {
      var id$$2 = st.clickedNode.id;
      JAM.call(st.setRoot, st, [id$$2, "animate"], JAM.policy.p3);
    }
    return;
  }
  function v23(alignName$$1) {
    if (alignName$$1.checked) {
      st.config.alignName = true;
      var v8747 = JAM.call(jQuery, null, [".quant"], JAM.policy.p3);
      JAM.call(v8747.addClass, v8747, ["quantAlign"], JAM.policy.p3);
    } else {
      st.config.alignName = false;
      var v8749 = JAM.call(jQuery, null, [".quant"], JAM.policy.p3);
      JAM.call(v8749.removeClass, v8749, ["quantAlign"], JAM.policy.p3);
    }
    JAM.call(st.plot, st, [], JAM.policy.p3);
    return;
  }
  function v22() {
    search(-1);
    return;
  }
  function v21() {
    search(1);
    return;
  }
  function v20() {
    JAM.call(st.fitScreen, st, [], JAM.policy.p3);
    return;
  }
  function v19() {
    return st.config.lateralise;
  }
  function v18(dom, node$$13) {
    var alignName = JAM.call($jit.id, $jit, ["alignName"], JAM.policy.p3);
    if (node$$13.selected) {
      dom.style.display = "none";
    }
    if (!node$$13.data.leaf) {
      dom.style.display = "none";
    }
    var v8756 = dom.style;
    var v14722 = node$$13.data.display;
    if (!v14722) {
      v14722 = "block";
    }
    v8756.display = v14722;
    if (alignName.checked) {
      var v8757 = JAM.call(jQuery, null, ["#" + dom.id + " .quant"], JAM.policy.p3);
      JAM.call(v8757.addClass, v8757, ["quantAlign"], JAM.policy.p3);
    } else {
      var v8758 = JAM.call(jQuery, null, ["#" + dom.id + " .quant"], JAM.policy.p3);
      JAM.call(v8758.removeClass, v8758, ["quantAlign"], JAM.policy.p3);
    }
    return;
  }
  function v17(node$$12, eventInfo$$1, e$$7) {
    function v16(n$$1) {
      if (n$$1.data.leaf) {
        JAM.set(elem$$3, "innerHTML", elem$$3.innerHTML + (n$$1.name + "<br/>"));
      }
      return;
    }
    if (node$$12) {
      var elem$$3 = JAM.call(document.getElementById, document, ["selected"], JAM.policy.p3);
      if (node$$12.leaf) {
        JAM.set(elem$$3, "innerHTML", node$$12.name);
      } else {
        JAM.set(elem$$3, "innerHTML", "");
        JAM.call(node$$12.subGraph, node$$12, [v16], JAM.policy.p3);
      }
    }
    return;
  }
  function v15(adj$$1) {
    return;
  }
  function v14(node$$11) {
    var result$$3 = true;
    var char$$3;
    if (!node$$11.data.leaf) {
      var key$$17;
      for (key$$17 in st.config.selectedCharacters) {
        var v14730 = node$$11.data.characterConsistency;
        if (JAM.call(v14730.hasOwnProperty, v14730, [key$$17], JAM.policy.p3)) {
          char$$3 = st.config.selectedCharacters[key$$17];
          var v8763 = result$$3;
          if (v8763) {
            v8763 = node$$11.data.characterConsistency[char$$3];
          }
          result$$3 = v8763;
        }
      }
    }
    var v14733 = !result$$3;
    if (v14733) {
      v14733 = node$$11.data.$type !== "triangle";
    }
    if (v14733) {
      node$$11.data.$type = "square";
    }
    if (node$$11.data.$type === "circle") {
      if (node$$11.data.rotate) {
        node$$11.data.$color = "purple";
      } else {
        node$$11.data.$color = "red";
      }
    } else {
      if (node$$11.data.$type === "square") {
        node$$11.data.$dim = 10;
        node$$11.data.$color = "red";
      }
    }
    if (node$$11.data.$type === "triangle") {
      node$$11.data.$dim = 15;
      node$$11.data.$color = "#EE9AA2";
    } else {
      if (node$$11.data.$type !== "square") {
        delete node$$11.data.$dim;
      }
    }
    if (st.root === node$$11.id) {
      node$$11.data.$color = "lightblue";
    }
    return;
  }
  function v13(label$$1, node$$10) {
    function v12() {
      var setRoot$$1 = JAM.call($jit.id, $jit, ["setRoot"], JAM.policy.p3);
      if (!setRoot$$1.checked) {
        var v8783 = st.controller.Events;
        JAM.call(v8783.onClick, v8783, [node$$10], JAM.policy.p3);
      }
      return;
    }
    var char$$2;
    var list = st.config.selectedCharacters;
    var charTypeMapping = st.charTypeMapping;
    var i$$9;
    var values$$4;
    var div$$2;
    var colorCoding = st.colorCoding;
    var firstColor;
    var index$$41;
    var temp;
    var shape;
    label$$1.id = node$$10.id;
    JAM.set(label$$1, "innerHTML", node$$10.name);
    JAM.set(label$$1, "onclick", v12);
    var style = label$$1.style;
    style.width = "auto";
    style.height = 17 + "px";
    style.cursor = "pointer";
    style.color = "#333";
    style.fontSize = "0.8em";
    style.textAlign = "left";
    style.paddingTop = "3px";
    style.display = "inline";
    style.color = node$$10.data.$color;
    var boxes = "";
    var first$$3 = st.config.firstCharacter;
    var shapes = ["box", "star", "triangle"];
    index$$41 = 0;
    boxes = "";
    i$$9 = 0;
    var v8803 = i$$9 < list.length;
    for (;v8803;) {
      char$$2 = list[i$$9];
      values$$4 = node$$10.data.character[char$$2];
      var v19271 = values$$4;
      if (v19271) {
        v19271 = values$$4.length > 0;
      }
      var v14745 = v19271;
      if (v14745) {
        v14745 = typeof values$$4[0] !== "undefined";
      }
      if (v14745) {
        if (charTypeMapping[char$$2] === st.config.typeEnum.quali) {
          temp = colorCoding[char$$2];
          value = values$$4[0];
          if (values$$4.length > 1) {
            value = "multiple";
          }
          shape = '<div class="' + temp[value].shape + '" style="float:left;background-color:' + temp[value].color + ';" title="' + char$$2 + " : " + JAM.call(values$$4.join, values$$4, [" , "], JAM.policy.p3) + '"></div>';
          if (i$$9 === 0) {
            firstColor = temp[value].color;
          }
        } else {
          if (charTypeMapping[char$$2] === st.config.typeEnum.quant) {
            temp = st.colorCodingQuali[char$$2];
            value = values$$4[0];
            index$$41 = JAM.call(st.findIndex, st, [value, st.range[char$$2]], JAM.policy.p3);
            shape = '<div class="' + temp[index$$41].shape + '" style="float:left;background-color:' + temp[index$$41].color + ';" title="' + char$$2 + " : " + temp[index$$41].name + '"></div>';
            if (i$$9 === 0) {
              firstColor = st.config.quantColor[st.config.quantColor.length - 1];
            }
          }
        }
      } else {
        shape = '<div class="empty" style="float:left;background-color:;" title="empty"></div>';
      }
      if (first$$3 !== char$$2) {
        boxes = boxes + shape;
      } else {
        boxes = shape + boxes;
      }
      i$$9 = i$$9 + 1;
      v8803 = i$$9 < list.length;
    }
    if (label$$1) {
      if (!node$$10.data.leaf) {
        JAM.set(label$$1, "innerHTML", boxes + '&nbsp;&nbsp;<div style="display:inline;color:' + firstColor + '">' + node$$10.data.leaves + " Taxa</div>");
      } else {
        JAM.set(label$$1, "innerHTML", boxes + '&nbsp;&nbsp;<div style="display:inline;color:' + firstColor + '">' + node$$10.name + "</div>");
      }
    }
    return;
  }
  function v11(msg) {
    if (msg) {
      JAM.call(Log.write, Log, [msg], JAM.policy.p3);
    } else {
      JAM.call(Log.write, Log, ["done"], JAM.policy.p3);
    }
    return;
  }
  function v10(node$$9) {
    JAM.call(Log.write, Log, ["loading " + node$$9.name], JAM.policy.p3);
    return;
  }
  function v9(div$$1, node$$8) {
    var url$$3 = "";
    var key$$16;
    var i$$8;
    var char$$1;
    var html$$4 = "";
    var name$$33 = "";
    var maptitle = "";
    var index$$40;
    if (!!node$$8.name) {
      var v19284 = node$$8.name;
      url$$3 = '<img class="tipImage" src="http://biocache.ala.org.au/ws/density/map?q=' + JAM.call(v19284.replace, v19284, [" ", "+"], JAM.policy.p3) + '"/>';
      maptitle = "<br/>ALA <strong>reported</strong> occurences";
      name$$33 = "<i>" + node$$8.name + "</i>";
    } else {
      name$$33 = " unnamed clade ";
    }
    name$$33 = name$$33 + "<strong> click</strong> for ";
    if (node$$8.data.leaf) {
      name$$33 = name$$33 + "for linked data";
    } else {
      name$$33 = "Part of " + name$$33;
      if (node$$8.length < 30) {
        name$$33 = name$$33 + "clade members";
      } else {
        name$$33 = name$$33 + "30 clade members";
      }
    }
    name$$33 = "<h3>" + name$$33 + "</h3>";
    var result$$2 = [];
    for (index$$40 in st.config.selectedCharacters) {
      key$$16 = st.config.selectedCharacters[index$$40];
      char$$1 = node$$8.data.character[key$$16];
      html$$4 = "<strong>" + key$$16 + "</strong>: ";
      var v19285 = typeof char$$1 === "undefined";
      if (!v19285) {
        v19285 = char$$1.length === 0;
      }
      var v14773 = v19285;
      if (!v14773) {
        v14773 = typeof char$$1[0] === "undefined";
      }
      if (v14773) {
        html$$4 = html$$4 + "&mdash;";
      } else {
        if (typeof char$$1[0] !== "number") {
          html$$4 = html$$4 + JAM.call(char$$1.join, char$$1, [",<br/>...."], JAM.policy.p3);
        } else {
          var v19289 = char$$1[0];
          html$$4 = html$$4 + JAM.call(v19289.toFixed, v19289, [4], JAM.policy.p3);
        }
      }
      JAM.call(result$$2.push, result$$2, [html$$4], JAM.policy.p3);
    }
    JAM.set(div$$1, "innerHTML", name$$33 + JAM.call(result$$2.join, result$$2, ["<br/>"], JAM.policy.p3) + maptitle + url$$3);
    return;
  }
  function v8() {
    var v8821 = JAM.call($, null, ["a.thumbImage1"], JAM.policy.p3);
    JAM.call(v8821.colorbox, v8821, [{iframe:true, width:"80%", height:"80%"}], JAM.policy.p3);
    return;
  }
  function v7(clade) {
    var tmpl = st.config.tmpl;
    var nodeList = [];
    var node$$7;
    var html$$3;
    var split;
    var i$$7 = 0;
    var v8825 = i$$7 < clade.length & i$$7 < 30;
    for (;v8825;) {
      node$$7 = {};
      node$$7.name = clade[i$$7].name;
      JAM.call(nodeList.push, nodeList, [node$$7], JAM.policy.p3);
      i$$7++;
      v8825 = i$$7 < clade.length & i$$7 < 30;
    }
    if (tmpl) {
      tmpl = JAM.call(_.template, _, [tmpl], JAM.policy.p3);
      html$$3 = JAM.call(tmpl, null, [{nodeList:nodeList}], JAM.policy.p3);
    } else {
    }
    return html$$3;
  }
  function v6(node$$6, eventInfo, e$$6) {
    function v5(elem$$2) {
      if (elem$$2.data.leaf) {
        if (leafs) {
          leafs = leafs + ("<li>" + elem$$2.name + "</li>");
        } else {
          leafs = "<li>" + elem$$2.name + "</li>";
        }
        JAM.call(selectedClade.push, selectedClade, [elem$$2], JAM.policy.p3);
      }
      return;
    }
    function v4$$1() {
      return;
    }
    var leafs;
    if (node$$6) {
      selectedClade = [];
      var expand = JAM.call($jit.id, $jit, ["expand"], JAM.policy.p3);
      var v8829 = st.labels;
      var pos$$3 = JAM.call(v8829.getLabel, v8829, [node$$6.id], JAM.policy.p3);
      var setRoot = JAM.call($jit.id, $jit, ["setRoot"], JAM.policy.p3);
      var rotate = JAM.call($jit.id, $jit, ["rotate"], JAM.policy.p3);
      var select = JAM.call($jit.id, $jit, ["selectClade"], JAM.policy.p3);
      var v19294 = pos$$3.style.left;
      var loc = parseInt(JAM.call(v19294.replace, v19294, [/px/, ""], JAM.policy.p3), 10) + 100;
      var v19295 = pos$$3.style.top;
      var locy = parseInt(JAM.call(v19295.replace, v19295, [/px/, ""], JAM.policy.p3), 10) + 40;
      if (setRoot.checked) {
        var id$$1 = node$$6.id;
        JAM.call(st.setRoot, st, [id$$1, "animate"], JAM.policy.p3);
        st.root = id$$1;
      }
      if (rotate.checked) {
        var v14787 = st.graph;
        JAM.call(st.computePositions, st, [JAM.call(v14787.getNode, v14787, [st.root], JAM.policy.p3), "start"], JAM.policy.p3);
        if (typeof node$$6.data.rotate === "undefined") {
          node$$6.data.rotate = false;
        }
        node$$6.data.rotate = !node$$6.data.rotate;
        var v14791 = st.graph;
        JAM.call(st.computePositions, st, [JAM.call(v14791.getNode, v14791, [st.root], JAM.policy.p3), "end"], JAM.policy.p3);
        var v8839 = st.fx;
        JAM.call(v8839.animate, v8839, [{modes:["linear", "node-property:alpha"], onComplete:v4$$1}], JAM.policy.p3);
      }
      if (expand.checked) {
        JAM.call(st.setCollapsed, st, [node$$6], JAM.policy.p3);
        var level$$7 = JAM.call(st.nodesExpCol, st, [node$$6], JAM.policy.p3);
        if (level$$7) {
          st.zoomIndex = level$$7;
        }
        var v14794 = st.graph;
        JAM.call(st.computePositions, st, [JAM.call(v14794.getNode, v14794, [st.root], JAM.policy.p3), ""], JAM.policy.p3);
        JAM.call(st.plot, st, [], JAM.policy.p3);
      }
      if (select.checked) {
        st.clickedNode = node$$6;
        JAM.call(node$$6.eachSubgraph, node$$6, [v5], JAM.policy.p3);
        popup$$1.style.display = "inline";
        popup$$1.style.top = locy + "px";
        popup$$1.style.left = loc + "px";
        var v8847 = popupText;
        var v14796 = st.config;
        var v31252 = JAM.call(v14796.presentClade, v14796, [selectedClade], JAM.policy.p3);
        JAM.set(v8847, "innerHTML", v31252);
        var v8848 = st.config;
        JAM.call(v8848.onPresentClade, v8848, [], JAM.policy.p3);
        JAM.call(st.plot, st, [], JAM.policy.p3);
      }
    }
    return;
  }
  function v3$$1() {
    st.canvas.element.style.cursor = "";
    var v8851 = st.tips;
    JAM.call(v8851.hide, v8851, [true], JAM.policy.p3);
    return;
  }
  function v2$$1(node$$5, event$$1, e$$5) {
    st.canvas.element.style.cursor = "pointer";
    var v8853 = st.tips.config;
    JAM.call(v8853.onShow, v8853, [st.tips.tip, node$$5], JAM.policy.p3);
    var v8855 = st.tips;
    var v14801 = $jit.util.event;
    JAM.call(v8855.setTooltipPosition, v8855, [JAM.call(v14801.getPos, v14801, [e$$5], JAM.policy.p3)], JAM.policy.p3);
    return;
  }
  function v1$$1(div, node$$4) {
    var url$$2 = "";
    var key$$15;
    var i$$6;
    var char;
    var html$$2 = "";
    var name$$32 = "";
    var index$$39;
    if (node$$4.data.leaf) {
      name$$32 = "<h3>" + node$$4.name + "</h3>";
      var v24018 = node$$4.name;
      var v19301 = JAM.call(v24018.split, v24018, [/\s+/], JAM.policy.p3);
      url$$2 = '<img class="tipImage" src="http://biocache.ala.org.au/ws/density/map?q=' + JAM.call(v19301.join, v19301, ["+"], JAM.policy.p3) + '"/>';
    }
    var result$$1 = [];
    for (index$$39 in st.config.selectedCharacters) {
      key$$15 = st.config.selectedCharacters[index$$39];
      char = node$$4.data.character[key$$15];
      html$$2 = "<strong>" + key$$15 + "</strong>: ";
      var v19302 = typeof char === "undefined";
      if (!v19302) {
        v19302 = char.length === 0;
      }
      var v14808 = v19302;
      if (!v14808) {
        v14808 = typeof char[0] === "undefined";
      }
      if (v14808) {
        html$$2 = html$$2 + "&mdash;";
      } else {
        if (typeof char[0] !== "number") {
          html$$2 = html$$2 + JAM.call(char.join, char, [","], JAM.policy.p3);
        } else {
          var v19306 = char[0];
          html$$2 = html$$2 + JAM.call(v19306.toFixed, v19306, [4], JAM.policy.p3);
        }
      }
      JAM.call(result$$1.push, result$$1, [html$$2], JAM.policy.p3);
    }
    JAM.set(div, "innerHTML", name$$32 + JAM.call(result$$1.join, result$$1, ["<br/>"], JAM.policy.p3) + url$$2);
    return;
  }
  function search(step$$1) {
    function v0$$1(node$$14) {
      var name$$34 = node$$14.name;
      var pattern$$1 = new RegExp(searchString, "i");
      if (JAM.call(name$$34.match, name$$34, [pattern$$1], JAM.policy.p3)) {
        JAM.call(result.push, result, [node$$14], JAM.policy.p3);
      }
      return;
    }
    var searchString = searchBtn.value;
    var len;
    var v8868 = st.graph;
    var root = JAM.call(v8868.getNode, v8868, [st.root], JAM.policy.p3);
    if (result.length > 0) {
      len = result.length;
      pos = nextStep(pos, step$$1, len);
      var v8870 = st.labels;
      var prevElem = JAM.call(v8870.getLabel, v8870, [result[nextStep(pos, -1 * step$$1, len)].id], JAM.policy.p3);
      prevElem.style.backgroundColor = "";
    }
    var v14815 = searchString;
    if (v14815) {
      v14815 = prevSearch !== searchString;
    }
    if (v14815) {
      result = [];
      prevSearch = searchString;
      JAM.call(root.eachSubgraph, root, [v0$$1], JAM.policy.p3);
      pos = nextStep(undefined, step$$1, len);
    } else {
      if (searchString === "") {
        result = [];
      }
    }
    if (result.length > 0) {
      var shownNode = result[pos];
      if (!shownNode.exist) {
        root.collapsed = true;
        JAM.call(st.nodesExpCol, st, [root], JAM.policy.p3);
        JAM.call(st.computePositions, st, [root, ""], JAM.policy.p3);
        JAM.call(st.plot, st, [], JAM.policy.p3);
      }
      var canvas$$1 = st.canvas;
      var oy = canvas$$1.translateOffsetY;
      var xTranslate = 0;
      var yTranslate = -oy;
      var v8877 = st.canvas;
      JAM.call(v8877.translate, v8877, [xTranslate, yTranslate], JAM.policy.p3);
      var v8878 = st.labels;
      var element$$2 = JAM.call(v8878.getLabel, v8878, [result[pos].id], JAM.policy.p3);
      element$$2.style.backgroundColor = "yellow";
      var v8881 = JAM.call(jQuery, null, [element$$2], JAM.policy.p3);
      JAM.call(v8881.click, v8881, [], JAM.policy.p3);
    }
    return;
  }
  function clickHandler() {
    var JSCompiler_object_inline_x_80;
    var JSCompiler_object_inline_y_81;
    switch(this.id) {
      case "north":
        JSCompiler_object_inline_x_80 = 0;
        JSCompiler_object_inline_y_81 = 10;
        true;
        break;
      case "west":
        JSCompiler_object_inline_x_80 = -10;
        JSCompiler_object_inline_y_81 = 0;
        true;
        break;
      case "east":
        JSCompiler_object_inline_x_80 = 10;
        JSCompiler_object_inline_y_81 = 0;
        true;
        break;
      case "south":
        JSCompiler_object_inline_x_80 = 0;
        JSCompiler_object_inline_y_81 = -10;
        true;
    }
    var canvas = st.canvas;
    JAM.call(canvas.translate, canvas, [JSCompiler_object_inline_x_80, JSCompiler_object_inline_y_81], JAM.policy.p3);
    return;
  }
  function zoomHandler() {
    var scroll;
    switch(this.id) {
      case "zoomIN":
        scroll = +1;
        break;
      case "zoomOUT":
        scroll = -1;
    }
    JAM.call(st.zoom, st, [scroll], JAM.policy.p3);
    return;
  }
  function nextStep(pos$$2, step, length$$11) {
    if (typeof pos$$2 === "undefined") {
      var v8886;
      if (step > 0) {
        v8886 = 0;
      } else {
        v8886 = length$$11 - 1;
      }
      return v8886;
    }
    var i$$4 = (pos$$2 + step) % length$$11;
    var v8889;
    if (i$$4 < 0) {
      v8889 = length$$11 + i$$4;
    } else {
      v8889 = i$$4;
    }
    return v8889;
  }
  function keyHandler(e$$4) {
    var ENTER = 13;
    var shift = e$$4.shiftKey;
    var v14837 = shift;
    if (v14837) {
      v14837 = e$$4.keyCode === ENTER;
    }
    if (v14837) {
      search(-1);
      if (e$$4.preventDefault) {
        JAM.call(e$$4.preventDefault, e$$4, [], JAM.policy.p3);
      }
      return false;
    } else {
      if (e$$4.keyCode === ENTER) {
        search(1);
        if (e$$4.preventDefault) {
          JAM.call(e$$4.preventDefault, e$$4, [], JAM.policy.p3);
        }
        return false;
      }
    }
    return;
  }
  var initial = {codeBase:"../..", width:550, height:800, alignName:true, lateralise:false, levelsToShow:10, branchMultiplier:1, tree:"((Replace:0.007667365048364433,(this:0.005369261896034483,(with:0.011621228506591308,your:2.100100506802205E-6):0.0027929350821030707):0.012281999999150084):0.0400709772514759,(((own:0.0012025949078822151,phylogeny:0.0024332420478173633):0.006421131153429474,(in:0.008984623535641459,(newick:0.0012074724370825796,form:0.004013224017395373):0.003744210327868966):0.00542385295016945):0.023689622298502563,(tree:0.036702751435909745,((take:0.002448206437464337,care:0.0024347868455663196):0.001504447318880206,(to:0.0023787045835393372,(remove:2.100100506802205E-6,quotes_and_other_html_special_characters:0.01728824049672087):0.010690121488212884):6.006911375427831E-4):0.005347250770554118):0.014788598652250115):0.0400709772514759);", 
  character:{"Replace":{"modelled annual mean moisture index":[.6837124164], "modelled annual mean rad":[17.1466667213], "modelled annual mean temp":[16.0416993341], "modelled annual precipitation":[1039.2849673203], "modelled clpk 1 1000 g clay":[18998.3660130718], "modelled erosional":[85.9191176471], "modelled highest period moisture index":[.8894836614], "modelled highest period radiation":[25.3393464394], "modelled hydraulic conductivity ksat":[157.4640522876], "modelled isothermality":[.4932352942], 
  "modelled lowest period moisture index":[.3231372576], "modelled lowest period radiation":[9.081829987], "modelled max temp warmest period":[28.0827450671], "modelled mean diurnal range":[11.3729411867], "modelled mean moisture index coldest quarter":[.8600326849], "modelled mean moisture index highest quarter MI":[.8941764697], "modelled mean moisture index lowest quater MI":[.3734836587], "modelled mean moisture index warmest quarter":[.4585424874], "modelled mean temp coldest quarter":[10.5782352927], 
  "modelled mean temp driest quater":[15.4166012935], "modelled mean temp warmer quarter":[20.968431512], "modelled mean temp wettest quarter":[15.8052941168], "modelled min temp coldest period":[4.1385621225], "modelled moisture index seasonality":[33.0339869281], "modelled phos":[.0438125788], "modelled precipitation coldets quarter":[255.5509803922], "modelled precipitation driest period":[5.322875817], "modelled precipitation driest quarter":[143.0516339869], "modelled precipitation seasonality":[39.0823529412], 
  "modelled precipitation warmest quarter":[292.9124183007], "modelled precipitation wettest period":[36.9261437908], "modelled precipitation wettest quarter":[423.4202614379], "modelled radiation coldest quarter":[10.6616340562], "modelled radiation driest quarter":[17.4772549498], "modelled radiation seasonality":[33.0607843137], "modelled radiation warmest quarter":[22.9215031792], "modelled radiation wettest quarter":[15.7764050234], "modelled relief":[64.9002548406], "modelled ridgetopflat":[1.964869281], 
  "modelled rockalklty":[4.9215686275], "modelled rockgrainsz":[4.1215686275], "modelled rockhardness":[5.8725490196], "modelled rocknutrnt":[4.7078431373], "modelled roughness":[19.0273797546], "modelled sapk 1 1000 g sand":[64840.3594771241], "modelled slope":[4.4690577426], "modelled soildepth":[.9153594758], "modelled solpawhc":[107.6281045752], "modelled temperature annual range":[23.24398698], "modelled temperature seasonality":[1.4140000156], "modelled thpk 1 1000 g thickness":[292.831372549], 
  "modelled twi":[5.5785338397], "modelled valleybottom":[8.4109477124], "modelled whpk 1 1000 g water cap":[44557.6633986928], "raw annual mean moisture index":[1E-7], "raw annual mean rad":[19], "raw annual mean temp":[21.5], "raw annual precipitation":[1111], "raw clpk 1 1000 g clay":[18E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25.5], "raw hydraulic conductivity ksat":[200], "raw lowest period moisture index":[0], "raw lowest period radiation":[14], 
  "raw max temp warmest period":[30], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.5], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[17], "raw mean temp driest quater":[18.5], "raw mean temp warmer quarter":[24.5], "raw mean temp wettest quarter":[24.5], "raw min temp coldest period":[11], "raw moisture index seasonality":[57], "raw precipitation coldets quarter":[82], 
  "raw precipitation driest period":[0], "raw precipitation driest quarter":[61], "raw precipitation seasonality":[99.5], "raw precipitation warmest quarter":[574.5], "raw precipitation wettest period":[72.5], "raw precipitation wettest quarter":[716], "raw radiation coldest quarter":[15.5], "raw radiation driest quarter":[19], "raw radiation seasonality":[18.5], "raw radiation warmest quarter":[22], "raw radiation wettest quarter":[19], "raw relief":[125], "raw ridgetopflat":[0], "raw rockalklty":[4], 
  "raw rockgrainsz":[8], "raw rockhardness":[7], "raw rocknutrnt":[4], "raw roughness":[11], "raw sapk 1 1000 g sand":[63E3], "raw slope":[6], "raw soildepth":[1], "raw solpawhc":[177], "raw temperature annual range":[18], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[295.5], "raw twi":[5.5], "raw valleybottom":[0]}, "this":{"modelled annual mean moisture index":[.6050000191], "modelled annual mean rad":[19.6500005722], "modelled annual mean temp":[21.75], "modelled annual precipitation":[1111], 
  "modelled clpk 1 1000 g clay":[18E3], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[26.1500005722], "modelled hydraulic conductivity ksat":[200], "modelled isothermality":[.5150000155], "modelled lowest period moisture index":[.1199999973], "modelled lowest period radiation":[14.3499999046], "modelled max temp warmest period":[30.1999998093], "modelled mean diurnal range":[9.6500000954], "modelled mean moisture index coldest quarter":[.5400000066], 
  "modelled mean moisture index highest quarter MI":[.9950000048], "modelled mean moisture index lowest quater MI":[.1750000007], "modelled mean moisture index warmest quarter":[.7150000036], "modelled mean temp coldest quarter":[17.4500007629], "modelled mean temp driest quater":[18.8999996185], "modelled mean temp warmer quarter":[25.1499996185], "modelled mean temp wettest quarter":[24.8500003815], "modelled min temp coldest period":[11.5999999046], "modelled moisture index seasonality":[57], 
  "modelled phos":[.0198370004], "modelled precipitation coldets quarter":[82], "modelled precipitation driest period":[0], "modelled precipitation driest quarter":[61], "modelled precipitation seasonality":[99.5], "modelled precipitation warmest quarter":[574.5], "modelled precipitation wettest period":[72.5], "modelled precipitation wettest quarter":[716], "modelled radiation coldest quarter":[15.9499998093], "modelled radiation driest quarter":[19.1999998093], "modelled radiation seasonality":[18.5], 
  "modelled radiation warmest quarter":[22.3999996185], "modelled radiation wettest quarter":[19.6000003815], "modelled relief":[125.4036026001], "modelled ridgetopflat":[0], "modelled rockalklty":[4], "modelled rockgrainsz":[8], "modelled rockhardness":[7], "modelled rocknutrnt":[4], "modelled roughness":[11.5456476212], "modelled sapk 1 1000 g sand":[63E3], "modelled slope":[6.512172699], "modelled soildepth":[1.25], "modelled solpawhc":[177], "modelled temperature annual range":[18.6500005722], 
  "modelled temperature seasonality":[1.0499999523], "modelled thpk 1 1000 g thickness":[295.5], "modelled twi":[5.6324121952], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[5E4], "raw annual mean moisture index":[0], "raw annual mean rad":[19], "raw annual mean temp":[21.75], "raw annual precipitation":[1107], "raw clpk 1 1000 g clay":[19E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25.25], "raw hydraulic conductivity ksat":[250], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[14], "raw max temp warmest period":[30], "raw mean diurnal range":[8.5], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.25], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[17.5], "raw mean temp driest quater":[18.75], "raw mean temp warmer quarter":[24.75], "raw mean temp wettest quarter":[24.75], "raw min temp coldest period":[11.5], 
  "raw moisture index seasonality":[61.5], "raw precipitation coldets quarter":[74.5], "raw precipitation driest period":[0], "raw precipitation driest quarter":[55], "raw precipitation seasonality":[103.75], "raw precipitation warmest quarter":[608.75], "raw precipitation wettest period":[75.75], "raw precipitation wettest quarter":[731.5], "raw radiation coldest quarter":[15.25], "raw radiation driest quarter":[19], "raw radiation seasonality":[18.25], "raw radiation warmest quarter":[21.5], "raw radiation wettest quarter":[19], 
  "raw relief":[162], "raw ridgetopflat":[0], "raw rockalklty":[4], "raw rockgrainsz":[8], "raw rockhardness":[7], "raw rocknutrnt":[4], "raw roughness":[15.5], "raw sapk 1 1000 g sand":[61500], "raw slope":[7.5], "raw soildepth":[1], "raw solpawhc":[183], "raw temperature annual range":[17.5], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[285.25], "raw twi":[4.75], "raw valleybottom":[0]}, "with":{"modelled annual mean moisture index":[.9200000167], "modelled annual mean rad":[16.8999996185], 
  "modelled annual mean temp":[19.3999996185], "modelled annual precipitation":[1778], "modelled clpk 1 1000 g clay":[14E3], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[22.8999996185], "modelled hydraulic conductivity ksat":[300], "modelled isothermality":[.4900000095], "modelled lowest period moisture index":[.7300000191], "modelled lowest period radiation":[10.8000001907], "modelled max temp warmest period":[27.7999992371], "modelled mean diurnal range":[9.5], 
  "modelled mean moisture index coldest quarter":[1], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.75], "modelled mean moisture index warmest quarter":[.9200000167], "modelled mean temp coldest quarter":[14.6000003815], "modelled mean temp driest quater":[16.1000003815], "modelled mean temp warmer quarter":[23.5], "modelled mean temp wettest quarter":[23.1000003815], "modelled min temp coldest period":[8.1999998093], "modelled moisture index seasonality":[12], 
  "modelled phos":[.0327499993], "modelled precipitation coldets quarter":[258], "modelled precipitation driest period":[11], "modelled precipitation driest quarter":[211], "modelled precipitation seasonality":[46], "modelled precipitation warmest quarter":[670], "modelled precipitation wettest period":[66], "modelled precipitation wettest quarter":[730], "modelled radiation coldest quarter":[12.8999996185], "modelled radiation driest quarter":[16.2999992371], "modelled radiation seasonality":[24], 
  "modelled radiation warmest quarter":[20.1000003815], "modelled radiation wettest quarter":[18.2999992371], "modelled relief":[178.5762023926], "modelled ridgetopflat":[0], "modelled rockalklty":[5], "modelled rockgrainsz":[3], "modelled rockhardness":[4], "modelled rocknutrnt":[4], "modelled roughness":[72.862159729], "modelled sapk 1 1000 g sand":[69E3], "modelled slope":[10.0389699936], "modelled soildepth":[1], "modelled solpawhc":[169], "modelled temperature annual range":[19.5], "modelled temperature seasonality":[1.2000000477], 
  "modelled thpk 1 1000 g thickness":[599], "modelled twi":[2.5513501167], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[117E3], "raw annual mean moisture index":[0], "raw annual mean rad":[16], "raw annual mean temp":[19], "raw annual precipitation":[1778], "raw clpk 1 1000 g clay":[14E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[22], "raw hydraulic conductivity ksat":[300], "raw lowest period moisture index":[0], "raw lowest period radiation":[10], 
  "raw max temp warmest period":[27], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[1], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[14], "raw mean temp driest quater":[16], "raw mean temp warmer quarter":[23], "raw mean temp wettest quarter":[23], "raw min temp coldest period":[8], "raw moisture index seasonality":[12], "raw precipitation coldets quarter":[258], 
  "raw precipitation driest period":[11], "raw precipitation driest quarter":[211], "raw precipitation seasonality":[46], "raw precipitation warmest quarter":[670], "raw precipitation wettest period":[66], "raw precipitation wettest quarter":[730], "raw radiation coldest quarter":[12], "raw radiation driest quarter":[16], "raw radiation seasonality":[24], "raw radiation warmest quarter":[20], "raw radiation wettest quarter":[18], "raw relief":[178], "raw ridgetopflat":[0], "raw rockalklty":[5], "raw rockgrainsz":[3], 
  "raw rockhardness":[4], "raw rocknutrnt":[4], "raw roughness":[72], "raw sapk 1 1000 g sand":[69E3], "raw slope":[10], "raw soildepth":[1], "raw solpawhc":[169], "raw temperature annual range":[19], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[599], "raw twi":[2], "raw valleybottom":[0]}, "your":{"modelled annual mean moisture index":[.8323181818], "modelled annual mean rad":[17.9524242387], "modelled annual mean temp":[19.2898482727], "modelled annual precipitation":[1888.3636363636], 
  "modelled clpk 1 1000 g clay":[25214.7727272727], "modelled erosional":[92.8787878788], "modelled highest period moisture index":[.998939395], "modelled highest period radiation":[24.5178788503], "modelled hydraulic conductivity ksat":[205.6212121212], "modelled isothermality":[.5086363656], "modelled lowest period moisture index":[.4447727201], "modelled lowest period radiation":[12.1872727221], "modelled max temp warmest period":[28.0525757327], "modelled mean diurnal range":[9.485757533], "modelled mean moisture index coldest quarter":[.8951666693], 
  "modelled mean moisture index highest quarter MI":[.9978787867], "modelled mean moisture index lowest quater MI":[.5378636367], "modelled mean moisture index warmest quarter":[.8636969721], "modelled mean temp coldest quarter":[14.951212141], "modelled mean temp driest quater":[16.7531818144], "modelled mean temp warmer quarter":[22.9656060132], "modelled mean temp wettest quarter":[22.5318182165], "modelled min temp coldest period":[9.4287879063], "modelled moisture index seasonality":[25.9621212121], 
  "modelled phos":[.0453631317], "modelled precipitation coldets quarter":[235.6090909091], "modelled precipitation driest period":[6.7242424242], "modelled precipitation driest quarter":[167.2409090909], "modelled precipitation seasonality":[68.203030303], "modelled precipitation warmest quarter":[790.2136363636], "modelled precipitation wettest period":[88.2606060606], "modelled precipitation wettest quarter":[970.5196969697], "modelled radiation coldest quarter":[14.1262121605], "modelled radiation driest quarter":[17.7987878742], 
  "modelled radiation seasonality":[21.6636363636], "modelled radiation warmest quarter":[20.8286361521], "modelled radiation wettest quarter":[18.6671213323], "modelled relief":[151.1616860035], "modelled ridgetopflat":[0], "modelled rockalklty":[4.7151515152], "modelled rockgrainsz":[5.5742424242], "modelled rockhardness":[6.2560606061], "modelled rocknutrnt":[4.5742424242], "modelled roughness":[14.6029429806], "modelled sapk 1 1000 g sand":[54667.803030303], "modelled slope":[8.4508264353], "modelled soildepth":[1.1122727402], 
  "modelled solpawhc":[155.3090909091], "modelled temperature annual range":[18.6489395503], "modelled temperature seasonality":[1.0938939283], "modelled thpk 1 1000 g thickness":[301.3257575758], "modelled twi":[5.6370893103], "modelled valleybottom":[7.1212121212], "modelled whpk 1 1000 g water cap":[51557.1969696969], "raw annual mean moisture index":[0], "raw annual mean rad":[17.6111111111], "raw annual mean temp":[18.5], "raw annual precipitation":[1925.8333333333], "raw clpk 1 1000 g clay":[26833.3333333333], 
  "raw erosional":[94.4444444444], "raw highest period moisture index":[.9444444444], "raw highest period radiation":[24.1111111111], "raw hydraulic conductivity ksat":[196.1111111111], "raw lowest period moisture index":[0], "raw lowest period radiation":[11.8333333333], "raw max temp warmest period":[27.4444444444], "raw mean diurnal range":[9.2777777778], "raw mean moisture index coldest quarter":[.3888888889], "raw mean moisture index highest quarter MI":[.9444444444], "raw mean moisture index lowest quater MI":[0], 
  "raw mean moisture index warmest quarter":[.0555555556], "raw mean temp coldest quarter":[14.1111111111], "raw mean temp driest quater":[15.8888888889], "raw mean temp warmer quarter":[22.1666666667], "raw mean temp wettest quarter":[21.7222222222], "raw min temp coldest period":[8.5555555556], "raw moisture index seasonality":[24.3333333333], "raw precipitation coldets quarter":[238.8888888889], "raw precipitation driest period":[6.5], "raw precipitation driest quarter":[169.1666666667], "raw precipitation seasonality":[69.4444444444], 
  "raw precipitation warmest quarter":[812.7222222222], "raw precipitation wettest period":[91.2777777778], "raw precipitation wettest quarter":[998.7222222222], "raw radiation coldest quarter":[13.6666666667], "raw radiation driest quarter":[17.1666666667], "raw radiation seasonality":[21.3333333333], "raw radiation warmest quarter":[20.3333333333], "raw radiation wettest quarter":[18.2777777778], "raw relief":[163.1111111111], "raw ridgetopflat":[0], "raw rockalklty":[4.3888888889], "raw rockgrainsz":[5.5], 
  "raw rockhardness":[6.0555555556], "raw rocknutrnt":[4.4444444444], "raw roughness":[11.8888888889], "raw sapk 1 1000 g sand":[52583.3333333333], "raw slope":[8.5], "raw soildepth":[.8333333333], "raw solpawhc":[156.6666666667], "raw temperature annual range":[18.6111111111], "raw temperature seasonality":[.6111111111], "raw thpk 1 1000 g thickness":[272.0555555556], "raw twi":[5.0555555556], "raw valleybottom":[5.5555555556]}, "own":{"modelled annual mean moisture index":[.9350000024], "modelled annual mean rad":[18.0500001907], 
  "modelled annual mean temp":[20.1999998093], "modelled annual precipitation":[2948], "modelled clpk 1 1000 g clay":[42E3], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[25.0500001907], "modelled hydraulic conductivity ksat":[300], "modelled isothermality":[.5400000215], "modelled lowest period moisture index":[.5549999774], "modelled lowest period radiation":[12.4000000954], "modelled max temp warmest period":[28.6499996185], "modelled mean diurnal range":[9.4500002861], 
  "modelled mean moisture index coldest quarter":[1], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.7350000143], "modelled mean moisture index warmest quarter":[.9200000167], "modelled mean temp coldest quarter":[16.4500007629], "modelled mean temp driest quater":[19.4000005722], "modelled mean temp warmer quarter":[23.4000005722], "modelled mean temp wettest quarter":[22.6499996185], "modelled min temp coldest period":[11.3000001907], "modelled moisture index seasonality":[14], 
  "modelled phos":[.0769999996], "modelled precipitation coldets quarter":[428.5], "modelled precipitation driest period":[12.5], "modelled precipitation driest quarter":[247], "modelled precipitation seasonality":[68.5], "modelled precipitation warmest quarter":[1054], "modelled precipitation wettest period":[131], "modelled precipitation wettest quarter":[1492], "modelled radiation coldest quarter":[14.75], "modelled radiation driest quarter":[19.6499996185], "modelled radiation seasonality":[20], 
  "modelled radiation warmest quarter":[20.75], "modelled radiation wettest quarter":[18.0500001907], "modelled relief":[93.9310970306], "modelled ridgetopflat":[0], "modelled rockalklty":[6], "modelled rockgrainsz":[4], "modelled rockhardness":[7], "modelled rocknutrnt":[6], "modelled roughness":[4.0198574662], "modelled sapk 1 1000 g sand":[44E3], "modelled slope":[5.4142469168], "modelled soildepth":[1.1000000238], "modelled solpawhc":[171], "modelled temperature annual range":[17.4000005722], 
  "modelled temperature seasonality":[.9499999881], "modelled thpk 1 1000 g thickness":[150], "modelled twi":[5.4885058403], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[33E3], "raw annual mean moisture index":[0], "raw annual mean rad":[18], "raw annual mean temp":[20], "raw annual precipitation":[3017.6666666667], "raw clpk 1 1000 g clay":[42E3], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25], "raw hydraulic conductivity ksat":[300], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[12], "raw max temp warmest period":[28], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[1], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[16], "raw mean temp driest quater":[19], "raw mean temp warmer quarter":[23], "raw mean temp wettest quarter":[22], "raw min temp coldest period":[11], 
  "raw moisture index seasonality":[13.6666666667], "raw precipitation coldets quarter":[437], "raw precipitation driest period":[12.6666666667], "raw precipitation driest quarter":[252.3333333333], "raw precipitation seasonality":[68.6666666667], "raw precipitation warmest quarter":[1077.3333333333], "raw precipitation wettest period":[134.3333333333], "raw precipitation wettest quarter":[1531], "raw radiation coldest quarter":[14], "raw radiation driest quarter":[19], "raw radiation seasonality":[20], 
  "raw radiation warmest quarter":[20], "raw radiation wettest quarter":[18], "raw relief":[113], "raw ridgetopflat":[0], "raw rockalklty":[6], "raw rockgrainsz":[4], "raw rockhardness":[7], "raw rocknutrnt":[6], "raw roughness":[4.6666666667], "raw sapk 1 1000 g sand":[44E3], "raw slope":[6.3333333333], "raw soildepth":[1], "raw solpawhc":[165.6666666667], "raw temperature annual range":[17], "raw temperature seasonality":[0], "raw thpk 1 1000 g thickness":[150], "raw twi":[5.3333333333], "raw valleybottom":[0]}, 
  "phylogeny":{"modelled annual mean moisture index":[.8325000107], "modelled annual mean rad":[18.5249996185], "modelled annual mean temp":[20.9250001907], "modelled annual precipitation":[2179.25], "modelled clpk 1 1000 g clay":[35250], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[25.2750000954], "modelled hydraulic conductivity ksat":[250], "modelled isothermality":[.5450000167], "modelled lowest period moisture index":[.3475000001], 
  "modelled lowest period radiation":[13.3499999046], "modelled max temp warmest period":[29.2249999046], "modelled mean diurnal range":[9.5], "modelled mean moisture index coldest quarter":[.8774999976], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.4975000024], "modelled mean moisture index warmest quarter":[.8824999928], "modelled mean temp coldest quarter":[17.125], "modelled mean temp driest quater":[19.0499997139], "modelled mean temp warmer quarter":[24.0749998093], 
  "modelled mean temp wettest quarter":[23.5500001907], "modelled min temp coldest period":[11.75], "modelled moisture index seasonality":[28.5], "modelled phos":[.0491249994], "modelled precipitation coldets quarter":[234.25], "modelled precipitation driest period":[5.5], "modelled precipitation driest quarter":[157.75], "modelled precipitation seasonality":[79], "modelled precipitation warmest quarter":[919.25], "modelled precipitation wettest period":[108.75], "modelled precipitation wettest quarter":[1209.25], 
  "modelled radiation coldest quarter":[15.4999997616], "modelled radiation driest quarter":[18.9500002861], "modelled radiation seasonality":[18.75], "modelled radiation warmest quarter":[21], "modelled radiation wettest quarter":[18.4499998093], "modelled relief":[191.561460495], "modelled ridgetopflat":[0], "modelled rockalklty":[4.5], "modelled rockgrainsz":[4.5], "modelled rockhardness":[6.5], "modelled rocknutrnt":[5.5], "modelled roughness":[11.7312440872], "modelled sapk 1 1000 g sand":[46500], 
  "modelled slope":[10.01773417], "modelled soildepth":[1.2000000179], "modelled solpawhc":[164.5], "modelled temperature annual range":[17.4500000477], "modelled temperature seasonality":[.9424999952], "modelled thpk 1 1000 g thickness":[195.25], "modelled twi":[7.2423673272], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[35500], "raw annual mean moisture index":[0], "raw annual mean rad":[18], "raw annual mean temp":[20.5], "raw annual precipitation":[2179.25], "raw clpk 1 1000 g clay":[35250], 
  "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[25], "raw hydraulic conductivity ksat":[250], "raw lowest period moisture index":[0], "raw lowest period radiation":[13], "raw max temp warmest period":[28.5], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[.75], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[16.75], 
  "raw mean temp driest quater":[18.75], "raw mean temp warmer quarter":[23.75], "raw mean temp wettest quarter":[23], "raw min temp coldest period":[11], "raw moisture index seasonality":[28.5], "raw precipitation coldets quarter":[234.25], "raw precipitation driest period":[5.5], "raw precipitation driest quarter":[157.75], "raw precipitation seasonality":[79], "raw precipitation warmest quarter":[919.25], "raw precipitation wettest period":[108.75], "raw precipitation wettest quarter":[1209.25], 
  "raw radiation coldest quarter":[15.25], "raw radiation driest quarter":[18.75], "raw radiation seasonality":[18.75], "raw radiation warmest quarter":[20.75], "raw radiation wettest quarter":[18], "raw relief":[191], "raw ridgetopflat":[0], "raw rockalklty":[4.5], "raw rockgrainsz":[4.5], "raw rockhardness":[6.5], "raw rocknutrnt":[5.5], "raw roughness":[11.25], "raw sapk 1 1000 g sand":[46500], "raw slope":[9.5], "raw soildepth":[1], "raw solpawhc":[164.5], "raw temperature annual range":[17], 
  "raw temperature seasonality":[.25], "raw thpk 1 1000 g thickness":[195.25], "raw twi":[6.75], "raw valleybottom":[0]}, "in":{"modelled annual mean moisture index":[.8511999941], "modelled annual mean rad":[17.7549997139], "modelled annual mean temp":[20.1320000076], "modelled annual precipitation":[2004.6], "modelled clpk 1 1000 g clay":[24337.5], "modelled erosional":[100], "modelled highest period moisture index":[1], "modelled highest period radiation":[24.4609998512], "modelled hydraulic conductivity ksat":[230], 
  "modelled isothermality":[.519799999], "modelled lowest period moisture index":[.4349999921], "modelled lowest period radiation":[11.9399999428], "modelled max temp warmest period":[28.5809999847], "modelled mean diurnal range":[9.3529999971], "modelled mean moisture index coldest quarter":[.9477999979], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.5399000007], "modelled mean moisture index warmest quarter":[.8883000004], "modelled mean temp coldest quarter":[16.0029999352], 
  "modelled mean temp driest quater":[17.4470001602], "modelled mean temp warmer quarter":[23.6520002556], "modelled mean temp wettest quarter":[23.2579998207], "modelled min temp coldest period":[10.5970001769], "modelled moisture index seasonality":[24.44], "modelled phos":[.0236599989], "modelled precipitation coldets quarter":[229.2], "modelled precipitation driest period":[8.44], "modelled precipitation driest quarter":[170.66], "modelled precipitation seasonality":[66.77], "modelled precipitation warmest quarter":[871.37], 
  "modelled precipitation wettest period":[92.64], "modelled precipitation wettest quarter":[1050.83], "modelled radiation coldest quarter":[14.0290001678], "modelled radiation driest quarter":[17.2499999809], "modelled radiation seasonality":[21.92], "modelled radiation warmest quarter":[20.4790001106], "modelled radiation wettest quarter":[18.3959999466], "modelled relief":[180.825651741], "modelled ridgetopflat":[0], "modelled rockalklty":[4.92], "modelled rockgrainsz":[6.22], "modelled rockhardness":[6.34], 
  "modelled rocknutrnt":[4.34], "modelled roughness":[41.1613443279], "modelled sapk 1 1000 g sand":[52267.5], "modelled slope":[10.5619576693], "modelled soildepth":[1.3479999959], "modelled solpawhc":[183.33], "modelled temperature annual range":[17.9670000267], "modelled temperature seasonality":[1.0439999992], "modelled thpk 1 1000 g thickness":[226.16], "modelled twi":[5.7365186501], "modelled valleybottom":[1.0625], "modelled whpk 1 1000 g water cap":[35632.5], "raw annual mean moisture index":[0], 
  "raw annual mean rad":[17], "raw annual mean temp":[18.8571428571], "raw annual precipitation":[1932.7142857143], "raw clpk 1 1000 g clay":[23678.5714285714], "raw erosional":[100], "raw highest period moisture index":[1], "raw highest period radiation":[24.1428571429], "raw hydraulic conductivity ksat":[242.8571428571], "raw lowest period moisture index":[0], "raw lowest period radiation":[11], "raw max temp warmest period":[27.4285714286], "raw mean diurnal range":[9], "raw mean moisture index coldest quarter":[.4285714286], 
  "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[14.5714285714], "raw mean temp driest quater":[16], "raw mean temp warmer quarter":[22.5714285714], "raw mean temp wettest quarter":[22.1428571429], "raw min temp coldest period":[9.2857142857], "raw moisture index seasonality":[23.5714285714], "raw precipitation coldets quarter":[226.2857142857], "raw precipitation driest period":[8.4285714286], 
  "raw precipitation driest quarter":[171.4285714286], "raw precipitation seasonality":[64.8571428571], "raw precipitation warmest quarter":[833.5714285714], "raw precipitation wettest period":[89], "raw precipitation wettest quarter":[1003.5714285714], "raw radiation coldest quarter":[13.1428571429], "raw radiation driest quarter":[16.4285714286], "raw radiation seasonality":[22.8571428571], "raw radiation warmest quarter":[20.2857142857], "raw radiation wettest quarter":[17.8571428571], "raw relief":[182.5714285714], 
  "raw ridgetopflat":[0], "raw rockalklty":[4], "raw rockgrainsz":[4.8571428571], "raw rockhardness":[5.1428571429], "raw rocknutrnt":[3.7142857143], "raw roughness":[29.7142857143], "raw sapk 1 1000 g sand":[54535.7142857143], "raw slope":[10.1428571429], "raw soildepth":[1], "raw solpawhc":[188.7142857143], "raw temperature annual range":[18], "raw temperature seasonality":[.4285714286], "raw thpk 1 1000 g thickness":[253.4285714286], "raw twi":[4.8571428571], "raw valleybottom":[0]}, "newick":{"modelled annual mean moisture index":[.8419692351], 
  "modelled annual mean rad":[15.4089230904], "modelled annual mean temp":[11.7830769011], "modelled annual precipitation":[1282.2246153846], "modelled clpk 1 1000 g clay":[21682.3076923077], "modelled erosional":[98.4807692308], "modelled highest period moisture index":[.9973846157], "modelled highest period radiation":[24.0646153729], "modelled hydraulic conductivity ksat":[180.3692307692], "modelled isothermality":[.4703076909], "modelled lowest period moisture index":[.48273846], "modelled lowest period radiation":[7.0495384554], 
  "modelled max temp warmest period":[23.5836921927], "modelled mean diurnal range":[10.2701538335], "modelled mean moisture index coldest quarter":[.9867076942], "modelled mean moisture index highest quarter MI":[.9953846163], "modelled mean moisture index lowest quater MI":[.5702769235], "modelled mean moisture index warmest quarter":[.6286461528], "modelled mean temp coldest quarter":[6.664307713], "modelled mean temp driest quater":[12.2307692], "modelled mean temp warmer quarter":[16.8929231204], 
  "modelled mean temp wettest quarter":[11.9966153483], "modelled min temp coldest period":[1.7335384761], "modelled moisture index seasonality":[22.3753846154], "modelled phos":[.0354398355], "modelled precipitation coldets quarter":[316.5815384615], "modelled precipitation driest period":[13.1261538462], "modelled precipitation driest quarter":[212.48], "modelled precipitation seasonality":[25.9846153846], "modelled precipitation warmest quarter":[333.4307692308], "modelled precipitation wettest period":[39.5076923077], 
  "modelled precipitation wettest quarter":[446.7507692308], "modelled radiation coldest quarter":[8.8353845684], "modelled radiation driest quarter":[17.0212307989], "modelled radiation seasonality":[39.0307692308], "modelled radiation warmest quarter":[21.3784615619], "modelled radiation wettest quarter":[14.3270768371], "modelled relief":[156.8749819389], "modelled ridgetopflat":[.2884615385], "modelled rockalklty":[4.6646153846], "modelled rockgrainsz":[4.6615384615], "modelled rockhardness":[5.8615384615], 
  "modelled rocknutrnt":[4.5569230769], "modelled roughness":[9.5328148233], "modelled sapk 1 1000 g sand":[58780.7692307692], "modelled slope":[9.5631930516], "modelled soildepth":[1.0756923059], "modelled solpawhc":[151.4553846154], "modelled temperature annual range":[21.8473846553], "modelled temperature seasonality":[1.4144307659], "modelled thpk 1 1000 g thickness":[278.2092307692], "modelled twi":[4.8256355231], "modelled valleybottom":[.4807692308], "modelled whpk 1 1000 g water cap":[45223.0769230769], 
  "raw annual mean moisture index":[.0083333333], "raw annual mean rad":[15], "raw annual mean temp":[11.5], "raw annual precipitation":[1295.7833333333], "raw clpk 1 1000 g clay":[22614.5833333333], "raw erosional":[98.5166666667], "raw highest period moisture index":[.9583333333], "raw highest period radiation":[23.625], "raw hydraulic conductivity ksat":[181.4166666667], "raw lowest period moisture index":[0], "raw lowest period radiation":[6.7916666667], "raw max temp warmest period":[23.2833333333], 
  "raw mean diurnal range":[9.8083333333], "raw mean moisture index coldest quarter":[.6333333333], "raw mean moisture index highest quarter MI":[.8583333333], "raw mean moisture index lowest quater MI":[.0083333333], "raw mean moisture index warmest quarter":[.0083333333], "raw mean temp coldest quarter":[6.4], "raw mean temp driest quater":[11.8333333333], "raw mean temp warmer quarter":[16.6], "raw mean temp wettest quarter":[11.9], "raw min temp coldest period":[1.75], "raw moisture index seasonality":[22.375], 
  "raw precipitation coldets quarter":[312.6666666667], "raw precipitation driest period":[13.0083333333], "raw precipitation driest quarter":[212.0583333333], "raw precipitation seasonality":[26.6833333333], "raw precipitation warmest quarter":[347.1833333333], "raw precipitation wettest period":[40.8166666667], "raw precipitation wettest quarter":[460.0583333333], "raw radiation coldest quarter":[8.4333333333], "raw radiation driest quarter":[16.5416666667], "raw radiation seasonality":[38.6916666667], 
  "raw radiation warmest quarter":[20.8916666667], "raw radiation wettest quarter":[13.8916666667], "raw relief":[157], "raw ridgetopflat":[.1], "raw rockalklty":[4.4083333333], "raw rockgrainsz":[4.6083333333], "raw rockhardness":[5.8], "raw rocknutrnt":[4.35], "raw roughness":[9.5166666667], "raw sapk 1 1000 g sand":[57129.1666666667], "raw slope":[9.1583333333], "raw soildepth":[.6083333333], "raw solpawhc":[151.35], "raw temperature annual range":[21.4333333333], "raw temperature seasonality":[.9416666667], 
  "raw thpk 1 1000 g thickness":[279.0416666667], "raw twi":[4.5416666667], "raw valleybottom":[.6083333333]}, "form":{"modelled annual mean moisture index":[.9756666799], "modelled annual mean rad":[12.0000000954], "modelled annual mean temp":[8.4266665936], "modelled annual precipitation":[1407.3333333333], "modelled clpk 1 1000 g clay":[24058.3333333333], "modelled erosional":[99.1666666667], "modelled highest period moisture index":[1], "modelled highest period radiation":[20.980000178], "modelled hydraulic conductivity ksat":[166.6666666667], 
  "modelled isothermality":[.4939999938], "modelled lowest period moisture index":[.8756666621], "modelled lowest period radiation":[3.9166666349], "modelled max temp warmest period":[18.3566667557], "modelled mean diurnal range":[8.6166667461], "modelled mean moisture index coldest quarter":[1], "modelled mean moisture index highest quarter MI":[1], "modelled mean moisture index lowest quater MI":[.9139999986], "modelled mean moisture index warmest quarter":[.9393333415], "modelled mean temp coldest quarter":[4.6199999571], 
  "modelled mean temp driest quater":[12.2033334096], "modelled mean temp warmer quarter":[12.313333416], "modelled mean temp wettest quarter":[6.9966665745], "modelled min temp coldest period":[1.009999985], "modelled moisture index seasonality":[4.4], "modelled phos":[.0296393858], "modelled precipitation coldets quarter":[405], "modelled precipitation driest period":[18.4333333333], "modelled precipitation driest quarter":[267.1666666667], "modelled precipitation seasonality":[17.3666666667], 
  "modelled precipitation warmest quarter":[272.2], "modelled precipitation wettest period":[36.7], "modelled precipitation wettest quarter":[425.8333333333], "modelled radiation coldest quarter":[5.6500000318], "modelled radiation driest quarter":[17.3266669591], "modelled radiation seasonality":[50.7666666667], "modelled radiation warmest quarter":[18.4133333206], "modelled radiation wettest quarter":[11.630000035], "modelled relief":[187.601335907], "modelled ridgetopflat":[0], "modelled rockalklty":[5.8], 
  "modelled rockgrainsz":[5.0333333333], "modelled rockhardness":[5.7666666667], "modelled rocknutrnt":[5.7666666667], "modelled roughness":[11.1428800742], "modelled sapk 1 1000 g sand":[54641.6666666666], "modelled slope":[12.2245521386], "modelled soildepth":[1.0466666738], "modelled solpawhc":[160.1666666667], "modelled temperature annual range":[17.3433331172], "modelled temperature seasonality":[1.0673333148], "modelled thpk 1 1000 g thickness":[322.6333333333], "modelled twi":[5.1204978943], 
  "modelled valleybottom":[.8333333333], "modelled whpk 1 1000 g water cap":[53558.3333333333], "raw annual mean moisture index":[.0909090909], "raw annual mean rad":[11.7272727273], "raw annual mean temp":[7.9090909091], "raw annual precipitation":[1400], "raw clpk 1 1000 g clay":[25386.3636363636], "raw erosional":[99.3636363636], "raw highest period moisture index":[1], "raw highest period radiation":[20.8181818182], "raw hydraulic conductivity ksat":[172.7272727273], "raw lowest period moisture index":[.0909090909], 
  "raw lowest period radiation":[3.8181818182], "raw max temp warmest period":[18.0909090909], "raw mean diurnal range":[8.2727272727], "raw mean moisture index coldest quarter":[1], "raw mean moisture index highest quarter MI":[1], "raw mean moisture index lowest quater MI":[.0909090909], "raw mean moisture index warmest quarter":[.0909090909], "raw mean temp coldest quarter":[4.2727272727], "raw mean temp driest quater":[11.9090909091], "raw mean temp warmer quarter":[11.9090909091], "raw mean temp wettest quarter":[6.2727272727], 
  "raw min temp coldest period":[.6363636364], "raw moisture index seasonality":[4.5454545455], "raw precipitation coldets quarter":[404.1818181818], "raw precipitation driest period":[18], "raw precipitation driest quarter":[264.1818181818], "raw precipitation seasonality":[17.6363636364], "raw precipitation warmest quarter":[269], "raw precipitation wettest period":[36.3636363636], "raw precipitation wettest quarter":[423.1818181818], "raw radiation coldest quarter":[5.0909090909], "raw radiation driest quarter":[17.1818181818], 
  "raw radiation seasonality":[50.5454545455], "raw radiation warmest quarter":[18.0909090909], "raw radiation wettest quarter":[11], "raw relief":[214.8181818182], "raw ridgetopflat":[0], "raw rockalklty":[5.8181818182], "raw rockgrainsz":[4.9090909091], "raw rockhardness":[5.8181818182], "raw rocknutrnt":[5.8181818182], "raw roughness":[11.5454545455], "raw sapk 1 1000 g sand":[52431.8181818182], "raw slope":[13], "raw soildepth":[.7272727273], "raw solpawhc":[167.5454545455], "raw temperature annual range":[16.9090909091], 
  "raw temperature seasonality":[.8181818182], "raw thpk 1 1000 g thickness":[308.6363636364], "raw twi":[4.3636363636], "raw valleybottom":[.5454545455]}, "tree":{"modelled annual mean moisture index":[.2800000012], "modelled annual mean rad":[22.1500005722], "modelled annual mean temp":[26.4499998093], "modelled annual precipitation":[732], "modelled clpk 1 1000 g clay":[41500], "modelled erosional":[100], "modelled highest period moisture index":[.9199999869], "modelled highest period radiation":[26.8000001907], 
  "modelled hydraulic conductivity ksat":[65], "modelled isothermality":[.5400000215], "modelled lowest period moisture index":[.0049999999], "modelled lowest period radiation":[17], "modelled max temp warmest period":[38.5], "modelled mean diurnal range":[14.9500002861], "modelled mean moisture index coldest quarter":[.0299999993], "modelled mean moisture index highest quarter MI":[.8199999928], "modelled mean moisture index lowest quater MI":[.0099999998], "modelled mean moisture index warmest quarter":[.2599999979], 
  "modelled mean temp coldest quarter":[21], "modelled mean temp driest quater":[23.25], "modelled mean temp warmer quarter":[30.5], "modelled mean temp wettest quarter":[29.3500003815], "modelled min temp coldest period":[10.7999997139], "modelled moisture index seasonality":[120], "modelled phos":[.0149999997], "modelled precipitation coldets quarter":[14], "modelled precipitation driest period":[0], "modelled precipitation driest quarter":[0], "modelled precipitation seasonality":[126], "modelled precipitation warmest quarter":[239.5], 
  "modelled precipitation wettest period":[52], "modelled precipitation wettest quarter":[546], "modelled radiation coldest quarter":[18.8500003815], "modelled radiation driest quarter":[21.9499998093], "modelled radiation seasonality":[13.5], "modelled radiation warmest quarter":[25.25], "modelled radiation wettest quarter":[22.4000005722], "modelled relief":[98.6766052246], "modelled ridgetopflat":[0], "modelled rockalklty":[5.5], "modelled rockgrainsz":[4.5], "modelled rockhardness":[4.5], "modelled rocknutrnt":[5], 
  "modelled roughness":[17.0805878639], "modelled sapk 1 1000 g sand":[37E3], "modelled slope":[5.9404842854], "modelled soildepth":[1.0000000298], "modelled solpawhc":[117.5], "modelled temperature annual range":[27.75], "modelled temperature seasonality":[1.2549999952], "modelled thpk 1 1000 g thickness":[150], "modelled twi":[8.5943181515], "modelled valleybottom":[0], "modelled whpk 1 1000 g water cap":[20500], "raw annual mean moisture index":[0], "raw annual mean rad":[22], "raw annual mean temp":[26], 
  "raw annual precipitation":[732], "raw clpk 1 1000 g clay":[41500], "raw erosional":[100], "raw highest period moisture index":[0], "raw highest period radiation":[26], "raw hydraulic conductivity ksat":[65], "raw lowest period moisture index":[0], "raw lowest period radiation":[16.5], "raw max temp warmest period":[38], "raw mean diurnal range":[14.5], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[0], "raw mean moisture index lowest quater MI":[0], 
  "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[20.5], "raw mean temp driest quater":[22.5], "raw mean temp warmer quarter":[30], "raw mean temp wettest quarter":[29], "raw min temp coldest period":[10.5], "raw moisture index seasonality":[120], "raw precipitation coldets quarter":[14], "raw precipitation driest period":[0], "raw precipitation driest quarter":[0], "raw precipitation seasonality":[126], "raw precipitation warmest quarter":[239.5], "raw precipitation wettest period":[52], 
  "raw precipitation wettest quarter":[546], "raw radiation coldest quarter":[18.5], "raw radiation driest quarter":[21.5], "raw radiation seasonality":[13.5], "raw radiation warmest quarter":[25], "raw radiation wettest quarter":[22], "raw relief":[98], "raw ridgetopflat":[0], "raw rockalklty":[5.5], "raw rockgrainsz":[4.5], "raw rockhardness":[4.5], "raw rocknutrnt":[5], "raw roughness":[16.5], "raw sapk 1 1000 g sand":[37E3], "raw slope":[5.5], "raw soildepth":[.5], "raw solpawhc":[117.5], "raw temperature annual range":[27], 
  "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[150], "raw twi":[8], "raw valleybottom":[0]}, "take":{"modelled annual mean moisture index":[.7365444446], "modelled annual mean rad":[17.1275078493], "modelled annual mean temp":[16.1311112493], "modelled annual precipitation":[1255.8687301587], "modelled clpk 1 1000 g clay":[21822.0634920634], "modelled erosional":[91.9027777778], "modelled highest period moisture index":[.9502539679], "modelled highest period radiation":[24.715031606], 
  "modelled hydraulic conductivity ksat":[152.3], "modelled isothermality":[.4938333283], "modelled lowest period moisture index":[.3612952372], "modelled lowest period radiation":[9.6579523886], "modelled max temp warmest period":[27.2970475527], "modelled mean diurnal range":[10.9151110977], "modelled mean moisture index coldest quarter":[.8659396845], "modelled mean moisture index highest quarter MI":[.9381000012], "modelled mean moisture index lowest quater MI":[.4386444416], "modelled mean moisture index warmest quarter":[.5990571438], 
  "modelled mean temp coldest quarter":[11.0153809807], "modelled mean temp driest quater":[14.1643810366], "modelled mean temp warmer quarter":[21.0059206676], "modelled mean temp wettest quarter":[18.1127459956], "modelled min temp coldest period":[5.1418412599], "modelled moisture index seasonality":[31.663015873], "modelled phos":[.0397253511], "modelled precipitation coldets quarter":[243.0065079365], "modelled precipitation driest period":[7.4119047619], "modelled precipitation driest quarter":[158.4253968254], 
  "modelled precipitation seasonality":[45.0196825397], "modelled precipitation warmest quarter":[418.6682539683], "modelled precipitation wettest period":[49.3933333333], "modelled precipitation wettest quarter":[535.4804761905], "modelled radiation coldest quarter":[11.5418730642], "modelled radiation driest quarter":[16.7123016274], "modelled radiation seasonality":[30.5920634921], "modelled radiation warmest quarter":[21.9849682202], "modelled radiation wettest quarter":[17.2387459149], "modelled relief":[97.2765801426], 
  "modelled ridgetopflat":[.6339285714], "modelled rockalklty":[4.7514285714], "modelled rockgrainsz":[4.3793650794], "modelled rockhardness":[5.7], "modelled rocknutrnt":[4.7347619048], "modelled roughness":[13.9966933051], "modelled sapk 1 1000 g sand":[61094.5238095238], "modelled slope":[6.4187526792], "modelled soildepth":[.9957460357], "modelled solpawhc":[125.65], "modelled temperature annual range":[22.1440794706], "modelled temperature seasonality":[1.3577285743], "modelled thpk 1 1000 g thickness":[276.8314285714], 
  "modelled twi":[6.0713178382], "modelled valleybottom":[5.5426587302], "modelled whpk 1 1000 g water cap":[41211.3919047619], "raw annual mean moisture index":[0], "raw annual mean rad":[16.0625], "raw annual mean temp":[15.203125], "raw annual precipitation":[1208.296875], "raw clpk 1 1000 g clay":[20792.96875], "raw erosional":[90.5625], "raw highest period moisture index":[.703125], "raw highest period radiation":[23.421875], "raw hydraulic conductivity ksat":[141.09375], "raw lowest period moisture index":[0], 
  "raw lowest period radiation":[8.8125], "raw max temp warmest period":[25.828125], "raw mean diurnal range":[10.046875], "raw mean moisture index coldest quarter":[.40625], "raw mean moisture index highest quarter MI":[.640625], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[.015625], "raw mean temp coldest quarter":[10.265625], "raw mean temp driest quater":[13.1875], "raw mean temp warmer quarter":[19.796875], "raw mean temp wettest quarter":[16.9375], 
  "raw min temp coldest period":[4.53125], "raw moisture index seasonality":[29.625], "raw precipitation coldets quarter":[232.109375], "raw precipitation driest period":[7.28125], "raw precipitation driest quarter":[157.328125], "raw precipitation seasonality":[42.140625], "raw precipitation warmest quarter":[401.015625], "raw precipitation wettest period":[45.546875], "raw precipitation wettest quarter":[506.40625], "raw radiation coldest quarter":[10.625], "raw radiation driest quarter":[15.6875], 
  "raw radiation seasonality":[29.78125], "raw radiation warmest quarter":[20.71875], "raw radiation wettest quarter":[16.421875], "raw relief":[100.15625], "raw ridgetopflat":[.484375], "raw rockalklty":[4.109375], "raw rockgrainsz":[3.84375], "raw rockhardness":[5.1875], "raw rocknutrnt":[4], "raw roughness":[13.9375], "raw sapk 1 1000 g sand":[57734.375], "raw slope":[6.078125], "raw soildepth":[.5], "raw solpawhc":[116.21875], "raw temperature annual range":[21.03125], "raw temperature seasonality":[.90625], 
  "raw thpk 1 1000 g thickness":[267.40625], "raw twi":[5.46875], "raw valleybottom":[4.953125]}, "care":{"modelled annual mean moisture index":[.7523631571], "modelled annual mean rad":[15.7872632313], "modelled annual mean temp":[14.148368388], "modelled annual precipitation":[1072.0410526316], "modelled clpk 1 1000 g clay":[20124.6052631579], "modelled erosional":[85.6052631579], "modelled highest period moisture index":[.9810842105], "modelled highest period radiation":[24.9694211327], "modelled hydraulic conductivity ksat":[130.0578947368], 
  "modelled isothermality":[.4845000008], "modelled lowest period moisture index":[.323263157], "modelled lowest period radiation":[7.2001579207], "modelled max temp warmest period":[25.3658948326], "modelled mean diurnal range":[10.2003158394], "modelled mean moisture index coldest quarter":[.9645894769], "modelled mean moisture index highest quarter MI":[.9754421075], "modelled mean moisture index lowest quater MI":[.4105263146], "modelled mean moisture index warmest quarter":[.4492105245], "modelled mean temp coldest quarter":[9.284631582], 
  "modelled mean temp driest quater":[15.7744210745], "modelled mean temp warmer quarter":[18.8259999486], "modelled mean temp wettest quarter":[13.4179999638], "modelled min temp coldest period":[4.3915789415], "modelled moisture index seasonality":[34.51], "modelled phos":[.0319927152], "modelled precipitation coldets quarter":[293.6242105263], "modelled precipitation driest period":[7.7615789474], "modelled precipitation driest quarter":[158.1031578947], "modelled precipitation seasonality":[32.4805263158], 
  "modelled precipitation warmest quarter":[240.0526315789], "modelled precipitation wettest period":[34.3584210526], "modelled precipitation wettest quarter":[384.7031578947], "modelled radiation coldest quarter":[9.1081578742], "modelled radiation driest quarter":[19.6293685346], "modelled radiation seasonality":[39.0931578947], "modelled radiation warmest quarter":[22.166210543], "modelled radiation wettest quarter":[13.3475263033], "modelled relief":[74.8392543699], "modelled ridgetopflat":[4.1447368421], 
  "modelled rockalklty":[4.9478947368], "modelled rockgrainsz":[4.0494736842], "modelled rockhardness":[5.6621052632], "modelled rocknutrnt":[4.4805263158], "modelled roughness":[17.1395764974], "modelled sapk 1 1000 g sand":[60505.3947368421], "modelled slope":[4.8369444082], "modelled soildepth":[.9438947287], "modelled solpawhc":[110.2721052632], "modelled temperature annual range":[20.8948948519], "modelled temperature seasonality":[1.3039000004], "modelled thpk 1 1000 g thickness":[270.7410526316], 
  "modelled twi":[5.8377228775], "modelled valleybottom":[11.2171052632], "modelled whpk 1 1000 g water cap":[38992.5510526315], "raw annual mean moisture index":[0], "raw annual mean rad":[14.5428571429], "raw annual mean temp":[12.8285714286], "raw annual precipitation":[1000.6], "raw clpk 1 1000 g clay":[18821.4285714286], "raw erosional":[77.6], "raw highest period moisture index":[.7714285714], "raw highest period radiation":[23.1428571429], "raw hydraulic conductivity ksat":[122.2857142857], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[6.4571428571], "raw max temp warmest period":[23.5142857143], "raw mean diurnal range":[9.2], "raw mean moisture index coldest quarter":[.4285714286], "raw mean moisture index highest quarter MI":[.7428571429], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[8.3714285714], "raw mean temp driest quater":[14.3428571429], "raw mean temp warmer quarter":[17.3428571429], 
  "raw mean temp wettest quarter":[12.3428571429], "raw min temp coldest period":[3.6], "raw moisture index seasonality":[32.3428571429], "raw precipitation coldets quarter":[272.2571428571], "raw precipitation driest period":[7.2285714286], "raw precipitation driest quarter":[149.8], "raw precipitation seasonality":[30.2857142857], "raw precipitation warmest quarter":[235.7714285714], "raw precipitation wettest period":[32.0857142857], "raw precipitation wettest quarter":[363.1714285714], "raw radiation coldest quarter":[8.2571428571], 
  "raw radiation driest quarter":[18], "raw radiation seasonality":[37], "raw radiation warmest quarter":[20.4285714286], "raw radiation wettest quarter":[12.1714285714], "raw relief":[73.2285714286], "raw ridgetopflat":[4.2571428571], "raw rockalklty":[4.2], "raw rockgrainsz":[3.6571428571], "raw rockhardness":[4.6], "raw rocknutrnt":[3.8], "raw roughness":[15.9714285714], "raw sapk 1 1000 g sand":[55707.1428571429], "raw slope":[4.4], "raw soildepth":[.3142857143], "raw solpawhc":[99.3714285714], 
  "raw temperature annual range":[19.4857142857], "raw temperature seasonality":[.8857142857], "raw thpk 1 1000 g thickness":[256.2285714286], "raw twi":[5.7428571429], "raw valleybottom":[9.3714285714]}, "to":{"modelled annual mean moisture index":[.3124999981], "modelled annual mean rad":[19.4000000954], "modelled annual mean temp":[17.6749999523], "modelled annual precipitation":[369.5], "modelled clpk 1 1000 g clay":[16375], "modelled erosional":[57.8125], "modelled highest period moisture index":[.7574999928], 
  "modelled highest period radiation":[28.8750004768], "modelled hydraulic conductivity ksat":[200], "modelled isothermality":[.484999992], "modelled lowest period moisture index":[.0299999993], "modelled lowest period radiation":[9.7249999046], "modelled max temp warmest period":[33.1500005722], "modelled mean diurnal range":[13.2000000477], "modelled mean moisture index coldest quarter":[.7025000006], "modelled mean moisture index highest quarter MI":[.7099999934], "modelled mean moisture index lowest quater MI":[.044999999], 
  "modelled mean moisture index warmest quarter":[.0574999992], "modelled mean temp coldest quarter":[11.5250000954], "modelled mean temp driest quater":[21.6499996185], "modelled mean temp warmer quarter":[24.25], "modelled mean temp wettest quarter":[12.1749999523], "modelled min temp coldest period":[5.6000000238], "modelled moisture index seasonality":[90.25], "modelled phos":[.0180416674], "modelled precipitation coldets quarter":[160.25], "modelled precipitation driest period":[0], "modelled precipitation driest quarter":[28.75], 
  "modelled precipitation seasonality":[59.75], "modelled precipitation warmest quarter":[48.75], "modelled precipitation wettest period":[15], "modelled precipitation wettest quarter":[174.5], "modelled radiation coldest quarter":[12.2000000477], "modelled radiation driest quarter":[27.0499997139], "modelled radiation seasonality":[34.75], "modelled radiation warmest quarter":[26.0750002861], "modelled radiation wettest quarter":[11.0250000954], "modelled relief":[10.535130471], "modelled ridgetopflat":[0], 
  "modelled rockalklty":[5], "modelled rockgrainsz":[5.5], "modelled rockhardness":[5.5], "modelled rocknutrnt":[3.75], "modelled roughness":[1.172922425], "modelled sapk 1 1000 g sand":[68250], "modelled slope":[.6775645409], "modelled soildepth":[.875], "modelled solpawhc":[120], "modelled temperature annual range":[27.5250000954], "modelled temperature seasonality":[1.7350000143], "modelled thpk 1 1000 g thickness":[277.75], "modelled twi":[7.6787025928], "modelled valleybottom":[35.9375], "modelled whpk 1 1000 g water cap":[23578.75], 
  "raw annual mean moisture index":[0], "raw annual mean rad":[18.6666666667], "raw annual mean temp":[16.5], "raw annual precipitation":[378], "raw clpk 1 1000 g clay":[14916.6666666667], "raw erosional":[69.5], "raw highest period moisture index":[0], "raw highest period radiation":[28.5], "raw hydraulic conductivity ksat":[233.3333333333], "raw lowest period moisture index":[0], "raw lowest period radiation":[9.1666666667], "raw max temp warmest period":[31.6666666667], "raw mean diurnal range":[12.5], 
  "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[0], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[10.8333333333], "raw mean temp driest quater":[21.1666666667], "raw mean temp warmer quarter":[23], "raw mean temp wettest quarter":[11.6666666667], "raw min temp coldest period":[5], "raw moisture index seasonality":[89.1666666667], "raw precipitation coldets quarter":[161.6666666667], 
  "raw precipitation driest period":[0], "raw precipitation driest quarter":[33.1666666667], "raw precipitation seasonality":[59], "raw precipitation warmest quarter":[47.8333333333], "raw precipitation wettest period":[15], "raw precipitation wettest quarter":[176.3333333333], "raw radiation coldest quarter":[11.5], "raw radiation driest quarter":[26.5], "raw radiation seasonality":[35.1666666667], "raw radiation warmest quarter":[25.6666666667], "raw radiation wettest quarter":[10.3333333333], 
  "raw relief":[12.3333333333], "raw ridgetopflat":[0], "raw rockalklty":[4.1666666667], "raw rockgrainsz":[5], "raw rockhardness":[6], "raw rocknutrnt":[3.8333333333], "raw roughness":[1], "raw sapk 1 1000 g sand":[71500], "raw slope":[.3333333333], "raw soildepth":[.5], "raw solpawhc":[122.6666666667], "raw temperature annual range":[26.3333333333], "raw temperature seasonality":[1.1666666667], "raw thpk 1 1000 g thickness":[315.8333333333], "raw twi":[6.6666666667], "raw valleybottom":[29]}, "remove":{"modelled annual mean moisture index":[], 
  "modelled annual mean rad":[], "modelled annual mean temp":[], "modelled annual precipitation":[], "modelled clpk 1 1000 g clay":[], "modelled erosional":[], "modelled highest period moisture index":[], "modelled highest period radiation":[], "modelled hydraulic conductivity ksat":[], "modelled isothermality":[], "modelled lowest period moisture index":[], "modelled lowest period radiation":[], "modelled max temp warmest period":[], "modelled mean diurnal range":[], "modelled mean moisture index coldest quarter":[], 
  "modelled mean moisture index highest quarter MI":[], "modelled mean moisture index lowest quater MI":[], "modelled mean moisture index warmest quarter":[], "modelled mean temp coldest quarter":[], "modelled mean temp driest quater":[], "modelled mean temp warmer quarter":[], "modelled mean temp wettest quarter":[], "modelled min temp coldest period":[], "modelled moisture index seasonality":[], "modelled phos":[], "modelled precipitation coldets quarter":[], "modelled precipitation driest period":[], 
  "modelled precipitation driest quarter":[], "modelled precipitation seasonality":[], "modelled precipitation warmest quarter":[], "modelled precipitation wettest period":[], "modelled precipitation wettest quarter":[], "modelled radiation coldest quarter":[], "modelled radiation driest quarter":[], "modelled radiation seasonality":[], "modelled radiation warmest quarter":[], "modelled radiation wettest quarter":[], "modelled relief":[], "modelled ridgetopflat":[], "modelled rockalklty":[], "modelled rockgrainsz":[], 
  "modelled rockhardness":[], "modelled rocknutrnt":[], "modelled roughness":[], "modelled sapk 1 1000 g sand":[], "modelled slope":[], "modelled soildepth":[], "modelled solpawhc":[], "modelled temperature annual range":[], "modelled temperature seasonality":[], "modelled thpk 1 1000 g thickness":[], "modelled twi":[], "modelled valleybottom":[], "modelled whpk 1 1000 g water cap":[], "raw annual mean moisture index":[0], "raw annual mean rad":[16], "raw annual mean temp":[13.8333333333], "raw annual precipitation":[683.8333333333], 
  "raw clpk 1 1000 g clay":[9833.3333333333], "raw erosional":[67.1666666667], "raw highest period moisture index":[.6666666667], "raw highest period radiation":[26], "raw hydraulic conductivity ksat":[266.6666666667], "raw lowest period moisture index":[0], "raw lowest period radiation":[6.1666666667], "raw max temp warmest period":[25.1666666667], "raw mean diurnal range":[10], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.6666666667], "raw mean moisture index lowest quater MI":[0], 
  "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[9.5], "raw mean temp driest quater":[18.1666666667], "raw mean temp warmer quarter":[18.5], "raw mean temp wettest quarter":[9.6666666667], "raw min temp coldest period":[5], "raw moisture index seasonality":[61.3333333333], "raw precipitation coldets quarter":[267.8333333333], "raw precipitation driest period":[0], "raw precipitation driest quarter":[84.1666666667], "raw precipitation seasonality":[46], "raw precipitation warmest quarter":[85.6666666667], 
  "raw precipitation wettest period":[24.5], "raw precipitation wettest quarter":[272.8333333333], "raw radiation coldest quarter":[8.3333333333], "raw radiation driest quarter":[24], "raw radiation seasonality":[43.6666666667], "raw radiation warmest quarter":[23.6666666667], "raw radiation wettest quarter":[7.8333333333], "raw relief":[29.6666666667], "raw ridgetopflat":[0], "raw rockalklty":[4.3333333333], "raw rockgrainsz":[4.3333333333], "raw rockhardness":[2.1666666667], "raw rocknutrnt":[2.1666666667], 
  "raw roughness":[21.6666666667], "raw sapk 1 1000 g sand":[81666.6666666667], "raw slope":[1.5], "raw soildepth":[.6666666667], "raw solpawhc":[124.8333333333], "raw temperature annual range":[20.1666666667], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[597.3333333333], "raw twi":[8.8333333333], "raw valleybottom":[6.1666666667]}, "quotes_and_other_html_special_characters":{"modelled annual mean moisture index":[.7600000054], "modelled annual mean rad":[17.4749999046], "modelled annual mean temp":[17.6499996185], 
  "modelled annual precipitation":[1174], "modelled clpk 1 1000 g clay":[36312.5], "modelled erosional":[75], "modelled highest period moisture index":[.962500006], "modelled highest period radiation":[24.5249996185], "modelled hydraulic conductivity ksat":[200], "modelled isothermality":[.5150000006], "modelled lowest period moisture index":[.400000006], "modelled lowest period radiation":[10.2999997139], "modelled max temp warmest period":[28.25], "modelled mean diurnal range":[11.6499998569], 
  "modelled mean moisture index coldest quarter":[.9274999946], "modelled mean moisture index highest quarter MI":[.9399999976], "modelled mean moisture index lowest quater MI":[.4825000018], "modelled mean moisture index warmest quarter":[.6875], "modelled mean temp coldest quarter":[12.5], "modelled mean temp driest quater":[13.875], "modelled mean temp warmer quarter":[22.2500004768], "modelled mean temp wettest quarter":[21.8999996185], "modelled min temp coldest period":[5.5750000477], "modelled moisture index seasonality":[25.25], 
  "modelled phos":[.0735000009], "modelled precipitation coldets quarter":[186.5], "modelled precipitation driest period":[5.75], "modelled precipitation driest quarter":[144.5], "modelled precipitation seasonality":[45.5], "modelled precipitation warmest quarter":[452], "modelled precipitation wettest period":[45.75], "modelled precipitation wettest quarter":[509.5], "modelled radiation coldest quarter":[12.1000001431], "modelled radiation driest quarter":[15.5250000954], "modelled radiation seasonality":[27.5], 
  "modelled radiation warmest quarter":[21.7000002861], "modelled radiation wettest quarter":[19.7750000954], "modelled relief":[77.4553109407], "modelled ridgetopflat":[0], "modelled rockalklty":[4.75], "modelled rockgrainsz":[3], "modelled rockhardness":[4.5], "modelled rocknutrnt":[4.75], "modelled roughness":[16.6225522161], "modelled sapk 1 1000 g sand":[43625], "modelled slope":[4.8600849956], "modelled soildepth":[1.1749999821], "modelled solpawhc":[159.5], "modelled temperature annual range":[22.6749997139], 
  "modelled temperature seasonality":[1.3325000107], "modelled thpk 1 1000 g thickness":[219], "modelled twi":[10.4112542868], "modelled valleybottom":[28.125], "modelled whpk 1 1000 g water cap":[35500], "raw annual mean moisture index":[0], "raw annual mean rad":[17.4], "raw annual mean temp":[17.4], "raw annual precipitation":[1239.4], "raw clpk 1 1000 g clay":[37300], "raw erosional":[90], "raw highest period moisture index":[.6], "raw highest period radiation":[24.2], "raw hydraulic conductivity ksat":[220], 
  "raw lowest period moisture index":[0], "raw lowest period radiation":[10.6], "raw max temp warmest period":[28], "raw mean diurnal range":[11], "raw mean moisture index coldest quarter":[0], "raw mean moisture index highest quarter MI":[.6], "raw mean moisture index lowest quater MI":[0], "raw mean moisture index warmest quarter":[0], "raw mean temp coldest quarter":[12.8], "raw mean temp driest quater":[14.2], "raw mean temp warmer quarter":[22], "raw mean temp wettest quarter":[21.6], "raw min temp coldest period":[5.8], 
  "raw moisture index seasonality":[26.6], "raw precipitation coldets quarter":[177.4], "raw precipitation driest period":[4.6], "raw precipitation driest quarter":[135.6], "raw precipitation seasonality":[52.8], "raw precipitation warmest quarter":[497.4], "raw precipitation wettest period":[52.4], "raw precipitation wettest quarter":[579.6], "raw radiation coldest quarter":[12.2], "raw radiation driest quarter":[15.8], "raw radiation seasonality":[25.8], "raw radiation warmest quarter":[21.2], 
  "raw radiation wettest quarter":[19.2], "raw relief":[81.6], "raw ridgetopflat":[0], "raw rockalklty":[4.6], "raw rockgrainsz":[3], "raw rockhardness":[4.8], "raw rocknutrnt":[5], "raw roughness":[15.4], "raw sapk 1 1000 g sand":[42950], "raw slope":[4.6], "raw soildepth":[.8], "raw solpawhc":[160.8], "raw temperature annual range":[21.6], "raw temperature seasonality":[1], "raw thpk 1 1000 g thickness":[227.8], "raw twi":[10.4], "raw valleybottom":[13.6]}}};
  var config = {injectInto:"infovis", width:800, height:600, offsetX:0, align:"left", alignName:false, lateralise:true, branchLength:true, branchMultiplier:1, duration:1E3, fps:10, transition:$jit.Trans.Quart.easeInOut, levelDistance:20, levelsToShow:Number.MAX_VALUE, constrained:false, firstCharacter:"Raceme_length_median", Navigation:{enable:true, panning:"avoid nodes", zooming:50}, Tips:{enable:true, onShow:v1$$1}, Node:{height:40, width:20, type:"circle", dim:5, color:"#aaa", overridable:true, 
  align:"left"}, Canvas:{background:{color:"#EEF2F7"}}, Edge:{type:"line", color:"#000", overridable:true, lineWidth:2}, Events:{enable:true, type:"Native", onMouseEnter:v2$$1, onMouseLeave:v3$$1, onClick:v6}, presentClade:v7, onPresentClade:v8, tmpl:"<ul><% _.each(nodeList , function( value ) { %> <li> <%= value.name %> </li> <% }); %> </ul>", Tips:{enable:true, onShow:v9}, onBeforeCompute:v10, onAfterCompute:v11, onCreateLabel:v13, onBeforePlotNode:v14, onBeforePlotLine:v15, onClick:v17, onPlaceLabel:v18};
  var height$$9 = config.height;
  var v8903 = config.width;
  if (!v8903) {
    v8903 = 800;
  }
  var width$$9 = v8903;
  var v8904 = $jit.util;
  JAM.call(v8904.extend, v8904, [config, initial], JAM.policy.p3);
  JAM.call(Nav.load, Nav, [config], JAM.policy.p3);
  var html$$1;
  var rightContainer$$1 = JAM.call($jit.id, $jit, ["right-jitcontainer"], JAM.policy.p3);
  var popup$$1 = JAM.call($jit.id, $jit, ["popup"], JAM.policy.p3);
  var popupText = JAM.call($jit.id, $jit, ["popup-text"], JAM.policy.p3);
  settingsPage();
  var dataObject;
  var json$$1 = "";
  if (config.tree) {
    dataObject = JAM.new(Smits.PhyloCanvas.NewickParse, [config.tree]);
  }
  if (typeof dataObject === "object") {
    json$$1 = smitsNode2JSON(JAM.call(dataObject.getRoot, dataObject, [], JAM.policy.p3));
  }
  var selectedClade;
  var zoomIN = JAM.call($jit.id, $jit, ["zoomIN"], JAM.policy.p3);
  var zoomOUT = JAM.call($jit.id, $jit, ["zoomOUT"], JAM.policy.p3);
  var world = JAM.call($jit.id, $jit, ["world"], JAM.policy.p3);
  st = JAM.new($jit.Phylo, [config]);
  isLateralise = v19;
  JAM.call(st.loadJSON, st, [json$$1], JAM.policy.p3);
  JAM.call(st.compute, st, [], JAM.policy.p3);
  var v8911 = config.character;
  if (!v8911) {
    v8911 = {};
  }
  st.character = v8911;
  var legendElem$$1 = JAM.call($jit.id, $jit, ["legend"], JAM.policy.p3);
  if (st.character) {
    var v8912 = JAM.call(st.colorCharacter, st, [], JAM.policy.p3);
    if (!v8912) {
      v8912 = "";
    }
    html$$1 = v8912;
    var v8913 = JAM.call(jQuery, null, ["#legendBody"], JAM.policy.p3);
    JAM.call(v8913.html, v8913, [html$$1], JAM.policy.p3);
    legendElem$$1.style.display = "inline";
    JAM.call(updateCharacter, null, [st.characterList]);
  } else {
    legendElem$$1.style.display = "none";
  }
  var north = JAM.call($jit.id, $jit, ["north"], JAM.policy.p3);
  var east = JAM.call($jit.id, $jit, ["east"], JAM.policy.p3);
  var west = JAM.call($jit.id, $jit, ["west"], JAM.policy.p3);
  var south = JAM.call($jit.id, $jit, ["south"], JAM.policy.p3);
  JAM.set(north, "onmousedown", JAM.set(south, "onmousedown", JAM.set(east, "onmousedown", JAM.set(west, "onmousedown", clickHandler))));
  JAM.set(zoomIN, "onclick", JAM.set(zoomOUT, "onclick", zoomHandler));
  JAM.set(world, "onclick", v20);
  var result = [];
  var pos;
  var prevSearch;
  var searchBtn = JAM.call($jit.id, $jit, ["searchString"], JAM.policy.p3);
  if (searchBtn.addEventListener) {
    JAM.call(searchBtn.addEventListener, searchBtn, ["keydown", keyHandler, false], JAM.policy.p3);
  } else {
    if (searchBtn.attachEvent) {
      JAM.call(searchBtn.attachEvent, searchBtn, ["onkeydown", keyHandler], JAM.policy.p3);
    }
  }
  var next = JAM.call($jit.id, $jit, ["next"], JAM.policy.p3);
  var previous = JAM.call($jit.id, $jit, ["previous"], JAM.policy.p3);
  JAM.set(next, "onclick", v21);
  JAM.set(previous, "onclick", v22);
  onClickAlign = v23;
  onSetRoot = v24;
  onLateralise = v25;
  var animateDuration;
  onAnimate = v26;
  onRender = v27;
  onGetCharacter = v28;
  onBranchLength = v29;
  onBranchMultiply = v30;
  toggleScreen = v31;
  onSetCharacter = v32;
  var v8920 = Backbone.Router;
  var AppRouter = JAM.call(v8920.extend, v8920, [{routes:{"":"start", "character/*char":"characterSelection"}, start:v33, characterSelection:v34}], JAM.policy.p3);
  var app = new AppRouter;
  var v8922 = Backbone.history;
  JAM.call(v8922.start, v8922, [], JAM.policy.p3);
  return;
}
function init() {
  phylogenyExplorer_init();
  return;
}
var labelType;
var useGradients;
var nativeTextSupport;
var animate;
v35();
var Log = {elem:false, write:v36};
var Nav = {elem:false, load:v38};
var settingsPage;
var updateCharacter;
var onSetCharacter;
var onClickAlign;
var onSetRoot;
var onLateralise;
var isLateralise;
var onAnimate;
var onRender;
var onBranchLength;
var onBranchMultiply;
var onGetCharacter;
var st;
var toggleScreen;
updateCharacter = v39;
settingsPage = v40;
var phylojive = v43();
v614();
v1090(window);
v1120(jQuery);
v1147(jQuery);
v1165(jQuery);
v1212(jQuery);
v1235(jQuery);
v1281(jQuery);
v1294(jQuery);
v1351(jQuery);
var v30870 = jQuery.effects;
if (!v30870) {
  v1390(jQuery);
}
v1394(jQuery);
v1400(jQuery);
v1404(jQuery);
v1408(jQuery);
v1412(jQuery);
v1416(jQuery);
v1420(jQuery);
v1424(jQuery);
v1429(jQuery);
v1439(jQuery);
v1444(jQuery);
v1448(jQuery);
v1452(jQuery);
v1481(jQuery);
v1525(jQuery);
v1544(jQuery);
v1579(jQuery);
v1675(jQuery);
v1729(jQuery);
v1744(jQuery);
v1752(jQuery);
v1784(jQuery);
v1843(jQuery);
v1885(jQuery, document, window);
Smits = {};
Smits.Common = {nodeIdIncrement:0, activeNode:0, roundFloat:v1886, apply:v1887, addRaphEventHandler:v1890, isInteger:v1891, isXMLSerializerAvailable:v1892, createSvgEl:v1893, createGradientEl:v1894, setCssStyle:v1895};
var v8923 = Smits;
var v31253 = v1903();
v8923.PhyloCanvas = v31253;
Smits.PhyloCanvas.prototype = {};
var v8925 = Smits.PhyloCanvas;
var v31254 = v1905();
v8925.Node = v31254;
Smits.PhyloCanvas.Node.prototype = {getCountAllChildren:v1906, getCountImmediateChildren:v1907, getMidbranchPosition:v1908};
var v8927 = Smits.PhyloCanvas;
var v31255 = v1914();
v8927.NewickParse = v31255;
Smits.PhyloCanvas.NewickParse.prototype = {};
var v8929 = Smits.PhyloCanvas;
var v31256 = v1920();
v8929.PhyloxmlParse = v31256;
Smits.PhyloCanvas.PhyloxmlParse.prototype = {};
var v8931 = Smits.PhyloCanvas;
var v31257 = v1926();
v8931.NexmlParse = v31257;
Smits.PhyloCanvas.NexmlParse.prototype = {};
var v8933 = Smits.PhyloCanvas;
var v31258 = v1932();
v8933.NexmlJsonParse = v31258;
Smits.PhyloCanvas.NexmlParse.prototype = {};
Smits.PhyloCanvas.Render = {};
Smits.PhyloCanvas.Render.Style = {line:{stroke:"rgb(0,0,0)", "stroke-width":1}, text:{"font-family":"Verdana", "font-size":12, "text-anchor":"start"}, path:{stroke:"rgb(0,0,0)", "stroke-width":1}, connectedDash:{stroke:"rgb(200,200,200)", "stroke-dasharray":". "}, textSecantBg:{fill:"#EEE", stroke:"#DDD"}, highlightedEdgeCircle:{fill:"red"}, barChart:{fill:"#003300", stroke:"#DDD"}, getStyle:v1933};
Smits.PhyloCanvas.Render.Parameters = {jsOverride:0, Rectangular:{bufferX:200, paddingX:10, paddingY:20, bufferInnerLabels:10, bufferOuterLabels:5, minHeightBetweenLeaves:10, alignPadding:0, alignRight:!1, showScaleBar:!1}, Circular:{bufferRadius:.33, bufferAngle:20, initStartAngle:160, innerCircleRadius:0, minHeightBetweenLeaves:5, bufferInnerLabels:2, bufferOuterLabels:5}, binaryCharts:[], integratedBinaryCharts:[], barCharts:[], binaryChartBufferInner:5, binaryChartBufferSiblings:.01, binaryChartThickness:15, 
binaryChartDisjointed:!1, barChartBufferInner:3, barChartHeight:50, barChartWidth:.5, mouseRollOver:v1934, mouseRollOut:v1935, set:v1936};
var v8938 = Smits.PhyloCanvas.Render;
var v31259 = v1938();
v8938.Line = v31259;
var v8939 = Smits.PhyloCanvas.Render;
var v31260 = v1940();
v8939.Text = v31260;
var v8940 = Smits.PhyloCanvas.Render;
var v31261 = v1942();
v8940.Path = v31261;
var v8941 = Smits.PhyloCanvas.Render;
var v31262 = v1944();
v8941.Circle = v31262;
var v8942 = Smits.PhyloCanvas.Render;
var v31263 = v1946();
v8942.SVG = v31263;
Smits.PhyloCanvas.Render.SVG.prototype = {render:v1947, draw:v1948};
var v8944 = Smits.PhyloCanvas.Render;
var v31264 = v1952();
v8944.Phylogram = v31264;
Smits.PhyloCanvas.Render.Phylogram.prototype = {};
var v8946 = Smits.PhyloCanvas.Render;
var v31265 = v1956();
v8946.CircularPhylogram = v31265;
Smits.PhyloCanvas.Render.CircularPhylogram.prototype = {};
var XMLObjectifier = v1991();
JAM.call(v2127.call, v2127, [this], JAM.policy.p3);
JAM.call(v2226.call, v2226, [this], JAM.policy.p3);
JAM.set(document.body, "onload", init)
