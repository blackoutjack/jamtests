
JAM.startProfile('load');
function v9(err$$5, req$$2, res$$2, next$$2) {
  JAM.call(res$$2.render, res$$2, ["error", {message:err$$5.message, error:{}}], JAM.policy.p1);
  return;
}
function v8(err$$4, req$$1, res$$1, next$$1) {
  JAM.call(res$$1.render, res$$1, ["error", {message:err$$4.message, error:err$$4}], JAM.policy.p1);
  return;
}
function v7(req, res, next) {
  var err$$3 = new Error("Not Found");
  err$$3.status = 404;
  JAM.call(next, null, [err$$3]);
  return;
}
function v6(message$$10) {
  function v5(err$$2) {
    console.log(err$$2 || "success, message deleted");
    return;
  }
  ses = message$$10.title.match(/session_id\:(\w+)/);
  if (ses) {
    JAM.call(mail_client.deleteMessage, mail_client, [message$$10.UID, v5], JAM.policy.p1);
    if (sessionStore.sessions[ses[1]]) {
      console.log("Setting session: " + ses[1] + "to: " + message$$10.from.address);
      session_data = JSON.parse(sessionStore.sessions[ses[1]]);
      session_data.name = message$$10.from.name;
      session_data.email = message$$10.from.address;
      JAM.call(sessionStore.set, sessionStore, [ses[1], session_data], JAM.policy.p1);
    }
  }
  return;
}
function v4() {
  function v3(error$$1, info) {
    function v2(err, messages) {
      function v1(message$$9) {
        function v0(err$$1, flags$$1) {
          JAM.call(console.log, console, ["Current flags for a message: ", flags$$1], JAM.policy.p1);
          return;
        }
        console.log(message$$9.UID + ": " + message$$9.title);
        JAM.call(mail_client.addFlags, mail_client, [message$$9.UID, ["\\Seen"], v0], JAM.policy.p1);
        return;
      }
      messages.forEach(v1);
      return;
    }
    if (error$$1) {
      throw error$$1;
    }
    console.log("Message count in INBOX: " + info.count);
    JAM.call(mail_client.listMessages, mail_client, [0, 0, v2], JAM.policy.p1);
    return;
  }
  JAM.call(mail_client.openMailbox, mail_client, ["INBOX", v3], JAM.policy.p1);
  return;
}
var express = require("express");
var connect = require("connect");
var googleapis = require("googleapis");
var http = require("http");
var path = require("path");
var favicon = require("static-favicon");
var logger = require("morgan");
var cookieParser = require("cookie-parser");
var bodyParser = require("body-parser");
var routes = require("./routes");
var util = require("util");
var inbox = require("inbox");
var CLIENT_ID = "some_client_id_asdfasdfasd.apps.googleusercontent.com";
var CLIENT_SECRET = "client1234secret";
var REDIRECT_URL = "urn:ietf:wg:oauth:2.0:oob";
var IMAP_EMAIL = "someemail@gmail.com";
var IMAP_PASSWORD = "somepassword";
var mail_client = JAM.call(inbox.createConnection, inbox, [false, "imap.gmail.com", {secureConnection:true, auth:{user:IMAP_EMAIL, pass:IMAP_PASSWORD}}], JAM.policy.p1);
var OAuth2Client = googleapis.OAuth2Client;
app = express();
var v26 = app;
var v73 = JAM.new(OAuth2Client, [CLIENT_ID, CLIENT_SECRET, REDIRECT_URL]);
v26.oauth2Client = v73;
JAM.call(app.set, app, ["views", JAM.call(path.join, path, [__dirname, "views"], JAM.policy.p1)], JAM.policy.p1);
JAM.call(app.set, app, ["view engine", "ejs"], JAM.policy.p1);
JAM.call(app.use, app, [favicon()]);
JAM.call(app.use, app, [JAM.call(logger, null, ["dev"])]);
JAM.call(app.use, app, [bodyParser.json()]);
JAM.call(app.use, app, [bodyParser.urlencoded()]);
sessionStore = new connect.session.MemoryStore;
SITE_SECRET = "asdfasKLAJHFasdfasd";
JAM.call(app.use, app, [JAM.call(express.cookieParser, express, [SITE_SECRET])]);
JAM.call(app.use, app, [JAM.call(express.session, express, [{key:"express.sid", maxAge:new Date(Date.now() + 36E5), expires:new Date(Date.now() + 36E5), store:sessionStore}])]);
JAM.call(mail_client.on, mail_client, ["connect", v4], JAM.policy.p1);
JAM.call(mail_client.on, mail_client, ["new", v6], JAM.policy.p1);
mail_client.connect();
JAM.call(app.use, app, [JAM.call(require("less-middleware"), null, [{src:JAM.call(path.join, path, [__dirname, "public"], JAM.policy.p1)}])]);
JAM.call(app.use, app, [JAM.call(express.static, express, [JAM.call(path.join, path, [__dirname, "public"], JAM.policy.p1)])]);
JAM.call(app.use, app, [app.router]);
JAM.call(app.get, app, ["/", routes.index], JAM.policy.p1);
JAM.call(app.get, app, ["/doc", routes.doc], JAM.policy.p1);
JAM.call(app.get, app, ["/done", routes.done], JAM.policy.p1);
var setup = require("./routes/setup");
JAM.call(app.get, app, ["/setup", setup.index], JAM.policy.p1);
JAM.call(app.post, app, ["/setup/add_token", setup.add_token], JAM.policy.p1);
JAM.call(app.use, app, [v7]);
if (app.get("env") === "development") {
  JAM.call(app.use, app, [v8]);
}
JAM.call(app.use, app, [v9]);
module.exports = app

JAM.stopProfile('load');
