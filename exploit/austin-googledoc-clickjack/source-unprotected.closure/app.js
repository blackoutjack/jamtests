var express = require("express");
var connect = require("connect");
var googleapis = require("googleapis");
var http = require("http");
var path = require("path");
var favicon = require("static-favicon");
var logger = require("morgan");
var cookieParser = require("cookie-parser");
var bodyParser = require("body-parser");
var routes = require("./routes");
var util = require("util");
var inbox = require("inbox");
var CLIENT_ID = "some_client_id_asdfasdfasd.apps.googleusercontent.com";
var CLIENT_SECRET = "client1234secret";
var REDIRECT_URL = "urn:ietf:wg:oauth:2.0:oob";
var IMAP_EMAIL = "someemail@gmail.com";
var IMAP_PASSWORD = "somepassword";
var mail_client = inbox.createConnection(false, "imap.gmail.com", {secureConnection:true, auth:{user:IMAP_EMAIL, pass:IMAP_PASSWORD}});
var OAuth2Client = googleapis.OAuth2Client;
app = express();
app.oauth2Client = new OAuth2Client(CLIENT_ID, CLIENT_SECRET, REDIRECT_URL);
app.set("views", path.join(__dirname, "views"));
app.set("view engine", "ejs");
app.use(favicon());
app.use(logger("dev"));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded());
sessionStore = new connect.session.MemoryStore;
SITE_SECRET = "asdfasKLAJHFasdfasd";
app.use(express.cookieParser(SITE_SECRET));
app.use(express.session({key:"express.sid", maxAge:new Date(Date.now() + 36E5), expires:new Date(Date.now() + 36E5), store:sessionStore}));
mail_client.on("connect", function() {
  mail_client.openMailbox("INBOX", function(error$$1, info) {
    if (error$$1) {
      throw error$$1;
    }
    console.log("Message count in INBOX: " + info.count);
    mail_client.listMessages(0, 0, function(err, messages) {
      messages.forEach(function(message$$9) {
        console.log(message$$9.UID + ": " + message$$9.title);
        mail_client.addFlags(message$$9.UID, ["\\Seen"], function(err$$1, flags$$1) {
          console.log("Current flags for a message: ", flags$$1);
        });
      });
    });
  });
});
mail_client.on("new", function(message$$10) {
  ses = message$$10.title.match(/session_id\:(\w+)/);
  if (ses) {
    mail_client.deleteMessage(message$$10.UID, function(err$$2) {
      console.log(err$$2 || "success, message deleted");
    });
    if (sessionStore.sessions[ses[1]]) {
      console.log("Setting session: " + ses[1] + "to: " + message$$10.from.address);
      session_data = JSON.parse(sessionStore.sessions[ses[1]]);
      session_data.name = message$$10.from.name;
      session_data.email = message$$10.from.address;
      sessionStore.set(ses[1], session_data);
    }
  }
});
mail_client.connect();
app.use(require("less-middleware")({src:path.join(__dirname, "public")}));
app.use(express.static(path.join(__dirname, "public")));
app.use(app.router);
app.get("/", routes.index);
app.get("/doc", routes.doc);
app.get("/done", routes.done);
var setup = require("./routes/setup");
app.get("/setup", setup.index);
app.post("/setup/add_token", setup.add_token);
app.use(function(req, res, next) {
  var err$$3 = new Error("Not Found");
  err$$3.status = 404;
  next(err$$3);
});
if (app.get("env") === "development") {
  app.use(function(err$$4, req$$1, res$$1, next$$1) {
    res$$1.render("error", {message:err$$4.message, error:err$$4});
  });
}
app.use(function(err$$5, req$$2, res$$2, next$$2) {
  res$$2.render("error", {message:err$$5.message, error:{}});
});
module.exports = app
