This payload steals XMLHttpRequest response headers. In the coded-for
scenario, the attacker site has embedded the victim site in an iframe,
and has somehow gotten the payload (steal_headers.js) into the victim's
codebase. When the malicious code runs, it sends an |XMLHttpRequest| to
from the victim domain to the victim domain, and then exfiltrates all
response headers via a call to |postMessage|.

JAM can address this behavior by preventing |window.postMessage| or of
|XMLHttpRequest.prototype.getAllResponseHeaders|. However, we really
want to prevent all network communication. A less clear
question regards the deployment strategy for this payload (and whether
there can be an effective counter-strategy for JAM deployment).

The Metasploit Framework repository is here:

git@github.com:rapid7/metasploit-framework.git

This JavaScript payload is located here in the repository:

./data/exploits/uxss/steal_headers.js

