function go(brk) {
  if (brk) {
    var t = function(e$$4) {
      window.setTimeout("stop();", 10);
    };
    gbrk = 1;
    window.onbeforeunload = t;
    var frames = new Array;
  } else {
    gbrk = 0;
  }
  if (url.value.substr(0, 4) != "http") {
    url.value = "http://" + url.value;
  }
  cut.src = url.value;
  site.src = url.value;
}
function curse() {
  document.body.style.cursor = pan ? "move" : "crosshair";
}
function init() {
  panning(0);
  IE = document.all ? true : false;
  if (!IE) {
    document.captureEvents(Event.MOUSEMOVE);
  }
  document.onmousemove = getMouseXY;
  gui = document.getElementById("gui");
  cut = document.getElementById("cut");
  x = document.getElementById("x").style;
  outer = document.getElementById("outer");
  url = document.getElementById("url");
  site = document.getElementById("site");
  fade = document.getElementById("fade");
  url.focus();
  gui.onmouseup = gui.onmouseup = function() {
    mouseDown = false;
    url.value = url.value.split(" ").join("");
    gui.onmousemove = null;
    curse();
  };
  gui.onmousedown = function() {
    url.focus();
    mouseDown = true;
    var tmpX = m.x;
    var tmpY = m.y;
    var tmpSiteY = parseInt(site.style.top);
    var tmpSiteX = parseInt(site.style.left);
    if (!pan) {
      if (clickjack) {
        x.visibility = "visible";
        x.left = tmpX - 9;
        x.top = tmpY - 9;
        x.zIndex = 10;
      } else {
        outer.style.top = tmpY + "px";
        outer.style.left = tmpX + "px";
        cut.style.top = -tmpY + parseInt(site.style.top) + "px";
        cut.style.left = -tmpX + parseInt(site.style.left) + "px";
        cut.style.width = site.offsetWidth + "px";
        cut.style.height = site.offsetHeight + "px";
      }
    }
    gui.onmousemove = function() {
      if (pan && mouseDown) {
        site.style.top = tmpSiteY + (m.y - tmpY) + "px";
        site.style.left = tmpSiteX + (m.x - tmpX) + "px";
        cut.style.top = tmpSiteY + m.y - tmpY - parseInt(outer.style.top) + "px";
        cut.style.left = tmpSiteX + m.x - tmpX - parseInt(outer.style.left) + "px";
      } else {
        if (!clickjack) {
          if (m.y - tmpY < 0) {
            outer.style.top = m.y + "px";
            outer.style.height = tmpY - m.y + "px";
            outer.style.minHeight = tmpY - m.y + "px";
            cut.style.top = -m.y + parseInt(site.style.top) + "px";
          } else {
            outer.style.height = m.y - tmpY + "px";
            outer.style.minHeight = m.y - tmpY + "px";
          }
          if (m.x - tmpX < 0) {
            outer.style.left = m.x + "px";
            outer.style.width = tmpX - m.x + "px";
            cut.style.left = -m.x + parseInt(site.style.left) + "px";
          } else {
            outer.style.width = m.x - tmpX + "px";
          }
          return false;
        }
      }
      var wSize = window.size();
      cut.style.minHeight = site.style.minHeight = site.style.height = cut.style.height = wSize.height + Math.abs(parseInt(site.style.top)) + "px";
      site.style.width = cut.style.width = wSize.width + Math.abs(parseInt(site.style.left)) + "px";
      return false;
    };
    curse();
    return false;
  };
  return false;
}
function jacking(start$$4) {
  clickjack = start$$4;
  if (!clickjack) {
    x.visibility = "hidden";
  } else {
    cut.style.top = "0px";
    cut.style.left = "0px";
    cut.style.width = "100%";
    cut.style.height = "100%";
    outer.style.top = "0px";
    outer.style.left = "0px";
    outer.style.width = "100%";
    outer.style.height = "100%";
  }
  curse();
}
function panning(start$$5) {
  pan = start$$5;
  curse();
}
var Drag = {};
var gui;
var cut;
var outer;
var IE;
var url;
var site;
var fade;
var m = {x:0, y:0};
var pan = false;
var clickjack = 1;
var mouseDown = false;
var gbrk = 0;
getMouseXY = function(e$$5) {
  if (IE) {
    m.x = event.clientX + document.body.scrollLeft;
    m.y = event.clientY + document.body.scrollTop;
  } else {
    m.x = e$$5.pageX;
    m.y = e$$5.pageY;
  }
  if (m.x < 0) {
    m.x = 0;
  }
  if (m.y < 0) {
    m.y = 0;
  }
  return true;
};
window.size = function() {
  var w$$5 = 0;
  var h$$4 = 0;
  if (!window.innerWidth) {
    if (!(document.documentElement.clientWidth == 0)) {
      w$$5 = document.documentElement.clientWidth;
      h$$4 = document.documentElement.clientHeight;
    } else {
      w$$5 = document.body.clientWidth;
      h$$4 = document.body.clientHeight;
    }
  } else {
    w$$5 = window.innerWidth;
    h$$4 = window.innerHeight;
  }
  return{width:w$$5, height:h$$4};
};
Drag.start = function() {
  var elem$$1 = document.getElementById("urlbox");
  var dX = m.x - parseInt(elem$$1.style.left);
  var dY = m.y - parseInt(elem$$1.style.top);
  document.body.onmouseup = function() {
    Drag.stop(this);
  };
  document.body.onmousemove = function() {
    elem$$1.style.left = m.x - dX + "px";
    elem$$1.style.top = m.y - dY + "px";
  };
};
Drag.stop = function(elem$$2) {
  elem$$2.onmousemove = null;
};
changeurl = function(e$$6) {
  var keyCode;
  if (window.event) {
    keyCode = e$$6.keyCode;
  } else {
    if (e$$6.which) {
      keyCode = e$$6.which;
    }
  }
  if (32 == keyCode) {
    url.value = url.value.split(" ").join("");
  } else {
    if (13 == keyCode) {
      go();
      return false;
    }
  }
  return true;
};
dopan = function(e$$7) {
  var keyCode$$1;
  if (window.event) {
    keyCode$$1 = e$$7.keyCode;
  } else {
    if (e$$7.which) {
      keyCode$$1 = e$$7.which;
    }
  }
  if (32 == keyCode$$1) {
    panning(1);
  }
  return true;
};
stoppan = function(e$$8) {
  if (pan == 1) {
    console.log(4);
    panning(0);
  }
  return true;
};
defaultdisabled = function(e$$9) {
  if (!e$$9) {
    event.returnValue = false;
  } else {
    e$$9.preventDefault();
  }
  return false;
};
genIframe = function(noref) {
  var normalCode;
  var extra;
  var win = window.open("export2.html?j=" + clickjack + "&jt=" + x.top + "&jl=" + x.left + "&w=" + outer.style.width + "&h=" + outer.style.height + "&u=" + encodeURIComponent(url.value) + "&cw=" + cut.style.width + "&ct=" + cut.style.top + "&ch=" + cut.style.height + "&cl=" + cut.style.left + "&b=" + gbrk);
  win.focus();
  return true;
  var onl;
}
